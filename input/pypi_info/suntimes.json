{"info":{"author":"","author_email":"Paul MATHIS <pmathis@protonmail.com>","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python :: 3"],"description":"# SunTimes : longitude, latitude and altitude\nCalculation of sunrise and sunset time for a location (longitude, latitude, altitude) with python. Calculations valid beyond the polar circles ; returns Polar Day or Polar Night if necessary. Sunrise and sunset times also available for an entire year as a json or csv file.\n## Project description\nThis module contains functions to determine the time of sunset and the time of sunrise for a given day in a given location (longitude, latitude and altitude).  \nTimes are calculated using data from [Wikipedia](https://en.wikipedia.org/wiki/Sunrise_equation).  \nThe main functions return the times of sunset and sunrise in UTC or in local time. Additional functions return separately the hour and minute of sunrise and sunset. A function returns the length of the day. It is possible to obtain the timetables for a place in a different timezone, just by specifying this one.  \nThe SunFiles class allows you to create and save a json or csv file with the timetables for a whole year.\n### Changes from version 0.2.2\n- As the precision of the calculations is of the order of one to several minutes, it is useless to give the results to the nearest second.\n- The calculations are valid beyond the polar circles. The closer you get to the poles, the lower the accuracy.  \n\n## Installation\n### Required modules\n```suntimes``` module requires ```pytz```, ```tzlocal```, ```jdcal```  \n```sh\n$ pip install pytz\n```\n```sh\n$ pip install tzlocal\n```\n```sh\n$ pip install jdcal\n```\n### Installation  \nThe module can be installed using pip\n```sh\n$ pip install suntimes\n ```\n## Usage\n### Class SunTimes\n```python\nplace = SunTimes(longitude, latitude, altitude=0)\n```\nA place is characterized by longitude, latitude, altitude\n- longitude: float between -180 and 180 ; negative for west longitudes, positive for east longitudes\n- latitude: float between -90 and 90 ; positive if north, negative if south\n- altitude: float, in meters; greater than or equal to zero. Default = 0.\n\n### Methods\nMost of mehtods take a date as an argument.  \nThe date will be a datetime.datetime in the format (yyyy, mm, dd), the time not important. Eg : datetime(2020, 12, 22).  \nMethods risewhere and setwhere take timezone as a second argument.  \nThe timezone list is available on [github](https://gist.github.com/heyalexej/8bf688fd67d7199be4a1682b3eec7568).\n\n### Examples\n\n#### Main methods  \n\n\nImport modules. Create an instance.\n```python\nfrom datetime import datetime\nfrom suntimes import SunTimes  \n#date\nday = datetime(2021,1,6)\n#location Paris Notre-Dame France / Nuussuaq (Avannaata - Groenland)\nsun = SunTimes(2.349902, 48.852968, 35)\npolar = SunTimes(-57.06666667, 74.11666667)\n```\nReturns UTC time  \n```python\nsun.riseutc(day)\ndatetime.datetime(2021, 1, 6, 7, 43)\npolar.riseutc(day)\n'PN'\n```\n```python\nsun.setutc(day)\ndatetime.datetime(2021, 1, 6, 16, 12)\n```\nReturns local computer time \n```python\nsun.riselocal(day)\ndatetime.datetime(2021, 1, 6, 8, 43, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>)\n```\n```python\nsun.setlocal(day)\ndatetime.datetime(2021, 1, 6, 17, 12, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>)\npolar.setlocal(day)\n'PN'\n```\n#### Separately hour and minute (local computer time)\n```python\nsun.hrise(day)\n8\nsun.mrise(day)\n43\nsun.hset(day)\n17\nsun.mset(day)\n12\n```\n#### Duration of the day\nReturns the length of the day in a timedelta seconds, a tuple (hour, minute) or a verbose format. Teturn a string if polar day or polar night\n```python\nsun.durationdelta(day)\ndatetime.timedelta(seconds=30540)\nsun.durationtuple(day)\n(8, 29)\nsun.durationverbose(day)\n'8h 29mn'\n\npolar.durationdelta(day)\n'Not calculable : PN'\n```\n#### Suntimes choosing the timezone\nSunrise and sunset in Sao Paulo (Brazil)  \n```python\n#location Sao Paulo, Brazil\nsun = SunTimes(-46.63611, -23.5475, 769)\n#sunrise and sunset in Sao Paulo, local computer time (France)\nsun.riselocal(day)\ndatetime.datetime(2021, 1, 6, 9, 23, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>)\nsun.setlocal(day)\ndatetime.datetime(2021, 1, 6, 23, 4, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>)\n# sunrise and sunset in Sao Paulo, Sao Paulo time\nsun.risewhere(day, 'America/Sao_Paulo')\ndatetime.datetime(2021, 1, 6, 5, 23, tzinfo=<DstTzInfo 'America/Sao_Paulo' -03-1 day, 21:00:00 STD>)\nsun.setwhere(day, 'America/Sao_Paulo')\ndatetime.datetime(2021, 1, 6, 19, 4, tzinfo=<DstTzInfo 'America/Sao_Paulo' -03-1 day, 21:00:00 STD>)\n```\n#### Influence of altitude\nAltitude can have an influence on the result.\nFor example considering Mount Everst :  \n```python\n# Mount Everest, altitude = default (zero)\nsun_0 = SunTimes(86.9246, 27.9891)\n# Mount Everest, altitude = 8848\nsun_8848 = SunTimes(86.9246, 27.9891, 8848)\n# duration of the day, sun_0 and sun_8848\nsun_0.durationverbose(day)\n'10h 26mn'\nsun_8848.durationverbose(day)\n'10h 58mn'  \n```\nA difference of more than half an hour for the calculation of the length of the day.\n## Class SunFiles\n```python\nfile = SunFiles(place, year, place_verbose=\"\")\n```\nwhere ```place``` is a SunTimes instance, ```year``` the year you choose and ```place_verbose``` the verbose name of the place.  \n### Instantiation\n```python\nfrom suntimes import SunTimes, SunFiles\n\nplace = SunTimes(2.349902, 48.852968, 35)\nfile = SunFiles(place, 2020, \"Notre-Dame de Paris\")\n```\n### Methods\n#### Get the data\n```python\nplace = SunTimes(2.349902, 48.852968, 35)\nfile = SunFiles(place, 2020, \"Notre-Dame de Paris\")\n# Get json data : get_json(self, elsewhere = None)\nfile.get_json()\n# Get csv data : get_csv(self)\nfile.get_csv()\n```\nReturns data with:\n- month\n- day\n- hour, and minute of sunrise and sunset in utc, local computer time and specific timezone. If elswhere not specified, return utc, local computer time, local computer time again.\n- schedules in a verbose mode (i.e. 8 h 12 mn)\n#### Create and save the file\nThe data is calculated and the file created and saved.\n```python\nregister_json(self, path=None, file_name=None, elswhere=None)\nregister_csv(self, path=None, file_name=None, elswhere=None)\n```\nThe path must be indicated correctly, otherwise an error is raised : ```/home/foo/Desktop/``` or ```C:\\Documents\\Foo\\Exercices\\``` for exemple.\nIf file_name is not specified, it is generated automatically. For example : ```2020_Notre-Dame_de_Paris_sun_timetable.csv```\n```python\nfile.register_json(path=\"/home/foo/Desktop/\", file_name=\"2020.json\")\nfile.register_csv(path=\"/home/foo/Desktop/\")\n```\n#### Read the file as a workbook\n- CSV file is easy to open on a Excel xlsx or any other workbook.\n- JSON file can be converted to xlsx [here](https://codebeautify.org/json-to-excel-converter).\n#### Duration of the days\nReturns a list for the full year with day length, date by date. The result is as a list [year, month, day, hour, minute]\n```python\nfile.duration_days_year()\n[[2020, 1, 1, 8, 22],\n [2020, 1, 2, 8, 23],\n [2020, 1, 3, 8, 24],\n .......\n [2020, 12, 29, 8, 20],\n [2020, 12, 30, 8, 21],\n [2020, 12, 31, 8, 22]]\n ```\n#### Length of PolarDay/PolarNight\nReturns the duration of the polar night and the duration of the polar day for a given year as a tuple:\n- duration of the polar day in 24-hour daytime, \n- duration of the polar night in 24-hour daytime\n```python\npolarPlace = SunTimes(-57.06666667, 74.11666667)\npolarFile = SunFiles(polarPlace, 2020, \"Nuussuaq\")\npolarFile.PDPN_length()\n(87, 103)\n```\n#### Start and end date of PolarDay/PolarNight\nReturns the start and end date of the polar day and polar night, as a list of 4 tuples, each tuple including the month and day of the date. Returns a string if we are below the polar circles.\n```python\npolarPlace = SunTimes(-57.06666667, 74.11666667)\npolarFile = SunFiles(polarPlace, 2020, \"Nuussuaq\")\npolarFile.PDPN_dates()\n[(5, 1), (8, 11), (11, 8), (2, 2)]\n```\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"sun,sunset,sunrise,python","license":"MIT License Copyright (c) [2022] [Paul MATHIS] Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","maintainer":"","maintainer_email":"","name":"suntimes","package_url":"https://pypi.org/project/suntimes/","platform":null,"project_url":"https://pypi.org/project/suntimes/","project_urls":{"Homepage":"https://github.com/p-mathis/suntimes"},"provides_extra":null,"release_url":"https://pypi.org/project/suntimes/1.1.2/","requires_dist":["pytz","tzlocal","jdcal"],"requires_python":">=3.6","summary":"For a given place (longitude, latitude and altitude) and a given day, returns the time of sunrise and the time of sunset (in UTC and in local time). Create and save a json or csv file with the timetables for a whole year. Calculations valid beyond the polar circles; returns Polar Day or Polar Night if needed.","version":"1.1.2","yanked":false,"yanked_reason":null},"last_serial":14312567,"releases":{"0.1.2":[{"comment_text":"","digests":{"blake2b_256":"802e62af8999a95424a33684b66e2de7b4b5a2385c5013658389b8d252f760de","md5":"53c4d220153352eba6d41216a05685ed","sha256":"054091065abd300b29e8dffaa66ddeb61aa6b45a4ea2b4fb37b72cc22b6ece41"},"downloads":-1,"filename":"suntimes-0.1.2-py3-none-any.whl","has_sig":false,"md5_digest":"53c4d220153352eba6d41216a05685ed","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":6273,"upload_time":"2021-01-11T17:37:23","upload_time_iso_8601":"2021-01-11T17:37:23.442671Z","url":"https://files.pythonhosted.org/packages/80/2e/62af8999a95424a33684b66e2de7b4b5a2385c5013658389b8d252f760de/suntimes-0.1.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dba88d58eeee5c5b4b15db597e1553f6827978b7fec4a212370094e3a484dc19","md5":"1a7aae4df3a561db62987489096b935b","sha256":"8de721de4e591fc76d9ec1a604c0b993473f4c26271895244ed2d0a1f9dc9b2c"},"downloads":-1,"filename":"suntimes-0.1.2.tar.gz","has_sig":false,"md5_digest":"1a7aae4df3a561db62987489096b935b","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":5942,"upload_time":"2021-01-11T17:37:25","upload_time_iso_8601":"2021-01-11T17:37:25.230722Z","url":"https://files.pythonhosted.org/packages/db/a8/8d58eeee5c5b4b15db597e1553f6827978b7fec4a212370094e3a484dc19/suntimes-0.1.2.tar.gz","yanked":false,"yanked_reason":null}],"0.2.2":[{"comment_text":"","digests":{"blake2b_256":"b1a063079cba4560a66d77a336f97eb3b8b72ce40b599c4968311cf5ee263540","md5":"ba71a8e7fcba5f070967782046871ce7","sha256":"90c1fe3a5c77a9b287f38e204a2cf3946ad84c8cc0a21c3ebd09b5e3ded0d635"},"downloads":-1,"filename":"suntimes-0.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"ba71a8e7fcba5f070967782046871ce7","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":9116,"upload_time":"2021-01-16T12:53:35","upload_time_iso_8601":"2021-01-16T12:53:35.734800Z","url":"https://files.pythonhosted.org/packages/b1/a0/63079cba4560a66d77a336f97eb3b8b72ce40b599c4968311cf5ee263540/suntimes-0.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d2871e09a2b757ad00dc86cfd1113961dbe3c953a87dde9e0378a4c3a93c34c0","md5":"cb50b0dea76cf178e4ad6146cfc91646","sha256":"90028063285d45b07030d61bf3557d4215cddc4fa0e3ab051f7ed7e3a6e495a6"},"downloads":-1,"filename":"suntimes-0.2.2.tar.gz","has_sig":false,"md5_digest":"cb50b0dea76cf178e4ad6146cfc91646","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":10290,"upload_time":"2021-01-16T12:53:37","upload_time_iso_8601":"2021-01-16T12:53:37.171340Z","url":"https://files.pythonhosted.org/packages/d2/87/1e09a2b757ad00dc86cfd1113961dbe3c953a87dde9e0378a4c3a93c34c0/suntimes-0.2.2.tar.gz","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"095612d3963483b2ddf13dd56ce9e7af9a12200e72f4b40a2bb516c6e666a422","md5":"0927eaba835d4cc3e5172acccebc61ce","sha256":"1537a47da453c78a23f2e71eb765fb2b5c843dbd67e30aa59bc96d9299538009"},"downloads":-1,"filename":"suntimes-1.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"0927eaba835d4cc3e5172acccebc61ce","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":12117,"upload_time":"2022-06-14T14:00:37","upload_time_iso_8601":"2022-06-14T14:00:37.950731Z","url":"https://files.pythonhosted.org/packages/09/56/12d3963483b2ddf13dd56ce9e7af9a12200e72f4b40a2bb516c6e666a422/suntimes-1.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3138986a9f51f5207bcb96a4c2846eb2389319d8d2b1060fd801d2ca2be5531b","md5":"d1d3df95f3f14763f6b98eb02ffa4c7d","sha256":"183e15bb5fe2f72566cb1b07e0a32b53d7a6bde1f0c30c9c01e9fe52b93e7b14"},"downloads":-1,"filename":"suntimes-1.1.1.tar.gz","has_sig":false,"md5_digest":"d1d3df95f3f14763f6b98eb02ffa4c7d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":14410,"upload_time":"2022-06-14T14:00:40","upload_time_iso_8601":"2022-06-14T14:00:40.062974Z","url":"https://files.pythonhosted.org/packages/31/38/986a9f51f5207bcb96a4c2846eb2389319d8d2b1060fd801d2ca2be5531b/suntimes-1.1.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.2":[{"comment_text":"","digests":{"blake2b_256":"8e32efbdb9948ea2958b7caf399edca279dea99f16cd3a670049909562de46e3","md5":"0c8770f42439ed07bd45309fd225699f","sha256":"1983ca26f5557c93c35b31c9e7894feea5a92b60e0820095aa464813df2205fd"},"downloads":-1,"filename":"suntimes-1.1.2-py3-none-any.whl","has_sig":false,"md5_digest":"0c8770f42439ed07bd45309fd225699f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":12781,"upload_time":"2022-07-01T21:14:25","upload_time_iso_8601":"2022-07-01T21:14:25.953271Z","url":"https://files.pythonhosted.org/packages/8e/32/efbdb9948ea2958b7caf399edca279dea99f16cd3a670049909562de46e3/suntimes-1.1.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"983339542a233068d382c230a6fa9e3b17f74275507a0f1cb1024f296c5dfa40","md5":"9aee8fdca3da921cecbe379ece49f208","sha256":"68129b41bc81e59ccaa88513e37ae92605e70777f22c92b7d51e82671aea1330"},"downloads":-1,"filename":"suntimes-1.1.2.tar.gz","has_sig":false,"md5_digest":"9aee8fdca3da921cecbe379ece49f208","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":15258,"upload_time":"2022-07-01T21:14:30","upload_time_iso_8601":"2022-07-01T21:14:30.102147Z","url":"https://files.pythonhosted.org/packages/98/33/39542a233068d382c230a6fa9e3b17f74275507a0f1cb1024f296c5dfa40/suntimes-1.1.2.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"8e32efbdb9948ea2958b7caf399edca279dea99f16cd3a670049909562de46e3","md5":"0c8770f42439ed07bd45309fd225699f","sha256":"1983ca26f5557c93c35b31c9e7894feea5a92b60e0820095aa464813df2205fd"},"downloads":-1,"filename":"suntimes-1.1.2-py3-none-any.whl","has_sig":false,"md5_digest":"0c8770f42439ed07bd45309fd225699f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":12781,"upload_time":"2022-07-01T21:14:25","upload_time_iso_8601":"2022-07-01T21:14:25.953271Z","url":"https://files.pythonhosted.org/packages/8e/32/efbdb9948ea2958b7caf399edca279dea99f16cd3a670049909562de46e3/suntimes-1.1.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"983339542a233068d382c230a6fa9e3b17f74275507a0f1cb1024f296c5dfa40","md5":"9aee8fdca3da921cecbe379ece49f208","sha256":"68129b41bc81e59ccaa88513e37ae92605e70777f22c92b7d51e82671aea1330"},"downloads":-1,"filename":"suntimes-1.1.2.tar.gz","has_sig":false,"md5_digest":"9aee8fdca3da921cecbe379ece49f208","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":15258,"upload_time":"2022-07-01T21:14:30","upload_time_iso_8601":"2022-07-01T21:14:30.102147Z","url":"https://files.pythonhosted.org/packages/98/33/39542a233068d382c230a6fa9e3b17f74275507a0f1cb1024f296c5dfa40/suntimes-1.1.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
