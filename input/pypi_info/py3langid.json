{"info":{"author":"Marco Lui","author_email":"Adrien Barbaresi <barbaresi@bbaw.de>","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","Intended Audience :: Developers","Intended Audience :: Information Technology","Intended Audience :: Science/Research","License :: OSI Approved :: BSD License","Operating System :: MacOS :: MacOS X","Operating System :: Microsoft :: Windows","Operating System :: POSIX :: Linux","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Topic :: Scientific/Engineering :: Artificial Intelligence","Topic :: Text Processing :: Linguistic"],"description":"=============\n``py3langid``\n=============\n\n\n``py3langid`` is a fork of the standalone language identification tool ``langid.py`` by Marco Lui.\n\nOriginal license: BSD-2-Clause. Fork license: BSD-3-Clause.\n\n\n\nChanges in this fork\n--------------------\n\nExecution speed has been improved and the code base has been optimized for Python 3.6+:\n\n- Import: Loading the package (``import py3langid``) is about 30% faster\n- Startup: Loading the default classification model is 25-30x faster\n- Execution: Language detection with ``langid.classify`` is 5-6x faster on paragraphs (less on longer texts)\n\nFor implementation details see this blog post: `How to make language detection with langid.py faster <https://adrien.barbaresi.eu/blog/language-detection-langid-py-faster.html>`_.\n\nFor more information and older Python versions see `changelog <https://github.com/adbar/py3langid/blob/master/HISTORY.rst>`_.\n\n\nUsage\n-----\n\nDrop-in replacement\n~~~~~~~~~~~~~~~~~~~\n\n\n1. Install the package:\n\n   * ``pip3 install py3langid`` (or ``pip`` where applicable)\n\n2. Use it:\n\n   * with Python: ``import py3langid as langid``\n   * on the command-line: ``langid``\n\n\nWith Python\n~~~~~~~~~~~\n\nBasics:\n\n.. code-block:: python\n\n    >>> import py3langid as langid\n    \n    >>> text = 'This text is in English.'\n    # identified language and probability\n    >>> langid.classify(text)\n    ('en', -56.77429)\n    # unpack the result tuple in variables\n    >>> lang, prob = langid.classify(text)\n    # all potential languages\n    >>> langid.rank(text)\n\n\nMore options:\n\n.. code-block:: python\n\n    >>> from py3langid.langid import LanguageIdentifier, MODEL_FILE\n\n    # subset of target languages\n    >>> identifier = LanguageIdentifier.from_pickled_model(MODEL_FILE)\n    >>> identifier.set_languages(['de', 'en', 'fr'])\n    # this won't work well...\n    >>> identifier.classify('这样不好')\n    ('en', -81.831665)\n\n    # normalization of probabilities to an interval between 0 and 1\n    >>> identifier = LanguageIdentifier.from_pickled_model(MODEL_FILE, norm_probs=True)\n    >>> identifier.classify('This should be enough text.')\n    ('en', 1.0)\n\n\nNote: the Numpy data type for the feature vector has been changed to optimize for speed. If results are inconsistent, try restoring the original setting:\n\n.. code-block:: python\n\n    >>> langid.classify(text, datatype='uint32')\n\n\nOn the command-line\n~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: bash\n\n    # basic usage with probability normalization\n    $ echo \"This should be enough text.\" | langid -n\n    ('en', 1.0)\n\n    # define a subset of target languages\n    $ echo \"This won't be recognized properly.\" | langid -n -l fr,it,tr\n    ('it', 0.97038305)\n\n\nLegacy documentation\n--------------------\n\n\n**The docs below are provided for reference, only part of the functions are currently tested and maintained.**\n\n\nIntroduction\n------------\n\n``langid.py`` is a standalone Language Identification (LangID) tool.\n\nThe design principles are as follows:\n\n1. Fast\n2. Pre-trained over a large number of languages (currently 97)\n3. Not sensitive to domain-specific features (e.g. HTML/XML markup)\n4. Single .py file with minimal dependencies\n5. Deployable as a web service\n\nAll that is required to run ``langid.py`` is Python >= 3.6 and numpy. \n\nThe accompanying training tools are still Python2-only.\n\n``langid.py`` is WSGI-compliant.  ``langid.py`` will use ``fapws3`` as a web server if \navailable, and default to ``wsgiref.simple_server`` otherwise.\n\n``langid.py`` comes pre-trained on 97 languages (ISO 639-1 codes given):\n\n    af, am, an, ar, as, az, be, bg, bn, br, \n    bs, ca, cs, cy, da, de, dz, el, en, eo, \n    es, et, eu, fa, fi, fo, fr, ga, gl, gu, \n    he, hi, hr, ht, hu, hy, id, is, it, ja, \n    jv, ka, kk, km, kn, ko, ku, ky, la, lb, \n    lo, lt, lv, mg, mk, ml, mn, mr, ms, mt, \n    nb, ne, nl, nn, no, oc, or, pa, pl, ps, \n    pt, qu, ro, ru, rw, se, si, sk, sl, sq, \n    sr, sv, sw, ta, te, th, tl, tr, ug, uk, \n    ur, vi, vo, wa, xh, zh, zu\n\nThe training data was drawn from 5 different sources:\n\n* JRC-Acquis \n* ClueWeb 09\n* Wikipedia\n* Reuters RCV2\n* Debian i18n\n\n\nUsage\n-----\n\n    langid [options]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s, --serve           launch web service\n  --host=HOST           host/ip to bind to\n  --port=PORT           port to listen on\n  -v                    increase verbosity (repeat for greater effect)\n  -m MODEL              load model from file\n  -l LANGS, --langs=LANGS\n                        comma-separated set of target ISO639 language codes\n                        (e.g en,de)\n  -r, --remote          auto-detect IP address for remote access\n  -b, --batch           specify a list of files on the command line\n  -d, --dist            show full distribution over languages\n  -u URL, --url=URL     langid of URL\n  --line                process pipes line-by-line rather than as a document\n  -n, --normalize       normalize confidence scores to probability values\n\n\nThe simplest way to use ``langid.py`` is as a command-line tool, and you can \ninvoke using ``python langid.py``. If you installed ``langid.py`` as a Python \nmodule (e.g. via ``pip install langid``), you can invoke ``langid`` instead of \n``python langid.py -n`` (the two are equivalent).  This will cause a prompt to \ndisplay. Enter text to identify, and hit enter::\n\n  >>> This is a test\n  ('en', -54.41310358047485)\n  >>> Questa e una prova\n  ('it', -35.41771221160889)\n\n\n``langid.py`` can also detect when the input is redirected (only tested under Linux), and in this\ncase will process until EOF rather than until newline like in interactive mode::\n\n  python langid.py < README.rst \n  ('en', -22552.496054649353)\n\n\nThe value returned is the unnormalized probability estimate for the language. Calculating \nthe exact probability estimate is disabled by default, but can be enabled through a flag::\n\n  python langid.py -n < README.rst \n  ('en', 1.0)\n\nMore details are provided in this README in the section on `Probability Normalization`.\n\nYou can also use ``langid.py`` as a Python library::\n\n  # python\n  Python 2.7.2+ (default, Oct  4 2011, 20:06:09) \n  [GCC 4.6.1] on linux2\n  Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n  >>> import langid\n  >>> langid.classify(\"This is a test\")\n  ('en', -54.41310358047485)\n  \nFinally, ``langid.py`` can use Python's built-in ``wsgiref.simple_server`` (or ``fapws3`` if available) to\nprovide language identification as a web service. To do this, launch ``python langid.py -s``, and\naccess http://localhost:9008/detect . The web service supports GET, POST and PUT. If GET is performed\nwith no data, a simple HTML forms interface is displayed.\n\nThe response is generated in JSON, here is an example::\n\n  {\"responseData\": {\"confidence\": -54.41310358047485, \"language\": \"en\"}, \"responseDetails\": null, \"responseStatus\": 200}\n\nA utility such as curl can be used to access the web service::\n\n  # curl -d \"q=This is a test\" localhost:9008/detect\n  {\"responseData\": {\"confidence\": -54.41310358047485, \"language\": \"en\"}, \"responseDetails\": null, \"responseStatus\": 200}\n\nYou can also use HTTP PUT::\n\n  # curl -T readme.rst localhost:9008/detect\n    % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  100  2871  100   119  100  2752    117   2723  0:00:01  0:00:01 --:--:--  2727\n  {\"responseData\": {\"confidence\": -22552.496054649353, \"language\": \"en\"}, \"responseDetails\": null, \"responseStatus\": 200}\n\nIf no \"q=XXX\" key-value pair is present in the HTTP POST payload, ``langid.py`` will interpret the entire\nfile as a single query. This allows for redirection via curl::\n\n  # echo \"This is a test\" | curl -d @- localhost:9008/detect\n  {\"responseData\": {\"confidence\": -54.41310358047485, \"language\": \"en\"}, \"responseDetails\": null, \"responseStatus\": 200}\n\n``langid.py`` will attempt to discover the host IP address automatically. Often, this is set to localhost(127.0.1.1), even \nthough the machine has a different external IP address. ``langid.py`` can attempt to automatically discover the external\nIP address. To enable this functionality, start ``langid.py`` with the ``-r`` flag.\n\n``langid.py`` supports constraining of the output language set using the ``-l`` flag and a comma-separated list of ISO639-1 \nlanguage codes (the ``-n`` flag enables probability normalization)::\n\n  # python langid.py -n -l it,fr\n  >>> Io non parlo italiano\n  ('it', 0.99999999988965627)\n  >>> Je ne parle pas français\n  ('fr', 1.0)\n  >>> I don't speak english\n  ('it', 0.92210605672341062)\n\nWhen using ``langid.py`` as a library, the set_languages method can be used to constrain the language set::\n\n  python                      \n  Python 2.7.2+ (default, Oct  4 2011, 20:06:09) \n  [GCC 4.6.1] on linux2\n  Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n  >>> import langid\n  >>> langid.classify(\"I do not speak english\")\n  ('en', 0.57133487679900674)\n  >>> langid.set_languages(['de','fr','it'])\n  >>> langid.classify(\"I do not speak english\")\n  ('it', 0.99999835791478453)\n  >>> langid.set_languages(['en','it'])\n  >>> langid.classify(\"I do not speak english\")\n  ('en', 0.99176190378750373)\n\n\nBatch Mode\n----------\n\n``langid.py`` supports batch mode processing, which can be invoked with the ``-b`` flag.\nIn this mode, ``langid.py`` reads a list of paths to files to classify as arguments.\nIf no arguments are supplied, ``langid.py`` reads the list of paths from ``stdin``,\nthis is useful for using ``langid.py`` with UNIX utilities such as ``find``.\n\nIn batch mode, ``langid.py`` uses ``multiprocessing`` to invoke multiple instances of\nthe classifier, utilizing all available CPUs to classify documents in parallel. \n\n\nProbability Normalization\n-------------------------\n\nThe probabilistic model implemented by ``langid.py`` involves the multiplication of a\nlarge number of probabilities. For computational reasons, the actual calculations are\nimplemented in the log-probability space (a common numerical technique for dealing with\nvanishingly small probabilities). One side-effect of this is that it is not necessary to\ncompute a full probability in order to determine the most probable language in a set\nof candidate languages. However, users sometimes find it helpful to have a \"confidence\"\nscore for the probability prediction. Thus, ``langid.py`` implements a re-normalization\nthat produces an output in the 0-1 range.\n\n``langid.py`` disables probability normalization by default. For\ncommand-line usages of ``langid.py``, it can be enabled by passing the ``-n`` flag. For\nprobability normalization in library use, the user must instantiate their own \n``LanguageIdentifier``. An example of such usage is as follows::\n  \n  >> from py3langid.langid import LanguageIdentifier, MODEL_FILE\n  >> identifier = LanguageIdentifier.from_pickled_model(MODEL_FILE, norm_probs=True)\n  >> identifier.classify(\"This is a test\")\n  ('en', 0.9999999909903544)\n\n\nTraining a model\n----------------\n\nSo far Python 2.7 only, see the `original instructions <https://github.com/saffsd/langid.py#training-a-model>`_.\n\n\nRead more\n---------\n\n``langid.py`` is based on published research. [1] describes the LD feature selection technique in detail,\nand [2] provides more detail about the module ``langid.py`` itself.\n\n[1] Lui, Marco and Timothy Baldwin (2011) Cross-domain Feature Selection for Language Identification, \nIn Proceedings of the Fifth International Joint Conference on Natural Language Processing (IJCNLP 2011), \nChiang Mai, Thailand, pp. 553—561. Available from http://www.aclweb.org/anthology/I11-1062\n\n[2] Lui, Marco and Timothy Baldwin (2012) langid.py: An Off-the-shelf Language Identification Tool, \nIn Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics (ACL 2012), \nDemo Session, Jeju, Republic of Korea. Available from www.aclweb.org/anthology/P12-3005\n","description_content_type":"text/x-rst","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"language detection, language identification, langid, langid.py","license":"BSD","maintainer":null,"maintainer_email":null,"name":"py3langid","package_url":"https://pypi.org/project/py3langid/","platform":null,"project_url":"https://pypi.org/project/py3langid/","project_urls":{"Blog":"https://adrien.barbaresi.eu/blog/language-detection-langid-py-faster.html","Homepage":"https://github.com/adbar/py3langid","Tracker":"https://github.com/adbar/py3langid/issues"},"provides_extra":["dev"],"release_url":"https://pypi.org/project/py3langid/0.3.0/","requires_dist":["numpy>=1.24.3; python_version == \"3.8\"","numpy>=2.0.0; python_version >= \"3.9\"","pytest; extra == \"dev\"","pytest-cov; extra == \"dev\""],"requires_python":">=3.8","summary":"Fork of the language identification tool langid.py, featuring a modernized codebase and faster execution times.","version":"0.3.0","yanked":false,"yanked_reason":null},"last_serial":23727878,"releases":{"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"318221c26c580c2ce7189981cd2843691105e270624052591f73c95ed5968e58","md5":"02c1432d9bc7ebd913e08e8a46fd40a5","sha256":"5c6bef8f651734e2b0fa98158b73c2bcf7e1dda4ff5e87102126eebb3a597ac1"},"downloads":-1,"filename":"py3langid-0.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"02c1432d9bc7ebd913e08e8a46fd40a5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":1912336,"upload_time":"2021-11-23T19:29:49","upload_time_iso_8601":"2021-11-23T19:29:49.731259Z","url":"https://files.pythonhosted.org/packages/31/82/21c26c580c2ce7189981cd2843691105e270624052591f73c95ed5968e58/py3langid-0.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a41f09284d5c74f576b5c079f13354cab24d697391cb2b7d0c823ff0c5d47606","md5":"2779c5cff7b2ba69e2d1bab812fcabc0","sha256":"5eefcb11285c1d9c81f2d7e341d1eb97b0ea74e9da5c2a380820257e13162aaf"},"downloads":-1,"filename":"py3langid-0.1.0.tar.gz","has_sig":false,"md5_digest":"2779c5cff7b2ba69e2d1bab812fcabc0","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1914116,"upload_time":"2021-11-23T19:29:51","upload_time_iso_8601":"2021-11-23T19:29:51.734723Z","url":"https://files.pythonhosted.org/packages/a4/1f/09284d5c74f576b5c079f13354cab24d697391cb2b7d0c823ff0c5d47606/py3langid-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"85961c785c78470dc35678955842e364ad3841506010a425de643fda7e4975a4","md5":"7f28c8ed6c39781959717454a575d223","sha256":"1fb2141d519b5a939bf2ddeb7a4054d99129213edf1e8ef9a4c388473489450f"},"downloads":-1,"filename":"py3langid-0.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"7f28c8ed6c39781959717454a575d223","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":751164,"upload_time":"2021-11-24T17:46:05","upload_time_iso_8601":"2021-11-24T17:46:05.028203Z","url":"https://files.pythonhosted.org/packages/85/96/1c785c78470dc35678955842e364ad3841506010a425de643fda7e4975a4/py3langid-0.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7dbbb9654c97318baa52766c48f37dc622360188838ac199aef73396d7d59ba9","md5":"f077e5c895d9caf9fce6df35bb1c42d0","sha256":"d97a1f79c135b760aaafdc71dababfeaa25bc032878e77cab1f609e0e6c99b7d"},"downloads":-1,"filename":"py3langid-0.1.1.tar.gz","has_sig":false,"md5_digest":"f077e5c895d9caf9fce6df35bb1c42d0","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":18622,"upload_time":"2021-11-24T17:46:07","upload_time_iso_8601":"2021-11-24T17:46:07.123193Z","url":"https://files.pythonhosted.org/packages/7d/bb/b9654c97318baa52766c48f37dc622360188838ac199aef73396d7d59ba9/py3langid-0.1.1.tar.gz","yanked":false,"yanked_reason":null}],"0.1.2":[{"comment_text":"","digests":{"blake2b_256":"b381466788f697d2b6606e7906ac63804da9d0d688876e05dde87a8c6ed3ee80","md5":"5549c2feb2e8a35333282662a9ee71d5","sha256":"e30f67fbcd152d17f2783498e3247e1640539e7ff8fe9a85c7ca61f32a893108"},"downloads":-1,"filename":"py3langid-0.1.2-py3-none-any.whl","has_sig":false,"md5_digest":"5549c2feb2e8a35333282662a9ee71d5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":751164,"upload_time":"2021-11-24T17:55:35","upload_time_iso_8601":"2021-11-24T17:55:35.812161Z","url":"https://files.pythonhosted.org/packages/b3/81/466788f697d2b6606e7906ac63804da9d0d688876e05dde87a8c6ed3ee80/py3langid-0.1.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4bc012497dfbda139bbad97504199ea0e8346670922e7780f328a968124f66c0","md5":"5fd2df477a5c2249c0fdd593d8b7e6a4","sha256":"715c65aaf1ff7769107607ed03ee80e7c49d481bb94bcc7f59594efa63fff707"},"downloads":-1,"filename":"py3langid-0.1.2.tar.gz","has_sig":false,"md5_digest":"5fd2df477a5c2249c0fdd593d8b7e6a4","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":756678,"upload_time":"2021-11-24T17:55:38","upload_time_iso_8601":"2021-11-24T17:55:38.513700Z","url":"https://files.pythonhosted.org/packages/4b/c0/12497dfbda139bbad97504199ea0e8346670922e7780f328a968124f66c0/py3langid-0.1.2.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"69ffae5e0b94dbb80c1ddf92f4658127d1ec3f7bb42530a7217bbdb200fafbd9","md5":"3f6cd31da6e55df852b5b87e58fa3be7","sha256":"96751e5a7bfc6252a688a2cb2b64f529d2b55b2a6feae57daf5ffd69a95e3280"},"downloads":-1,"filename":"py3langid-0.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"3f6cd31da6e55df852b5b87e58fa3be7","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":751380,"upload_time":"2021-11-29T17:59:06","upload_time_iso_8601":"2021-11-29T17:59:06.671916Z","url":"https://files.pythonhosted.org/packages/69/ff/ae5e0b94dbb80c1ddf92f4658127d1ec3f7bb42530a7217bbdb200fafbd9/py3langid-0.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3805af899bc41fe67911d3d9c4f9802e0c4c825a52dbcab070d02726f874bf28","md5":"b9cd9af886477dfdd8c58872ee54ba8d","sha256":"56d25345d004f74fa2129b3dcccbaec5031f106464ddff05cee0b0b9c91b45c7"},"downloads":-1,"filename":"py3langid-0.2.0.tar.gz","has_sig":false,"md5_digest":"b9cd9af886477dfdd8c58872ee54ba8d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":754793,"upload_time":"2021-11-29T17:59:09","upload_time_iso_8601":"2021-11-29T17:59:09.291531Z","url":"https://files.pythonhosted.org/packages/38/05/af899bc41fe67911d3d9c4f9802e0c4c825a52dbcab070d02726f874bf28/py3langid-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.2.1":[{"comment_text":"","digests":{"blake2b_256":"b47903f9cbae51a78c63603e88467e1419642427e2098147d908b30c0f08b672","md5":"e14b2a521551f802e177d3b9f1d11fad","sha256":"558aab1f371bebf988c1ad166a39bb3fb9855679a31d39b00a3377005aca3096"},"downloads":-1,"filename":"py3langid-0.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"e14b2a521551f802e177d3b9f1d11fad","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":745835,"upload_time":"2022-03-29T15:17:47","upload_time_iso_8601":"2022-03-29T15:17:47.141933Z","url":"https://files.pythonhosted.org/packages/b4/79/03f9cbae51a78c63603e88467e1419642427e2098147d908b30c0f08b672/py3langid-0.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"82ef4e8bfe0404b549e0a32f1bcf62cdbb6f46d898b8a40fc3bfa2c88000c848","md5":"4d26f1494982fec1c6a474cebad52ce4","sha256":"48872c0522811a5f71321aef60d850ca4325f2c6067be525448f8826130653e1"},"downloads":-1,"filename":"py3langid-0.2.1.tar.gz","has_sig":false,"md5_digest":"4d26f1494982fec1c6a474cebad52ce4","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":753822,"upload_time":"2022-03-29T15:17:50","upload_time_iso_8601":"2022-03-29T15:17:50.051211Z","url":"https://files.pythonhosted.org/packages/82/ef/4e8bfe0404b549e0a32f1bcf62cdbb6f46d898b8a40fc3bfa2c88000c848/py3langid-0.2.1.tar.gz","yanked":false,"yanked_reason":null}],"0.2.2":[{"comment_text":"","digests":{"blake2b_256":"e8e6ff3e5902bc4c70b8a1f71a21386dd60b622ff1708163bf44b699d6516e4b","md5":"be48330cb5d7f3026d3ec0c386bb549c","sha256":"a5460ccc565c7b6a7a0e72f42236900b810e73c065a1b769a69fa9d9cff13f00"},"downloads":-1,"filename":"py3langid-0.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"be48330cb5d7f3026d3ec0c386bb549c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":750603,"upload_time":"2022-06-14T13:29:54","upload_time_iso_8601":"2022-06-14T13:29:54.695176Z","url":"https://files.pythonhosted.org/packages/e8/e6/ff3e5902bc4c70b8a1f71a21386dd60b622ff1708163bf44b699d6516e4b/py3langid-0.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a606e4f29386ca954a234f597333ce8acece364c1ca7179def16aed84556d12f","md5":"2a08c7bebfa7a2f9322837eae63299b7","sha256":"b4de01dad7e701f29d216a0935e85e096cc8675903d23ea8445b2bb5f090b96f"},"downloads":-1,"filename":"py3langid-0.2.2.tar.gz","has_sig":false,"md5_digest":"2a08c7bebfa7a2f9322837eae63299b7","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":749464,"upload_time":"2022-06-14T13:30:04","upload_time_iso_8601":"2022-06-14T13:30:04.416692Z","url":"https://files.pythonhosted.org/packages/a6/06/e4f29386ca954a234f597333ce8acece364c1ca7179def16aed84556d12f/py3langid-0.2.2.tar.gz","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"9d1c8212ea872d236af0aea37043fb6feeaa9a43449183782b19d342f8ddd343","md5":"3af78872b7419e22d74a93f799a1eb84","sha256":"38f022eec31cf9a2bf6f142acb2a9b350fd7d0d5ae7762b1392c6d3567401fd3"},"downloads":-1,"filename":"py3langid-0.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"3af78872b7419e22d74a93f799a1eb84","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":746125,"upload_time":"2024-06-18T11:30:51","upload_time_iso_8601":"2024-06-18T11:30:51.265961Z","url":"https://files.pythonhosted.org/packages/9d/1c/8212ea872d236af0aea37043fb6feeaa9a43449183782b19d342f8ddd343/py3langid-0.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9943c3f7a3c5150c56a0ca70c3039e53cc58046698b7ce0913bb8fa86d71abcb","md5":"7e45e4e22f94a8308a115ffb58859750","sha256":"0a875a031a58aaf9dbda7bb8285fd75e801a7bd276216ffabe037901d4b449ec"},"downloads":-1,"filename":"py3langid-0.3.0.tar.gz","has_sig":false,"md5_digest":"7e45e4e22f94a8308a115ffb58859750","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":752935,"upload_time":"2024-06-18T11:31:04","upload_time_iso_8601":"2024-06-18T11:31:04.301853Z","url":"https://files.pythonhosted.org/packages/99/43/c3f7a3c5150c56a0ca70c3039e53cc58046698b7ce0913bb8fa86d71abcb/py3langid-0.3.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"9d1c8212ea872d236af0aea37043fb6feeaa9a43449183782b19d342f8ddd343","md5":"3af78872b7419e22d74a93f799a1eb84","sha256":"38f022eec31cf9a2bf6f142acb2a9b350fd7d0d5ae7762b1392c6d3567401fd3"},"downloads":-1,"filename":"py3langid-0.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"3af78872b7419e22d74a93f799a1eb84","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":746125,"upload_time":"2024-06-18T11:30:51","upload_time_iso_8601":"2024-06-18T11:30:51.265961Z","url":"https://files.pythonhosted.org/packages/9d/1c/8212ea872d236af0aea37043fb6feeaa9a43449183782b19d342f8ddd343/py3langid-0.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9943c3f7a3c5150c56a0ca70c3039e53cc58046698b7ce0913bb8fa86d71abcb","md5":"7e45e4e22f94a8308a115ffb58859750","sha256":"0a875a031a58aaf9dbda7bb8285fd75e801a7bd276216ffabe037901d4b449ec"},"downloads":-1,"filename":"py3langid-0.3.0.tar.gz","has_sig":false,"md5_digest":"7e45e4e22f94a8308a115ffb58859750","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":752935,"upload_time":"2024-06-18T11:31:04","upload_time_iso_8601":"2024-06-18T11:31:04.301853Z","url":"https://files.pythonhosted.org/packages/99/43/c3f7a3c5150c56a0ca70c3039e53cc58046698b7ce0913bb8fa86d71abcb/py3langid-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
