{"info":{"author":null,"author_email":"Maarten Grootendorst <maartengrootendorst@gmail.com>","bugtrack_url":null,"classifiers":["Intended Audience :: Developers","Intended Audience :: Science/Research","License :: OSI Approved :: MIT License","Operating System :: MacOS","Operating System :: Microsoft :: Windows","Operating System :: POSIX","Operating System :: Unix","Programming Language :: Python","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Topic :: Scientific/Engineering","Topic :: Scientific/Engineering :: Artificial Intelligence"],"description":"[![PyPI - Python](https://img.shields.io/badge/python-3.6%20|%203.7%20|%203.8-blue.svg)](https://pypi.org/project/keybert/)\r\n[![PyPI - License](https://img.shields.io/badge/license-MIT-green.svg)](https://github.com/MaartenGr/keybert/blob/master/LICENSE)\r\n[![PyPI - PyPi](https://img.shields.io/pypi/v/keyBERT)](https://pypi.org/project/keybert/)\r\n[![Build](https://img.shields.io/github/actions/workflow/status/MaartenGr/keyBERT/testing.yml?branch=master)](https://pypi.org/keybert/)\r\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1OxpgwKqSzODtO3vS7Xe1nEmZMCAIMckX?usp=sharing)\r\n\r\n<img src=\"images/logo.png\" width=\"35%\" height=\"35%\" align=\"right\" />\r\n\r\n# KeyBERT\r\n\r\nKeyBERT is a minimal and easy-to-use keyword extraction technique that leverages BERT embeddings to\r\ncreate keywords and keyphrases that are most similar to a document.\r\n\r\nCorresponding medium post can be found [here](https://towardsdatascience.com/keyword-extraction-with-bert-724efca412ea).\r\n\r\n<a name=\"toc\"/></a>\r\n## Table of Contents  \r\n<!--ts-->  \r\n   1. [About the Project](#about)  \r\n   2. [Getting Started](#gettingstarted)  \r\n        2.1. [Installation](#installation)  \r\n        2.2. [Basic Usage](#usage)  \r\n        2.3. [Max Sum Distance](#maxsum)  \r\n        2.4. [Maximal Marginal Relevance](#maximal)  \r\n        2.5. [Embedding Models](#embeddings)  \r\n   3. [Large Language Models](#llms)  \r\n<!--te-->  \r\n\r\n\r\n<a name=\"about\"/></a>\r\n## 1. About the Project\r\n[Back to ToC](#toc)\r\n\r\nAlthough there are already many methods available for keyword generation\r\n(e.g.,\r\n[Rake](https://github.com/aneesha/RAKE),\r\n[YAKE!](https://github.com/LIAAD/yake), TF-IDF, etc.)\r\nI wanted to create a very basic, but powerful method for extracting keywords and keyphrases.\r\nThis is where **KeyBERT** comes in! Which uses BERT-embeddings and simple cosine similarity\r\nto find the sub-phrases in a document that are the most similar to the document itself.\r\n\r\nFirst, document embeddings are extracted with BERT to get a document-level representation.\r\nThen, word embeddings are extracted for N-gram words/phrases. Finally, we use cosine similarity\r\nto find the words/phrases that are the most similar to the document. The most similar words could\r\nthen be identified as the words that best describe the entire document.\r\n\r\nKeyBERT is by no means unique and is created as a quick and easy method\r\nfor creating keywords and keyphrases. Although there are many great\r\npapers and solutions out there that use BERT-embeddings\r\n(e.g.,\r\n[1](https://github.com/pranav-ust/BERT-keyphrase-extraction),\r\n[2](https://github.com/ibatra/BERT-Keyword-Extractor),\r\n[3](https://www.preprints.org/manuscript/201908.0073/download/final_file),\r\n), I could not find a BERT-based solution that did not have to be trained from scratch and\r\ncould be used for beginners (**correct me if I'm wrong!**).\r\nThus, the goal was a `pip install keybert` and at most 3 lines of code in usage.\r\n\r\n<a name=\"gettingstarted\"/></a>\r\n## 2. Getting Started\r\n[Back to ToC](#toc)\r\n\r\n<a name=\"installation\"/></a>\r\n###  2.1. Installation\r\nInstallation can be done using [pypi](https://pypi.org/project/keybert/):\r\n\r\n```\r\npip install keybert\r\n```\r\n\r\nYou may want to install more depending on the transformers and language backends that you will be using. The possible installations are:\r\n\r\n```\r\npip install keybert[flair]\r\npip install keybert[gensim]\r\npip install keybert[spacy]\r\npip install keybert[use]\r\n```\r\n\r\n<a name=\"usage\"/></a>\r\n###  2.2. Usage\r\n\r\nThe most minimal example can be seen below for the extraction of keywords:\r\n```python\r\nfrom keybert import KeyBERT\r\n\r\ndoc = \"\"\"\r\n         Supervised learning is the machine learning task of learning a function that\r\n         maps an input to an output based on example input-output pairs. It infers a\r\n         function from labeled training data consisting of a set of training examples.\r\n         In supervised learning, each example is a pair consisting of an input object\r\n         (typically a vector) and a desired output value (also called the supervisory signal).\r\n         A supervised learning algorithm analyzes the training data and produces an inferred function,\r\n         which can be used for mapping new examples. An optimal scenario will allow for the\r\n         algorithm to correctly determine the class labels for unseen instances. This requires\r\n         the learning algorithm to generalize from the training data to unseen situations in a\r\n         'reasonable' way (see inductive bias).\r\n      \"\"\"\r\nkw_model = KeyBERT()\r\nkeywords = kw_model.extract_keywords(doc)\r\n```\r\n\r\nYou can set `keyphrase_ngram_range` to set the length of the resulting keywords/keyphrases:\r\n\r\n```python\r\n>>> kw_model.extract_keywords(doc, keyphrase_ngram_range=(1, 1), stop_words=None)\r\n[('learning', 0.4604),\r\n ('algorithm', 0.4556),\r\n ('training', 0.4487),\r\n ('class', 0.4086),\r\n ('mapping', 0.3700)]\r\n```\r\n\r\nTo extract keyphrases, simply set `keyphrase_ngram_range` to (1, 2) or higher depending on the number\r\nof words you would like in the resulting keyphrases:\r\n\r\n```python\r\n>>> kw_model.extract_keywords(doc, keyphrase_ngram_range=(1, 2), stop_words=None)\r\n[('learning algorithm', 0.6978),\r\n ('machine learning', 0.6305),\r\n ('supervised learning', 0.5985),\r\n ('algorithm analyzes', 0.5860),\r\n ('learning function', 0.5850)]\r\n```\r\n\r\nWe can highlight the keywords in the document by simply setting `highlight`:\r\n\r\n```python\r\nkeywords = kw_model.extract_keywords(doc, highlight=True)\r\n```\r\n<img src=\"images/highlight.png\" width=\"75%\" height=\"75%\" />\r\n\r\n\r\n**NOTE**: For a full overview of all possible transformer models see [sentence-transformer](https://www.sbert.net/docs/pretrained_models.html).\r\nI would advise either `\"all-MiniLM-L6-v2\"` for English documents or `\"paraphrase-multilingual-MiniLM-L12-v2\"`\r\nfor multi-lingual documents or any other language.\r\n\r\n<a name=\"maxsum\"/></a>\r\n###  2.3. Max Sum Distance\r\n\r\nTo diversify the results, we take the 2 x top_n most similar words/phrases to the document.\r\nThen, we take all top_n combinations from the 2 x top_n words and extract the combination\r\nthat are the least similar to each other by cosine similarity.\r\n\r\n```python\r\n>>> kw_model.extract_keywords(doc, keyphrase_ngram_range=(3, 3), stop_words='english',\r\n                              use_maxsum=True, nr_candidates=20, top_n=5)\r\n[('set training examples', 0.7504),\r\n ('generalize training data', 0.7727),\r\n ('requires learning algorithm', 0.5050),\r\n ('supervised learning algorithm', 0.3779),\r\n ('learning machine learning', 0.2891)]\r\n```\r\n\r\n\r\n<a name=\"maximal\"/></a>\r\n###  2.4. Maximal Marginal Relevance\r\n\r\nTo diversify the results, we can use Maximal Margin Relevance (MMR) to create\r\nkeywords / keyphrases which is also based on cosine similarity. The results\r\nwith **high diversity**:\r\n\r\n```python\r\n>>> kw_model.extract_keywords(doc, keyphrase_ngram_range=(3, 3), stop_words='english',\r\n                              use_mmr=True, diversity=0.7)\r\n[('algorithm generalize training', 0.7727),\r\n ('labels unseen instances', 0.1649),\r\n ('new examples optimal', 0.4185),\r\n ('determine class labels', 0.4774),\r\n ('supervised learning algorithm', 0.7502)]\r\n```\r\n\r\nThe results with **low diversity**:\r\n\r\n```python\r\n>>> kw_model.extract_keywords(doc, keyphrase_ngram_range=(3, 3), stop_words='english',\r\n                              use_mmr=True, diversity=0.2)\r\n[('algorithm generalize training', 0.7727),\r\n ('supervised learning algorithm', 0.7502),\r\n ('learning machine learning', 0.7577),\r\n ('learning algorithm analyzes', 0.7587),\r\n ('learning algorithm generalize', 0.7514)]\r\n```\r\n\r\n\r\n<a name=\"embeddings\"/></a>\r\n###  2.5. Embedding Models\r\nKeyBERT supports many embedding models that can be used to embed the documents and words:\r\n\r\n* Sentence-Transformers\r\n* Flair\r\n* Spacy\r\n* Gensim\r\n* USE\r\n\r\nClick [here](https://maartengr.github.io/KeyBERT/guides/embeddings.html) for a full overview of all supported embedding models.\r\n\r\n**Sentence-Transformers**  \r\nYou can select any model from `sentence-transformers` [here](https://www.sbert.net/docs/pretrained_models.html)\r\nand pass it through KeyBERT with `model`:\r\n\r\n```python\r\nfrom keybert import KeyBERT\r\nkw_model = KeyBERT(model='all-MiniLM-L6-v2')\r\n```\r\n\r\nOr select a SentenceTransformer model with your own parameters:\r\n\r\n```python\r\nfrom keybert import KeyBERT\r\nfrom sentence_transformers import SentenceTransformer\r\n\r\nsentence_model = SentenceTransformer(\"all-MiniLM-L6-v2\")\r\nkw_model = KeyBERT(model=sentence_model)\r\n```\r\n\r\n**Flair**  \r\n[Flair](https://github.com/flairNLP/flair) allows you to choose almost any embedding model that\r\nis publicly available. Flair can be used as follows:\r\n\r\n```python\r\nfrom keybert import KeyBERT\r\nfrom flair.embeddings import TransformerDocumentEmbeddings\r\n\r\nroberta = TransformerDocumentEmbeddings('roberta-base')\r\nkw_model = KeyBERT(model=roberta)\r\n```\r\n\r\nYou can select any 🤗 transformers model [here](https://huggingface.co/models).\r\n\r\n<a name=\"llms\"/></a>\r\n## 3. Large Language Models\r\n[Back to ToC](#toc)\r\n\r\nWith `KeyLLM` you can new perform keyword extraction with Large Language Models (LLM). You can find the full documentation [here](https://maartengr.github.io/KeyBERT/guides/keyllm.html) but there are two examples that are common with this new method. Make sure to install the OpenAI package through `pip install openai` before you start.\r\n\r\nFirst, we can ask OpenAI directly to extract keywords:\r\n\r\n```python\r\nimport openai\r\nfrom keybert.llm import OpenAI\r\nfrom keybert import KeyLLM\r\n\r\n# Create your LLM\r\nclient = openai.OpenAI(api_key=MY_API_KEY)\r\nllm = OpenAI(client)\r\n\r\n# Load it in KeyLLM\r\nkw_model = KeyLLM(llm)\r\n```\r\n\r\nThis will query any ChatGPT model and ask it to extract keywords from text.\r\n\r\nSecond, we can find documents that are likely to have the same keywords and only extract keywords for those. \r\nThis is much more efficient then asking the keywords for every single documents. There are likely documents that \r\nhave the exact same keywords. Doing so is straightforward:\r\n\r\n```python\r\nimport openai\r\nfrom keybert.llm import OpenAI\r\nfrom keybert import KeyLLM\r\nfrom sentence_transformers import SentenceTransformer\r\n\r\n# Extract embeddings\r\nmodel = SentenceTransformer('all-MiniLM-L6-v2')\r\nembeddings = model.encode(MY_DOCUMENTS, convert_to_tensor=True)\r\n\r\n# Create your LLM\r\nclient = openai.OpenAI(api_key=MY_API_KEY)\r\nllm = OpenAI(client)\r\n\r\n# Load it in KeyLLM\r\nkw_model = KeyLLM(llm)\r\n\r\n# Extract keywords\r\nkeywords = kw_model.extract_keywords(MY_DOCUMENTS, embeddings=embeddings, threshold=.75)\r\n```\r\n\r\nYou can use the `threshold` parameter to decide how similar documents need to be in order to receive the same keywords.\r\n\r\n## Citation\r\nTo cite KeyBERT in your work, please use the following bibtex reference:\r\n\r\n```bibtex\r\n@misc{grootendorst2020keybert,\r\n  author       = {Maarten Grootendorst},\r\n  title        = {KeyBERT: Minimal keyword extraction with BERT.},\r\n  year         = 2020,\r\n  publisher    = {Zenodo},\r\n  version      = {v0.3.0},\r\n  doi          = {10.5281/zenodo.4461265},\r\n  url          = {https://doi.org/10.5281/zenodo.4461265}\r\n}\r\n```\r\n\r\n## References\r\nBelow, you can find several resources that were used for the creation of KeyBERT\r\nbut most importantly, these are amazing resources for creating impressive keyword extraction models:\r\n\r\n**Papers**:\r\n* Sharma, P., & Li, Y. (2019). [Self-Supervised Contextual Keyword and Keyphrase Retrieval with Self-Labelling.](https://www.preprints.org/manuscript/201908.0073/download/final_file)\r\n\r\n**Github Repos**:\r\n* https://github.com/thunlp/BERT-KPE\r\n* https://github.com/ibatra/BERT-Keyword-Extractor\r\n* https://github.com/pranav-ust/BERT-keyphrase-extraction\r\n* https://github.com/swisscom/ai-research-keyphrase-extraction\r\n\r\n**MMR**:\r\nThe selection of keywords/keyphrases was modeled after:\r\n* https://github.com/swisscom/ai-research-keyphrase-extraction\r\n\r\n**NOTE**: If you find a paper or github repo that has an easy-to-use implementation\r\nof BERT-embeddings for keyword/keyphrase extraction, let me know! I'll make sure to\r\nadd a reference to this repo.\r\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"nlp, bert, keyword, extraction, embeddings","license":"MIT License  Copyright (c) 2020, Maarten P. Grootendorst  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ","maintainer":null,"maintainer_email":null,"name":"keybert","package_url":"https://pypi.org/project/keybert/","platform":null,"project_url":"https://pypi.org/project/keybert/","project_urls":{"Documentation":"https://maartengr.github.io/KeyBERT/","Homepage":"https://github.com/MaartenGr/KeyBERT","Issues":"https://github.com/MaartenGr/KeyBERT/issues","Repository":"https://github.com/MaartenGr/KeyBERT.git"},"provides_extra":null,"release_url":"https://pypi.org/project/keybert/0.8.5/","requires_dist":["numpy>=1.18.5","rich>=10.4.0","scikit-learn>=0.22.2","sentence-transformers>=0.3.8","keybert[docs,test]; extra == \"dev\"","mkdocs-material>=4.6.3; extra == \"docs\"","mkdocs>=1.1; extra == \"docs\"","mkdocstrings>=0.8.0; extra == \"docs\"","flair>=0.7; extra == \"flair\"","torch>=1.4.0; extra == \"flair\"","transformers>=3.5.1; extra == \"flair\"","gensim>=3.6.0; extra == \"gensim\"","spacy>=3.0.1; extra == \"spacy\"","black>=19.3b0; extra == \"test\"","flake8>=3.6.0; extra == \"test\"","pre-commit>=2.2.0; extra == \"test\"","pytest-cov>=2.6.1; extra == \"test\"","pytest>=5.4.3; extra == \"test\"","tensorflow; extra == \"use\"","tensorflow-hub; extra == \"use\"","tensorflow-text; extra == \"use\""],"requires_python":">=3.8","summary":"KeyBERT performs keyword extraction with state-of-the-art transformer models.","version":"0.8.5","yanked":false,"yanked_reason":null},"last_serial":23673496,"releases":{"0.0.1":[{"comment_text":"","digests":{"blake2b_256":"944acd4595192b437ac4cc77f6aaca96f8432f983c3e383fb04a196bf1edf236","md5":"71249187f91765846427e6407cd2977d","sha256":"3a6d52b41099a9577b588748e65868d316440ede4c74cf71afb399f65b268ce5"},"downloads":-1,"filename":"keybert-0.0.1.tar.gz","has_sig":false,"md5_digest":"71249187f91765846427e6407cd2977d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":3209,"upload_time":"2020-10-22T12:14:18","upload_time_iso_8601":"2020-10-22T12:14:18.242777Z","url":"https://files.pythonhosted.org/packages/94/4a/cd4595192b437ac4cc77f6aaca96f8432f983c3e383fb04a196bf1edf236/keybert-0.0.1.tar.gz","yanked":false,"yanked_reason":null}],"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"565fe4408383be64f156c6bbb384fa1d0385fd472342193f362670c06fe7c124","md5":"795113626eed7f61d87c7e6cbd0427a7","sha256":"4833dee921e123c9777dc613a13b67a9c9fa3d1c691cf328aa03bdaf1278ff25"},"downloads":-1,"filename":"keybert-0.1.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"795113626eed7f61d87c7e6cbd0427a7","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":8094,"upload_time":"2020-10-27T09:04:25","upload_time_iso_8601":"2020-10-27T09:04:25.114272Z","url":"https://files.pythonhosted.org/packages/56/5f/e4408383be64f156c6bbb384fa1d0385fd472342193f362670c06fe7c124/keybert-0.1.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4a6894d1fab6454200028732f1bdb71652863e35aa1839702391771cac12f398","md5":"e9ba5aa99c00f0044a79ac7b4ea51c23","sha256":"4f87877317577f55596e4d22ffd1c93a83799f9c9db5e132470959be284e0bb6"},"downloads":-1,"filename":"keybert-0.1.0.tar.gz","has_sig":false,"md5_digest":"e9ba5aa99c00f0044a79ac7b4ea51c23","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":6916,"upload_time":"2020-10-27T09:04:26","upload_time_iso_8601":"2020-10-27T09:04:26.348439Z","url":"https://files.pythonhosted.org/packages/4a/68/94d1fab6454200028732f1bdb71652863e35aa1839702391771cac12f398/keybert-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"a591c224a3b511f5d6e6696a5e0c6bffd1f666dd59358db422a752de805d1d98","md5":"7aaa658df319743cc7c4b0eab6f1d454","sha256":"26a8f036efdd08cf5f9b4fd4e5a974a242c569cae031dde27507480f4042138a"},"downloads":-1,"filename":"keybert-0.1.1.tar.gz","has_sig":false,"md5_digest":"7aaa658df319743cc7c4b0eab6f1d454","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":8516,"upload_time":"2020-10-27T13:01:41","upload_time_iso_8601":"2020-10-27T13:01:41.070781Z","url":"https://files.pythonhosted.org/packages/a5/91/c224a3b511f5d6e6696a5e0c6bffd1f666dd59358db422a752de805d1d98/keybert-0.1.1.tar.gz","yanked":false,"yanked_reason":null}],"0.1.2":[{"comment_text":"","digests":{"blake2b_256":"e343ba9b9be17d1831a112e63625ed328b292f57ace0c570062df9a5e6fea87c","md5":"fdb50d6e1f5462dfa48db65c80dfa0b1","sha256":"104f7c30cbf186b62928d619fc03b9c2ae8a245457545ad7c470d5747d226816"},"downloads":-1,"filename":"keybert-0.1.2.tar.gz","has_sig":false,"md5_digest":"fdb50d6e1f5462dfa48db65c80dfa0b1","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":9004,"upload_time":"2020-10-28T09:54:21","upload_time_iso_8601":"2020-10-28T09:54:21.811853Z","url":"https://files.pythonhosted.org/packages/e3/43/ba9b9be17d1831a112e63625ed328b292f57ace0c570062df9a5e6fea87c/keybert-0.1.2.tar.gz","yanked":false,"yanked_reason":null}],"0.1.3":[{"comment_text":"","digests":{"blake2b_256":"40f09da04f36a7f2d07c1dc956256080918cb65b2c74d7257745bbe946125287","md5":"7558b4e9343037bb93a5b657e2901754","sha256":"b52b5d44805a7267a8ed90bf32db6a5032015897dfec457f5ac9b455eb494cea"},"downloads":-1,"filename":"keybert-0.1.3.tar.gz","has_sig":false,"md5_digest":"7558b4e9343037bb93a5b657e2901754","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":9007,"upload_time":"2020-12-02T10:06:34","upload_time_iso_8601":"2020-12-02T10:06:34.675899Z","url":"https://files.pythonhosted.org/packages/40/f0/9da04f36a7f2d07c1dc956256080918cb65b2c74d7257745bbe946125287/keybert-0.1.3.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"5df465853bfc2ded495af3341a3f8938f17799d15a65be0150cb57774e1fb59f","md5":"802fdc56d309b14a80d0097d7e05999d","sha256":"319cb3b6d38ef97eb17e4c60ac07dea3d32c0e15cc261ae1b2e1db0acbb04dbf"},"downloads":-1,"filename":"keybert-0.2.0.tar.gz","has_sig":false,"md5_digest":"802fdc56d309b14a80d0097d7e05999d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":12985,"upload_time":"2021-02-09T10:37:19","upload_time_iso_8601":"2021-02-09T10:37:19.535194Z","url":"https://files.pythonhosted.org/packages/5d/f4/65853bfc2ded495af3341a3f8938f17799d15a65be0150cb57774e1fb59f/keybert-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"dbfb822e7094457cd16319291e34aa97b2ef97620da01af94fe557e96a8cc6b9","md5":"a0d747e9c75f59b2a546ba615c60613b","sha256":"24e09d5488ec1e8af7fb3ca946fa95e3aba405c3aab05bf2441193a47c4cbe5c"},"downloads":-1,"filename":"keybert-0.3.0.tar.gz","has_sig":false,"md5_digest":"a0d747e9c75f59b2a546ba615c60613b","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":17731,"upload_time":"2021-05-10T09:21:46","upload_time_iso_8601":"2021-05-10T09:21:46.966084Z","url":"https://files.pythonhosted.org/packages/db/fb/822e7094457cd16319291e34aa97b2ef97620da01af94fe557e96a8cc6b9/keybert-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"0.4.0":[{"comment_text":"","digests":{"blake2b_256":"cd12b72f6ce98984157cb0db83baf56a7c8f9eb4df4494d671234dccb630f8a3","md5":"a3377efe931370ce0e15560a4882410d","sha256":"8c8b5c9500f19d11392668a3f54a0c8bab4e5a59f546787de5c09dc78b93ebc8"},"downloads":-1,"filename":"keybert-0.4.0.tar.gz","has_sig":false,"md5_digest":"a3377efe931370ce0e15560a4882410d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":18663,"upload_time":"2021-06-30T09:51:38","upload_time_iso_8601":"2021-06-30T09:51:38.483933Z","url":"https://files.pythonhosted.org/packages/cd/12/b72f6ce98984157cb0db83baf56a7c8f9eb4df4494d671234dccb630f8a3/keybert-0.4.0.tar.gz","yanked":false,"yanked_reason":null}],"0.5.0":[{"comment_text":"","digests":{"blake2b_256":"dcb968afeb35e3534d07582bb012294e6bd6d7745229a4ee0384efad93d0d55d","md5":"6b45949f43993b583a84fd833d03c390","sha256":"a6d926af3244d9b3fe4bd24a0abb81e7750d9ce62ee73b7ad8608837f52d67ee"},"downloads":-1,"filename":"keybert-0.5.0.tar.gz","has_sig":false,"md5_digest":"6b45949f43993b583a84fd833d03c390","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":19455,"upload_time":"2021-09-28T13:35:30","upload_time_iso_8601":"2021-09-28T13:35:30.837968Z","url":"https://files.pythonhosted.org/packages/dc/b9/68afeb35e3534d07582bb012294e6bd6d7745229a4ee0384efad93d0d55d/keybert-0.5.0.tar.gz","yanked":false,"yanked_reason":null}],"0.5.1":[{"comment_text":"","digests":{"blake2b_256":"cc18c0cd6612c965d6c0f6cf0f66be2d2a95398d178307483b1388b97d1e9cd3","md5":"ec664cae97d01c376f150791dcaef77f","sha256":"0b764724fb5b75ed9fcd1b9907bd7b2a6a874dc5c34a82b5af1a578b8d77b207"},"downloads":-1,"filename":"keybert-0.5.1.tar.gz","has_sig":false,"md5_digest":"ec664cae97d01c376f150791dcaef77f","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":19401,"upload_time":"2022-03-31T07:23:12","upload_time_iso_8601":"2022-03-31T07:23:12.746282Z","url":"https://files.pythonhosted.org/packages/cc/18/c0cd6612c965d6c0f6cf0f66be2d2a95398d178307483b1388b97d1e9cd3/keybert-0.5.1.tar.gz","yanked":false,"yanked_reason":null}],"0.6.0":[{"comment_text":"","digests":{"blake2b_256":"8ee5fbb0bd177b645772928a01564b1803e43c579462a4c4a81b07e515e1fb0a","md5":"2d0a2609df750a757ec3d09d57142e68","sha256":"5c042883d7a410f7f53ad376f86834000848c163d966d3868c72dd6d0652b1fb"},"downloads":-1,"filename":"keybert-0.6.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"2d0a2609df750a757ec3d09d57142e68","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":22604,"upload_time":"2022-07-27T14:22:46","upload_time_iso_8601":"2022-07-27T14:22:46.961328Z","url":"https://files.pythonhosted.org/packages/8e/e5/fbb0bd177b645772928a01564b1803e43c579462a4c4a81b07e515e1fb0a/keybert-0.6.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c53e5b1b82761b65daec25fe590a319fd450aa86e873052136e3373ab2b71008","md5":"e614d6df9dc6e66a49a8a0d3e93efef8","sha256":"fcd00f7fa66cab97c651e55bb01710e6b462ea521640bcfdcdfafc693d73f4d4"},"downloads":-1,"filename":"keybert-0.6.0.tar.gz","has_sig":false,"md5_digest":"e614d6df9dc6e66a49a8a0d3e93efef8","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":19949,"upload_time":"2022-07-27T14:22:48","upload_time_iso_8601":"2022-07-27T14:22:48.676887Z","url":"https://files.pythonhosted.org/packages/c5/3e/5b1b82761b65daec25fe590a319fd450aa86e873052136e3373ab2b71008/keybert-0.6.0.tar.gz","yanked":false,"yanked_reason":null}],"0.7.0":[{"comment_text":"","digests":{"blake2b_256":"9a41b7b21fb0abee8381b83db942fd6dc31c9d61d59a6af0f0f78e310a5cf908","md5":"c17a1fc0c3c0c2c6cc8acf378e5f11ab","sha256":"b5003d10a5bfa1f7db3cb86e04f33b59939ae09095c093228713bb08499f4555"},"downloads":-1,"filename":"keybert-0.7.0.tar.gz","has_sig":false,"md5_digest":"c17a1fc0c3c0c2c6cc8acf378e5f11ab","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":21089,"upload_time":"2022-11-03T08:26:18","upload_time_iso_8601":"2022-11-03T08:26:18.163990Z","url":"https://files.pythonhosted.org/packages/9a/41/b7b21fb0abee8381b83db942fd6dc31c9d61d59a6af0f0f78e310a5cf908/keybert-0.7.0.tar.gz","yanked":false,"yanked_reason":null}],"0.8.0":[{"comment_text":"","digests":{"blake2b_256":"3ee22cc231d5255b50d7674ce95685ac387f54781ebfba653833ee5f49fbc980","md5":"506f38897e47662f247a4008562636f9","sha256":"15ad2c69e34184ce93ca629525e3dad9cd9071957cc3a33e54882c49738fac7e"},"downloads":-1,"filename":"keybert-0.8.0.tar.gz","has_sig":false,"md5_digest":"506f38897e47662f247a4008562636f9","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":29497,"upload_time":"2023-09-29T07:11:06","upload_time_iso_8601":"2023-09-29T07:11:06.856208Z","url":"https://files.pythonhosted.org/packages/3e/e2/2cc231d5255b50d7674ce95685ac387f54781ebfba653833ee5f49fbc980/keybert-0.8.0.tar.gz","yanked":false,"yanked_reason":null}],"0.8.1":[{"comment_text":"","digests":{"blake2b_256":"fa4d3fea29b4e463452e01d73613c5a39724759a84d3889648135722a0d5b382","md5":"f60a7efd26568f639626ad33fabe70fa","sha256":"ed46a117008d8ae509712df8b73e3993c88713652615dd5a56894dff09106d76"},"downloads":-1,"filename":"keybert-0.8.1.tar.gz","has_sig":false,"md5_digest":"f60a7efd26568f639626ad33fabe70fa","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":29419,"upload_time":"2023-09-29T09:01:45","upload_time_iso_8601":"2023-09-29T09:01:45.515033Z","url":"https://files.pythonhosted.org/packages/fa/4d/3fea29b4e463452e01d73613c5a39724759a84d3889648135722a0d5b382/keybert-0.8.1.tar.gz","yanked":false,"yanked_reason":null}],"0.8.2":[{"comment_text":"","digests":{"blake2b_256":"c9e941859cd00596bd0c28d690ae1b81b3f71d446ceeba8e36b2ee5c660225d3","md5":"e68a2ef450cd9c67209a4b6f5d36e41c","sha256":"303d265e283b8fa304e9ee6203912ceef1e5f0299c142d3eb1731e5c672ce0b2"},"downloads":-1,"filename":"keybert-0.8.2.tar.gz","has_sig":false,"md5_digest":"e68a2ef450cd9c67209a4b6f5d36e41c","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":29414,"upload_time":"2023-09-29T11:06:38","upload_time_iso_8601":"2023-09-29T11:06:38.409618Z","url":"https://files.pythonhosted.org/packages/c9/e9/41859cd00596bd0c28d690ae1b81b3f71d446ceeba8e36b2ee5c660225d3/keybert-0.8.2.tar.gz","yanked":false,"yanked_reason":null}],"0.8.3":[{"comment_text":"","digests":{"blake2b_256":"e20439880daca04c4860b8bdcb2b2bd109ff25c4888a916988d67c278181f224","md5":"72c9c21c3c17e3d3803d41097a99a993","sha256":"cfa7d7d106cbf21268e7f62107e639a5d831fd4e146237b8453e90a211b72c70"},"downloads":-1,"filename":"keybert-0.8.3.tar.gz","has_sig":false,"md5_digest":"72c9c21c3c17e3d3803d41097a99a993","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":29438,"upload_time":"2023-10-05T15:53:33","upload_time_iso_8601":"2023-10-05T15:53:33.857737Z","url":"https://files.pythonhosted.org/packages/e2/04/39880daca04c4860b8bdcb2b2bd109ff25c4888a916988d67c278181f224/keybert-0.8.3.tar.gz","yanked":false,"yanked_reason":null}],"0.8.4":[{"comment_text":"","digests":{"blake2b_256":"dc8ae7a08fa77da53d136111ad22fc0ca10350f1d3fe9658a5db6a5dbcdaa832","md5":"88c843deedc8e115a5bddc1b27e9f3f4","sha256":"35473ab0842cf6d09bcfd0677cee9a21a8b0448bbb3f309ea3827ca297f24611"},"downloads":-1,"filename":"keybert-0.8.4.tar.gz","has_sig":false,"md5_digest":"88c843deedc8e115a5bddc1b27e9f3f4","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":29974,"upload_time":"2024-02-15T11:20:13","upload_time_iso_8601":"2024-02-15T11:20:13.366218Z","url":"https://files.pythonhosted.org/packages/dc/8a/e7a08fa77da53d136111ad22fc0ca10350f1d3fe9658a5db6a5dbcdaa832/keybert-0.8.4.tar.gz","yanked":false,"yanked_reason":null}],"0.8.5":[{"comment_text":"","digests":{"blake2b_256":"38b60258658e776c747765a1584cbd3861303f9ba34ee6beea6d6b8b21d47630","md5":"15f7d5e0387905a7e98fb6012c4807a9","sha256":"005e0eab30c8e85c249ccc6eaad7741357e692591b3eaebe64c40f12614c2ca9"},"downloads":-1,"filename":"keybert-0.8.5-py3-none-any.whl","has_sig":false,"md5_digest":"15f7d5e0387905a7e98fb6012c4807a9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":37463,"upload_time":"2024-06-14T09:11:16","upload_time_iso_8601":"2024-06-14T09:11:16.173389Z","url":"https://files.pythonhosted.org/packages/38/b6/0258658e776c747765a1584cbd3861303f9ba34ee6beea6d6b8b21d47630/keybert-0.8.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"aca628ece89c550f0698585ea254eb5f7263433a1796b0b5ce98233f1249404d","md5":"8225133c86edce0ce1b19e731d1c302b","sha256":"4b8e4b4d129b319b6266c77b9c8ed34e94e5db42a977c977c8ae58f57343995f"},"downloads":-1,"filename":"keybert-0.8.5.tar.gz","has_sig":false,"md5_digest":"8225133c86edce0ce1b19e731d1c302b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":30185,"upload_time":"2024-06-14T09:11:17","upload_time_iso_8601":"2024-06-14T09:11:17.764552Z","url":"https://files.pythonhosted.org/packages/ac/a6/28ece89c550f0698585ea254eb5f7263433a1796b0b5ce98233f1249404d/keybert-0.8.5.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"38b60258658e776c747765a1584cbd3861303f9ba34ee6beea6d6b8b21d47630","md5":"15f7d5e0387905a7e98fb6012c4807a9","sha256":"005e0eab30c8e85c249ccc6eaad7741357e692591b3eaebe64c40f12614c2ca9"},"downloads":-1,"filename":"keybert-0.8.5-py3-none-any.whl","has_sig":false,"md5_digest":"15f7d5e0387905a7e98fb6012c4807a9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":37463,"upload_time":"2024-06-14T09:11:16","upload_time_iso_8601":"2024-06-14T09:11:16.173389Z","url":"https://files.pythonhosted.org/packages/38/b6/0258658e776c747765a1584cbd3861303f9ba34ee6beea6d6b8b21d47630/keybert-0.8.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"aca628ece89c550f0698585ea254eb5f7263433a1796b0b5ce98233f1249404d","md5":"8225133c86edce0ce1b19e731d1c302b","sha256":"4b8e4b4d129b319b6266c77b9c8ed34e94e5db42a977c977c8ae58f57343995f"},"downloads":-1,"filename":"keybert-0.8.5.tar.gz","has_sig":false,"md5_digest":"8225133c86edce0ce1b19e731d1c302b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":30185,"upload_time":"2024-06-14T09:11:17","upload_time_iso_8601":"2024-06-14T09:11:17.764552Z","url":"https://files.pythonhosted.org/packages/ac/a6/28ece89c550f0698585ea254eb5f7263433a1796b0b5ce98233f1249404d/keybert-0.8.5.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
