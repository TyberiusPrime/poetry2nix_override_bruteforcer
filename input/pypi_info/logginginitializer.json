{"info":{"author":"","author_email":"RWS Datalab <datalab.codebase@rws.nl>","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","Natural Language :: English","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description":"###################\nlogging initializer\n###################\n\n.. begin-inclusion-intro-marker-do-not-remove\n\nInitialize Python logging with RWS Datalab defaults.\nA tiny module to make it easy to define your logger settings!\n\n.. end-inclusion-intro-marker-do-not-remove\n\n\n.. begin-inclusion-usage-marker-do-not-remove\n\nHow to log in Python applications\n---------------------------------\n\nIf you already know how to log and just want to use the LoggingInitializer, see :ref: `using-LI`.\n\nAt the start of each module, import the Logging library and generate a logger:\n\n.. code-block::\n\n  import logging\n  logger = logging.getLogger(__name__)\n\nThis generates an object which knows from which module you're logging. It will reference the module in the log.\n\nIn your code, tell the logger to generate log messages where needed:\n\n.. code-block::\n\n  logger.debug(\"Going to do something important now.\")\n  try:\n    something_important()\n  except:\n    logger.error(\"Something important didn't work!!!\")\n  logger.info(\"Something important is done.\")\n\nThe methods ``debug()``, ``info()`` and ``error()`` (we also have ``warning()`` and ``critical()``) generate log messages at different `log levels`.\nLog levels are used to communicate the importance of a log line, to keep logs relevant, and as small as possible (but not smaller).\n\n\nYou will probably choose different log levels on different environments: on a production server, most teams will only log\n\"WARNING\", \"ERROR\" and \"CRITICAL\"; on a testing server usually also \"INFO\" so it's easier to follow what's going on,\nand when debugging... \"DEBUG\". When writing log messages, choose your log levels with this in mind.\n\nThe default setting for LoggingInitializer is INFO, which means that statements logged with logger.debug() will `not` be logged by default.\n\nFor more information on how to use the Python logger and info on the different log levels, see `this helpful tutorial in the Python docs <https://docs.python.org/3/howto/logging.html>`_.\n\n\n.. _using-LI:\n\nUsing LoggingInitializer\n------------------------\n\nInclude the LoggingInitializer in your application to quickly set parameters for the Python logger.\n\nAt the start of your program, populate a LoggingConfig object with the required parameters.\n\n\n.. table:: parameters for the LoggingConfig object\n\n\n ================= ============================================================================= ============ ======================================================\n  Name              Description                                                                   Required?    Default value\n ================= ============================================================================= ============ ======================================================\n  identifier        Identifying the program being logged, will be used in file name of the log    Yes\n  directory         Directory for the log file                                                    No           None\n  log_level         Default log level for log lines without a specified level                     No           \"INFO\"\n  log_format        Format for log messages                                                       No           \"%(levelname)s:%(asctime)s - %(name)s - %(message)s\"\n  date_format       Format for log timestamps                                                     No           \"%Y/%m/%d %H:%M:%S %p\"\n  backup_count      Number of log files to be kept before a file is re-used                       No           50\n ================= ============================================================================= ============ ======================================================\n\n\nBelow an example of a logger that writes to StdOut and to a file is portrayed.\nThe user executing the program should have write rights on the specified directory!\n\n.. code-block::\n\n  config = {\n            \"identifier\": \"my_lovely_program\",\n            \"directory\": \"/var/logs\",\n        }\n\n  logging_config = LoggingConfig(**config)\n\nThen create the LoggingInitializer object:\n\n.. code-block::\n\n  logging_initializer = LoggingInitializer(logging_config)\n\nIf you want to suppress the logging to StdOut (only log to a file), use Quiet Mode:\n\n\n.. code-block::\n\n  logging_initializer = LoggingInitializer(logging_config, quiet=True)\n\nIf you want to suppress the logging to a file (only log to StdOut), simply\ndon't specify a directory in the ``LoggingConfig``.\n\n.. code-block::\n\n  logging_config = LoggingConfig(identifier=\"your-package-name\")\n  logging_initializer = LoggingInitializer(logging_config)\n\n\nFor more info on setting the log format and date format, see `the Python docs <https://docs.python.org/3/howto/logging.html#formatters>`_.\nIf another application is ingesting the logs, do not change the format unannounced.\n\n.. end-inclusion-usage-marker-do-not-remove\n\n\n.. begin-inclusion-installation-marker-do-not-remove\n\nInstallation\n------------\n\nTo install logging-initializer, do:\n\n.. code-block:: console\n\n  git clone https://gitlab.com/rwsdatalab/projects/logging-initializer.git\n  cd logging-initializer\n  pip install .\n\nRun tests (including coverage) with:\n\n.. code-block:: console\n\n  pip install -r requirements-dev.txt\n  python setup.py test\n\n.. end-inclusion-installation-marker-do-not-remove\n\n\nDocumentation\n-------------\n\nFind the full documentation `here <https://rwsdatalab.gitlab.io/codebase/utils/logging-initializer/>`_.\n\n.. begin-inclusion-license-marker-do-not-remove\n\nLicense\n-------\n\nCopyright (c) 2022-2023, Rijkswaterstaat\n\n\n\n.. end-inclusion-license-marker-do-not-remove\n","description_content_type":"text/x-rst","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"logginginitializer","license":"","maintainer":"","maintainer_email":"","name":"logginginitializer","package_url":"https://pypi.org/project/logginginitializer/","platform":null,"project_url":"https://pypi.org/project/logginginitializer/","project_urls":{"changelog":"https://gitlab.com/rwsdatalab/codebase/utils/logging-initializer/blob/main/CHANGELOG.rst","documentation":"https://rwsdatalab.gitlab.io/codebase/utils/logging-initializer","homepage":"https://gitlab.com/rwsdatalab/codebase/utils/logging-initializer","repository":"https://gitlab.com/rwsdatalab/codebase/utils/logging-initializer"},"provides_extra":null,"release_url":"https://pypi.org/project/logginginitializer/1.2.0/","requires_dist":["pydantic >=2","bandit ; extra == 'dev'","black ; extra == 'dev'","flake8 ; extra == 'dev'","flake8-bugbear ; extra == 'dev'","flake8-comprehensions ; extra == 'dev'","flake8-docstrings ; extra == 'dev'","flake8-polyfill ; extra == 'dev'","isort ; extra == 'dev'","mypy ; extra == 'dev'","pre-commit ; extra == 'dev'","pylint ; extra == 'dev'","pytest ; extra == 'dev'","pytest-cov ; extra == 'dev'","radon ; extra == 'dev'","safety ; extra == 'dev'","pydata-sphinx-theme ; extra == 'doc'","sphinx ; extra == 'doc'","sphinx-autodoc-typehints ; extra == 'doc'"],"requires_python":">=3.10","summary":"Initialize Python logging with RWS Datalab defaults","version":"1.2.0","yanked":false,"yanked_reason":null},"last_serial":19651400,"releases":{"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"1029e410a4c71f279d39c81b2812d2b389dc9f10d262a95667b0c09dc4fd86d7","md5":"00fd3d36ca868c7a48bf38176d5ee09c","sha256":"ed68086323f6823f28fd59805a16204a627d767542eef07b5e7d77d8b76802cd"},"downloads":-1,"filename":"logginginitializer-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"00fd3d36ca868c7a48bf38176d5ee09c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10","size":6385,"upload_time":"2023-09-07T13:10:02","upload_time_iso_8601":"2023-09-07T13:10:02.235474Z","url":"https://files.pythonhosted.org/packages/10/29/e410a4c71f279d39c81b2812d2b389dc9f10d262a95667b0c09dc4fd86d7/logginginitializer-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"97d7eb87f103d19bebccbffde67ddbebfc3a5cc1b21b47bc587db6990829ceec","md5":"f2737245e69a48b7fe64c16b670290f9","sha256":"88c466fc2103546f9f561251d00ce0480c4ce6373cc598ddb561e42a5da82a15"},"downloads":-1,"filename":"logginginitializer-1.2.0.tar.gz","has_sig":false,"md5_digest":"f2737245e69a48b7fe64c16b670290f9","packagetype":"sdist","python_version":"source","requires_python":">=3.10","size":18197,"upload_time":"2023-09-07T13:10:04","upload_time_iso_8601":"2023-09-07T13:10:04.385273Z","url":"https://files.pythonhosted.org/packages/97/d7/eb87f103d19bebccbffde67ddbebfc3a5cc1b21b47bc587db6990829ceec/logginginitializer-1.2.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"1029e410a4c71f279d39c81b2812d2b389dc9f10d262a95667b0c09dc4fd86d7","md5":"00fd3d36ca868c7a48bf38176d5ee09c","sha256":"ed68086323f6823f28fd59805a16204a627d767542eef07b5e7d77d8b76802cd"},"downloads":-1,"filename":"logginginitializer-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"00fd3d36ca868c7a48bf38176d5ee09c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10","size":6385,"upload_time":"2023-09-07T13:10:02","upload_time_iso_8601":"2023-09-07T13:10:02.235474Z","url":"https://files.pythonhosted.org/packages/10/29/e410a4c71f279d39c81b2812d2b389dc9f10d262a95667b0c09dc4fd86d7/logginginitializer-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"97d7eb87f103d19bebccbffde67ddbebfc3a5cc1b21b47bc587db6990829ceec","md5":"f2737245e69a48b7fe64c16b670290f9","sha256":"88c466fc2103546f9f561251d00ce0480c4ce6373cc598ddb561e42a5da82a15"},"downloads":-1,"filename":"logginginitializer-1.2.0.tar.gz","has_sig":false,"md5_digest":"f2737245e69a48b7fe64c16b670290f9","packagetype":"sdist","python_version":"source","requires_python":">=3.10","size":18197,"upload_time":"2023-09-07T13:10:04","upload_time_iso_8601":"2023-09-07T13:10:04.385273Z","url":"https://files.pythonhosted.org/packages/97/d7/eb87f103d19bebccbffde67ddbebfc3a5cc1b21b47bc587db6990829ceec/logginginitializer-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
