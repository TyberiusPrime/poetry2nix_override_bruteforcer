{"info":{"author":"Cameron Simpson","author_email":"Cameron Simpson <cs@cskk.id.au>","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 3","Topic :: Software Development :: Libraries :: Python Modules"],"description":"Stuff to do with counters, sequences and iterables.\n\n*Latest release 20221118*:\nSmall doc improvement.\n\nNote that any function accepting an iterable\nwill consume some or all of the derived iterator\nin the course of its function.\n\n## Function `common_prefix_length(*seqs)`\n\nReturn the length of the common prefix of sequences `seqs`.\n\n## Function `common_suffix_length(*seqs)`\n\nReturn the length of the common suffix of sequences `seqs`.\n\n## Function `first(iterable)`\n\nReturn the first item from an iterable; raise IndexError on empty iterables.\n\n## Function `get0(iterable, default=None)`\n\nReturn first element of an iterable, or the default.\n\n## Function `greedy(g=None, queue_depth=0)`\n\nA decorator or function for greedy computation of iterables.\n\nIf `g` is omitted or callable\nthis is a decorator for a generator function\ncausing it to compute greedily,\ncapacity limited by `queue_depth`.\n\nIf `g` is iterable\nthis function dispatches it in a `Thread` to compute greedily,\ncapacity limited by `queue_depth`.\n\nExample with an iterable:\n\n    for packet in greedy(parse_data_stream(stream)):\n        ... process packet ...\n\nwhich does some readahead of the stream.\n\nExample as a function decorator:\n\n    @greedy\n    def g(n):\n        for item in range(n):\n            yield n\n\nThis can also be used directly on an existing iterable:\n\n    for item in greedy(range(n)):\n        yield n\n\nNormally a generator runs on demand.\nThis function dispatches a `Thread` to run the iterable\n(typically a generator)\nputting yielded values to a queue\nand returns a new generator yielding from the queue.\n\nThe `queue_depth` parameter specifies the depth of the queue\nand therefore how many values the original generator can compute\nbefore blocking at the queue's capacity.\n\nThe default `queue_depth` is `0` which creates a `Channel`\nas the queue - a zero storage buffer - which lets the generator\ncompute only a single value ahead of time.\n\nA larger `queue_depth` allocates a `Queue` with that much storage\nallowing the generator to compute as many as `queue_depth+1` values\nahead of time.\n\nHere's a comparison of the behaviour:\n\nExample without `@greedy`\nwhere the \"yield 1\" step does not occur until after the \"got 0\":\n\n    >>> from time import sleep\n    >>> def g():\n    ...   for i in range(2):\n    ...     print(\"yield\", i)\n    ...     yield i\n    ...   print(\"g done\")\n    ...\n    >>> G = g(); sleep(0.1)\n    >>> for i in G:\n    ...   print(\"got\", i)\n    ...   sleep(0.1)\n    ...\n    yield 0\n    got 0\n    yield 1\n    got 1\n    g done\n\nExample with `@greedy`\nwhere the \"yield 1\" step computes before the \"got 0\":\n\n    >>> from time import sleep\n    >>> @greedy\n    ... def g():\n    ...   for i in range(2):\n    ...     print(\"yield\", i)\n    ...     yield i\n    ...   print(\"g done\")\n    ...\n    >>> G = g(); sleep(0.1)\n    yield 0\n    >>> for i in G:\n    ...   print(\"got\", repr(i))\n    ...   sleep(0.1)\n    ...\n    yield 1\n    got 0\n    g done\n    got 1\n\nExample with `@greedy(queue_depth=1)`\nwhere the \"yield 1\" step computes before the \"got 0\":\n\n    >>> from cs.x import X\n    >>> from time import sleep\n    >>> @greedy\n    ... def g():\n    ...   for i in range(3):\n    ...     X(\"Y\")\n    ...     print(\"yield\", i)\n    ...     yield i\n    ...   print(\"g done\")\n    ...\n    >>> G = g(); sleep(2)\n    yield 0\n    yield 1\n    >>> for i in G:\n    ...   print(\"got\", repr(i))\n    ...   sleep(0.1)\n    ...\n    yield 2\n    got 0\n    yield 3\n    got 1\n    g done\n    got 2\n\n## Function `imerge(*iters, **kw)`\n\nMerge an iterable of ordered iterables in order.\n\nParameters:\n* `iters`: an iterable of iterators\n* `reverse`: keyword parameter: if true, yield items in reverse order.\n  This requires the iterables themselves to also be in\n  reversed order.\n\nThis function relies on the source iterables being ordered\nand their elements being comparable, through slightly misordered\niterables (for example, as extracted from web server logs)\nwill produce only slightly misordered results, as the merging\nis done on the basis of the front elements of each iterable.\n\n## Function `isordered(items, reverse=False, strict=False)`\n\nTest whether an iterable is ordered.\nNote that the iterable is iterated, so this is a destructive\ntest for nonsequences.\n\n## Function `last(iterable)`\n\nReturn the last item from an iterable; raise IndexError on empty iterables.\n\n## Function `onetomany(func)`\n\nA decorator for a method of a sequence to merge the results of\npassing every element of the sequence to the function, expecting\nmultiple values back.\n\nExample:\n\n      class X(list):\n            @onetomany\n            def chars(self, item):\n                  return item\n      strs = X(['Abc', 'Def'])\n      all_chars = X.chars()\n\n## Function `onetoone(func)`\n\nA decorator for a method of a sequence to merge the results of\npassing every element of the sequence to the function, expecting a\nsingle value back.\n\nExample:\n\n      class X(list):\n            @onetoone\n            def lower(self, item):\n                  return item.lower()\n      strs = X(['Abc', 'Def'])\n      lower_strs = X.lower()\n\n## Class `Seq`\n\nA numeric sequence implemented as a thread safe wrapper for\n`itertools.count()`.\n\nA `Seq` is iterable and both iterating and calling it return\nthe next number in the sequence.\n\n## Function `seq()`\n\nReturn a new sequential value.\n\n## Function `splitoff(sq, *sizes)`\n\nSplit a sequence into (usually short) prefixes and a tail,\nfor example to construct subdirectory trees based on a UUID.\n\nExample:\n\n    >>> from uuid import UUID\n    >>> uuid = 'd6d9c510-785c-468c-9aa4-b7bda343fb79'\n    >>> uu = UUID(uuid).hex\n    >>> uu\n    'd6d9c510785c468c9aa4b7bda343fb79'\n    >>> splitoff(uu, 2, 2)\n    ['d6', 'd9', 'c510785c468c9aa4b7bda343fb79']\n\n## Class `StatefulIterator`\n\nA trivial iterator which wraps another iterator to expose some tracking state.\n\nThis has 2 attributes:\n* `.it`: the internal iterator which should yield `(item,new_state)`\n* `.state`: the last state value from the internal iterator\n\nThe originating use case is resuse of an iterator by independent\ncalls that are typically sequential, specificly the .read\nmethod of file like objects. Naive sequential reads require\nthe underlying storage to locate the data on every call, even\nthough the previous call has just performed this task for the\nprevious read. Saving the iterator used from the preceeding\ncall allows the iterator to pick up directly if the file\noffset hasn't been fiddled in the meantime.\n\n## Function `tee(iterable, *Qs)`\n\nA generator yielding the items from an iterable\nwhich also copies those items to a series of queues.\n\nParameters:\n* `iterable`: the iterable to copy\n* `Qs`: the queues, objects accepting a `.put` method.\n\nNote: the item is `.put` onto every queue\nbefore being yielded from this generator.\n\n## Function `the(iterable, context=None)`\n\nReturns the first element of an iterable, but requires there to be\nexactly one.\n\n## Class `TrackingCounter`\n\nA wrapper for a counter which can be incremented and decremented.\n\nA facility is provided to wait for the counter to reach a specific value.\nThe .inc and .dec methods also accept a `tag` argument to keep\nindividual counts based on the tag to aid debugging.\n\nTODO: add `strict` option to error and abort if any counter tries\nto go below zero.\n\n*Method `TrackingCounter.__init__(self, value=0, name=None, lock=None)`*:\nInitialise the counter to `value` (default 0) with the optional `name`.\n\n## Function `unrepeated(it, seen=None, signature=None)`\n\nA generator yielding items from the iterable `it` with no repetitions.\n\nParameters:\n* `it`: the iterable to process\n* `seen`: an optional setlike container supporting `in` and `.add()`\n* `signature`: an optional signature function for items from `it`\n  which produces the value to compare to recognise repeated items;\n  its values are stored in the `seen` set\n\nThe default `signature` function is equality;\nthe items are stored n `seen` and compared.\nThis requires the items to be hashable and support equality tests.\nThe same applies to whatever values the `signature` function produces.\n\nAnother common signature is identity: `id`, useful for\ntraversing a graph which may have cycles.\n\nSince `seen` accrues all the signature values for yielded items\ngenerally it will grow monotonicly as iteration proceeeds.\nIf the items are complex or large it is well worth providing a signature\nfunction even if the items themselves can be used in a set.\n\n# Release Log\n\n\n\n*Release 20221118*:\nSmall doc improvement.\n\n*Release 20220530*:\nSeq: calling a Seq is like next(seq).\n\n*Release 20210924*:\nNew greedy(iterable) or @greedy(generator_function) to let generators precompute.\n\n*Release 20210913*:\nNew unrepeated() generator removing duplicates from an iterable.\n\n*Release 20201025*:\nNew splitoff() function to split a sequence into (usually short) prefixes and a tail.\n\n*Release 20200914*:\nNew common_prefix_length and common_suffix_length for comparing prefixes and suffixes of sequences.\n\n*Release 20190103*:\nDocumentation update.\n\n*Release 20190101*:\n* New and UNTESTED class StatefulIterator to associate some externally visible state with an iterator.\n* Seq: accept optional `lock` parameter.\n\n*Release 20171231*:\n* Python 2 backport for imerge().\n* New tee function to duplicate an iterable to queues.\n* Function isordered() is now a test instead of an assertion.\n* Drop NamedTuple, NamedTupleClassFactory (unused).\n\n*Release 20160918*:\n* New function isordered() to test ordering of a sequence.\n* imerge: accept new `reverse` parameter for merging reversed iterables.\n\n*Release 20160828*:\nModify DISTINFO to say \"install_requires\", fixes pypi requirements.\n\n*Release 20160827*:\nTrackingCounter: accept presupplied lock object. Python 3 exec fix.\n\n*Release 20150118*:\nmetadata update\n\n*Release 20150111*:\nInitial PyPI release.\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://bitbucket.org/cameron_simpson/css/commits/all","keywords":"python2,python3","license":"GNU General Public License v3 or later (GPLv3+)","maintainer":"","maintainer_email":"","name":"cs.seq","package_url":"https://pypi.org/project/cs.seq/","platform":null,"project_url":"https://pypi.org/project/cs.seq/","project_urls":{"Homepage":"https://bitbucket.org/cameron_simpson/css/commits/all","URL":"https://bitbucket.org/cameron_simpson/css/commits/all"},"provides_extra":null,"release_url":"https://pypi.org/project/cs.seq/20221118/","requires_dist":["cs.deco (>=20221106.1)","cs.gimmicks (>=20220429)"],"requires_python":"","summary":"Stuff to do with counters, sequences and iterables.","version":"20221118","yanked":false,"yanked_reason":null},"last_serial":15809986,"releases":{"20150118":[{"comment_text":"","digests":{"blake2b_256":"2cf0d7d81b77f5954771d601ba45080c75970afa46f30405146eead7f0535c69","md5":"61f07274c4c220bde38aa47f78e87298","sha256":"5d093ae65db89090b37fd27183b97e7480cd0bd088dc05351965b24504ad20ee"},"downloads":-1,"filename":"cs.seq-20150118.tar.gz","has_sig":false,"md5_digest":"61f07274c4c220bde38aa47f78e87298","packagetype":"sdist","python_version":"source","requires_python":null,"size":3806,"upload_time":"2015-01-18T06:08:16","upload_time_iso_8601":"2015-01-18T06:08:16.993747Z","url":"https://files.pythonhosted.org/packages/2c/f0/d7d81b77f5954771d601ba45080c75970afa46f30405146eead7f0535c69/cs.seq-20150118.tar.gz","yanked":false,"yanked_reason":null}],"20160827":[{"comment_text":"","digests":{"blake2b_256":"29e30400b807b7e8aeae58381548bc9a4f7d68b6c69a0a5b019b6ba0fadd8b07","md5":"194c74097faed9acd0a71c9c50d461cc","sha256":"75a18f574b0fc58023525850bed6802e620c8a470303fc8c7aad7e4ab88df96e"},"downloads":-1,"filename":"cs.seq-20160827.tar.gz","has_sig":false,"md5_digest":"194c74097faed9acd0a71c9c50d461cc","packagetype":"sdist","python_version":"source","requires_python":null,"size":3838,"upload_time":"2016-08-27T03:29:39","upload_time_iso_8601":"2016-08-27T03:29:39.018248Z","url":"https://files.pythonhosted.org/packages/29/e3/0400b807b7e8aeae58381548bc9a4f7d68b6c69a0a5b019b6ba0fadd8b07/cs.seq-20160827.tar.gz","yanked":false,"yanked_reason":null}],"20160828":[{"comment_text":"","digests":{"blake2b_256":"ca556e15eda875564b28d092f28fc94b24bc1ff370393eea42c7fe58b9d5f381","md5":"99adb651ffcfb2eb6f70e515966a69c4","sha256":"044422cc9338d6407915c40d835199e34cfd28bff4c62a2881464ad38001e093"},"downloads":-1,"filename":"cs.seq-20160828.tar.gz","has_sig":false,"md5_digest":"99adb651ffcfb2eb6f70e515966a69c4","packagetype":"sdist","python_version":"source","requires_python":null,"size":4191,"upload_time":"2016-08-28T06:11:09","upload_time_iso_8601":"2016-08-28T06:11:09.906544Z","url":"https://files.pythonhosted.org/packages/ca/55/6e15eda875564b28d092f28fc94b24bc1ff370393eea42c7fe58b9d5f381/cs.seq-20160828.tar.gz","yanked":false,"yanked_reason":null}],"20160918":[{"comment_text":"","digests":{"blake2b_256":"351440fb65214d58cfdde553b8fe010042204c928f48c0f8f79f707a1151e0e5","md5":"ac9d60b9a695f2f507a46a4e5d2781ae","sha256":"6fe0a051eb018c026aec254cfb3942c4af04aad70af1552b053df779f50e8161"},"downloads":-1,"filename":"cs.seq-20160918.tar.gz","has_sig":false,"md5_digest":"ac9d60b9a695f2f507a46a4e5d2781ae","packagetype":"sdist","python_version":"source","requires_python":null,"size":4189,"upload_time":"2016-09-18T05:04:47","upload_time_iso_8601":"2016-09-18T05:04:47.228338Z","url":"https://files.pythonhosted.org/packages/35/14/40fb65214d58cfdde553b8fe010042204c928f48c0f8f79f707a1151e0e5/cs.seq-20160918.tar.gz","yanked":false,"yanked_reason":null}],"20171231":[{"comment_text":"","digests":{"blake2b_256":"5f6b414602255f04bbe68c197152f7755a74e6b8798707dff1fba514f443d61d","md5":"20adae3b369ccdd4c445e2ccabaa9323","sha256":"522c0970264b4cb44dba9e64456760634e481d6891deb9593d6536d56b926d27"},"downloads":-1,"filename":"cs.seq-20171231.tar.gz","has_sig":false,"md5_digest":"20adae3b369ccdd4c445e2ccabaa9323","packagetype":"sdist","python_version":"source","requires_python":null,"size":4118,"upload_time":"2017-12-30T23:32:53","upload_time_iso_8601":"2017-12-30T23:32:53.823313Z","url":"https://files.pythonhosted.org/packages/5f/6b/414602255f04bbe68c197152f7755a74e6b8798707dff1fba514f443d61d/cs.seq-20171231.tar.gz","yanked":false,"yanked_reason":null}],"20190101":[{"comment_text":"","digests":{"blake2b_256":"5f260ccd0daf14880a5ced724442f395cd74ed8cbfaf125414ef64d24fe2ca94","md5":"4eb28fd6de7777f84d19e2c61c2d22b6","sha256":"21ebe01d38bf9ac9089ddb6ad0702fa062b18f7ea5768895e3236a4183162c85"},"downloads":-1,"filename":"cs.seq-20190101.tar.gz","has_sig":false,"md5_digest":"4eb28fd6de7777f84d19e2c61c2d22b6","packagetype":"sdist","python_version":"source","requires_python":null,"size":5207,"upload_time":"2019-01-01T00:37:18","upload_time_iso_8601":"2019-01-01T00:37:18.855580Z","url":"https://files.pythonhosted.org/packages/5f/26/0ccd0daf14880a5ced724442f395cd74ed8cbfaf125414ef64d24fe2ca94/cs.seq-20190101.tar.gz","yanked":false,"yanked_reason":null}],"20190103":[{"comment_text":"","digests":{"blake2b_256":"aea842535b2f9276987ba42ca5dd68471a9fc600c4162bab9e91703abcc32c44","md5":"40c2605d88e13bc0631c7c0e70378ba9","sha256":"5c4ac7926cf985cd1d28d41daa595031b635f3006aa5e7ca1848445824c96b4a"},"downloads":-1,"filename":"cs.seq-20190103.tar.gz","has_sig":false,"md5_digest":"40c2605d88e13bc0631c7c0e70378ba9","packagetype":"sdist","python_version":"source","requires_python":null,"size":5328,"upload_time":"2019-01-02T22:30:26","upload_time_iso_8601":"2019-01-02T22:30:26.105066Z","url":"https://files.pythonhosted.org/packages/ae/a8/42535b2f9276987ba42ca5dd68471a9fc600c4162bab9e91703abcc32c44/cs.seq-20190103.tar.gz","yanked":false,"yanked_reason":null}],"20200914":[{"comment_text":"","digests":{"blake2b_256":"d1a65e3f0668ab16c7c1c8f97acf06b2e021b155f2a39c0a232365ba1e5bb736","md5":"010a1be8fee7e37dca0ee688ba857bbd","sha256":"d3b043e9dc7382777ed675c4fd266195ea34ce22590f5986a4531a81af72d41e"},"downloads":-1,"filename":"cs.seq-20200914.tar.gz","has_sig":false,"md5_digest":"010a1be8fee7e37dca0ee688ba857bbd","packagetype":"sdist","python_version":"source","requires_python":null,"size":7854,"upload_time":"2020-09-14T01:18:30","upload_time_iso_8601":"2020-09-14T01:18:30.392310Z","url":"https://files.pythonhosted.org/packages/d1/a6/5e3f0668ab16c7c1c8f97acf06b2e021b155f2a39c0a232365ba1e5bb736/cs.seq-20200914.tar.gz","yanked":false,"yanked_reason":null}],"20201025":[{"comment_text":"","digests":{"blake2b_256":"aca474dc079f5bb92ae9227dd4f1396741ab09e6358e21ac77b55f6e610b442b","md5":"5f5b164f27cb960577941fa21d5379ac","sha256":"ec788f2fcb68e1dffe73e06832cba67c583abb1fee39a61792e624a2308d9948"},"downloads":-1,"filename":"cs.seq-20201025.tar.gz","has_sig":false,"md5_digest":"5f5b164f27cb960577941fa21d5379ac","packagetype":"sdist","python_version":"source","requires_python":null,"size":8474,"upload_time":"2020-10-25T03:27:29","upload_time_iso_8601":"2020-10-25T03:27:29.294956Z","url":"https://files.pythonhosted.org/packages/ac/a4/74dc079f5bb92ae9227dd4f1396741ab09e6358e21ac77b55f6e610b442b/cs.seq-20201025.tar.gz","yanked":false,"yanked_reason":null}],"20210913":[{"comment_text":"","digests":{"blake2b_256":"8389cb65f671a96a71843034570ffbcd7a40d889659da4598c72d86da69b5e7f","md5":"fbf20845f548c7ade0fb733202755479","sha256":"3e81ec382471f2bfc34f454eaa0a475d111efc33212d34eb5d3285814bdc8405"},"downloads":-1,"filename":"cs.seq-20210913.tar.gz","has_sig":false,"md5_digest":"fbf20845f548c7ade0fb733202755479","packagetype":"sdist","python_version":"source","requires_python":null,"size":9156,"upload_time":"2021-09-13T10:07:34","upload_time_iso_8601":"2021-09-13T10:07:34.570414Z","url":"https://files.pythonhosted.org/packages/83/89/cb65f671a96a71843034570ffbcd7a40d889659da4598c72d86da69b5e7f/cs.seq-20210913.tar.gz","yanked":false,"yanked_reason":null}],"20210924":[{"comment_text":"","digests":{"blake2b_256":"dd21600aca1253d78c6bb521aca9f5a2b805fa491b19daddb7a07e2b4439138a","md5":"76de903ed91def5d0e75d8d16374bd2e","sha256":"0569b264c3ebd9f9f8836f4757cdbd07c5088829a3f1f43e63aab3514862db60"},"downloads":-1,"filename":"cs.seq-20210924.tar.gz","has_sig":false,"md5_digest":"76de903ed91def5d0e75d8d16374bd2e","packagetype":"sdist","python_version":"source","requires_python":null,"size":12087,"upload_time":"2021-09-24T02:29:34","upload_time_iso_8601":"2021-09-24T02:29:34.729898Z","url":"https://files.pythonhosted.org/packages/dd/21/600aca1253d78c6bb521aca9f5a2b805fa491b19daddb7a07e2b4439138a/cs.seq-20210924.tar.gz","yanked":false,"yanked_reason":null}],"20220530":[{"comment_text":"","digests":{"blake2b_256":"efcdb9414d7200cff20ab303c47e3f8d60fbf0a84c8d21bd6e04679cd3b5a00e","md5":"9ac29513065a3de62b14e182d6e6038a","sha256":"6c001c99880f3a2027c99e3409669139e34a631c08e7220abb94a9cf9d669107"},"downloads":-1,"filename":"cs.seq-20220530-py3-none-any.whl","has_sig":false,"md5_digest":"9ac29513065a3de62b14e182d6e6038a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":10375,"upload_time":"2022-05-30T03:42:20","upload_time_iso_8601":"2022-05-30T03:42:20.634836Z","url":"https://files.pythonhosted.org/packages/ef/cd/b9414d7200cff20ab303c47e3f8d60fbf0a84c8d21bd6e04679cd3b5a00e/cs.seq-20220530-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dc211476282446448b7e653f1bf90b89741a06557394ca327021fc190eaf2b4a","md5":"37553b56cc61ae0232da15a7ba470992","sha256":"b316442ecfd3b07e25a8af6055507b3ec97568ae7c09dcb429c8d29b321a717a"},"downloads":-1,"filename":"cs.seq-20220530.tar.gz","has_sig":false,"md5_digest":"37553b56cc61ae0232da15a7ba470992","packagetype":"sdist","python_version":"source","requires_python":null,"size":10595,"upload_time":"2022-05-30T03:42:23","upload_time_iso_8601":"2022-05-30T03:42:23.093473Z","url":"https://files.pythonhosted.org/packages/dc/21/1476282446448b7e653f1bf90b89741a06557394ca327021fc190eaf2b4a/cs.seq-20220530.tar.gz","yanked":false,"yanked_reason":null}],"20221118":[{"comment_text":"","digests":{"blake2b_256":"4f1012c64527c8cd9762c99710e6505f281f0526e66a1f6893a311daabba2208","md5":"51fb54064da5ef4ada48c55d37636518","sha256":"7d46e85611cd3f802e21e163d348360f2c6a69ab5d5607bd460ddcf62fcf8369"},"downloads":-1,"filename":"cs.seq-20221118-py3-none-any.whl","has_sig":false,"md5_digest":"51fb54064da5ef4ada48c55d37636518","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":10475,"upload_time":"2022-11-18T03:35:11","upload_time_iso_8601":"2022-11-18T03:35:11.439592Z","url":"https://files.pythonhosted.org/packages/4f/10/12c64527c8cd9762c99710e6505f281f0526e66a1f6893a311daabba2208/cs.seq-20221118-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8ea7f3c13eaed267d0f14756a605ff11944216b078536f9764695e6d99a176f4","md5":"c9f9970fb63760ba16f19579d28f5dcc","sha256":"6a8cb9f8fd12f6b7d9b4810f5e328f5938c45a98ac81eee255b80bc820f43f64"},"downloads":-1,"filename":"cs.seq-20221118.tar.gz","has_sig":false,"md5_digest":"c9f9970fb63760ba16f19579d28f5dcc","packagetype":"sdist","python_version":"source","requires_python":null,"size":10680,"upload_time":"2022-11-18T03:35:13","upload_time_iso_8601":"2022-11-18T03:35:13.152649Z","url":"https://files.pythonhosted.org/packages/8e/a7/f3c13eaed267d0f14756a605ff11944216b078536f9764695e6d99a176f4/cs.seq-20221118.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"4f1012c64527c8cd9762c99710e6505f281f0526e66a1f6893a311daabba2208","md5":"51fb54064da5ef4ada48c55d37636518","sha256":"7d46e85611cd3f802e21e163d348360f2c6a69ab5d5607bd460ddcf62fcf8369"},"downloads":-1,"filename":"cs.seq-20221118-py3-none-any.whl","has_sig":false,"md5_digest":"51fb54064da5ef4ada48c55d37636518","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":10475,"upload_time":"2022-11-18T03:35:11","upload_time_iso_8601":"2022-11-18T03:35:11.439592Z","url":"https://files.pythonhosted.org/packages/4f/10/12c64527c8cd9762c99710e6505f281f0526e66a1f6893a311daabba2208/cs.seq-20221118-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8ea7f3c13eaed267d0f14756a605ff11944216b078536f9764695e6d99a176f4","md5":"c9f9970fb63760ba16f19579d28f5dcc","sha256":"6a8cb9f8fd12f6b7d9b4810f5e328f5938c45a98ac81eee255b80bc820f43f64"},"downloads":-1,"filename":"cs.seq-20221118.tar.gz","has_sig":false,"md5_digest":"c9f9970fb63760ba16f19579d28f5dcc","packagetype":"sdist","python_version":"source","requires_python":null,"size":10680,"upload_time":"2022-11-18T03:35:13","upload_time_iso_8601":"2022-11-18T03:35:13.152649Z","url":"https://files.pythonhosted.org/packages/8e/a7/f3c13eaed267d0f14756a605ff11944216b078536f9764695e6d99a176f4/cs.seq-20221118.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
