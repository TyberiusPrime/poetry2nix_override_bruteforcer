{"info":{"author":"Joe Block","author_email":"jpb@unixorn.net","bugtrack_url":null,"classifiers":["Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12"],"description":"# ha-mqtt-discoverable\n\n[![License](https://img.shields.io/github/license/unixorn/ha-mqtt-discoverable.svg)](https://opensource.org/license/apache-2-0/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![GitHub last commit (branch)](https://img.shields.io/github/last-commit/unixorn/ha-mqtt-discoverable/main.svg)](https://github.com/unixorn/ha-mqtt-discoverable)\n[![Downloads](https://static.pepy.tech/badge/ha-mqtt-discoverable)](https://pepy.tech/project/ha-mqtt-discoverable)\n\nA Python 3 module that takes advantage of Home Assistant's [MQTT discovery protocol](https://www.home-assistant.io/integrations/mqtt/#mqtt-discovery) to create sensors without having to define anything on the HA side.\n\nUsing MQTT discoverable devices lets us add new sensors and devices to HA without having to restart HA. The `ha-mqtt-discoverable-cli` module includes scripts to make it easy to create discoverable devices from the command line if you don't want to bother writing Python.\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n## Table of Contents\n\n- [Installing](#installing)\n  - [Python](#python)\n- [Supported entities](#supported-entities)\n  - [Binary sensor](#binary-sensor)\n    - [Usage](#usage)\n  - [Button](#button)\n  - [Device](#device)\n    - [Usage](#usage-1)\n  - [Device trigger](#device-trigger)\n      - [Usage](#usage-2)\n  - [Switch](#switch)\n    - [Usage](#usage-3)\n  - [Light](#light)\n    - [Usage](#usage-4)\n  - [Covers](#covers)\n    - [Usage](#usage-5)\n  - [Text](#text)\n    - [Usage](#usage-6)\n  - [Number](#number)\n    - [Usage](#usage-7)\n- [Contributing](#contributing)\n- [Users of ha-mqtt-discoverable](#users-of-ha-mqtt-discoverable)\n- [Contributors](#contributors)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installing\n\n### Python\n\nha-mqtt-discoverable runs on Python 3.10 or later.\n\n`pip install ha-mqtt-discoverable` if you want to use it in your own python scripts. This will also install the `hmd` utility scripts.\n\n<!-- Please keep the entities in alphabetical order -->\n## Supported entities\n\nThe following Home Assistant entities are currently implemented:\n\n- Binary sensor\n- Button\n- Cover\n- Device\n- Device trigger\n- Light\n- Number\n- Sensor\n- Switch\n- Text\n\nEach entity can associated to a device. See below for details.\n\n### Binary sensor\n\n#### Usage\n\nThe following example creates a binary sensor and sets its state:\n\n```py\nfrom ha_mqtt_discoverable import Settings\nfrom ha_mqtt_discoverable.sensors import BinarySensor, BinarySensorInfo\n\n\n# Configure the required parameters for the MQTT broker\nmqtt_settings = Settings.MQTT(host=\"localhost\")\n\n# Information about the sensor\nsensor_info = BinarySensorInfo(name=\"MySensor\", device_class=\"motion\")\n\nsettings = Settings(mqtt=mqtt_settings, entity=sensor_info)\n\n# Instantiate the sensor\nmysensor = BinarySensor(settings)\n\n# Change the state of the sensor, publishing an MQTT message that gets picked up by HA\nmysensor.on()\nmysensor.off()\n\n# Or, change the state using a boolean\nmysensor.update_state(True)\nmysensor.update_state(False)\n\n# You can also set custom attributes on the sensor via a Python dict\nmysensor.set_attributes({\"my attribute\": \"awesome\"})\n\n```\n\n### Button\n\nThe button publishes no state, it simply receives a command from HA.\n\nYou must call `write_config` on a Button after creating it to make it discoverable.\n\n```py\nfrom ha_mqtt_discoverable import Settings\nfrom ha_mqtt_discoverable.sensors import Button, ButtonInfo\nfrom paho.mqtt.client import Client, MQTTMessage\n\n# Configure the required parameters for the MQTT broker\nmqtt_settings = Settings.MQTT(host=\"localhost\")\n\n# Information about the button\nbutton_info = ButtonInfo(name=\"test\")\n\nsettings = Settings(mqtt=mqtt_settings, entity=button_info)\n\n# To receive button commands from HA, define a callback function:\ndef my_callback(client: Client, user_data, message: MQTTMessage):\n    perform_my_custom_action()\n\n# Define an optional object to be passed back to the callback\nuser_data = \"Some custom data\"\n\n# Instantiate the button\nmy_button = Button(settings, my_callback, user_data)\n\n# Publish the button's discoverability message to let HA automatically notice it\nmy_button.write_config()\n\n```\n\n### Device\nFrom the [Home Assistant documentation](https://developers.home-assistant.io/docs/device_registry_index):\n> A device is a special entity in Home Assistant that is represented by one or more entities.\nA device is automatically created when an entity defines its `device` property.\nA device will be matched up with an existing device via supplied identifiers or connections, like serial numbers or MAC addresses.\n\n#### Usage\n\nThe following example create a device, by associating multiple sensors to the same `DeviceInfo` instance.\n\n```py\nfrom ha_mqtt_discoverable import Settings, DeviceInfo\nfrom ha_mqtt_discoverable.sensors import BinarySensor, BinarySensorInfo\n\n# Configure the required parameters for the MQTT broker\nmqtt_settings = Settings.MQTT(host=\"localhost\")\n\n# Define the device. At least one of `identifiers` or `connections` must be supplied\ndevice_info = DeviceInfo(name=\"My device\", identifiers=\"device_id\")\n\n# Associate the sensor with the device via the `device` parameter\n# `unique_id` must also be set, otherwise Home Assistant will not display the device in the UI\nmotion_sensor_info = BinarySensorInfo(name=\"My motion sensor\", device_class=\"motion\", unique_id=\"my_motion_sensor\", device=device_info)\n\nmotion_settings = Settings(mqtt=mqtt_settings, entity=motion_sensor_info)\n\n# Instantiate the sensor\nmotion_sensor = BinarySensor(motion_settings)\n\n# Change the state of the sensor, publishing an MQTT message that gets picked up by HA\nmotion_sensor.on()\n\n# An additional sensor can be added to the same device, by re-using the DeviceInfo instance previously defined\ndoor_sensor_info = BinarySensorInfo(name=\"My door sensor\", device_class=\"door\", unique_id=\"my_door_sensor\", device=device_info)\ndoor_settings = Settings(mqtt=mqtt_settings, entity=door_sensor_info)\n\n# Instantiate the sensor\ndoor_sensor = BinarySensor(settings)\n\n# Change the state of the sensor, publishing an MQTT message that gets picked up by HA\ndoor_sensor.on()\n\n# The two sensors should be visible inside Home Assistant under the device `My device`\n```\n\n### Device trigger\n\nThe following example creates a device trigger and generates a trigger event:\n\n##### Usage\n```py\nfrom ha_mqtt_discoverable import Settings\nfrom ha_mqtt_discoverable.sensors import DeviceInfo, DeviceTriggerInfo, DeviceTrigger\n\n# Configure the required parameters for the MQTT broker\nmqtt_settings = Settings.MQTT(host=\"localhost\")\n\n# Define the device. At least one of `identifiers` or `connections` must be supplied\ndevice_info = DeviceInfo(name=\"My device\", identifiers=\"device_id\")\n\n# Associate the sensor with the device via the `device` parameter\ntrigger_info = DeviceTriggerInfo(name=\"MyTrigger\", type=\"button_press\", subtype=\"button_1\", unique_id=\"my_device_trigger\", device=device_info)\n\nsettings = Settings(mqtt=mqtt_settings, entity=trigger_info)\n\n# Instantiate the device trigger\nmytrigger = DeviceTrigger(settings)\n\n# Generate a device trigger event, publishing an MQTT message that gets picked up by HA\n# Optionally include a payload as part of the event\nmytrigger.trigger(\"My custom payload\")\n```\n\n### Switch\n\nThe switch is similar to a _binary sensor_, but in addition to publishing state changes toward HA it can also receive 'commands' from HA that request a state change.\nIt is possible to act upon reception of this 'command', by defining a `callback` function, as the following example shows:\n\n#### Usage\n\n```py\nfrom ha_mqtt_discoverable import Settings\nfrom ha_mqtt_discoverable.sensors import Switch, SwitchInfo\nfrom paho.mqtt.client import Client, MQTTMessage\n\n# Configure the required parameters for the MQTT broker\nmqtt_settings = Settings.MQTT(host=\"localhost\")\n\n# Information about the switch\nswitch_info = SwitchInfo(name=\"test\")\n\nsettings = Settings(mqtt=mqtt_settings, entity=switch_info)\n\n# To receive state commands from HA, define a callback function:\ndef my_callback(client: Client, user_data, message: MQTTMessage):\n    payload = message.payload.decode()\n    if payload == \"ON\":\n        turn_my_custom_thing_on()\n        # Let HA know that the switch was successfully activated\n\tmy_switch.on()\n    elif payload == \"OFF\":\n        turn_my_custom_thing_off()\n        # Let HA know that the switch was successfully deactivated\n\tmy_switch.off()\n\n# Define an optional object to be passed back to the callback\nuser_data = \"Some custom data\"\n\n# Instantiate the switch\nmy_switch = Switch(settings, my_callback, user_data)\n\n# Set the initial state of the switch, which also makes it discoverable\nmy_switch.off()\n\n```\n\n### Light\n\nThe light is different from other current sensor as it needs its payload encoded/decoded as json.\nIt is possible to set brightness, effects and the color of the light. Similar to a _switch_ it can\nalso receive 'commands' from HA that request a state change.\nIt is possible to act upon reception of this 'command', by defining a `callback` function, as the following example shows:\n\n#### Usage\n\n```py\nimport json\nfrom ha_mqtt_discoverable import Settings\nfrom ha_mqtt_discoverable.sensors import Light, LightInfo\nfrom paho.mqtt.client import Client, MQTTMessage\n\n# Configure the required parameters for the MQTT broker\nmqtt_settings = Settings.MQTT(host=\"localhost\")\n\n# Information about the light\nlight_info = LightInfo(\n    name=\"test_light\",\n    brightness=True,\n    color_mode=True,\n    supported_color_modes=[\"rgb\"],\n    effect=True,\n    effect_list=[\"blink\", \"my_cusom_effect\"])\n\nsettings = Settings(mqtt=mqtt_settings, entity=light_info)\n\n# To receive state commands from HA, define a callback function:\ndef my_callback(client: Client, user_data, message: MQTTMessage):\n\n    # Make sure received payload is json\n    try:\n        payload = json.loads(message.payload.decode())\n    except ValueError as error:\n        print(\"Ony JSON schema is supported for light entities!\")\n        return\n\n    # Parse received dictionary\n    if \"color\" in payload:\n        set_color_of_my_light()\n        my_light.color(\"rgb\", payload[\"color\"])\n    elif \"brightness\" in payload:\n        set_brightness_of_my_light()\n        my_light.brightness(payload[\"brightness\"])\n    elif \"effect\" in payload:\n        set_effect_of_my_light()\n        my_light.effect(payload[\"effect\"])\n    elif \"state\" in payload:\n        if payload[\"state\"] == light_info.payload_on:\n            turn_on_my_light()\n            my_light.on()\n        else:\n            turn_off_my_light()\n            my_light.off()\n    else:\n        print(\"Unknown payload\")\n\n# Define an optional object to be passed back to the callback\nuser_data = \"Some custom data\"\n\n# Instantiate the switch\nmy_light = Light(settings, my_callback, user_data)\n\n# Set the initial state of the light, which also makes it discoverable\nmy_light.off()\n\n```\n\n### Covers\n\nA cover has five possible states `open`, `closed`, `opening`, `closing` and `stopped`. Most other entities use the states as command payload, but covers differentiate on this. The user HA user can either open, close or stop it in the covers current position.\n\nCovers do not currently support tilt.\n\nA `callback` function is needed in order to parse the commands sent from HA, as the following\nexample shows:\n\n#### Usage\n\n```py\nfrom ha_mqtt_discoverable import Settings\nfrom ha_mqtt_discoverable.sensors import Cover, CoverInfo\nfrom paho.mqtt.client import Client, MQTTMessage\n\n# Configure the required parameters for the MQTT broker\nmqtt_settings = Settings.MQTT(host=\"localhost\")\n\n# Information about the cover\ncover_info = CoverInfo(name=\"test\")\n\nsettings = Settings(mqtt=mqtt_settings, entity=cover_info)\n\n# To receive state commands from HA, define a callback function:\ndef my_callback(client: Client, user_data, message: MQTTMessage):\n    payload = message.payload.decode()\n    if payload == \"OPEN\":\n\t# let HA know that the cover is opening\n\tmy_cover.opening()\n\t# call function to open cover\n        open_my_custom_cover()\n        # Let HA know that the cover was opened\n\tmy_cover.open()\n    if payload == \"CLOSE\":\n\t# let HA know that the cover is closing\n\tmy_cover.closing()\n\t# call function to close the cover\n        close_my_custom_cover()\n        # Let HA know that the cover was closed\n\tmy_cover.closed()\n    if payload == \"STOP\":\n\t# call function to stop the cover\n        stop_my_custom_cover()\n        # Let HA know that the cover was stopped\n\tmy_cover.stopped()\n\n# Define an optional object to be passed back to the callback\nuser_data = \"Some custom data\"\n\n# Instantiate the cover\nmy_cover = Cover(settings, my_callback, user_data)\n\n# Set the initial state of the cover, which also makes it discoverable\nmy_cover.closed()\n```\n\n### Text\n\nThe text is an `helper entity`, showing an input field in the HA UI that the user can interact with.\nIt is possible to act upon reception of the inputted text by defining a `callback` function, as the following example shows:\n\n#### Usage\n\n```py\nfrom ha_mqtt_discoverable import Settings\nfrom ha_mqtt_discoverable.sensors import Text, TextInfo\nfrom paho.mqtt.client import Client, MQTTMessage\n\n# Configure the required parameters for the MQTT broker\nmqtt_settings = Settings.MQTT(host=\"localhost\")\n\n# Information about the `text` entity\ntext_info = TextInfo(name=\"test\")\n\nsettings = Settings(mqtt=mqtt_settings, entity=text_info)\n\n# To receive text updates from HA, define a callback function:\ndef my_callback(client: Client, user_data, message: MQTTMessage):\n    text = message.payload.decode()\n    logging.info(f\"Received {text} from HA\")\n    do_some_custom_thing(text)\n    # Send an MQTT message to confirm to HA that the text was changed\n    my_text.set_text(text)\n\n# Define an optional object to be passed back to the callback\nuser_data = \"Some custom data\"\n\n# Instantiate the text\nmy_text = Text(settings, my_callback, user_data)\n\n# Set the initial text displayed in HA UI, publishing an MQTT message that gets picked up by HA\nmy_text.set_text(\"Some awesome text\")\n\n```\n\n### Number\n\nThe number entity is similar to the text entity, but for a numeric value instead of a string.\nIt is possible to act upon receiving changes in HA by defining a `callback` function, as the following example shows:\n\n#### Usage\n\n```py\nfrom ha_mqtt_discoverable import Settings\nfrom ha_mqtt_discoverable.sensors import Number, NumberInfo\nfrom paho.mqtt.client import Client, MQTTMessage\n\n# Configure the required parameters for the MQTT broker\nmqtt_settings = Settings.MQTT(host=\"localhost\")\n\n# Information about the `number` entity.\nnumber_info = NumberInfo(name=\"test\", min=0, max=50, mode=\"slider\", step=5)\n\nsettings = Settings(mqtt=mqtt_settings, entity=number_info)\n\n# To receive number updates from HA, define a callback function:\ndef my_callback(client: Client, user_data, message: MQTTMessage):\n    number = int(message.payload.decode())\n    logging.info(f\"Received {number} from HA\")\n    do_some_custom_thing(number)\n    # Send an MQTT message to confirm to HA that the number was changed\n    my_number.set_value(number)\n\n# Define an optional object to be passed back to the callback\nuser_data = \"Some custom data\"\n\n# Instantiate the number\nmy_number = Number(settings, my_callback, user_data)\n\n# Set the initial number displayed in HA UI, publishing an MQTT message that gets picked up by HA\nmy_number.set_value(42.0)\n\n```\n\n## Contributing\n\nPlease run `black` on your code before submitting. There are `git` hooks already configured to run `black` and other checks before every commit, please run `pre-commit install` to enable them.\n\n## Users of ha-mqtt-discoverable\n\nIf you use this module for your own project, please add a link here.\n\n- [ha-mqtt-discoverable-cli](https://github.com/unixorn/ha-mqtt-discoverable-cli) - Command line tools that allow using this module from shell scripts\n\n- [plejd-mqtt-ha](https://github.com/ha-enthus1ast/plejd-mqtt-ha) - A containerized Python application that bridges Plejd devices to Home Assistant\n\n## Contributors\n\n<a href=\"https://github.com/unixorn/ha-mqtt-discoverable/graphs/contributors\">\n  <img src=\"https://contributors-img.web.app/image?repo=unixorn/ha-mqtt-discoverable\" />\n</a>\n\nMade with [contributors-img](https://contributors-img.web.app).\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":null,"license":null,"maintainer":null,"maintainer_email":null,"name":"ha-mqtt-discoverable","package_url":"https://pypi.org/project/ha-mqtt-discoverable/","platform":null,"project_url":"https://pypi.org/project/ha-mqtt-discoverable/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/ha-mqtt-discoverable/0.14.0/","requires_dist":["pyaml<22.0.0,>=21.10.1","paho-mqtt<2.0.0,>=1.6.1","gitlike-commands<0.4.0,>=0.2.1","thelogrus<0.8.0,>=0.7.0","pydantic<3.0.0,>=2.0.0"],"requires_python":"<4.0,>=3.10.0","summary":null,"version":"0.14.0","yanked":false,"yanked_reason":null},"last_serial":23273194,"releases":{"0.10.0":[{"comment_text":"","digests":{"blake2b_256":"fb7d3b5aaf8e3cf49951d4ede06b4494eed37defb8af3df08cec9c71017878e5","md5":"d3adad0d9c3c7162c8a5441fb19d8878","sha256":"dd26c7f9fbb77e5fc5181829142685a7a7cb25e0ec8d96565a9f27ada1622f74"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.10.0-py3-none-any.whl","has_sig":false,"md5_digest":"d3adad0d9c3c7162c8a5441fb19d8878","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10.0,<4.0","size":23326,"upload_time":"2023-09-24T22:13:20","upload_time_iso_8601":"2023-09-24T22:13:20.082726Z","url":"https://files.pythonhosted.org/packages/fb/7d/3b5aaf8e3cf49951d4ede06b4494eed37defb8af3df08cec9c71017878e5/ha_mqtt_discoverable-0.10.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f2b680953ac080df9dcfd9670317fe45967577e05a929858e1f4d9350bd8fc96","md5":"68e10b785e95b9a4d5c177acf949af30","sha256":"ea8c99cc4220e2ef4453e3ff6ce00677ec634ccc4bc738e0b9eb7fc9d18d95ba"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.10.0.tar.gz","has_sig":false,"md5_digest":"68e10b785e95b9a4d5c177acf949af30","packagetype":"sdist","python_version":"source","requires_python":">=3.10.0,<4.0","size":22868,"upload_time":"2023-09-24T22:13:21","upload_time_iso_8601":"2023-09-24T22:13:21.826531Z","url":"https://files.pythonhosted.org/packages/f2/b6/80953ac080df9dcfd9670317fe45967577e05a929858e1f4d9350bd8fc96/ha_mqtt_discoverable-0.10.0.tar.gz","yanked":false,"yanked_reason":null}],"0.11.0":[{"comment_text":"","digests":{"blake2b_256":"fd0c3e252ed5ce2037413f5b7b329382d6147ae17cabc415ec0d07c477aef443","md5":"7f3c90e5a09171e9163e9f0d037c2fae","sha256":"ca1e0ca1390311136f4b786a09148a1f84591abbb422a84155d87afca7b7081e"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.11.0-py3-none-any.whl","has_sig":false,"md5_digest":"7f3c90e5a09171e9163e9f0d037c2fae","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10.0,<4.0","size":23434,"upload_time":"2023-11-22T17:17:01","upload_time_iso_8601":"2023-11-22T17:17:01.139396Z","url":"https://files.pythonhosted.org/packages/fd/0c/3e252ed5ce2037413f5b7b329382d6147ae17cabc415ec0d07c477aef443/ha_mqtt_discoverable-0.11.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a109b59980340630a0f273bc9f39eaaf4a53ba9bd2e066c6d11d9e8a7199059a","md5":"983075392b1adad20ba4d9b8f021a437","sha256":"f181e2efe510c06c0a4d51f737f962eda9af6358dceeffb57389fd50b97a89e0"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.11.0.tar.gz","has_sig":false,"md5_digest":"983075392b1adad20ba4d9b8f021a437","packagetype":"sdist","python_version":"source","requires_python":">=3.10.0,<4.0","size":22953,"upload_time":"2023-11-22T17:17:03","upload_time_iso_8601":"2023-11-22T17:17:03.127974Z","url":"https://files.pythonhosted.org/packages/a1/09/b59980340630a0f273bc9f39eaaf4a53ba9bd2e066c6d11d9e8a7199059a/ha_mqtt_discoverable-0.11.0.tar.gz","yanked":false,"yanked_reason":null}],"0.12.0":[{"comment_text":"","digests":{"blake2b_256":"e1b4a2ed4f121f3a4988591d1eceee3fc0f1d6a6d457f6b8dfc4bc08ce10fb65","md5":"9cf3240ad722272f9150f40b05926aff","sha256":"2b8d322fa5dd2f87d9aec969815b7bf60ef0db6ac12b6ca2aed1cf3f1c5be7f7"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.12.0-py3-none-any.whl","has_sig":false,"md5_digest":"9cf3240ad722272f9150f40b05926aff","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10.0,<4.0","size":24751,"upload_time":"2023-11-22T21:29:47","upload_time_iso_8601":"2023-11-22T21:29:47.962466Z","url":"https://files.pythonhosted.org/packages/e1/b4/a2ed4f121f3a4988591d1eceee3fc0f1d6a6d457f6b8dfc4bc08ce10fb65/ha_mqtt_discoverable-0.12.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9681bec0a49c7c872b14f0b0889b704ea38289dab4222e402608b74a6c393629","md5":"a37e9018436a1b97325427c622cdb550","sha256":"331684180e0d39d87b9b4a52c7aeb594fffff737f5f880fd20a74001eec90856"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.12.0.tar.gz","has_sig":false,"md5_digest":"a37e9018436a1b97325427c622cdb550","packagetype":"sdist","python_version":"source","requires_python":">=3.10.0,<4.0","size":24657,"upload_time":"2023-11-22T21:29:49","upload_time_iso_8601":"2023-11-22T21:29:49.803459Z","url":"https://files.pythonhosted.org/packages/96/81/bec0a49c7c872b14f0b0889b704ea38289dab4222e402608b74a6c393629/ha_mqtt_discoverable-0.12.0.tar.gz","yanked":false,"yanked_reason":null}],"0.13.0":[{"comment_text":"","digests":{"blake2b_256":"ca8c6fa2bb7c5e4c825ac3d115ebfc5e44178e9939a507f17d75706eee905f16","md5":"14a6f84c6e493faabd269c1364f530fa","sha256":"a8beda5995075a449840f24697bbd64e7fe8559b58104c6cceccac5f384630f9"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.13.0-py3-none-any.whl","has_sig":false,"md5_digest":"14a6f84c6e493faabd269c1364f530fa","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10.0,<4.0","size":25286,"upload_time":"2023-11-26T18:12:28","upload_time_iso_8601":"2023-11-26T18:12:28.147485Z","url":"https://files.pythonhosted.org/packages/ca/8c/6fa2bb7c5e4c825ac3d115ebfc5e44178e9939a507f17d75706eee905f16/ha_mqtt_discoverable-0.13.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6a8c1b81e5705413a6e667ba07b66d300cd43b2231882203b1d65992470ba69a","md5":"e94681cab55ca468c558bef553a19cc6","sha256":"501428ed0ba6f0955e6bb3075a55a74e9f08c1cf6dcb62bc47672281d49e280a"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.13.0.tar.gz","has_sig":false,"md5_digest":"e94681cab55ca468c558bef553a19cc6","packagetype":"sdist","python_version":"source","requires_python":">=3.10.0,<4.0","size":25358,"upload_time":"2023-11-26T18:12:29","upload_time_iso_8601":"2023-11-26T18:12:29.921833Z","url":"https://files.pythonhosted.org/packages/6a/8c/1b81e5705413a6e667ba07b66d300cd43b2231882203b1d65992470ba69a/ha_mqtt_discoverable-0.13.0.tar.gz","yanked":false,"yanked_reason":null}],"0.13.1":[{"comment_text":"","digests":{"blake2b_256":"b9668ff3ef4aa4b5d4533dbc28ab353b967fe0f487e1e11f5b050268d51edec9","md5":"aa871b858de8f548fb1126557f079079","sha256":"27f7e7789326a00ab3a1fde0b3a0c0c1403157600c694b0284236681dc3b603f"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.13.1-py3-none-any.whl","has_sig":false,"md5_digest":"aa871b858de8f548fb1126557f079079","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10.0,<4.0","size":25530,"upload_time":"2024-01-01T17:18:03","upload_time_iso_8601":"2024-01-01T17:18:03.022998Z","url":"https://files.pythonhosted.org/packages/b9/66/8ff3ef4aa4b5d4533dbc28ab353b967fe0f487e1e11f5b050268d51edec9/ha_mqtt_discoverable-0.13.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b2ae7b264cdc9f9889a83ca5cd05d4f9604e824afacac0cb57907efb34d166dd","md5":"cc31fc947a3845f37a1f47f1734b63c8","sha256":"734bfb15f99b1098a37f131d4c18b78a790e7d7a6d7477a005b397db37a8b886"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.13.1.tar.gz","has_sig":false,"md5_digest":"cc31fc947a3845f37a1f47f1734b63c8","packagetype":"sdist","python_version":"source","requires_python":">=3.10.0,<4.0","size":25903,"upload_time":"2024-01-01T17:18:04","upload_time_iso_8601":"2024-01-01T17:18:04.736602Z","url":"https://files.pythonhosted.org/packages/b2/ae/7b264cdc9f9889a83ca5cd05d4f9604e824afacac0cb57907efb34d166dd/ha_mqtt_discoverable-0.13.1.tar.gz","yanked":false,"yanked_reason":null}],"0.14.0":[{"comment_text":"","digests":{"blake2b_256":"55a2dadfbaa8824352d4bde69b1c3ee2c355e0f9070f59e2fb321b5121f9a65a","md5":"ca69cea5919957f622af94d1535c5b41","sha256":"dc1761843c31b39a0e646066189efcb3d18118c4382ed7e910c1246dde142077"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.14.0-py3-none-any.whl","has_sig":false,"md5_digest":"ca69cea5919957f622af94d1535c5b41","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<4.0,>=3.10.0","size":25660,"upload_time":"2024-05-19T04:08:03","upload_time_iso_8601":"2024-05-19T04:08:03.234636Z","url":"https://files.pythonhosted.org/packages/55/a2/dadfbaa8824352d4bde69b1c3ee2c355e0f9070f59e2fb321b5121f9a65a/ha_mqtt_discoverable-0.14.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"da316b26ea8dfadd3289a263a237241b739c26e87a798d5c387562cc1737967a","md5":"0348505978106dd437575994fdf198aa","sha256":"04ed23c619edfbeac50b671d109545f5972231e85a7bcfedcb37f7692cf9a4a4"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.14.0.tar.gz","has_sig":false,"md5_digest":"0348505978106dd437575994fdf198aa","packagetype":"sdist","python_version":"source","requires_python":"<4.0,>=3.10.0","size":26069,"upload_time":"2024-05-19T04:08:04","upload_time_iso_8601":"2024-05-19T04:08:04.946999Z","url":"https://files.pythonhosted.org/packages/da/31/6b26ea8dfadd3289a263a237241b739c26e87a798d5c387562cc1737967a/ha_mqtt_discoverable-0.14.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"91b7aa2bc941eac4a67eba56eceb697dce81a6b0e34877534557e6981f19002a","md5":"b5eb2524b29fa5242d0dbe26eb81e2e9","sha256":"7579b5fbd8e8d7d12fea83329c5c7d7aa3fd883a6cb6d441604173c6d359e4be"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"b5eb2524b29fa5242d0dbe26eb81e2e9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9,<4.0","size":20102,"upload_time":"2022-11-06T11:51:01","upload_time_iso_8601":"2022-11-06T11:51:01.681008Z","url":"https://files.pythonhosted.org/packages/91/b7/aa2bc941eac4a67eba56eceb697dce81a6b0e34877534557e6981f19002a/ha_mqtt_discoverable-0.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3053d4122da214361560d638350ee8726b8f70228835123e6ea3cf6e6162c07a","md5":"e730893e62ea10c57a75cadf9f63b4f2","sha256":"6e830bcda536c542a89b85f12e1c892a92322cc59da228a2f85833b927422f34"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.3.0.tar.gz","has_sig":false,"md5_digest":"e730893e62ea10c57a75cadf9f63b4f2","packagetype":"sdist","python_version":"source","requires_python":">=3.9,<4.0","size":17655,"upload_time":"2022-11-06T11:51:03","upload_time_iso_8601":"2022-11-06T11:51:03.635373Z","url":"https://files.pythonhosted.org/packages/30/53/d4122da214361560d638350ee8726b8f70228835123e6ea3cf6e6162c07a/ha_mqtt_discoverable-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.1":[{"comment_text":"","digests":{"blake2b_256":"335f652f530917cd96cac323d8a948a1e7ae164466f1895af0754cecc035950f","md5":"0db25e6c334ce55806b6b5f917ce52bb","sha256":"fa3e8e1dbe60c241fc70abab3c7aaf281d5d36084fa39787cdb1ac4a4e98d590"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"0db25e6c334ce55806b6b5f917ce52bb","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9,<4.0","size":20708,"upload_time":"2022-11-07T00:28:55","upload_time_iso_8601":"2022-11-07T00:28:55.033059Z","url":"https://files.pythonhosted.org/packages/33/5f/652f530917cd96cac323d8a948a1e7ae164466f1895af0754cecc035950f/ha_mqtt_discoverable-0.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"97f3840e26288dfcf4c503958c47d371ecb35fe55554d64a9835e17ee22009d3","md5":"7aa0918393114cfa0b2d901029f91dff","sha256":"edbc7e6001e25645d94c3476d022d8072a4cd57fdb20092ac1f39df6ef77d1dd"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.3.1.tar.gz","has_sig":false,"md5_digest":"7aa0918393114cfa0b2d901029f91dff","packagetype":"sdist","python_version":"source","requires_python":">=3.9,<4.0","size":18576,"upload_time":"2022-11-07T00:28:56","upload_time_iso_8601":"2022-11-07T00:28:56.629789Z","url":"https://files.pythonhosted.org/packages/97/f3/840e26288dfcf4c503958c47d371ecb35fe55554d64a9835e17ee22009d3/ha_mqtt_discoverable-0.3.1.tar.gz","yanked":false,"yanked_reason":null}],"0.4.1":[{"comment_text":"","digests":{"blake2b_256":"e647a0c0a5cf72da2f0af8422dc832018e92fa392bff27672886a47f2f8f52fd","md5":"0fbfff9694e3f9ace48c8d430df07c78","sha256":"98b984d32c1b845ce31020b61aff53f053fd8b6e40d796ad7ca9e25480148574"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.4.1-py3-none-any.whl","has_sig":false,"md5_digest":"0fbfff9694e3f9ace48c8d430df07c78","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9,<4.0","size":21143,"upload_time":"2022-11-14T06:59:30","upload_time_iso_8601":"2022-11-14T06:59:30.438238Z","url":"https://files.pythonhosted.org/packages/e6/47/a0c0a5cf72da2f0af8422dc832018e92fa392bff27672886a47f2f8f52fd/ha_mqtt_discoverable-0.4.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"94cc3c3fd8fc32467a9bf71214c48ab4e11a8d6fdfd3409bdde3d695c79e7505","md5":"766ffc1af3fb6fb75d266550c8d769fe","sha256":"ba4a9b45f469e05483bab6cb2b5ebb430ab100fbdac913b0797de1dfa41e6233"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.4.1.tar.gz","has_sig":false,"md5_digest":"766ffc1af3fb6fb75d266550c8d769fe","packagetype":"sdist","python_version":"source","requires_python":">=3.9,<4.0","size":19078,"upload_time":"2022-11-14T06:59:32","upload_time_iso_8601":"2022-11-14T06:59:32.412800Z","url":"https://files.pythonhosted.org/packages/94/cc/3c3fd8fc32467a9bf71214c48ab4e11a8d6fdfd3409bdde3d695c79e7505/ha_mqtt_discoverable-0.4.1.tar.gz","yanked":false,"yanked_reason":null}],"0.4.2":[{"comment_text":"","digests":{"blake2b_256":"69568c7225a86917e1e8e68e39f64c1a54d79b3a5685081b0a89097a93bfcde5","md5":"97787720afda033ea5808b4069d029bd","sha256":"24dfe90c07894e348c977c472e2d534f0b65784f94838a155b749664db30ea61"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.4.2-py3-none-any.whl","has_sig":false,"md5_digest":"97787720afda033ea5808b4069d029bd","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9,<4.0","size":21147,"upload_time":"2023-02-14T16:15:34","upload_time_iso_8601":"2023-02-14T16:15:34.890708Z","url":"https://files.pythonhosted.org/packages/69/56/8c7225a86917e1e8e68e39f64c1a54d79b3a5685081b0a89097a93bfcde5/ha_mqtt_discoverable-0.4.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6f4c6b1ede415c6896b9c2af08aa2157fdd3bb9e1c21b935172ecc5b0d3c6509","md5":"11d45e347c969389a1f7d7dc97d13bac","sha256":"afd76185c2118225c54528b0b3f6d733f7999d3c4a34d552a165d8c2bceeb3ea"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.4.2.tar.gz","has_sig":false,"md5_digest":"11d45e347c969389a1f7d7dc97d13bac","packagetype":"sdist","python_version":"source","requires_python":">=3.9,<4.0","size":19079,"upload_time":"2023-02-14T16:15:36","upload_time_iso_8601":"2023-02-14T16:15:36.980995Z","url":"https://files.pythonhosted.org/packages/6f/4c/6b1ede415c6896b9c2af08aa2157fdd3bb9e1c21b935172ecc5b0d3c6509/ha_mqtt_discoverable-0.4.2.tar.gz","yanked":false,"yanked_reason":null}],"0.5.1":[{"comment_text":"","digests":{"blake2b_256":"ae493dea1c50c50153725158f907d112ace25b572c222a4efb77dbebe4be96a1","md5":"5548ce8674907543aa2ad811784dbb1c","sha256":"7dfdf6064e1eece06e55fabaf31b891d5675aa5bc9ce2fc3a5f4f739be331cd6"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.5.1-py3-none-any.whl","has_sig":false,"md5_digest":"5548ce8674907543aa2ad811784dbb1c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10.0,<4.0","size":21021,"upload_time":"2023-02-23T15:34:44","upload_time_iso_8601":"2023-02-23T15:34:44.303227Z","url":"https://files.pythonhosted.org/packages/ae/49/3dea1c50c50153725158f907d112ace25b572c222a4efb77dbebe4be96a1/ha_mqtt_discoverable-0.5.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"41a1bf853cffa7f8b06a7ba89e8cb4e405924705903d44c23404501d611a21fb","md5":"3fdc66a03fe1de82ea04e8b186663c89","sha256":"9009666f8e923b070972bf0c70ba700de66bfc61e65acff608909af2c7bede4e"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.5.1.tar.gz","has_sig":false,"md5_digest":"3fdc66a03fe1de82ea04e8b186663c89","packagetype":"sdist","python_version":"source","requires_python":">=3.10.0,<4.0","size":20202,"upload_time":"2023-02-23T15:34:46","upload_time_iso_8601":"2023-02-23T15:34:46.137663Z","url":"https://files.pythonhosted.org/packages/41/a1/bf853cffa7f8b06a7ba89e8cb4e405924705903d44c23404501d611a21fb/ha_mqtt_discoverable-0.5.1.tar.gz","yanked":false,"yanked_reason":null}],"0.6.0":[{"comment_text":"","digests":{"blake2b_256":"b1a52c9832b979cd50bb3e2cb26dc72a98ddda3de51814cfb1e6be944a5daeb7","md5":"af2d2bb44a00d4ff33abe05ef003e83c","sha256":"008ca9a88c5dde63ea2a44edaa60bd64d1dd1578e2d6505d265b3fc4cb24c722"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.6.0-py3-none-any.whl","has_sig":false,"md5_digest":"af2d2bb44a00d4ff33abe05ef003e83c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10.0,<4.0","size":23576,"upload_time":"2023-03-05T17:05:15","upload_time_iso_8601":"2023-03-05T17:05:15.425901Z","url":"https://files.pythonhosted.org/packages/b1/a5/2c9832b979cd50bb3e2cb26dc72a98ddda3de51814cfb1e6be944a5daeb7/ha_mqtt_discoverable-0.6.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"825a0e06672668416c116d33b78bf17bab315fc938a3d18ef7a363ea9bdbd44b","md5":"ade7d43fdb1d48777903d6240584349f","sha256":"6d84d863543d544c6fdf6f08d60f89334d9de3f152a874be99f522e43122db3b"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.6.0.tar.gz","has_sig":false,"md5_digest":"ade7d43fdb1d48777903d6240584349f","packagetype":"sdist","python_version":"source","requires_python":">=3.10.0,<4.0","size":22281,"upload_time":"2023-03-05T17:05:16","upload_time_iso_8601":"2023-03-05T17:05:16.476277Z","url":"https://files.pythonhosted.org/packages/82/5a/0e06672668416c116d33b78bf17bab315fc938a3d18ef7a363ea9bdbd44b/ha_mqtt_discoverable-0.6.0.tar.gz","yanked":false,"yanked_reason":null}],"0.7.0":[{"comment_text":"","digests":{"blake2b_256":"3b3579cdf9b6df4edbff77118e6c394b25003815334579f7f450d2ca8c70cf20","md5":"30ac262ece6209b62ea6677a27726361","sha256":"dfa96f776f2bbd93b8830146b87ca90bc3a4f1a31cd4ca5dcd8858e577583f84"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.7.0-py3-none-any.whl","has_sig":false,"md5_digest":"30ac262ece6209b62ea6677a27726361","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10.0,<4.0","size":24344,"upload_time":"2023-03-08T15:29:11","upload_time_iso_8601":"2023-03-08T15:29:11.941287Z","url":"https://files.pythonhosted.org/packages/3b/35/79cdf9b6df4edbff77118e6c394b25003815334579f7f450d2ca8c70cf20/ha_mqtt_discoverable-0.7.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1af5fbdc7c0483710d743019c21d0a211da1c68d18d1220d6761731fe7bf8ff5","md5":"c54b1d222d1d3827cb3adbe90c4239a3","sha256":"d3a0692ea94d22644b31d200b80ab0f1b50927abbe647f63080bb4f69b3e7658"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.7.0.tar.gz","has_sig":false,"md5_digest":"c54b1d222d1d3827cb3adbe90c4239a3","packagetype":"sdist","python_version":"source","requires_python":">=3.10.0,<4.0","size":23161,"upload_time":"2023-03-08T15:29:13","upload_time_iso_8601":"2023-03-08T15:29:13.684009Z","url":"https://files.pythonhosted.org/packages/1a/f5/fbdc7c0483710d743019c21d0a211da1c68d18d1220d6761731fe7bf8ff5/ha_mqtt_discoverable-0.7.0.tar.gz","yanked":false,"yanked_reason":null}],"0.8.0":[{"comment_text":"","digests":{"blake2b_256":"a2b3b89134b9a810110eb051fc1527235b8cc953a05c8881e913366bf14a8f5b","md5":"166c6dfa9633371bc29c8d6a841c1ae5","sha256":"291bc7c44594ce7e32d7cfee12238d6e6104555a18e71d676b00198471e05674"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.8.0-py3-none-any.whl","has_sig":false,"md5_digest":"166c6dfa9633371bc29c8d6a841c1ae5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10.0,<4.0","size":20132,"upload_time":"2023-03-11T21:39:11","upload_time_iso_8601":"2023-03-11T21:39:11.781218Z","url":"https://files.pythonhosted.org/packages/a2/b3/b89134b9a810110eb051fc1527235b8cc953a05c8881e913366bf14a8f5b/ha_mqtt_discoverable-0.8.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6b439254e357dada556ede98e22c97198e3edd5fae9f12b10a15f52619c7d9e2","md5":"7d707cb90fc9a3f3ec91157fd3e3c71f","sha256":"e3c5ad40132dc278172d1dfaf1f7dc50235d53547b21d50d23086682a719bf81"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.8.0.tar.gz","has_sig":false,"md5_digest":"7d707cb90fc9a3f3ec91157fd3e3c71f","packagetype":"sdist","python_version":"source","requires_python":">=3.10.0,<4.0","size":20080,"upload_time":"2023-03-11T21:39:13","upload_time_iso_8601":"2023-03-11T21:39:13.367854Z","url":"https://files.pythonhosted.org/packages/6b/43/9254e357dada556ede98e22c97198e3edd5fae9f12b10a15f52619c7d9e2/ha_mqtt_discoverable-0.8.0.tar.gz","yanked":false,"yanked_reason":null}],"0.8.1":[{"comment_text":"","digests":{"blake2b_256":"ebf5d61233db1d6ad9e5bf84d00159837344e21d9f7e93409c146b8d064a6e6b","md5":"91cc9ac4f71601d5e4f57031e2493466","sha256":"a346034cca62c58ac27a0f144081e62d5245ebd97510ab837aa698b577092b5f"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.8.1-py3-none-any.whl","has_sig":false,"md5_digest":"91cc9ac4f71601d5e4f57031e2493466","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10.0,<4.0","size":21736,"upload_time":"2023-03-26T22:44:29","upload_time_iso_8601":"2023-03-26T22:44:29.460931Z","url":"https://files.pythonhosted.org/packages/eb/f5/d61233db1d6ad9e5bf84d00159837344e21d9f7e93409c146b8d064a6e6b/ha_mqtt_discoverable-0.8.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3044c10c0c905860064039c0acda0821cc0bb56f0bd4a3c530d2587d5159eacf","md5":"e7656f657b377c0b86bab20f2d50147e","sha256":"1d8c67a51fee0d2561bf89a713a6f4f35ba33fcde3ee75cd7e16cc4e90b4e95f"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.8.1.tar.gz","has_sig":false,"md5_digest":"e7656f657b377c0b86bab20f2d50147e","packagetype":"sdist","python_version":"source","requires_python":">=3.10.0,<4.0","size":20613,"upload_time":"2023-03-26T22:44:30","upload_time_iso_8601":"2023-03-26T22:44:30.724632Z","url":"https://files.pythonhosted.org/packages/30/44/c10c0c905860064039c0acda0821cc0bb56f0bd4a3c530d2587d5159eacf/ha_mqtt_discoverable-0.8.1.tar.gz","yanked":false,"yanked_reason":null}],"0.9.0":[{"comment_text":"","digests":{"blake2b_256":"e3ad2422e80aac9a6c91762f102c64df11dd831b9802a42e85c3c922629ba653","md5":"6460fc7b3b4416db05b5083b96f6b089","sha256":"c4763548554b8d9b3988eefc9941fb7921bd128c8445bab70df1bd69c8307a8b"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.9.0-py3-none-any.whl","has_sig":false,"md5_digest":"6460fc7b3b4416db05b5083b96f6b089","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10.0,<4.0","size":22265,"upload_time":"2023-05-30T02:45:16","upload_time_iso_8601":"2023-05-30T02:45:16.058536Z","url":"https://files.pythonhosted.org/packages/e3/ad/2422e80aac9a6c91762f102c64df11dd831b9802a42e85c3c922629ba653/ha_mqtt_discoverable-0.9.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d0ebfa9c6ea2cb9071c6d0bf59423fc06ea36ffc54cfd3a2830f42f6e1ccc4ab","md5":"3a368bd7ff2a81ff05eb9276580c9d3c","sha256":"a001ede867ca980ae17fdf25715c5f2c683a89f465ecb00dbfbc4128774073b0"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.9.0.tar.gz","has_sig":false,"md5_digest":"3a368bd7ff2a81ff05eb9276580c9d3c","packagetype":"sdist","python_version":"source","requires_python":">=3.10.0,<4.0","size":21268,"upload_time":"2023-05-30T02:45:17","upload_time_iso_8601":"2023-05-30T02:45:17.777115Z","url":"https://files.pythonhosted.org/packages/d0/eb/fa9c6ea2cb9071c6d0bf59423fc06ea36ffc54cfd3a2830f42f6e1ccc4ab/ha_mqtt_discoverable-0.9.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"55a2dadfbaa8824352d4bde69b1c3ee2c355e0f9070f59e2fb321b5121f9a65a","md5":"ca69cea5919957f622af94d1535c5b41","sha256":"dc1761843c31b39a0e646066189efcb3d18118c4382ed7e910c1246dde142077"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.14.0-py3-none-any.whl","has_sig":false,"md5_digest":"ca69cea5919957f622af94d1535c5b41","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<4.0,>=3.10.0","size":25660,"upload_time":"2024-05-19T04:08:03","upload_time_iso_8601":"2024-05-19T04:08:03.234636Z","url":"https://files.pythonhosted.org/packages/55/a2/dadfbaa8824352d4bde69b1c3ee2c355e0f9070f59e2fb321b5121f9a65a/ha_mqtt_discoverable-0.14.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"da316b26ea8dfadd3289a263a237241b739c26e87a798d5c387562cc1737967a","md5":"0348505978106dd437575994fdf198aa","sha256":"04ed23c619edfbeac50b671d109545f5972231e85a7bcfedcb37f7692cf9a4a4"},"downloads":-1,"filename":"ha_mqtt_discoverable-0.14.0.tar.gz","has_sig":false,"md5_digest":"0348505978106dd437575994fdf198aa","packagetype":"sdist","python_version":"source","requires_python":"<4.0,>=3.10.0","size":26069,"upload_time":"2024-05-19T04:08:04","upload_time_iso_8601":"2024-05-19T04:08:04.946999Z","url":"https://files.pythonhosted.org/packages/da/31/6b26ea8dfadd3289a263a237241b739c26e87a798d5c387562cc1737967a/ha_mqtt_discoverable-0.14.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
