{"info":{"author":"torcheval team","author_email":"yicongd@fb.com","bugtrack_url":null,"classifiers":["Development Status :: 2 - Pre-Alpha","Intended Audience :: Developers","Intended Audience :: Science/Research","License :: OSI Approved :: BSD License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.7","Topic :: Scientific/Engineering :: Artificial Intelligence"],"description":"# TorchEval\n\n<p align=\"center\">\n<a href=\"https://github.com/pytorch/torcheval/actions?query=branch%3Amain\"><img src=\"https://img.shields.io/github/actions/workflow/status/pytorch/torcheval/.github/workflows/unit_test.yaml?branch=main\" alt=\"build status\"></a>\n<a href=\"https://pypi.org/project/torcheval\"><img src=\"https://img.shields.io/pypi/v/torcheval\" alt=\"pypi version\"></a>\n<a href=\"https://pypi.org/project/torcheval-nightly\"><img src=\"https://img.shields.io/pypi/v/torcheval-nightly?label=nightly\" alt=\"pypi nightly version\"></a>\n<a href=\"https://github.com/pytorch/torcheval/blob/main/LICENSE\"><img src=\"https://img.shields.io/pypi/l/torcheval\" alt=\"bsd license\"></a>\n</div>\n<a href=\"https://pytorch.github.io/torcheval\"><img src=\"https://img.shields.io/badge/docs-main-brightgreen\" alt=\"docs\"></a>\n<p>\n\n**This library is currently in Alpha and currently does not have a stable release. The API may change and may not be backward compatible. If you have suggestions for improvements, please open a GitHub issue. We'd love to hear your feedback.**\n\nA library that contains a rich collection of performant PyTorch model metrics, a simple interface to create new metrics, a toolkit to facilitate metric computation in distributed training and tools for PyTorch model evaluations.\n\n## Installing TorchEval\nRequires Python >= 3.8 and PyTorch >= 1.11\n\nFrom pip:\n\n```bash\npip install torcheval\n```\n\nFor nighly build version\n```bash\npip install --pre torcheval-nightly\n```\n\nFrom source:\n\n```bash\ngit clone https://github.com/pytorch/torcheval\ncd torcheval\npip install -r requirements.txt\npython setup.py install\n```\n\n## Quick Start\n\nTake a look at the [quickstart notebook](https://github.com/pytorch/torcheval/blob/main/examples/Introducing_TorchEval.ipynb), or fork it on [Colab](https://colab.research.google.com/github/pytorch/torcheval/blob/main/examples/Introducing_TorchEval.ipynb).\n\nThere are more examples in the [examples](https://github.com/pytorch/torcheval/blob/main/examples) directory:\n\n```bash\ncd torcheval\npython examples/simple_example.py\n```\n\n## Documentation\n\nDocumentation can be found at at [pytorch.org/torcheval](https://pytorch.org/torcheval)\n\n## Using TorchEval\n\nTorchEval can be run on CPU, GPU, and in a multi-process or multi-GPU setting. Metrics are provided in two interfaces, functional and class based. The functional interfaces can be found in `torcheval.metrics.functional` and are useful when your program runs in a single process setting. To use multi-process or multi-gpu configurations, the class-based interfaces, found in `torcheval.metrics` provide a much simpler experience. The class based interfaces also allow you to defer some of the computation of the metric by calling `update()` multiple times before `compute()`. This can be advantageous even in a single process setting due to saved computation overhead.\n\n### Single Process\nFor use in a single process program, the simplest use case utilizes a functional metric. We simply import the metric function and feed in our outputs and targets. The example below shows a minimal PyTorch training loop that evaluates the multiclass accuracy of every fourth batch of data.\n\n#### Functional Version (immediate computation of metric)\n```python\nimport torch\nfrom torcheval.metrics.functional import multiclass_accuracy\n\nNUM_BATCHES = 16\nBATCH_SIZE = 8\nINPUT_SIZE = 10\nNUM_CLASSES = 6\neval_frequency = 4\n\nmodel = torch.nn.Sequential(torch.nn.Linear(INPUT_SIZE, NUM_CLASSES), torch.nn.ReLU())\noptim = torch.optim.Adagrad(model.parameters(), lr=0.001)\nloss_fn = torch.nn.CrossEntropyLoss()\n\nmetric_history = []\nfor batch in range(NUM_BATCHES):\n    input = torch.rand(size=(BATCH_SIZE, INPUT_SIZE))\n    target = torch.randint(size=(BATCH_SIZE,), high=NUM_CLASSES)\n    outputs = model(input)\n\n    loss = loss_fn(outputs, target)\n    optim.zero_grad()\n    loss.backward()\n    optim.step()\n\n    # metric only computed every 4 batches,\n    # data from previous three batches is lost\n    if (batch + 1) % eval_frequency == 0:\n        metric_history.append(multiclass_accuracy(outputs, target))\n```\n### Single Process with Deferred Computation\n\n#### Class Version (enables deferred computation of metric)\n```python\nimport torch\nfrom torcheval.metrics import MulticlassAccuracy\n\nNUM_BATCHES = 16\nBATCH_SIZE = 8\nINPUT_SIZE = 10\nNUM_CLASSES = 6\neval_frequency = 4\n\nmodel = torch.nn.Sequential(torch.nn.Linear(INPUT_SIZE, NUM_CLASSES), torch.nn.ReLU())\noptim = torch.optim.Adagrad(model.parameters(), lr=0.001)\nloss_fn = torch.nn.CrossEntropyLoss()\nmetric = MulticlassAccuracy()\n\nmetric_history = []\nfor batch in range(NUM_BATCHES):\n    input = torch.rand(size=(BATCH_SIZE, INPUT_SIZE))\n    target = torch.randint(size=(BATCH_SIZE,), high=NUM_CLASSES)\n    outputs = model(input)\n\n    loss = loss_fn(outputs, target)\n    optim.zero_grad()\n    loss.backward()\n    optim.step()\n\n    # metric only computed every 4 batches,\n    # data from previous three batches is included\n    metric.update(input, target)\n    if (batch + 1) % eval_frequency == 0:\n        metric_history.append(metric.compute())\n        # remove old data so that the next call\n        # to compute is only based off next 4 batches\n        metric.reset()\n```\n\n### Multi-Process or Multi-GPU\nFor usage on multiple devices a minimal example is given below. In the normal `torch.distributed` paradigm, each device is allocated its own process gets a unique numerical ID called a \"global rank\", counting up from 0.\n\n#### Class Version (enables deferred computation and multi-processing)\n```python\nimport torch\nfrom torcheval.metrics.toolkit import sync_and_compute\nfrom torcheval.metrics import MulticlassAccuracy\n\n# Using torch.distributed\nlocal_rank = int(os.environ[\"LOCAL_RANK\"]) #rank on local machine, i.e. unique ID within a machine\nglobal_rank = int(os.environ[\"RANK\"]) #rank in global pool, i.e. unique ID within the entire process group\nworld_size  = int(os.environ[\"WORLD_SIZE\"]) #total number of processes or \"ranks\" in the entire process group\n\ndevice = torch.device(\n    f\"cuda:{local_rank}\"\n    if torch.cuda.is_available() and torch.cuda.device_count() >= world_size\n    else \"cpu\"\n)\n\nmetric = MulticlassAccuracy(device=device)\nnum_epochs, num_batches = 4, 8\n\nfor epoch in range(num_epochs):\n    for i in range(num_batches):\n        input = torch.randint(high=5, size=(10,), device=device)\n        target = torch.randint(high=5, size=(10,), device=device)\n\n        # Add data to metric locally\n        metric.update(input, target)\n\n        # metric.compute() will returns metric value from\n        # all seen data on the local process since last reset()\n        local_compute_result = metric.compute()\n\n        # sync_and_compute(metric) syncs metric data across all ranks and computes the metric value\n        global_compute_result = sync_and_compute(metric)\n        if global_rank == 0:\n            print(global_compute_result)\n\n    # metric.reset() clears the data on each process so that subsequent\n    # calls to compute() only act on new data\n    metric.reset()\n```\nSee the [example directory](https://github.com/pytorch/torcheval/tree/main/examples) for more examples.\n\n## Contributing\nWe welcome PRs! See the [CONTRIBUTING](CONTRIBUTING.md) file.\n\n## License\nTorchEval is BSD licensed, as found in the [LICENSE](LICENSE) file.\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pytorch/torcheval","keywords":"pytorch,evaluation,metrics","license":"BSD-3","maintainer":"","maintainer_email":"","name":"torcheval","package_url":"https://pypi.org/project/torcheval/","platform":null,"project_url":"https://pypi.org/project/torcheval/","project_urls":{"Homepage":"https://github.com/pytorch/torcheval"},"provides_extra":null,"release_url":"https://pypi.org/project/torcheval/0.0.7/","requires_dist":["typing-extensions","numpy ; extra == 'dev'","pre-commit ; extra == 'dev'","pytest ; extra == 'dev'","pytest-timeout ; extra == 'dev'","pytest-cov ; extra == 'dev'","Cython (>=0.28.5) ; extra == 'dev'","scikit-learn (>=0.22) ; extra == 'dev'","scikit-image (>=0.18.3) ; extra == 'dev'","torchtnt-nightly ; extra == 'dev'","torchvision ; extra == 'image'"],"requires_python":">=3.7","summary":"A library for providing a simple interface to create new metrics and an easy-to-use toolkit for metric computations and checkpointing.","version":"0.0.7","yanked":false,"yanked_reason":null},"last_serial":19443273,"releases":{"0.0.2":[{"comment_text":"","digests":{"blake2b_256":"51948f24f064a68afcd8c769ae0b916281bf6f55f63946e2d60496823a48be20","md5":"7bcb01f5ba280e8e3c84583681afeb9b","sha256":"f241410c06f3a28d33b0929fdb7d8d76312cb7580eaf8f1e0ba2af91b3c3d9d7"},"downloads":-1,"filename":"torcheval-0.0.2-py3.9.egg","has_sig":false,"md5_digest":"7bcb01f5ba280e8e3c84583681afeb9b","packagetype":"bdist_egg","python_version":"0.0.2","requires_python":">=3.7","size":167773,"upload_time":"2022-08-10T00:10:24","upload_time_iso_8601":"2022-08-10T00:10:24.170146Z","url":"https://files.pythonhosted.org/packages/51/94/8f24f064a68afcd8c769ae0b916281bf6f55f63946e2d60496823a48be20/torcheval-0.0.2-py3.9.egg","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0bd3a273090ae69d28f0912d109ec50a17837a898e39e98053c6c3002feeca96","md5":"529639e16f995e48a05e16eb6545c390","sha256":"ee7f1719055d857b5b90e02a599059e5bcdbfb42fb7ea2b67ea9c5a5174c9e84"},"downloads":-1,"filename":"torcheval-0.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"529639e16f995e48a05e16eb6545c390","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":85280,"upload_time":"2022-08-04T22:14:20","upload_time_iso_8601":"2022-08-04T22:14:20.085210Z","url":"https://files.pythonhosted.org/packages/0b/d3/a273090ae69d28f0912d109ec50a17837a898e39e98053c6c3002feeca96/torcheval-0.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f0af4cad5e2b5441b48a7b966b74ece824c80c9d2a19ebd89ebd2c0f0b0d8abb","md5":"5454b0234671f1350dcfcb53d8cea22b","sha256":"ccd2be94ffdcd554fdb780dd9193bb9e178f24b7de1ac6adb12f3f8c254fc406"},"downloads":-1,"filename":"torcheval-0.0.2.tar.gz","has_sig":false,"md5_digest":"5454b0234671f1350dcfcb53d8cea22b","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":46243,"upload_time":"2022-08-04T22:14:21","upload_time_iso_8601":"2022-08-04T22:14:21.991704Z","url":"https://files.pythonhosted.org/packages/f0/af/4cad5e2b5441b48a7b966b74ece824c80c9d2a19ebd89ebd2c0f0b0d8abb/torcheval-0.0.2.tar.gz","yanked":false,"yanked_reason":null}],"0.0.3":[{"comment_text":"","digests":{"blake2b_256":"30e94bff4d86d9328183ca3a235ba7402cdb810669b3e346b62a5dd7a47fa02a","md5":"5d76645cc886bd6e2eb03600b822adff","sha256":"b51a4c407a62fb3f83716c92c43613c0a7863b7cbaa04ce13abb2ad2944c3684"},"downloads":-1,"filename":"torcheval-0.0.3-py3-none-any.whl","has_sig":false,"md5_digest":"5d76645cc886bd6e2eb03600b822adff","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":77214,"upload_time":"2022-08-10T00:10:22","upload_time_iso_8601":"2022-08-10T00:10:22.056087Z","url":"https://files.pythonhosted.org/packages/30/e9/4bff4d86d9328183ca3a235ba7402cdb810669b3e346b62a5dd7a47fa02a/torcheval-0.0.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"93532325e9d4919f0621489276735e5e2984280d000673d6b885a7de60e2167d","md5":"610fb576645f2b9e18110809cabe1f70","sha256":"b3a4773cf148f4afd95720581a05c215c8e70b8d59bb7a65a9da2833485beb56"},"downloads":-1,"filename":"torcheval-0.0.3.tar.gz","has_sig":false,"md5_digest":"610fb576645f2b9e18110809cabe1f70","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":42877,"upload_time":"2022-08-10T00:10:25","upload_time_iso_8601":"2022-08-10T00:10:25.972489Z","url":"https://files.pythonhosted.org/packages/93/53/2325e9d4919f0621489276735e5e2984280d000673d6b885a7de60e2167d/torcheval-0.0.3.tar.gz","yanked":false,"yanked_reason":null}],"0.0.4":[{"comment_text":"","digests":{"blake2b_256":"50b3d34f0448e0b1a9623f4df8da9d023b294efa3acd61758a52c98c797e015a","md5":"2fc3d1c4508b0dd2f641dd3941e3c152","sha256":"0f677c8896f31313ff3ae177f55cfc30bb5011e40e9076d3f399e7ce2471f9de"},"downloads":-1,"filename":"torcheval-0.0.4-py3-none-any.whl","has_sig":false,"md5_digest":"2fc3d1c4508b0dd2f641dd3941e3c152","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":94953,"upload_time":"2022-08-31T22:32:46","upload_time_iso_8601":"2022-08-31T22:32:46.419531Z","url":"https://files.pythonhosted.org/packages/50/b3/d34f0448e0b1a9623f4df8da9d023b294efa3acd61758a52c98c797e015a/torcheval-0.0.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cebb2c033162ec4c7deab1bf731e0ac36e8ebb35f0bd2c2e702d609f86c9bd88","md5":"b0108a7bd37daf2e3c316ed88b06d9dc","sha256":"ffc9e9ea94187a2bcd5e6a4a7efb0ec1c2461c78f8430d59758c26c5b27afc12"},"downloads":-1,"filename":"torcheval-0.0.4.tar.gz","has_sig":false,"md5_digest":"b0108a7bd37daf2e3c316ed88b06d9dc","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":52240,"upload_time":"2022-08-31T22:32:48","upload_time_iso_8601":"2022-08-31T22:32:48.044887Z","url":"https://files.pythonhosted.org/packages/ce/bb/2c033162ec4c7deab1bf731e0ac36e8ebb35f0bd2c2e702d609f86c9bd88/torcheval-0.0.4.tar.gz","yanked":false,"yanked_reason":null}],"0.0.5":[{"comment_text":"","digests":{"blake2b_256":"6df627e97dc8592ef15476f67c79aee4f20a8718a04ecd0af62997ad9c396c4e","md5":"7b259827f169d3d7670c321a215c1cd8","sha256":"c6d4ff659ca00b96febb82ac9aa371f80ac5332f3848147042a75d7517ebfe22"},"downloads":-1,"filename":"torcheval-0.0.5-py3-none-any.whl","has_sig":false,"md5_digest":"7b259827f169d3d7670c321a215c1cd8","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":121133,"upload_time":"2022-10-29T00:29:52","upload_time_iso_8601":"2022-10-29T00:29:52.566641Z","url":"https://files.pythonhosted.org/packages/6d/f6/27e97dc8592ef15476f67c79aee4f20a8718a04ecd0af62997ad9c396c4e/torcheval-0.0.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5d61b85a1520c3c559dfb8e52f4ec61782ceb198a6f696ede6f2b37166a25006","md5":"d121b3fb8f0f33273234c97492e59d27","sha256":"f5bbb7bb60f9ce6ad21de917b35d5bc13d3030a3566d83e8cf43055eec290ce2"},"downloads":-1,"filename":"torcheval-0.0.5.tar.gz","has_sig":false,"md5_digest":"d121b3fb8f0f33273234c97492e59d27","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":66457,"upload_time":"2022-10-29T00:29:54","upload_time_iso_8601":"2022-10-29T00:29:54.456665Z","url":"https://files.pythonhosted.org/packages/5d/61/b85a1520c3c559dfb8e52f4ec61782ceb198a6f696ede6f2b37166a25006/torcheval-0.0.5.tar.gz","yanked":false,"yanked_reason":null}],"0.0.6":[{"comment_text":"","digests":{"blake2b_256":"342c8c4e65ec7a4f4f1a09479475d7e7883e8b952cd6007be56ec77657b30e54","md5":"c783198ee28c819e963027113ea260c5","sha256":"46cd8d6a4985c912ebf44c4fdf1ca04a030db7170a87992f2b4558ef02692412"},"downloads":-1,"filename":"torcheval-0.0.6-py3-none-any.whl","has_sig":false,"md5_digest":"c783198ee28c819e963027113ea260c5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":158377,"upload_time":"2023-01-30T05:10:25","upload_time_iso_8601":"2023-01-30T05:10:25.753610Z","url":"https://files.pythonhosted.org/packages/34/2c/8c4e65ec7a4f4f1a09479475d7e7883e8b952cd6007be56ec77657b30e54/torcheval-0.0.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a52c9d42965ce142523a90b4e67d30c0ac5ab10f0dc6ad654c2f3a99c84ccb91","md5":"effa49e4d043c6909352f4ecf6f4ffa0","sha256":"8d29463de4fbc681df28505b47d8c5d3f6ce8def8930cec477859dd6c7d1e58e"},"downloads":-1,"filename":"torcheval-0.0.6.tar.gz","has_sig":false,"md5_digest":"effa49e4d043c6909352f4ecf6f4ffa0","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":86335,"upload_time":"2023-01-30T05:10:27","upload_time_iso_8601":"2023-01-30T05:10:27.723131Z","url":"https://files.pythonhosted.org/packages/a5/2c/9d42965ce142523a90b4e67d30c0ac5ab10f0dc6ad654c2f3a99c84ccb91/torcheval-0.0.6.tar.gz","yanked":false,"yanked_reason":null}],"0.0.7":[{"comment_text":"","digests":{"blake2b_256":"e4dee7abc784b00de9d05999657d29187f1f7a3406ed10ecaf164de06482608f","md5":"194dc361d5c46e07fc52a27354a5565d","sha256":"20cc34dac7aa9b32f942c8a9f014d1d02098631b6cd0b102c078600577017956"},"downloads":-1,"filename":"torcheval-0.0.7-py3-none-any.whl","has_sig":false,"md5_digest":"194dc361d5c46e07fc52a27354a5565d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":179200,"upload_time":"2023-08-24T22:12:42","upload_time_iso_8601":"2023-08-24T22:12:42.874294Z","url":"https://files.pythonhosted.org/packages/e4/de/e7abc784b00de9d05999657d29187f1f7a3406ed10ecaf164de06482608f/torcheval-0.0.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f2658f895a132d385c3bc60023a45501637aff63b98629cf45ce47a2035c0cc3","md5":"33e31763b62d5a60f6e5ac909e1fa6cb","sha256":"a498dec34137bc66c9cf1adc7353a46c604dd62255884c72dcb4e2e4fc2cd7e9"},"downloads":-1,"filename":"torcheval-0.0.7.tar.gz","has_sig":false,"md5_digest":"33e31763b62d5a60f6e5ac909e1fa6cb","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":100912,"upload_time":"2023-08-24T22:12:44","upload_time_iso_8601":"2023-08-24T22:12:44.683751Z","url":"https://files.pythonhosted.org/packages/f2/65/8f895a132d385c3bc60023a45501637aff63b98629cf45ce47a2035c0cc3/torcheval-0.0.7.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"e4dee7abc784b00de9d05999657d29187f1f7a3406ed10ecaf164de06482608f","md5":"194dc361d5c46e07fc52a27354a5565d","sha256":"20cc34dac7aa9b32f942c8a9f014d1d02098631b6cd0b102c078600577017956"},"downloads":-1,"filename":"torcheval-0.0.7-py3-none-any.whl","has_sig":false,"md5_digest":"194dc361d5c46e07fc52a27354a5565d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":179200,"upload_time":"2023-08-24T22:12:42","upload_time_iso_8601":"2023-08-24T22:12:42.874294Z","url":"https://files.pythonhosted.org/packages/e4/de/e7abc784b00de9d05999657d29187f1f7a3406ed10ecaf164de06482608f/torcheval-0.0.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f2658f895a132d385c3bc60023a45501637aff63b98629cf45ce47a2035c0cc3","md5":"33e31763b62d5a60f6e5ac909e1fa6cb","sha256":"a498dec34137bc66c9cf1adc7353a46c604dd62255884c72dcb4e2e4fc2cd7e9"},"downloads":-1,"filename":"torcheval-0.0.7.tar.gz","has_sig":false,"md5_digest":"33e31763b62d5a60f6e5ac909e1fa6cb","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":100912,"upload_time":"2023-08-24T22:12:44","upload_time_iso_8601":"2023-08-24T22:12:44.683751Z","url":"https://files.pythonhosted.org/packages/f2/65/8f895a132d385c3bc60023a45501637aff63b98629cf45ce47a2035c0cc3/torcheval-0.0.7.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
