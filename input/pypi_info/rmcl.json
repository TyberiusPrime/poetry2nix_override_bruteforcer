{"info":{"author":"Robert Schroll","author_email":"rschroll@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description":"# rmcl: reMarkable Cloud Library\n\nrmcl is a Python library for interacting with the reMarkable cloud.  It\nsupports a file-tree view onto your files, exposes metadata, and gives\naccess to the original PDF or EPUB documents.  If\n[rmrl](https://github.com/rschroll/rmrl) is installed, it can also\nproduce PDF versions of any type of document with your annotations\nincluded.  rmcl can create, update, and delete items from the\nreMarkable cloud.\n\n## Quick Demo\n\nAs a taste, this code will list all of the files and their types in the\nroot directory of your reMarkable cloud.\n```python\nfrom rmcl import Item, Document, Folder\nimport trio\n\nasync def list_files():\n    root = await Item.get_by_id('')  # The root folder has ID of empty string\n    for child in root.children:\n        if isinstance(child, Folder):\n            print(f\"{child.name}: folder\")\n        elif isinstance(child, Document):  # The only other possibility\n            print(f\"{child.name}: {await child.type()}\")\n\ntrio.run(list_files)\n```\n\n## Installation\n\nrmcl requires Python 3.7 or later.  If that's installed, the easiest\ninstallation is to do a\n```bash\npip install rmcl\n```\nAlternatively, you may clone this repository.\n[Poetry](https://python-poetry.org/) is used for development, so once\nthat is installed you can run\n```bash\npoetry install\n```\nto get a virtual environment all set up.\n\nrmcl is asynchronous, and must be used with the\n[trio](https://trio.readthedocs.io/en/stable/) async library.\n\n## Features\n\n### Asynchronous\n\nrmcl is asynchronous at its core.  This keeps it from blocking during the\nmany HTTP transactions it uses.  Most methods are `async`, and therefore\nmust be called with the `await` keyword.  rmcl is designed to work with\nthe [trio](https://trio.readthedocs.io/en/stable/) async library.\n\n### Synchronous Option\n\nAsynchronous code can be overkill for simple scripts, so rmcl offers\nsynchronous versions of all of its async functions.  These functions\nhave a suffix of `'_s'` in their names.  This means that the above\nexample could be written\n```python\ndef list_files_sync():\n    root = Item.get_by_id_s('')\n    for child in root.children:\n        if isinstance(child, Folder):\n            print(f\"{child.name}: folder\")\n        elif isinstance(child, Document):\n            print(f\"{child.name}: {child.type_s()}\")\n```\nNote that these synchronous functions are still calling the asynchronous\nlow-level code.  They may fail if called within another asynchronous\nframework.\n\n### Object Oriented\n\nThe main interface to rmcl is the `Item` class and its two subclasses,\n`Folder` and `Document`.  The reMarkable cloud gives each item an ID.\nIf the ID of an Item is known, it can be retrieved with the\n`Item.get_by_id()` static method.  New `Folder`s and `Document`s can be\nmade with the `.new()` class method, which expects as arguments the item's\nname and parent ID.\n\nWhile the cloud API presents a flat directory structure, rmcl assembles\nthese objects into a file tree.  Every `Folder` has a `.children` attribute,\na list of the `Item`s within it.  Each `Item` has a `.parent` property,\nwhich gives the ID of its parent.  (The ID is given instead of the parent to avoid circular references.)  The parent object of `item` may be looked up\nwith `await Item.get_by_id(item.parent)`.\n\nTwo \"virtual\" folders are provided.  The root folder (ID = `''`) contains\nall `Item`s with no explicit parent.  The trash folder (ID = `'trash'`)\ncontains all `Item`s marked as trashed.\n\nVarious metadata are exposed as properties: `.name`, `.id`, `.version`,\n`.parent`, and `.mtime`, for modification time.  The `.name` and `.parent`\nproperties can be modified, which updates the underlying metadata.  Such\nchanges can be sent to the cloud with the `.update_metadata()` method.\n\nThe contents of `Document`s can be retrieved in several ways.  The\n`.raw()` method gets the zip file that the reMarkable cloud API uses\nto transfer documents.  The `.contents()` method gets the original PDF\nor EPUB file associated with a `Document`.  If\n[rmrl](https://github.com/rschroll/rmrl) is installed, the `.annotated()`\nmethod yields a PDF file with the user's annotations.  All three methods\nreturn a file-like object, but the exact type is not guaranteed and may\nvary in the future.  The same object may be returned from multiple calls\nto a given method; the user is responsible for coordinating `read`s and\n`seek`s to avoid contention.\n\nNew `Item`s or existing `Document`s with new contents may be uploaded to\nthe cloud with `.upload()` method.\n\n### Smart Updates\n\nrmcl keeps a list of all documents in the reMarkable cloud, so that it\ndoesn't need to query the API for each bit of information.  To ensure\nthis list is up to date, it automatically refreshes itself when you use\n`Item.get_by_id()` more than five minutes after the last refresh.  You\ncan also trigger this behavior by calling `rmcl.invalidate_cache()`\nbefore `Item.get_by_id()`.\n\nrmcl only updates objects that have a new version, so existing objects\nremain valid.  Nonetheless, it is better to call `Item.get_by_id()`\noften, instead of keeping your own list of `Item`s.\n\n### Caching Expensive Operations\n\nSome of this information, like document type and size, require several\nround trips to calculate.  rmcl stores these values locally, so they do\nnot need to be recalculated every time.  They are stored in a persistent\ndatabase, so this information is not lost when the process stops.  The\ndatabase stores this information by version, so it knows when it must be\nrecalculated.\n\n### Handles Authentication\n\nThe reMarkable cloud requires two tokens: The *device token* identifies\nyour device and needs only to be set once.  The *user token* is used on\nmost requests, and should be updated occasionally.  rmcl automatically\nrenews the user token once a day, or when it receives an authentication\nerror from the API.\n\nGetting the device token requires user interaction the first time a\nprogram is run.  If rmcl detects that it is being run interactively, it\nwill print instructions and prompt to user to input a new device token.\nOtherwise, it will throw a `rmcl.exceptions.AuthError`.  You must call\n`register_device(code)` with the code provided obtained from\nhttps://my.remarkable.com/connect/desktop.  Once obtained, the device\ntoken is stored for future use.\n\n## Comparison with rMapy\n\nrmcl started as a fork of [rMapy](https://github.com/subutux/rmapy).\nAs we started moving in a rather different direction, we decided it\nwould be better to make it into its own project.  At this point, only\nsome of the low-level API code from rMapy remains.\n\nTo help users decide which library best fits their needs, here are the\nmajor differences:\n- rmcl is asynchronous, while rMapy is synchonous.  This means that\n  rmcl will not block while making HTTP requests to the reMarkable API.\n  rmcl's synchronous functions will block, much like rMapy.\n- rmcl has a simpler object structure, mostly focused around `Item` and\n  its subclasses `Document` and `Folder`.  rMapy has similar objects\n  (`Meta`, `Document`, and `Folder`), but it also has a `Client` and\n  `Collection` singleton objects, and operations like getting documents\n  or listing directories are provided by these singletons.\n- rmcl abstracts away some details of the reMarkable cloud API, while\n  rMapy provides a more direct mapping of the API into Python.  For\n  instance, rMapy items have a `.VissibleName` _[sic]_ property, because\n  that's what the API provides.  rmcl turns this into a `.name` property.\n  In rmcl, `Folder`s have a list of children, but in rMapy, the children\n  must be looked up via the `Collection` singleton.  (The API provides\n  a flat file list.)\n- rMapy is more complete than rmcl.  rMapy exposes all metadata as\n  properties, while rmcl only exposes some metadata items.  rMapy provides\n  an object model for the zip files provided by the API, while rmcl just\n  exposes the zip files themselves.\n- rMapy has [better documentation](https://rmapy.readthedocs.io/en/latest/)\n  than rmcl.  (But we're working on it!)\n\n## Trademarks\n\nreMarkable(R) is a registered trademark of reMarkable AS. rmrl is not\naffiliated with, or endorsed by, reMarkable AS. The use of \"reMarkable\" in\nthis work refers to the companyâ€™s e-paper tablet product(s).\n\n## Copyright\n\nCopyright 2019 Stijn Van Campenhout\n\nCopyright 2020-2021 Robert Schroll\n\nrmcl is released under the MIT license.  See LICENSE.txt for details.\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/rschroll/rmcl","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"rmcl","package_url":"https://pypi.org/project/rmcl/","platform":"","project_url":"https://pypi.org/project/rmcl/","project_urls":{"Homepage":"https://github.com/rschroll/rmcl","Repository":"https://github.com/rschroll/rmcl"},"provides_extra":null,"release_url":"https://pypi.org/project/rmcl/0.4.2/","requires_dist":["trio (>=0.18.0,<0.19.0)","asks (>=2.4.12,<3.0.0)","xdg (>=5.0.1,<6.0.0)"],"requires_python":">=3.7,<4.0","summary":"reMarkable Cloud Library","version":"0.4.2","yanked":false,"yanked_reason":null},"last_serial":10520594,"releases":{"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"db255137327f075d933f58bc880c6eeafac020bc7ab85d2d11633a24b0648d66","md5":"2621ba0a750a524b33685b7588827249","sha256":"cc9cfbfd904164bada7d6680695b54defd066c31a36935410a53c53351d0e6aa"},"downloads":-1,"filename":"rmcl-0.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"2621ba0a750a524b33685b7588827249","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":16835,"upload_time":"2021-02-07T03:09:36","upload_time_iso_8601":"2021-02-07T03:09:36.479515Z","url":"https://files.pythonhosted.org/packages/db/25/5137327f075d933f58bc880c6eeafac020bc7ab85d2d11633a24b0648d66/rmcl-0.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2d54b0a3e1984320019e93c24e8a41719b6d68e88192162677faa52c178f566c","md5":"06c62d14b7ac09dd3ebcf02d5f40caf9","sha256":"df5c38176309cb119c29bf9bca9d8f2f6427280241a882106b939db17ef48f3d"},"downloads":-1,"filename":"rmcl-0.3.0.tar.gz","has_sig":false,"md5_digest":"06c62d14b7ac09dd3ebcf02d5f40caf9","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":18003,"upload_time":"2021-02-07T03:09:37","upload_time_iso_8601":"2021-02-07T03:09:37.743088Z","url":"https://files.pythonhosted.org/packages/2d/54/b0a3e1984320019e93c24e8a41719b6d68e88192162677faa52c178f566c/rmcl-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.1":[{"comment_text":"","digests":{"blake2b_256":"b1756d402d29208d20688e12a52b2d69747d5244af5a575264a1bed0009ce364","md5":"c4882c75391d45329493d2774e4e776b","sha256":"e4ebcc3e6ce7e9efb1dec4a2d0a44c463ef3854d44e1f8919c65a2b3f9312ec7"},"downloads":-1,"filename":"rmcl-0.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"c4882c75391d45329493d2774e4e776b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":17073,"upload_time":"2021-02-13T23:34:38","upload_time_iso_8601":"2021-02-13T23:34:38.061314Z","url":"https://files.pythonhosted.org/packages/b1/75/6d402d29208d20688e12a52b2d69747d5244af5a575264a1bed0009ce364/rmcl-0.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"065cd80d773b37c9d796532dd2d2a33140636a0d55e9868717783e06b83ebd04","md5":"056c6a5ddceb954f0e75781eac947dad","sha256":"5b5316adf53cca9e56273cad220cb7374cd56e7bac962c943868b05fc090e98c"},"downloads":-1,"filename":"rmcl-0.3.1.tar.gz","has_sig":false,"md5_digest":"056c6a5ddceb954f0e75781eac947dad","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":18291,"upload_time":"2021-02-13T23:34:39","upload_time_iso_8601":"2021-02-13T23:34:39.444598Z","url":"https://files.pythonhosted.org/packages/06/5c/d80d773b37c9d796532dd2d2a33140636a0d55e9868717783e06b83ebd04/rmcl-0.3.1.tar.gz","yanked":false,"yanked_reason":null}],"0.4.0":[{"comment_text":"","digests":{"blake2b_256":"41f28fd7c3514426d58b7c1acc2ac23dc0941ac0303ee64ba966ca6a81136014","md5":"26071c7a4161719d4ae461353e95f852","sha256":"d2fc5d183b213797f5886a6af52c5531c87b4e1770cc720e0e8ba5992e728473"},"downloads":-1,"filename":"rmcl-0.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"26071c7a4161719d4ae461353e95f852","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":16708,"upload_time":"2021-02-28T19:32:08","upload_time_iso_8601":"2021-02-28T19:32:08.238585Z","url":"https://files.pythonhosted.org/packages/41/f2/8fd7c3514426d58b7c1acc2ac23dc0941ac0303ee64ba966ca6a81136014/rmcl-0.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"be5748682f0efa38003ef53b8fbd9128521965c9202b6f42b64d66247009ad92","md5":"3837d847fd5624a3a1975b8377259183","sha256":"14bd199ff2c71269c3c1ac63d10932de6c68a250a454550940dae3f06b07527a"},"downloads":-1,"filename":"rmcl-0.4.0.tar.gz","has_sig":false,"md5_digest":"3837d847fd5624a3a1975b8377259183","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":18031,"upload_time":"2021-02-28T19:32:09","upload_time_iso_8601":"2021-02-28T19:32:09.443377Z","url":"https://files.pythonhosted.org/packages/be/57/48682f0efa38003ef53b8fbd9128521965c9202b6f42b64d66247009ad92/rmcl-0.4.0.tar.gz","yanked":false,"yanked_reason":null}],"0.4.1":[{"comment_text":"","digests":{"blake2b_256":"e3d611b1d414aec0b9334c877240c2225a4c4813e185d081dc9dc1e5cd965b83","md5":"c42f85803bb43b4c384d358fbf9cbb73","sha256":"4dbfa65153a683ef15151d7be755abff05fc980b53304a744ae631128c192ced"},"downloads":-1,"filename":"rmcl-0.4.1-py3-none-any.whl","has_sig":false,"md5_digest":"c42f85803bb43b4c384d358fbf9cbb73","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":16720,"upload_time":"2021-05-23T23:44:55","upload_time_iso_8601":"2021-05-23T23:44:55.767517Z","url":"https://files.pythonhosted.org/packages/e3/d6/11b1d414aec0b9334c877240c2225a4c4813e185d081dc9dc1e5cd965b83/rmcl-0.4.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dea57a2dd0db4d7a7d4a9106e55087223db2bf1b5468e0081584b6c613398d92","md5":"a90a5be359f7b5e453aec8cf105a0285","sha256":"38fdc837d58a3576661d7c68d9fabfbe09579063842aca8d61996a56dd8f3b4e"},"downloads":-1,"filename":"rmcl-0.4.1.tar.gz","has_sig":false,"md5_digest":"a90a5be359f7b5e453aec8cf105a0285","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":18052,"upload_time":"2021-05-23T23:44:57","upload_time_iso_8601":"2021-05-23T23:44:57.009255Z","url":"https://files.pythonhosted.org/packages/de/a5/7a2dd0db4d7a7d4a9106e55087223db2bf1b5468e0081584b6c613398d92/rmcl-0.4.1.tar.gz","yanked":false,"yanked_reason":null}],"0.4.2":[{"comment_text":"","digests":{"blake2b_256":"933592c1fc91b1abc2ee1fc2d8973e94213c8fb5113289a2cf6cb194880b1c66","md5":"d99ee0d9e50d582e41118825eb4b9e6c","sha256":"09534999cd233e5e8db531e51aab87eee7d72aa5a2592bcf100e2d015110cf52"},"downloads":-1,"filename":"rmcl-0.4.2-py3-none-any.whl","has_sig":false,"md5_digest":"d99ee0d9e50d582e41118825eb4b9e6c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":16774,"upload_time":"2021-05-31T17:30:09","upload_time_iso_8601":"2021-05-31T17:30:09.380437Z","url":"https://files.pythonhosted.org/packages/93/35/92c1fc91b1abc2ee1fc2d8973e94213c8fb5113289a2cf6cb194880b1c66/rmcl-0.4.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f40dda855e2be3c8e06fd545d785035e403e92fd7e087b8cd70f86e83f2e0e62","md5":"b5f5768ac6d56b85d4c5095e35ff07a1","sha256":"58de4758e7e3cb7acbf28fcfa80f4155252afdfb191beb4ba4aa36961f66cc67"},"downloads":-1,"filename":"rmcl-0.4.2.tar.gz","has_sig":false,"md5_digest":"b5f5768ac6d56b85d4c5095e35ff07a1","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":18104,"upload_time":"2021-05-31T17:30:10","upload_time_iso_8601":"2021-05-31T17:30:10.447309Z","url":"https://files.pythonhosted.org/packages/f4/0d/da855e2be3c8e06fd545d785035e403e92fd7e087b8cd70f86e83f2e0e62/rmcl-0.4.2.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"933592c1fc91b1abc2ee1fc2d8973e94213c8fb5113289a2cf6cb194880b1c66","md5":"d99ee0d9e50d582e41118825eb4b9e6c","sha256":"09534999cd233e5e8db531e51aab87eee7d72aa5a2592bcf100e2d015110cf52"},"downloads":-1,"filename":"rmcl-0.4.2-py3-none-any.whl","has_sig":false,"md5_digest":"d99ee0d9e50d582e41118825eb4b9e6c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":16774,"upload_time":"2021-05-31T17:30:09","upload_time_iso_8601":"2021-05-31T17:30:09.380437Z","url":"https://files.pythonhosted.org/packages/93/35/92c1fc91b1abc2ee1fc2d8973e94213c8fb5113289a2cf6cb194880b1c66/rmcl-0.4.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f40dda855e2be3c8e06fd545d785035e403e92fd7e087b8cd70f86e83f2e0e62","md5":"b5f5768ac6d56b85d4c5095e35ff07a1","sha256":"58de4758e7e3cb7acbf28fcfa80f4155252afdfb191beb4ba4aa36961f66cc67"},"downloads":-1,"filename":"rmcl-0.4.2.tar.gz","has_sig":false,"md5_digest":"b5f5768ac6d56b85d4c5095e35ff07a1","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":18104,"upload_time":"2021-05-31T17:30:10","upload_time_iso_8601":"2021-05-31T17:30:10.447309Z","url":"https://files.pythonhosted.org/packages/f4/0d/da855e2be3c8e06fd545d785035e403e92fd7e087b8cd70f86e83f2e0e62/rmcl-0.4.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
