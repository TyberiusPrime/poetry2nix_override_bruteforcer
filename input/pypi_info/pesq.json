{"info":{"author":"ludlows","author_email":"","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python"],"description":"# pesq\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.6549559.svg)](https://doi.org/10.5281/zenodo.6549559)\n[![Downloads](https://pepy.tech/badge/pesq)](https://pepy.tech/project/pesq)\n[![Downloads](https://pepy.tech/badge/pesq/month)](https://pepy.tech/project/pesq)\n\nPESQ (Perceptual Evaluation of Speech Quality) Wrapper for Python Users\n\nThis code is designed for numpy array specially.\n\n# Requirements\n\n    C compiler\n    numpy\n    cython\n\n# Build and Install\n```bash\n$ git clone https://github.com/ludlows/python-pesq.git\n$ cd python-pesq\n$ pip install .  # for python 2\n$ pip3 install . # for python 3 \n$ cd ..\n$ rm -rf python-pesq # remove the code folder since it exists in the python package folder\n```\n\n# Install with pip\n\n```bash\n# PyPi Repository\n$ pip install pesq\n\n\n# The Latest Version\n$ pip install https://github.com/ludlows/python-pesq/archive/master.zip\n\n# or\n\n$ pip3 install https://github.com/ludlows/python-pesq/archive/master.zip\n```\n\n# Usage for narrowband and wideband Modes\n\nPlease note that the sampling rate (frequency) should be 16000 or 8000 (Hz). \n\nAnd using 8000Hz is supported for narrowband only.\n\nThe code supports error-handling behaviors now.\n\n```python\ndef pesq(fs, ref, deg, mode='wb', on_error=PesqError.RAISE_EXCEPTION):\n    \"\"\"\n    Args:\n        ref: numpy 1D array, reference audio signal \n        deg: numpy 1D array, degraded audio signal\n        fs:  integer, sampling rate\n        mode: 'wb' (wide-band) or 'nb' (narrow-band)\n        on_error: error-handling behavior, it could be PesqError.RETURN_VALUES or PesqError.RAISE_EXCEPTION by default\n    Returns:\n        pesq_score: float, P.862.2 Prediction (MOS-LQO)\n    \"\"\"\n```\nOnce you select `PesqError.RETURN_VALUES`, the `pesq` function will return -1 when an error occurs.\n\nOnce you select `PesqError.RAISE_EXCEPTION`, the `pesq` function will raise an exception when an error occurs.\n\nIt supports the following errors now: `InvalidSampleRateError`, `OutOfMemoryError`,`BufferTooShortError`,`NoUtterancesError`,`PesqError`(other unknown errors).\n\n```python\nfrom scipy.io import wavfile\nfrom pesq import pesq\n\nrate, ref = wavfile.read(\"./audio/speech.wav\")\nrate, deg = wavfile.read(\"./audio/speech_bab_0dB.wav\")\n\nprint(pesq(rate, ref, deg, 'wb'))\nprint(pesq(rate, ref, deg, 'nb'))\n```\n\n# Usage for `multiprocessing` feature\n\n```python\ndef pesq_batch(fs, ref, deg, mode='wb', n_processor=None, on_error=PesqError.RAISE_EXCEPTION):\n    \"\"\"\n   Running `pesq` using multiple processors\n    Args:\n        on_error:\n        ref: numpy 1D (n_sample,) or 2D array (n_file, n_sample), reference audio signal\n        deg: numpy 1D (n_sample,) or 2D array (n_file, n_sample), degraded audio signal\n        fs:  integer, sampling rate\n        mode: 'wb' (wide-band) or 'nb' (narrow-band)\n        n_processor: cpu_count() (default) or number of processors (chosen by the user) or 0 (without multiprocessing)\n        on_error: PesqError.RAISE_EXCEPTION (default) or PesqError.RETURN_VALUES\n    Returns:\n        pesq_score: list of pesq scores, P.862.2 Prediction (MOS-LQO)\n    \"\"\"\n```\nthis function uses `multiprocessing` features to boost time efficiency.\n\nWhen the `ref` is an 1-D numpy array and `deg` is a 2-D numpy array, the result of `pesq_batch` is identical to the value of `[pesq(fs, ref, deg[i,:],**kwargs) for i in range(deg.shape[0])]`.\n\nWhen the `ref` is a 2-D numpy array and `deg` is a 2-D numpy array, the result of `pesq_batch` is identical to the value of `[pesq(fs, ref[i,:], deg[i,:],**kwargs) for i in range(deg.shape[0])]`.\n\n\n# Correctness\n\nThe correctness is verified by running samples in audio folder.\n\nPESQ computed by this code in wideband mode is    1.0832337141036987\n\nPESQ computed by this code in narrowband mode is  1.6072081327438354\n\n# Note\n\nSampling rate (fs|rate) - No default. Must select either 8000Hz or 16000Hz.\n \nNote there is narrowband (nb) mode only when sampling rate is 8000Hz.\n\nThe original C source code is modified. \n\n# Who is using `pesq`\n\nPlease click [here](https://github.com/ludlows/python-pesq/network/dependents) to see these repositories, whose owners include `Facebook Research`, `SpeechBrain`, `NVIDIA` .etc.\n\n# Cite this code\n\n```\n   @software{miao_wang_2022_6549559,\n   author       = {Miao Wang and\n                  Christoph Boeddeker and\n                  Rafael G. Dantas and\n                  ananda seelan},\n   title        = {{ludlows/python-pesq: supporting for \n                   multiprocessing features}},\n   month        = may,\n   year         = 2022,\n   publisher    = {Zenodo},\n   version      = {v0.0.4},\n   doi          = {10.5281/zenodo.6549559},\n   url          = {https://doi.org/10.5281/zenodo.6549559}}\n```\n\n# Acknowledgement\n\nThis work was funded by the Natural Sciences and Engineering Research Council of Canada.\n\nThis work was also funded by the Concordia University, Montreal, Canada.","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ludlows/python-pesq","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"pesq","package_url":"https://pypi.org/project/pesq/","platform":null,"project_url":"https://pypi.org/project/pesq/","project_urls":{"Homepage":"https://github.com/ludlows/python-pesq"},"provides_extra":null,"release_url":"https://pypi.org/project/pesq/0.0.4/","requires_dist":null,"requires_python":"","summary":"Python Wrapper for PESQ Score (narrow band and wide band)","version":"0.0.4","yanked":false,"yanked_reason":null},"last_serial":13842110,"releases":{"0.0.1":[{"comment_text":"","digests":{"blake2b_256":"8cdc5b57e69fbe45b8d4c75295f5f8d907e166e613df1a42556e6ecbb6d8cfd9","md5":"450250a2c373777236fc0fd7dfa0fc71","sha256":"5116d36bb809426a74a441740d25eba0a5083319e5a955b7921d62341c62a321"},"downloads":-1,"filename":"pesq-0.0.1.tar.gz","has_sig":false,"md5_digest":"450250a2c373777236fc0fd7dfa0fc71","packagetype":"sdist","python_version":"source","requires_python":null,"size":79973,"upload_time":"2019-12-09T19:17:38","upload_time_iso_8601":"2019-12-09T19:17:38.302789Z","url":"https://files.pythonhosted.org/packages/8c/dc/5b57e69fbe45b8d4c75295f5f8d907e166e613df1a42556e6ecbb6d8cfd9/pesq-0.0.1.tar.gz","yanked":false,"yanked_reason":null}],"0.0.2":[{"comment_text":"","digests":{"blake2b_256":"98791da494ca32ad9e57a76202f756b3b67e8a404904c7004d290c0063a845c2","md5":"9aed6428823cc391aa9a70c10028244f","sha256":"a33efaca4dfaaaca73d714adf954bd5cb7b2c9a27cfb64909e41053aa2a35c3c"},"downloads":-1,"filename":"pesq-0.0.2.tar.gz","has_sig":false,"md5_digest":"9aed6428823cc391aa9a70c10028244f","packagetype":"sdist","python_version":"source","requires_python":null,"size":34013,"upload_time":"2020-12-12T13:31:50","upload_time_iso_8601":"2020-12-12T13:31:50.453412Z","url":"https://files.pythonhosted.org/packages/98/79/1da494ca32ad9e57a76202f756b3b67e8a404904c7004d290c0063a845c2/pesq-0.0.2.tar.gz","yanked":false,"yanked_reason":null}],"0.0.3":[{"comment_text":"","digests":{"blake2b_256":"7ccffb0b7fd0c2b51004d5357d7ffb5a964d1934012663ab91b7559e309902fc","md5":"f6de0bb311226171791dc12b95ed0a70","sha256":"93d3a6cc1de88f3c8b57f0c1bb3cbec80e7b25423cf8451dab816853bf86fde7"},"downloads":-1,"filename":"pesq-0.0.3.tar.gz","has_sig":false,"md5_digest":"f6de0bb311226171791dc12b95ed0a70","packagetype":"sdist","python_version":"source","requires_python":null,"size":35880,"upload_time":"2021-06-15T03:36:56","upload_time_iso_8601":"2021-06-15T03:36:56.705781Z","url":"https://files.pythonhosted.org/packages/7c/cf/fb0b7fd0c2b51004d5357d7ffb5a964d1934012663ab91b7559e309902fc/pesq-0.0.3.tar.gz","yanked":false,"yanked_reason":null}],"0.0.4":[{"comment_text":"","digests":{"blake2b_256":"22e6f8bdcef3238ac10fb3ce37d150e9b03a152d971febd681f088c6e5e17d8e","md5":"8423a956e73c727d98f5bfc27e99c10c","sha256":"b724b28f73fb638522982bd68e8c3c0957e2f45210639a460233b17aa7fc890b"},"downloads":-1,"filename":"pesq-0.0.4.tar.gz","has_sig":false,"md5_digest":"8423a956e73c727d98f5bfc27e99c10c","packagetype":"sdist","python_version":"source","requires_python":null,"size":38702,"upload_time":"2022-05-17T14:15:26","upload_time_iso_8601":"2022-05-17T14:15:26.301390Z","url":"https://files.pythonhosted.org/packages/22/e6/f8bdcef3238ac10fb3ce37d150e9b03a152d971febd681f088c6e5e17d8e/pesq-0.0.4.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"22e6f8bdcef3238ac10fb3ce37d150e9b03a152d971febd681f088c6e5e17d8e","md5":"8423a956e73c727d98f5bfc27e99c10c","sha256":"b724b28f73fb638522982bd68e8c3c0957e2f45210639a460233b17aa7fc890b"},"downloads":-1,"filename":"pesq-0.0.4.tar.gz","has_sig":false,"md5_digest":"8423a956e73c727d98f5bfc27e99c10c","packagetype":"sdist","python_version":"source","requires_python":null,"size":38702,"upload_time":"2022-05-17T14:15:26","upload_time_iso_8601":"2022-05-17T14:15:26.301390Z","url":"https://files.pythonhosted.org/packages/22/e6/f8bdcef3238ac10fb3ce37d150e9b03a152d971febd681f088c6e5e17d8e/pesq-0.0.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
