{"info":{"author":"Qingquan Wang","author_email":"wangqq1103@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Operating System :: POSIX :: Linux","Programming Language :: Python :: 3"],"description":"# invisible-watermark\n[![PyPI](https://img.shields.io/pypi/v/invisible-watermark)](https://pypi.org/project/invisible-watermark/)\n[![License](https://img.shields.io/pypi/l/invisible-watermark.svg)](https://github.com/ShieldMnt/invisible-watermark/blob/main/LICENSE)\n![Python](https://img.shields.io/badge/python->=3.6-green.svg)\n![Platform](https://img.shields.io/badge/platform-%20linux%20-green.svg)\n[![Downloads](https://pepy.tech/badge/invisible-watermark)](https://pepy.tech/project/invisible-watermark)\n\ninvisible-watermark is a **python** library and command line tool for creating invisible watermark over image (a.k.a. **blink image watermark**, **digital image watermark**). The algorithm doesn't rely on the original image.\n\n**Note that** this library is still experimental and it doesn't support GPU acceleration, carefully deploy it on the production environment. The default method **dwtDCT**(one variant of frequency methods) is ready for on-the-fly embedding, the other methods are too slow on a CPU only environment.\n\n\n[supported algorithms](https://github.com/ShieldMnt/invisible-watermark#supported-algorithms)\n* [Discrete wavelet transform](https://en.wikipedia.org/wiki/Discrete_wavelet_transform) + [Discrete cosine transform](https://en.wikipedia.org/wiki/Discrete_cosine_transform) frequency embedding algorithm variants.\n* [RivaGAN](https://github.com/DAI-Lab/RivaGAN), a deep-learning model trained from Hollywood2 movie clips dataset.\n\n[speed](https://github.com/ShieldMnt/invisible-watermark#running-speed-cpu-only)\n* default embedding method ```dwtDct``` is fast and suitable for on-the-fly embedding\n* ```dwtDctSvd``` is 3x slower and ```rivaGan``` is 10x slower, for large image they are not suitable for on-the-fly embedding\n\naccuracy\n* The algorithm **cannot gurantee** to decode the original watermarks 100% accurately even though we don't apply any attack.\n* Known defects: Test shows all algorithms do not perform well for web page screenshots or posters with homogenous background color\n\n## Supported Algorithms\n* [**frequency methods**](https://github.com/ShieldMnt/invisible-watermark/wiki/Frequency-Methods)\n\n> * **dwtDct**: DWT + DCT transform, embed watermark bit into max non-trivial coefficient of block dct coefficents\n> \n> * **dwtDctSvd**: DWT + DCT transform, SVD decomposition of each block, embed watermark bit into singular value decomposition\n\n* [**rivaGan**](https://github.com/ShieldMnt/invisible-watermark#rivagan-experimental): encoder/decoder model with Attention mechanism + embed watermark bits into vector.\n\n> background:\n> * [Discrete wavelet transform](https://en.wikipedia.org/wiki/Discrete_wavelet_transform)\n> * [Discrete cosine transform](https://en.wikipedia.org/wiki/Discrete_cosine_transform).\n> * [RivaGAN](https://github.com/DAI-Lab/RivaGAN), a deep-learning model trained from Hollywood2 movie clips dataset.\n\n## How to install\n`pip install invisible-watermark`\n\n\n## [Library API](https://github.com/ShieldMnt/invisible-watermark/wiki/API)\n### Embed watermark\n\n* **example** embed 4 characters (32 bits) watermark\n\n```python\nimport cv2\nfrom imwatermark import WatermarkEncoder\n\nbgr = cv2.imread('test.png')\nwm = 'test'\n\nencoder = WatermarkEncoder()\nencoder.set_watermark('bytes', wm.encode('utf-8'))\nbgr_encoded = encoder.encode(bgr, 'dwtDct')\n\ncv2.imwrite('test_wm.png', bgr_encoded)\n```\n\n### Decode watermark\n* **example** decode 4 characters (32 bits) watermark\n\n```python\nimport cv2\nfrom imwatermark import WatermarkDecoder\n\nbgr = cv2.imread('test_wm.png')\n\ndecoder = WatermarkDecoder('bytes', 32)\nwatermark = decoder.decode(bgr, 'dwtDct')\nprint(watermark.decode('utf-8'))\n```\n\n\n## CLI Usage\n\n```\nembed watermark:  ./invisible-watermark -v -a encode -t bytes -m dwtDct -w 'hello' -o ./test_vectors/wm.png ./test_vectors/original.jpg\n\ndecode watermark: ./invisible-watermark -v -a decode -t bytes -m dwtDct -l 40 ./test_vectors/wm.png\n\npositional arguments:\n  input                 The path of input\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACTION, --action ACTION\n                        encode|decode (default: None)\n  -t TYPE, --type TYPE  bytes|b16|bits|uuid|ipv4 (default: bits)\n  -m METHOD, --method METHOD\n                        dwtDct|dwtDctSvd|rivaGan (default: maxDct)\n  -w WATERMARK, --watermark WATERMARK\n                        embedded string (default: )\n  -l LENGTH, --length LENGTH\n                        watermark bits length, required for bytes|b16|bits\n                        watermark (default: 0)\n  -o OUTPUT, --output OUTPUT\n                        The path of output (default: None)\n  -v, --verbose         print info (default: False)\n```\n\n## Test Result\n\nFor better doc reading, we compress all images in this page, but the test is taken on 1920x1080 original image.\n\nMethods are not robust to **resize** or aspect ratio changed **crop** but robust to **noise**, **color filter**, **brightness** and **jpg compress.**\n\n**rivaGan outperforms the default method on crop attack.**\n\n**only default method is ready for on-the-fly embedding.**\n\n### Input\n> * Input Image: 1960x1080 Image\n> * Watermark: \n>   - For freq method, we use 64bits, string expression \"qingquan\"\n>   - For RivaGan method, we use 32bits, string expression \"qing\"\n> * Parameters: only take U frame to keep image quality, ```scale=36```\n\n### Attack Performance\n\n\n**Watermarked Image**\n\n![wm](https://user-images.githubusercontent.com/1647036/106387712-03c17400-6416-11eb-9490-e5e860b025ad.png)\n\n| Attacks | Image | Freq Method | RivaGan |\n| --- | --- | --- | --- |\n| JPG Compress | ![wm_jpg](https://user-images.githubusercontent.com/1647036/106387721-0e7c0900-6416-11eb-840c-8eab1cb9d748.jpg) | Pass | Pass |\n| Noise | ![wm_noise](https://user-images.githubusercontent.com/1647036/106387874-c90c0b80-6416-11eb-99f3-1716f01f2211.png) | Pass | Pass |\n| Brightness | ![wm_darken](https://user-images.githubusercontent.com/1647036/106387718-0cb24580-6416-11eb-83af-7f9e94f13cae.png) | Pass | Pass |\n| Overlay | ![wm_overlay](https://user-images.githubusercontent.com/1647036/106387733-13d95380-6416-11eb-8aa4-b3d2acfa8637.png) | Pass | Pass |\n| Mask | ![wm_mask_large](https://user-images.githubusercontent.com/1647036/106387726-10de6300-6416-11eb-99c3-4a0f70f99224.png) | Pass | Pass |\n| crop 7x5 | ![wm_crop_7x5](https://user-images.githubusercontent.com/1647036/106387713-06bc6480-6416-11eb-8ae0-f64289642450.png) | Fail | Pass |\n| Resize 50% | ![wm_resize_half](https://user-images.githubusercontent.com/1647036/106387735-15a31700-6416-11eb-8589-2ffa38df2a9a.png) | Fail | Fail |\n| Rotate 30 degress | ![wm_rotate](https://user-images.githubusercontent.com/1647036/106387737-19369e00-6416-11eb-8417-05e53e11b77f.png) | Fail | Fail|\n\n\n\n### Running Speed (CPU Only)\n| Image | Method | Encoding | Decoding |\n| --- | --- | --- | --- |\n| 1920x1080 | dwtDct | 300-350ms | 150ms-200ms |\n| 1920x1080 | dwtDctSvd | 1500ms-2s | ~1s |\n| 1920x1080 | rivaGan | ~5s | 4-5s |\n| 600x600 | dwtDct | 70ms | 60ms |\n| 600x600 | dwtDctSvd | 185ms | 320ms |\n| 600x600 | rivaGan | 1s | 600ms |\n\n### RivaGAN Experimental\nFurther, We will deliver the 64bit rivaGan model and test the performance on GPU environment.\n\nDetail: [https://github.com/DAI-Lab/RivaGAN](https://github.com/DAI-Lab/RivaGAN)\n\nZhang, Kevin Alex and Xu, Lei and Cuesta-Infante, Alfredo and Veeramachaneni, Kalyan. Robust Invisible Video Watermarking with Attention. MIT EECS, September 2019.[[PDF](https://arxiv.org/abs/1909.01285)]\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ShieldMnt/invisible-watermark","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"invisible-watermark","package_url":"https://pypi.org/project/invisible-watermark/","platform":null,"project_url":"https://pypi.org/project/invisible-watermark/","project_urls":{"Homepage":"https://github.com/ShieldMnt/invisible-watermark"},"provides_extra":null,"release_url":"https://pypi.org/project/invisible-watermark/0.2.0/","requires_dist":["Pillow (>=6.0.0)","PyWavelets (>=1.1.1)","numpy (>=1.17.0)","opencv-python (>=4.1.0.25)","torch"],"requires_python":">=3.6","summary":"The library for creating and decoding invisible image watermarks","version":"0.2.0","yanked":false,"yanked_reason":null},"last_serial":18784714,"releases":{"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"ec0253a3a6809b81271eca3dc9cf38b9b7cc079149182ed2a09e7ba756280258","md5":"d1dffae45a4a679b3a93db5c8de0aeff","sha256":"3e18db4ef25b86c051bb5cd6aa2b6c2bd196bd42c70e9fd5436ab8ab8b9d3219"},"downloads":-1,"filename":"invisible_watermark-0.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"d1dffae45a4a679b3a93db5c8de0aeff","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":18071,"upload_time":"2021-01-30T15:49:34","upload_time_iso_8601":"2021-01-30T15:49:34.625407Z","url":"https://files.pythonhosted.org/packages/ec/02/53a3a6809b81271eca3dc9cf38b9b7cc079149182ed2a09e7ba756280258/invisible_watermark-0.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b77919dec7db33b49f2f15fa493c923dbbc54a6d5e72078f30864bc39e46a507","md5":"9a5ab91a95eb52bc87f1bdc3e2ea4e4b","sha256":"a1cbb4311f279d7f9bbacf734465b7f7186477c71c6d86af0cf05a97ccb0295b"},"downloads":-1,"filename":"invisible-watermark-0.1.0.tar.gz","has_sig":false,"md5_digest":"9a5ab91a95eb52bc87f1bdc3e2ea4e4b","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":11955,"upload_time":"2021-01-30T15:49:36","upload_time_iso_8601":"2021-01-30T15:49:36.170279Z","url":"https://files.pythonhosted.org/packages/b7/79/19dec7db33b49f2f15fa493c923dbbc54a6d5e72078f30864bc39e46a507/invisible-watermark-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"63453f954db893e64745aec6363ca9aa63ed8baf5699e49cd1f275ebc581d9fd","md5":"d4f57a89f23efaf22a50138a12e80357","sha256":"071e4204a9d68071806450bb29514c11135d93f7e2bb8152c8a3aaae8bd9a667"},"downloads":-1,"filename":"invisible_watermark-0.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"d4f57a89f23efaf22a50138a12e80357","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":1234756,"upload_time":"2021-01-30T16:21:50","upload_time_iso_8601":"2021-01-30T16:21:50.269309Z","url":"https://files.pythonhosted.org/packages/63/45/3f954db893e64745aec6363ca9aa63ed8baf5699e49cd1f275ebc581d9fd/invisible_watermark-0.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ca64bc41e6fd2795a5dc29ef080f1a2f001c8fb561c619600a98e45162b2cf85","md5":"33aca059607afc3d922ca91f14804ce2","sha256":"7f962be98a86f4db23f857aa7807bb4189c15c36f2b23c2960cfc4871b6b90a3"},"downloads":-1,"filename":"invisible-watermark-0.1.1.tar.gz","has_sig":false,"md5_digest":"33aca059607afc3d922ca91f14804ce2","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1228757,"upload_time":"2021-01-30T16:21:53","upload_time_iso_8601":"2021-01-30T16:21:53.871963Z","url":"https://files.pythonhosted.org/packages/ca/64/bc41e6fd2795a5dc29ef080f1a2f001c8fb561c619600a98e45162b2cf85/invisible-watermark-0.1.1.tar.gz","yanked":false,"yanked_reason":null}],"0.1.2":[{"comment_text":"","digests":{"blake2b_256":"177926a3c14d2d1c7855fc7276ac00aed70bbb2bdcb00fb1e125287e88e66cef","md5":"84e04c6fac7053747267b433f00da68c","sha256":"d05b48957507e54d963150bb57884b11606b4cf8011b8fbd5f4d68515d827728"},"downloads":-1,"filename":"invisible_watermark-0.1.2-py3-none-any.whl","has_sig":false,"md5_digest":"84e04c6fac7053747267b433f00da68c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":1630475,"upload_time":"2021-01-31T11:52:47","upload_time_iso_8601":"2021-01-31T11:52:47.096496Z","url":"https://files.pythonhosted.org/packages/17/79/26a3c14d2d1c7855fc7276ac00aed70bbb2bdcb00fb1e125287e88e66cef/invisible_watermark-0.1.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d9fd9b3d70570fafc6c94c4c41e79ee20afaf5d758dc444987e8200fe77a19e4","md5":"279812d5fdb0255a74ff4b0536548dff","sha256":"aed602c28ec9346aef35647946232546392e349daf4e7c8d46bc2f4ebce4b593"},"downloads":-1,"filename":"invisible-watermark-0.1.2.tar.gz","has_sig":false,"md5_digest":"279812d5fdb0255a74ff4b0536548dff","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1628521,"upload_time":"2021-01-31T11:52:48","upload_time_iso_8601":"2021-01-31T11:52:48.947662Z","url":"https://files.pythonhosted.org/packages/d9/fd/9b3d70570fafc6c94c4c41e79ee20afaf5d758dc444987e8200fe77a19e4/invisible-watermark-0.1.2.tar.gz","yanked":false,"yanked_reason":null}],"0.1.3":[{"comment_text":"","digests":{"blake2b_256":"1ab26e431084d3556be0e4348004fe52a501cfb1063a5064373984f77c16381b","md5":"97545c9b8a0f6e24fc95f9fd2e1c673f","sha256":"d37dcf493eac4b7d838c4dd71a33ad60f653ec2aec5b31307204a7420243fd36"},"downloads":-1,"filename":"invisible_watermark-0.1.3-py3-none-any.whl","has_sig":false,"md5_digest":"97545c9b8a0f6e24fc95f9fd2e1c673f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":1632642,"upload_time":"2021-01-31T15:20:13","upload_time_iso_8601":"2021-01-31T15:20:13.789905Z","url":"https://files.pythonhosted.org/packages/1a/b2/6e431084d3556be0e4348004fe52a501cfb1063a5064373984f77c16381b/invisible_watermark-0.1.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9e554203a43075ba0434709b214d96c06a15380d9f95fa622b6b176d915b8741","md5":"6b9320c73942ece536b4dc3dbde26139","sha256":"aa6df1611e0ddd72c4ca80b67376daaeacf31bbd1a01f2359d9bd1adf5650cdc"},"downloads":-1,"filename":"invisible-watermark-0.1.3.tar.gz","has_sig":false,"md5_digest":"6b9320c73942ece536b4dc3dbde26139","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1631178,"upload_time":"2021-01-31T15:21:19","upload_time_iso_8601":"2021-01-31T15:21:19.379389Z","url":"https://files.pythonhosted.org/packages/9e/55/4203a43075ba0434709b214d96c06a15380d9f95fa622b6b176d915b8741/invisible-watermark-0.1.3.tar.gz","yanked":false,"yanked_reason":null}],"0.1.4":[{"comment_text":"","digests":{"blake2b_256":"b4e1355e4e6cec34ec9f45fa276be0bd9b0db652773d1bb608a380c4dfa28cf2","md5":"307c8c88dca92564af42db787c976934","sha256":"c5963f98b5b5377db9ed2d2a724d5fe14f013d4f4e8cc3f57c8d9b0c400cbc59"},"downloads":-1,"filename":"invisible_watermark-0.1.4-py3-none-any.whl","has_sig":false,"md5_digest":"307c8c88dca92564af42db787c976934","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":1633027,"upload_time":"2021-02-01T03:49:16","upload_time_iso_8601":"2021-02-01T03:49:16.614853Z","url":"https://files.pythonhosted.org/packages/b4/e1/355e4e6cec34ec9f45fa276be0bd9b0db652773d1bb608a380c4dfa28cf2/invisible_watermark-0.1.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"350dbebfd031e7f1168aafa521b718ef3d88f51f2b927a32a3b0e22f8a878f80","md5":"f1f8b9e820e3f90167055ce5e5593f9e","sha256":"3f0d2d8a6f144d85ccbb2fe90aba07818ac1a19709d135dcdef486f8c57ebd27"},"downloads":-1,"filename":"invisible-watermark-0.1.4.tar.gz","has_sig":false,"md5_digest":"f1f8b9e820e3f90167055ce5e5593f9e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1631704,"upload_time":"2021-02-01T03:49:28","upload_time_iso_8601":"2021-02-01T03:49:28.034165Z","url":"https://files.pythonhosted.org/packages/35/0d/bebfd031e7f1168aafa521b718ef3d88f51f2b927a32a3b0e22f8a878f80/invisible-watermark-0.1.4.tar.gz","yanked":false,"yanked_reason":null}],"0.1.5":[{"comment_text":"","digests":{"blake2b_256":"08989e8882afc4bc9cf25128f5870b1773427d46a25a5fc2a2e74f601ad3687e","md5":"f68f6189ce2bf7696bea2b784f2f4a81","sha256":"8207c94b3106233a17fdf3109fe957fd80e6669d383f98ff57919b0d7766970d"},"downloads":-1,"filename":"invisible_watermark-0.1.5-py3-none-any.whl","has_sig":false,"md5_digest":"f68f6189ce2bf7696bea2b784f2f4a81","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":1633170,"upload_time":"2021-02-01T04:00:33","upload_time_iso_8601":"2021-02-01T04:00:33.284544Z","url":"https://files.pythonhosted.org/packages/08/98/9e8882afc4bc9cf25128f5870b1773427d46a25a5fc2a2e74f601ad3687e/invisible_watermark-0.1.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"64e08ed23b5d9e70959e4ab522fcd954fc1938d577fc8dc20470733f2e3c4a1a","md5":"60a152a2d398395bcbfe1dd46abaef9a","sha256":"76311464c690c66d54fb2b7c01487537fc20072637e05fe89399770a047dad4a"},"downloads":-1,"filename":"invisible-watermark-0.1.5.tar.gz","has_sig":false,"md5_digest":"60a152a2d398395bcbfe1dd46abaef9a","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":1631858,"upload_time":"2021-02-01T04:00:39","upload_time_iso_8601":"2021-02-01T04:00:39.483726Z","url":"https://files.pythonhosted.org/packages/64/e0/8ed23b5d9e70959e4ab522fcd954fc1938d577fc8dc20470733f2e3c4a1a/invisible-watermark-0.1.5.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"2b5718b5a914f6d7994dd349252873169e946dc824328e9a37fd15ed836deedc","md5":"327c6956a276eb4500fb005fdb0df0aa","sha256":"644311beed9cfe4a9a5a4a46c740f47800cef184fe2e1297f3f4542e2d992f8b"},"downloads":-1,"filename":"invisible_watermark-0.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"327c6956a276eb4500fb005fdb0df0aa","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":1633253,"upload_time":"2023-07-06T13:56:28","upload_time_iso_8601":"2023-07-06T13:56:28.715894Z","url":"https://files.pythonhosted.org/packages/2b/57/18b5a914f6d7994dd349252873169e946dc824328e9a37fd15ed836deedc/invisible_watermark-0.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"2b5718b5a914f6d7994dd349252873169e946dc824328e9a37fd15ed836deedc","md5":"327c6956a276eb4500fb005fdb0df0aa","sha256":"644311beed9cfe4a9a5a4a46c740f47800cef184fe2e1297f3f4542e2d992f8b"},"downloads":-1,"filename":"invisible_watermark-0.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"327c6956a276eb4500fb005fdb0df0aa","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":1633253,"upload_time":"2023-07-06T13:56:28","upload_time_iso_8601":"2023-07-06T13:56:28.715894Z","url":"https://files.pythonhosted.org/packages/2b/57/18b5a914f6d7994dd349252873169e946dc824328e9a37fd15ed836deedc/invisible_watermark-0.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
