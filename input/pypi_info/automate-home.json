{"info":{"author":"Maja Massarini","author_email":"maja.massarini@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 3 - Alpha","Intended Audience :: Developers","License :: OSI Approved :: GNU General Public License v3 (GPLv3)","Operating System :: POSIX :: Linux","Programming Language :: Python :: 3.8","Topic :: Communications"],"description":"# Automate home\n\n[![Build Status](https://app.travis-ci.com/majamassarini/automate-home.svg?branch=main)](https://app.travis-ci.com/majamassarini/automate-home)\n[![codecov](https://codecov.io/gh/majamassarini/automate-home/branch/main/graph/badge.svg?token=mjBUwkmcML)](https://codecov.io/gh/majamassarini/automate-home)\n[![Documentation Status](https://readthedocs.org/projects/automate-home/badge/?version=latest)](https://automate-home.readthedocs.io/en/latest/?badge=latest)\n\n![](icon_128x128.png)\n\n\nYet another home automation (iot) project because a **smart light is more than just on or off**.\n\n## Overview\n\nWhen talking about home automation there are at least two goals you could\nhave in mind:\n\n1. let a user interact with the home devices through many interfaces locally or remotely\n2. let devices interact together and let the system change their state\n\nI believe the other home automation projects fits perfectly the first goal,\nthis project focuses on **automation**, the second one.\n\nWhat's the difference between this project model and other home automation projects?\n\nThe main difference is the design of an *Appliance* where, with the name *Appliance*, I refer to entities like a light, a curtain, a sound player ecc.\n\nOne of the simplest *Appliances* I could imagine is a light with two *physical states*: on and off.\n\nA light model could be designed like a deterministic state machine; all the other home automation projects I know do it like that.\n\nOr it could be designed like [a non deterministic state machine](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwjE_8OOjeTsAhVR26QKHe9iA4cQmhMwHHoECB8QAg&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FNondeterministic_finite_automaton&usg=AOvVaw27skSr2u7Pk_Ka8zz9O1j0>);\n which is how it is done by this project.\n\nWhen using a deterministic state machine if you have a light with on/off physical states its model states will be just on/off.\nWhen using a non-deterministic state machine it is quite simple to have more model states for an on/off light, as an example, \nyour light could be in an *alarmed* state and it could start blinking.\n\n### Behavior-driven development\n\nI believe logics are the building bricks of a smart home system.\nNevertheless, they are complex to build, debug and share and one of this project goals is to make it easier.\n\nHaving an *Appliance* grouping together all its logics **simplifies debug and reuse**.\n\nAll *Appliances* inner states can be tested with [BDD](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwjqq7PHleTsAhXpA2MBHUVSC2wQFjAAegQIAhAC&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FBehavior-driven_development&usg=AOvVaw3zU0d2S_KiO3w9C0gwNWv_) style tests [like this](https://automate-home.readthedocs.io/en/latest/features/features.light_presence.feature-file.html).\n\nBDD style tests make it quite easy to understand the behaviour of every *Appliance* in every possible state and thus make it **shareable**.\n\n**I like to think of this project as a way to share behavioural models for our smart devices more easily.**\n\n### What this project is\n\n***A proof of concept.***\n\nThis project allows me to create and test, through python, *automation rules (logics) which can be more complex and more expressive*.\n\nI made a draft (I am not a front-end developer) for a really simple web interface.\nI can interact with the automation rules (logics) through the web interface.\nLooking at the web interface I can always answer the most obvious questions: why the light is turning on/off, \nwhy the curtain is being closed/opened...\n\n*I was tired of explaining why **some magic** was happening in my home.\nI think I have built a system able to answer these questions by itself.*\n\nI integrated really few protocols, the ones I am using the most at my home: [KNX](https://github.com/majamassarini/automate-knx-plugin), \n[Lifx](https://github.com/majamassarini/automate-lifx-plugin) and [Sonos](https://github.com/majamassarini/automate-sonos-plugin).\n\nFor all the other protocol integrations I needed I have used [Home Assistant](https://github.com/majamassarini/automate-home-assistant-plugin).\n\n## Documentation\n\nFor a deep dive into this project see the [documentation](https://automate-home.readthedocs.io/en/latest/?badge=latest).\n\nFor a minute guide to this project see the [landing page](https://majamassarini.github.io/automate-home).\n\nFor suggestions, questions or anything else, please, write here: [discussions](https://github.com/majamassarini/automate-home/discussions).\n\n## Contributing\n\nPull requests are welcome!\n\n## License\n\nThe automate-home project is licensed under GPL3.\n\n## Example projects\n\nThe following are some example projects. \n\nThese links point to a **statical html example** of the final GUI you will obtain using the configuration files, \nand to a github project with all the configuration files:\n\n * [lights models](https://majamassarini.github.io/automate-lights-example/pages/172.31.10.243/index.html) ([configuration](https://github.com/majamassarini/automate-lights-example))\n * [curtain models](https://majamassarini.github.io/automate-curtains-example/pages/172.31.10.244/index.html) ([configuration](https://github.com/majamassarini/automate-curtains-example))\n * [sound player model](https://majamassarini.github.io/automate-sound-player-example/pages/172.31.10.247/index.html) ([configuration](https://github.com/majamassarini/automate-sound-player-example))\n\nIdeally, you should be able to use the configuration files in the examples by changing: \n * the ```configuration.ini``` file, adjusting the paths and the ip addresses;\n * the files in the ```performer``` directory, modifying the devices addresses \n   (if you have devices speaking the same protocol);\n * you can also change automation details in the ```scheduler_triggers``` directory\n\nMaybe, this page can help me clarify what I mean: [landing page](https://majamassarini.github.io/automate-home).\n\nWhen, the project configuration files fits your needs, you can use them in different ways.\n\n### Installation\n\n#### Docker image\n\nYou can use the following docker image \n\n```shell\ndocker pull majamassarini/automate-home:latest\n```\n\n#### Yocto build\n\nYou can build your personal Linux image with the automate-home framework for your favorite \nhardware using this [yocto distro meta layer](https://github.com/majamassarini/meta-automate-home).\n\n#### Pip install\n\nYou can just pip install it, but you will not obtain nor the KNX USBHID daemon or the graphite server.\n\n```shell\npip install automate-ws\n\npython -m home --configuration-file configuration.ini\npython -m ws --configuration-file configuration.ini\npython -m graphite_feeder --configuration-file configuration.ini\n```\n\n## GUI Example\n\n### Latest events\n\n![https://github.com/majamassarini/automate-home/blob/main/docs/images/last_events.png](docs/images/last_events.png)\n\n### Devices collections\n\n![https://github.com/majamassarini/automate-home/blob/main/docs/images/devices_collections.png](docs/images/devices_collections.png)\n\n### Lights\n\n![https://github.com/majamassarini/automate-home/blob/main/docs/images/lights_collection.png](docs/images/lights_collection.png)\n\n### State of a light\n\n![https://github.com/majamassarini/automate-home/blob/main/docs/images/light_state.png](docs/images/light_state.png)\n\n### Events history for a light\n\n![https://github.com/majamassarini/automate-home/blob/main/docs/images/light_history.png](docs/images/light_history.png)\n\n### Events graphs for a light\n\n![https://github.com/majamassarini/automate-home/blob/main/docs/images/light_graphs.png](docs/images/light_graphs.png)\n\n\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/majamassarini/automate-home","keywords":"","license":"GPLv3","maintainer":"","maintainer_email":"","name":"automate-home","package_url":"https://pypi.org/project/automate-home/","platform":"","project_url":"https://pypi.org/project/automate-home/","project_urls":{"Homepage":"https://github.com/majamassarini/automate-home"},"provides_extra":null,"release_url":"https://pypi.org/project/automate-home/0.9.1/","requires_dist":["APScheduler","hiredis","aioredis (==1.3.1)","pyephem","pytz","PyYAML"],"requires_python":"","summary":"A python3 library to automate (home) devices","version":"0.9.1","yanked":false,"yanked_reason":null},"last_serial":12323292,"releases":{"0.9.0":[{"comment_text":"","digests":{"blake2b_256":"ab7400a3e14bf2e7ff8b1fcd13ad79ce12ea2184b30fdca21219e13d0ed02922","md5":"75b378c0923a647790cdc94b95860aca","sha256":"26615921ef3b2651e859dff53a796a71aa8152d848e69342771ddaf2795e7fe3"},"downloads":-1,"filename":"automate-home-0.9.0.tar.gz","has_sig":false,"md5_digest":"75b378c0923a647790cdc94b95860aca","packagetype":"sdist","python_version":"source","requires_python":null,"size":116028,"upload_time":"2021-12-15T21:45:03","upload_time_iso_8601":"2021-12-15T21:45:03.007408Z","url":"https://files.pythonhosted.org/packages/ab/74/00a3e14bf2e7ff8b1fcd13ad79ce12ea2184b30fdca21219e13d0ed02922/automate-home-0.9.0.tar.gz","yanked":false,"yanked_reason":null}],"0.9.1":[{"comment_text":"","digests":{"blake2b_256":"bddc5b2273c0bb8656809b25241bf922284bb8c5514ee8f7e7054ca3aaee4527","md5":"5dfbc7519b3b3125c39adadb42f65eaf","sha256":"a08da556b06a085b4947527ff573cbd90a96a516b2aea6da7e2f70560a15340f"},"downloads":-1,"filename":"automate_home-0.9.1-py3-none-any.whl","has_sig":false,"md5_digest":"5dfbc7519b3b3125c39adadb42f65eaf","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":359595,"upload_time":"2021-12-16T11:33:44","upload_time_iso_8601":"2021-12-16T11:33:44.769374Z","url":"https://files.pythonhosted.org/packages/bd/dc/5b2273c0bb8656809b25241bf922284bb8c5514ee8f7e7054ca3aaee4527/automate_home-0.9.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"60174b016b902896b2d475d1c4fb448dcb3a97adcaa9e7cd957d0361a7b23101","md5":"c9ed862028064b921c3a98ca1fad2086","sha256":"e35a9df8a3d2aceadcce4a2fc1786dde2adb7189587a1059d47678e3265ee1c3"},"downloads":-1,"filename":"automate-home-0.9.1.tar.gz","has_sig":false,"md5_digest":"c9ed862028064b921c3a98ca1fad2086","packagetype":"sdist","python_version":"source","requires_python":null,"size":126241,"upload_time":"2021-12-16T11:33:46","upload_time_iso_8601":"2021-12-16T11:33:46.576938Z","url":"https://files.pythonhosted.org/packages/60/17/4b016b902896b2d475d1c4fb448dcb3a97adcaa9e7cd957d0361a7b23101/automate-home-0.9.1.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"bddc5b2273c0bb8656809b25241bf922284bb8c5514ee8f7e7054ca3aaee4527","md5":"5dfbc7519b3b3125c39adadb42f65eaf","sha256":"a08da556b06a085b4947527ff573cbd90a96a516b2aea6da7e2f70560a15340f"},"downloads":-1,"filename":"automate_home-0.9.1-py3-none-any.whl","has_sig":false,"md5_digest":"5dfbc7519b3b3125c39adadb42f65eaf","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":359595,"upload_time":"2021-12-16T11:33:44","upload_time_iso_8601":"2021-12-16T11:33:44.769374Z","url":"https://files.pythonhosted.org/packages/bd/dc/5b2273c0bb8656809b25241bf922284bb8c5514ee8f7e7054ca3aaee4527/automate_home-0.9.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"60174b016b902896b2d475d1c4fb448dcb3a97adcaa9e7cd957d0361a7b23101","md5":"c9ed862028064b921c3a98ca1fad2086","sha256":"e35a9df8a3d2aceadcce4a2fc1786dde2adb7189587a1059d47678e3265ee1c3"},"downloads":-1,"filename":"automate-home-0.9.1.tar.gz","has_sig":false,"md5_digest":"c9ed862028064b921c3a98ca1fad2086","packagetype":"sdist","python_version":"source","requires_python":null,"size":126241,"upload_time":"2021-12-16T11:33:46","upload_time_iso_8601":"2021-12-16T11:33:46.576938Z","url":"https://files.pythonhosted.org/packages/60/17/4b016b902896b2d475d1c4fb448dcb3a97adcaa9e7cd957d0361a7b23101/automate-home-0.9.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
