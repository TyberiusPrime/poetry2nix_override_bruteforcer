{"info":{"author":"","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Programming Language :: Python :: 3.9","Topic :: Scientific/Engineering :: Artificial Intelligence"],"description":"# ðŸ¦© OpenFlamingo\n\n[![PyPI version](https://badge.fury.io/py/open_flamingo.svg)](https://badge.fury.io/py/open_flamingo)\n\n[Paper](https://arxiv.org/abs/2308.01390) | Blog posts: [1](https://laion.ai/blog/open-flamingo/), [2](https://laion.ai/blog/open-flamingo-v2/) | [Demo](https://huggingface.co/spaces/openflamingo/OpenFlamingo)\n\nWelcome to our open source implementation of DeepMind's [Flamingo](https://www.deepmind.com/blog/tackling-multiple-tasks-with-a-single-visual-language-model)! \n\nIn this repository, we provide a PyTorch implementation for training and evaluating OpenFlamingo models.\nIf you have any questions, please feel free to open an issue. We also welcome contributions!\n\n# Table of Contents\n- [Installation](#installation)\n- [Approach](#approach)\n  * [Model architecture](#model-architecture)\n- [Usage](#usage)\n  * [Initializing an OpenFlamingo model](#initializing-an-openflamingo-model)\n  * [Generating text](#generating-text)\n- [Training](#training)\n  * [Dataset](#dataset)\n- [Evaluation](#evaluation)\n- [Future plans](#future-plans)\n- [Team](#team)\n- [Acknowledgments](#acknowledgments)\n- [Citing](#citing)\n\n# Installation\n\nTo install the package in an existing environment, run \n```\npip install open-flamingo\n```\n\nor to create a conda environment for running OpenFlamingo, run\n```\nconda env create -f environment.yml\n```\n\nTo install training or eval dependencies, run one of the first two commands. To install everything, run the third command.\n```\npip install open-flamingo[training]\npip install open-flamingo[eval]\npip install open-flamingo[all]\n```\n\nThere are three `requirements.txt` files: \n- `requirements.txt` \n- `requirements-training.txt`\n- `requirements-eval.txt`\n\nDepending on your use case, you can install any of these with `pip install -r <requirements-file.txt>`. The base file contains only the dependencies needed for running the model.\n\n# Approach\nOpenFlamingo is a multimodal language model that can be used for a variety of tasks. It is trained on a large multimodal dataset (e.g. Multimodal C4) and can be used to generate text conditioned on interleaved images/text. For example, OpenFlamingo can be used to generate a caption for an image, or to generate a question given an image and a text passage. The benefit of this approach is that we are able to rapidly adapt to new tasks using in-context learning.\n\n## Model architecture\nOpenFlamingo combines a pretrained vision encoder and a language model using cross attention layers. The model architecture is shown below.\n\n![OpenFlamingo architecture](docs/flamingo.png) \nCredit: [Flamingo](https://www.deepmind.com/blog/tackling-multiple-tasks-with-a-single-visual-language-model)\n\n# Usage\n## Initializing an OpenFlamingo model\nWe support pretrained vision encoders from the [OpenCLIP](https://github.com/mlfoundations/open_clip) package, which includes OpenAI's pretrained models. \nWe also support pretrained language models from the `transformers` package, such as [MPT](https://huggingface.co/models?search=mosaicml%20mpt), [RedPajama](https://huggingface.co/models?search=redpajama), [LLaMA](https://huggingface.co/models?search=llama), [OPT](https://huggingface.co/models?search=opt), [GPT-Neo](https://huggingface.co/models?search=gpt-neo), [GPT-J](https://huggingface.co/models?search=gptj), and [Pythia](https://huggingface.co/models?search=pythia) models.\n\n``` python\nfrom open_flamingo import create_model_and_transforms\n\nmodel, image_processor, tokenizer = create_model_and_transforms(\n    clip_vision_encoder_path=\"ViT-L-14\",\n    clip_vision_encoder_pretrained=\"openai\",\n    lang_encoder_path=\"anas-awadalla/mpt-1b-redpajama-200b\",\n    tokenizer_path=\"anas-awadalla/mpt-1b-redpajama-200b\",\n    cross_attn_every_n_layers=1\n)\n```\n\n## Released OpenFlamingo models\nWe have trained the following OpenFlamingo models so far.\n\n|# params|Language model|Vision encoder|Xattn interval*|COCO 4-shot CIDEr|VQAv2 4-shot Accuracy|Weights|\n|------------|--------------|--------------|----------|-----------|-------|----|\n|3B| mosaicml/mpt-1b-redpajama-200b | openai CLIP ViT-L/14 | 1 | 77.3 | 45.8 |[Link](https://huggingface.co/openflamingo/OpenFlamingo-3B-vitl-mpt1b)|\n|3B| mosaicml/mpt-1b-redpajama-200b-dolly | openai CLIP ViT-L/14 | 1 | 82.7 | 45.7 |[Link](https://huggingface.co/openflamingo/OpenFlamingo-3B-vitl-mpt1b-langinstruct)|\n|4B| togethercomputer/RedPajama-INCITE-Base-3B-v1 | openai CLIP ViT-L/14 | 2 | 81.8 | 49.0 | [Link](https://huggingface.co/openflamingo/OpenFlamingo-4B-vitl-rpj3b)|\n|4B| togethercomputer/RedPajama-INCITE-Instruct-3B-v1 | openai CLIP ViT-L/14 | 2 | 85.8 | 49.0 | [Link](https://huggingface.co/openflamingo/OpenFlamingo-4B-vitl-rpj3b-langinstruct)|\n|9B| mosaicml/mpt-7b | openai CLIP ViT-L/14 | 4 | 89.0 | 54.8 | [Link](https://huggingface.co/openflamingo/OpenFlamingo-9B-vitl-mpt7b)|\n\n*\\* Xattn interval refers to the `--cross_attn_every_n_layers` argument.*\n\nNote: as part of our v2 release, we have deprecated a previous LLaMA-based checkpoint. However, you can continue to use our older checkpoint using the new codebase.\n\n## Downloading pretrained weights\n\nTo instantiate an OpenFlamingo model with one of our released weights, initialize the model as above and use the following code.\n\n```python\n# grab model checkpoint from huggingface hub\nfrom huggingface_hub import hf_hub_download\nimport torch\n\ncheckpoint_path = hf_hub_download(\"openflamingo/OpenFlamingo-3B-vitl-mpt1b\", \"checkpoint.pt\")\nmodel.load_state_dict(torch.load(checkpoint_path), strict=False)\n```\n\n## Generating text\nBelow is an example of generating text conditioned on interleaved images/text. In particular, let's try few-shot image captioning.\n\n``` python\nfrom PIL import Image\nimport requests\nimport torch\n\n\"\"\"\nStep 1: Load images\n\"\"\"\ndemo_image_one = Image.open(\n    requests.get(\n        \"http://images.cocodataset.org/val2017/000000039769.jpg\", stream=True\n    ).raw\n)\n\ndemo_image_two = Image.open(\n    requests.get(\n        \"http://images.cocodataset.org/test-stuff2017/000000028137.jpg\",\n        stream=True\n    ).raw\n)\n\nquery_image = Image.open(\n    requests.get(\n        \"http://images.cocodataset.org/test-stuff2017/000000028352.jpg\", \n        stream=True\n    ).raw\n)\n\n\n\"\"\"\nStep 2: Preprocessing images\nDetails: For OpenFlamingo, we expect the image to be a torch tensor of shape \n batch_size x num_media x num_frames x channels x height x width. \n In this case batch_size = 1, num_media = 3, num_frames = 1,\n channels = 3, height = 224, width = 224.\n\"\"\"\nvision_x = [image_processor(demo_image_one).unsqueeze(0), image_processor(demo_image_two).unsqueeze(0), image_processor(query_image).unsqueeze(0)]\nvision_x = torch.cat(vision_x, dim=0)\nvision_x = vision_x.unsqueeze(1).unsqueeze(0)\n\n\"\"\"\nStep 3: Preprocessing text\nDetails: In the text we expect an <image> special token to indicate where an image is.\n We also expect an <|endofchunk|> special token to indicate the end of the text \n portion associated with an image.\n\"\"\"\ntokenizer.padding_side = \"left\" # For generation padding tokens should be on the left\nlang_x = tokenizer(\n    [\"<image>An image of two cats.<|endofchunk|><image>An image of a bathroom sink.<|endofchunk|><image>An image of\"],\n    return_tensors=\"pt\",\n)\n\n\n\"\"\"\nStep 4: Generate text\n\"\"\"\ngenerated_text = model.generate(\n    vision_x=vision_x,\n    lang_x=lang_x[\"input_ids\"],\n    attention_mask=lang_x[\"attention_mask\"],\n    max_new_tokens=20,\n    num_beams=3,\n)\n\nprint(\"Generated text: \", tokenizer.decode(generated_text[0]))\n```\n\n# Training\nWe provide training scripts in `open_flamingo/train`. We provide an example Slurm script in `open_flamingo/scripts/run_train.py`, as well as the following example command:\n```\ntorchrun --nnodes=1 --nproc_per_node=4 open_flamingo/train/train.py \\\n  --lm_path anas-awadalla/mpt-1b-redpajama-200b \\\n  --tokenizer_path anas-awadalla/mpt-1b-redpajama-200b \\\n  --cross_attn_every_n_layers 1 \\\n  --dataset_resampled \\\n  --batch_size_mmc4 32 \\\n  --batch_size_laion 64 \\\n  --train_num_samples_mmc4 125000\\\n  --train_num_samples_laion 250000 \\\n  --loss_multiplier_laion 0.2 \\\n  --workers=4 \\\n  --run_name OpenFlamingo-3B-vitl-mpt1b \\\n  --num_epochs 480 \\\n  --warmup_steps  1875 \\\n  --mmc4_textsim_threshold 0.24 \\\n  --laion_shards \"/path/to/shards/shard-{0000..0999}.tar\" \\\n  --mmc4_shards \"/path/to/shards/shard-{0000..0999}.tar\" \\\n  --report_to_wandb\n```\n\n*Note: The MPT-1B [base](https://huggingface.co/mosaicml/mpt-1b-redpajama-200b)  and [instruct](https://huggingface.co/mosaicml/mpt-1b-redpajama-200b-dolly) modeling code does not accept the `labels` kwarg or compute cross-entropy loss directly within `forward()`, as expected by our codebase. We suggest using a modified version of the MPT-1B models found [here](https://huggingface.co/anas-awadalla/mpt-1b-redpajama-200b) and [here](https://huggingface.co/anas-awadalla/mpt-1b-redpajama-200b-dolly).*\n\nFor more details, see our [training README](https://github.com/mlfoundations/open_flamingo/tree/main/open_flamingo/train).\n\n\n# Evaluation\nAn example evaluation script is at `open_flamingo/scripts/run_eval.sh`. Please see our [evaluation README](https://github.com/mlfoundations/open_flamingo/tree/main/open_flamingo/eval) for more details.\n\n\nTo run evaluations on OKVQA you will need to run the following command:\n```\nimport nltk\nnltk.download('wordnet')\n```\n\n\n# Future plans\n- [ ] Add support for video input\n\n# Team\n\nOpenFlamingo is developed by:\n\n[Anas Awadalla*](https://anas-awadalla.streamlit.app/), [Irena Gao*](https://i-gao.github.io/), [Joshua Gardner](https://homes.cs.washington.edu/~jpgard/), [Jack Hessel](https://jmhessel.com/), [Yusuf Hanafy](https://www.linkedin.com/in/yusufhanafy/), [Wanrong Zhu](https://wanrong-zhu.com/), [Kalyani Marathe](https://sites.google.com/uw.edu/kalyanimarathe/home?authuser=0), [Yonatan Bitton](https://yonatanbitton.github.io/), [Samir Gadre](https://sagadre.github.io/), [Shiori Sagawa](https://cs.stanford.edu/~ssagawa/), [Jenia Jitsev](https://scholar.google.de/citations?user=p1FuAMkAAAAJ&hl=en), [Simon Kornblith](https://simonster.com/), [Pang Wei Koh](https://koh.pw/), [Gabriel Ilharco](https://gabrielilharco.com/), [Mitchell Wortsman](https://mitchellnw.github.io/), [Ludwig Schmidt](https://people.csail.mit.edu/ludwigs/).\n\nThe team is primarily from the University of Washington, Stanford, AI2, UCSB, and Google.\n\n# Acknowledgments\nThis code is based on Lucidrains' [flamingo implementation](https://github.com/lucidrains/flamingo-pytorch) and David Hansmair's [flamingo-mini repo](https://github.com/dhansmair/flamingo-mini). Thank you for making your code public! We also thank the [OpenCLIP](https://github.com/mlfoundations/open_clip) team as we use their data loading code and take inspiration from their library design.\n\nWe would also like to thank [Jean-Baptiste Alayrac](https://www.jbalayrac.com) and [Antoine Miech](https://antoine77340.github.io) for their advice, [Rohan Taori](https://www.rohantaori.com/), [Nicholas Schiefer](https://nicholasschiefer.com/), [Deep Ganguli](https://hai.stanford.edu/people/deep-ganguli), [Thomas Liao](https://thomasliao.com/), [Tatsunori Hashimoto](https://thashim.github.io/), and [Nicholas Carlini](https://nicholas.carlini.com/) for their help with assessing the safety risks of our release, and to [Stability AI](https://stability.ai) for providing us with compute resources to train these models.\n\n# Citing\nIf you found this repository useful, please consider citing:\n\n```\n@software{anas_awadalla_2023_7733589,\n  author = {Awadalla, Anas and Gao, Irena and Gardner, Joshua and Hessel, Jack and Hanafy, Yusuf and Zhu, Wanrong and Marathe, Kalyani and Bitton, Yonatan and Gadre, Samir and Jitsev, Jenia and Kornblith, Simon and Koh, Pang Wei and Ilharco, Gabriel and Wortsman, Mitchell and Schmidt, Ludwig},\n  title = {OpenFlamingo},\n  month        = mar,\n  year         = 2023,\n  publisher    = {Zenodo},\n  version      = {v0.1.1},\n  doi          = {10.5281/zenodo.7733589},\n  url          = {https://doi.org/10.5281/zenodo.7733589}\n}\n```\n\n```\n@article{Alayrac2022FlamingoAV,\n  title={Flamingo: a Visual Language Model for Few-Shot Learning},\n  author={Jean-Baptiste Alayrac and Jeff Donahue and Pauline Luc and Antoine Miech and Iain Barr and Yana Hasson and Karel Lenc and Arthur Mensch and Katie Millican and Malcolm Reynolds and Roman Ring and Eliza Rutherford and Serkan Cabi and Tengda Han and Zhitao Gong and Sina Samangooei and Marianne Monteiro and Jacob Menick and Sebastian Borgeaud and Andy Brock and Aida Nematzadeh and Sahand Sharifzadeh and Mikolaj Binkowski and Ricardo Barreira and Oriol Vinyals and Andrew Zisserman and Karen Simonyan},\n  journal={ArXiv},\n  year={2022},\n  volume={abs/2204.14198}\n}\n```\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"machine learning","license":"MIT","maintainer":"","maintainer_email":"","name":"open-flamingo","package_url":"https://pypi.org/project/open-flamingo/","platform":null,"project_url":"https://pypi.org/project/open-flamingo/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/open-flamingo/2.0.1/","requires_dist":["einops","einops-exts","transformers >=4.28.1","torch ==2.0.1","pillow","open-clip-torch >=2.16.0","sentencepiece ==0.1.98","webdataset ; extra == 'all'","pillow ; extra == 'all'","nltk ; extra == 'all'","tqdm ; extra == 'all'","inflection ; extra == 'all'","pycocotools ; extra == 'all'","einops-exts ; extra == 'all'","wandb ; extra == 'all'","open-clip-torch >=2.16.0 ; extra == 'all'","torchvision ; extra == 'all'","transformers >=4.28.1 ; extra == 'all'","sentencepiece ==0.1.98 ; extra == 'all'","einops ; extra == 'all'","pycocoevalcap ; extra == 'all'","torch ==2.0.1 ; extra == 'all'","braceexpand ; extra == 'all'","scipy ; extra == 'all'","scipy ; extra == 'eval'","torchvision ; extra == 'eval'","nltk ; extra == 'eval'","inflection ; extra == 'eval'","pycocoevalcap ; extra == 'eval'","pycocotools ; extra == 'eval'","tqdm ; extra == 'eval'","wandb ; extra == 'training'","torchvision ; extra == 'training'","braceexpand ; extra == 'training'","webdataset ; extra == 'training'","tqdm ; extra == 'training'"],"requires_python":"","summary":"An open-source framework for training large multimodal models","version":"2.0.1","yanked":false,"yanked_reason":null},"last_serial":19318423,"releases":{"0.0.1":[{"comment_text":"","digests":{"blake2b_256":"c36b76346eb20ad46a1462c50c67bb6f3d7d6e63829815facfd6833832e5214c","md5":"96f3c51a8b4896ab57d427b57728a316","sha256":"570bfe13282a2656529adab787ff5f1d20cf1c39cab59ff5f71e2cf384378743"},"downloads":-1,"filename":"open_flamingo-0.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"96f3c51a8b4896ab57d427b57728a316","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":11341,"upload_time":"2023-03-28T16:50:19","upload_time_iso_8601":"2023-03-28T16:50:19.088140Z","url":"https://files.pythonhosted.org/packages/c3/6b/76346eb20ad46a1462c50c67bb6f3d7d6e63829815facfd6833832e5214c/open_flamingo-0.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8ffe47bbcdbd424783a208e0972d73a6277230693259bb1afef70b7bf30dfa29","md5":"393227409f5f6371b4a90603873a684d","sha256":"bb2523fb74db5b2696932d263b02acf321f07b83dce55219130e31056dd44c30"},"downloads":-1,"filename":"open_flamingo-0.0.1.tar.gz","has_sig":false,"md5_digest":"393227409f5f6371b4a90603873a684d","packagetype":"sdist","python_version":"source","requires_python":null,"size":7565,"upload_time":"2023-03-28T16:50:21","upload_time_iso_8601":"2023-03-28T16:50:21.196261Z","url":"https://files.pythonhosted.org/packages/8f/fe/47bbcdbd424783a208e0972d73a6277230693259bb1afef70b7bf30dfa29/open_flamingo-0.0.1.tar.gz","yanked":false,"yanked_reason":null}],"0.0.2":[{"comment_text":"","digests":{"blake2b_256":"1097a4caf7e1f6887d91268ca97de2f81cd09dee99ae430830c90ba778739ee3","md5":"637794c43758701f9b088062f2e16741","sha256":"9827197142828599458f95d8f46f48ba8732a986b2e3af5fe302e9c6741a8f32"},"downloads":-1,"filename":"open_flamingo-0.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"637794c43758701f9b088062f2e16741","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":57515,"upload_time":"2023-03-29T22:51:27","upload_time_iso_8601":"2023-03-29T22:51:27.282042Z","url":"https://files.pythonhosted.org/packages/10/97/a4caf7e1f6887d91268ca97de2f81cd09dee99ae430830c90ba778739ee3/open_flamingo-0.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"33854d67a8e21fd6e5268a65e3be8d456c1d20b838d9af53d3712e4a277752b8","md5":"665ea30a857a9e0523c485d5cd954a93","sha256":"bf211a6901fb624faa1bc449ee5d49fb66ef798fc74a7c3a8d0931355904d826"},"downloads":-1,"filename":"open_flamingo-0.0.2.tar.gz","has_sig":false,"md5_digest":"665ea30a857a9e0523c485d5cd954a93","packagetype":"sdist","python_version":"source","requires_python":null,"size":52873,"upload_time":"2023-03-29T22:51:29","upload_time_iso_8601":"2023-03-29T22:51:29.560763Z","url":"https://files.pythonhosted.org/packages/33/85/4d67a8e21fd6e5268a65e3be8d456c1d20b838d9af53d3712e4a277752b8/open_flamingo-0.0.2.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"74cd50d47662cf8078e11cb662146f26096ee3e3acdb139ff0c243364cea7dcd","md5":"d2b13b1d7c5b8a091ff837f366b0efed","sha256":"cbcc5ee51e03f7f43d72724341ff2b6ee277fc1fc931c0c262773af9cd888f4b"},"downloads":-1,"filename":"open_flamingo-1.0.1.tar.gz","has_sig":false,"md5_digest":"d2b13b1d7c5b8a091ff837f366b0efed","packagetype":"sdist","python_version":"source","requires_python":null,"size":5992,"upload_time":"2023-03-14T14:28:17","upload_time_iso_8601":"2023-03-14T14:28:17.600047Z","url":"https://files.pythonhosted.org/packages/74/cd/50d47662cf8078e11cb662146f26096ee3e3acdb139ff0c243364cea7dcd/open_flamingo-1.0.1.tar.gz","yanked":true,"yanked_reason":null}],"1.0.2":[{"comment_text":"","digests":{"blake2b_256":"434c5c2aed282fd03b53fbb1cfb6a29f84c0d33b62252dad4e995522f47752ba","md5":"b0fa5fe1c9f6d98640233a8fab952add","sha256":"6b47d0cc70f5cd5c175ff1cf4b509606e0a24af2ef6da326e5f78a0d705db65e"},"downloads":-1,"filename":"open_flamingo-1.0.2.tar.gz","has_sig":false,"md5_digest":"b0fa5fe1c9f6d98640233a8fab952add","packagetype":"sdist","python_version":"source","requires_python":null,"size":5990,"upload_time":"2023-03-14T14:29:41","upload_time_iso_8601":"2023-03-14T14:29:41.930821Z","url":"https://files.pythonhosted.org/packages/43/4c/5c2aed282fd03b53fbb1cfb6a29f84c0d33b62252dad4e995522f47752ba/open_flamingo-1.0.2.tar.gz","yanked":true,"yanked_reason":null}],"2.0.0":[{"comment_text":"","digests":{"blake2b_256":"ba19b1fc7b40dca199f8f1081782e8b3d963fc4add9b4b48369eb453a9e6e5ab","md5":"e55b3f5dfd6eec272dbef862d6a7e12d","sha256":"b5882c8bfc74a7ad57806fb0fc55dd3a04aa6749847525c18572bc60bad4c2a0"},"downloads":-1,"filename":"open_flamingo-2.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"e55b3f5dfd6eec272dbef862d6a7e12d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":67042,"upload_time":"2023-06-28T15:44:33","upload_time_iso_8601":"2023-06-28T15:44:33.099059Z","url":"https://files.pythonhosted.org/packages/ba/19/b1fc7b40dca199f8f1081782e8b3d963fc4add9b4b48369eb453a9e6e5ab/open_flamingo-2.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2891d43c7e5b88b0484db72037bc408e2822e3e9dc14dd8a07cd9f9712d3a726","md5":"9e4f890b1eaeadc6eac794aecfc15c33","sha256":"ab197aae4cab7f5ac11bc74c2f7f95a11bc24e024da5c2405e81fe9f211a6923"},"downloads":-1,"filename":"open_flamingo-2.0.0.tar.gz","has_sig":false,"md5_digest":"9e4f890b1eaeadc6eac794aecfc15c33","packagetype":"sdist","python_version":"source","requires_python":null,"size":60585,"upload_time":"2023-06-28T15:44:37","upload_time_iso_8601":"2023-06-28T15:44:37.646705Z","url":"https://files.pythonhosted.org/packages/28/91/d43c7e5b88b0484db72037bc408e2822e3e9dc14dd8a07cd9f9712d3a726/open_flamingo-2.0.0.tar.gz","yanked":false,"yanked_reason":null}],"2.0.1":[{"comment_text":"","digests":{"blake2b_256":"d973333607c174ca872a09246eb31a5d42732c20c6c6100693ab2ca8caea2625","md5":"7b525aa1712ffbab7356d0a58bf25f6e","sha256":"df55893ef74a0691f7ce54592c1ca155a8e246160e2a658086031bf6b5eddbc8"},"downloads":-1,"filename":"open_flamingo-2.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"7b525aa1712ffbab7356d0a58bf25f6e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":67205,"upload_time":"2023-08-15T19:18:55","upload_time_iso_8601":"2023-08-15T19:18:55.086090Z","url":"https://files.pythonhosted.org/packages/d9/73/333607c174ca872a09246eb31a5d42732c20c6c6100693ab2ca8caea2625/open_flamingo-2.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"617d539f9a6c8d9b5092a554cd37b9ad32772f45fa1c72b36d054736b8d4818d","md5":"dd063dec0075d85fcba9c65c5242a169","sha256":"97dcf78480aa31c7342b3f008d06b3864190464272d919fc61274fbdd7075a77"},"downloads":-1,"filename":"open_flamingo-2.0.1.tar.gz","has_sig":false,"md5_digest":"dd063dec0075d85fcba9c65c5242a169","packagetype":"sdist","python_version":"source","requires_python":null,"size":60277,"upload_time":"2023-08-15T19:18:56","upload_time_iso_8601":"2023-08-15T19:18:56.627207Z","url":"https://files.pythonhosted.org/packages/61/7d/539f9a6c8d9b5092a554cd37b9ad32772f45fa1c72b36d054736b8d4818d/open_flamingo-2.0.1.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"d973333607c174ca872a09246eb31a5d42732c20c6c6100693ab2ca8caea2625","md5":"7b525aa1712ffbab7356d0a58bf25f6e","sha256":"df55893ef74a0691f7ce54592c1ca155a8e246160e2a658086031bf6b5eddbc8"},"downloads":-1,"filename":"open_flamingo-2.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"7b525aa1712ffbab7356d0a58bf25f6e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":67205,"upload_time":"2023-08-15T19:18:55","upload_time_iso_8601":"2023-08-15T19:18:55.086090Z","url":"https://files.pythonhosted.org/packages/d9/73/333607c174ca872a09246eb31a5d42732c20c6c6100693ab2ca8caea2625/open_flamingo-2.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"617d539f9a6c8d9b5092a554cd37b9ad32772f45fa1c72b36d054736b8d4818d","md5":"dd063dec0075d85fcba9c65c5242a169","sha256":"97dcf78480aa31c7342b3f008d06b3864190464272d919fc61274fbdd7075a77"},"downloads":-1,"filename":"open_flamingo-2.0.1.tar.gz","has_sig":false,"md5_digest":"dd063dec0075d85fcba9c65c5242a169","packagetype":"sdist","python_version":"source","requires_python":null,"size":60277,"upload_time":"2023-08-15T19:18:56","upload_time_iso_8601":"2023-08-15T19:18:56.627207Z","url":"https://files.pythonhosted.org/packages/61/7d/539f9a6c8d9b5092a554cd37b9ad32772f45fa1c72b36d054736b8d4818d/open_flamingo-2.0.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
