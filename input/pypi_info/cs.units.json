{"info":{"author":"Cameron Simpson","author_email":"cs@cskk.id.au","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 3","Topic :: Software Development :: Libraries :: Python Modules"],"description":"Functions for decomposing nonnegative integers according to various unit scales\nand also parsing support for values written in scales.\n\n*Latest release 20220311*:\nNaming update: rename human* to decompose* to clarify that these decompose a number into a sequence of values on a scale.\n\nPresupplied scales:\n* `BINARY_BYTES_SCALE`: Binary units of (B)ytes, KiB, MiB, GiB etc.\n* `DECIMAL_BYTES_SCALE`: Decimal units of (B)ytes, KB, MB, GB etc.\n* `DECIMAL_SCALE`: Unit suffixes K, M, G etc.\n* `TIME_SCALE`: Units of (s)econds, (m)inutes, (h)ours, (d)ays and (w)eeks.\n* `UNSCALED_SCALE`: no units\n\n## Function `combine(components, scale)`\n\nCombine a sequence of value components as from `decompose()` into an integer.\n\n## Function `decompose(n, scale)`\n\nDecompose a nonnegative integer `n` into counts by unit from `scale`.\nReturns a list of `(modulus,UnitStep)` in order from smallest unit upward.\n\nParameters:\n* `n`: a nonnegative integer.\n* `scale`: a sequence of `UnitStep` or `(factor,unit[,max_width])`\n  where factor is the size factor to the following scale item\n  and `unit` is the designator of the unit.\n\n## Function `decompose_bytes(n)`\n\nDecompose a nonnegative integer `n` into counts by unit\nfrom `DECIMAL_BYTES_SCALE`.\n\n## Function `decompose_time(n, scale=None)`\n\nDecompose a nonnegative integer `n` into counts by unit\nfrom `TIME_SCALE`.\n\n## Function `geek_bytes(n)`\n\nDecompose a nonnegative integer `n` into counts by unit\nfrom `BINARY_BYTES_SCALE`.\n\n## Function `human(*args, **kwargs)`\n\nObsolete shim for `decompose()`.\n\n## Function `human_bytes(*args, **kwargs)`\n\nObsolete shim for `decompose_bytes()`.\n\n## Function `human_time(*args, **kwargs)`\n\nObsolete shim for `decompose_time()`.\n\n## Function `multiparse(s, scales, offset=0)`\n\nParse an integer followed by an optional scale and return computed value.\nReturns the parsed value and the new offset.\n\nParameters:\n* `s`: the string to parse.\n* `scales`: an iterable of scale arrays of (factor, unit_name).\n* `offset`: starting position for parse.\n\n## Function `parse(s, scale, offset=0)`\n\nParse an integer followed by an optional scale and return computed value.\nReturns the parsed value and the new offset.\n\nParameters:\n* `s`: the string to parse.\n* `scale`: a scale array of (factor, unit_name).\n* `offset`: starting position for parse.\n\n## Function `transcribe(n, scale, max_parts=None, skip_zero=False, sep='', no_pad=False)`\n\nTranscribe a nonnegative integer `n` against `scale`.\n\nParameters:\n* `n`: a nonnegative integer.\n* `scale`: a sequence of (factor, unit) where factor is the\n  size factor to the follow scale and `unit` is the designator\n  of the unit.\n* `max_parts`: the maximum number of components to transcribe.\n* `skip_zero`: omit components of value 0.\n* `sep`: separator between words, default: `''`.\n\n## Function `transcribe_bytes_decompose(n, max_parts=1, **kw)`\n\nTranscribe a nonnegative integer `n` against `DECIMAL_BYTES_SCALE`.\n\n## Function `transcribe_bytes_geek(n, max_parts=1, **kw)`\n\nTranscribe a nonnegative integer `n` against `BINARY_BYTES_SCALE`.\n\n## Function `transcribe_time(n, max_parts=3, **kw)`\n\nTranscribe a nonnegative integer `n` against `TIME_SCALE`.\n\n## Class `UnitStep(UnitStep, builtins.tuple)`\n\nA `namedtuple` expressing a scale step for a unit scale.\nThe last tuple in a scale should have `factor=0`.\n\nAttributes:\n* `factor`: the scale factor for the unit in terms of the following unit.\n  For example, `60` for seconds because there are `60` in the\n  next unit, minutes.\n* `unit`: the textual abbreviation for the unit.\n  For example, `'s'` for seconds.\n* `max_width`: the maximum width for a modulus of this unit.\n  For example, `2` for seconds because the maximum value is less than `100`.\n\n# Release Log\n\n\n\n*Release 20220311*:\nNaming update: rename human* to decompose* to clarify that these decompose a number into a sequence of values on a scale.\n\n*Release 20210809*:\nUpdate parse() for new structure in the scale definitions.\n\n*Release 20210717*:\ntranscribe: pad units by default, produces less jitter in dynamic displays like progress bars.\n\n*Release 20201025*:\ntranscribe: use str(count_i), not str(count) if count == count_i.\n\n*Release 20200718*:\nUse str.isalpha to recognise \"unit\" words instead of string.ascii_letters (uses new cs.lex.get_chars \"callable gochars\" mode).\n\n*Release 20200626*:\ntranscribe: use \"%.1f\" to format the count if it is not == int(count) ==> a float-with-fraction.\n\n*Release 20200613*:\nNew UNSCALED_SCALE for no units.\n\n*Release 20190220*:\nDependency fix.\n\n*Release 20181228*:\nInitial PyPI release.\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://bitbucket.org/cameron_simpson/css/commits/all","keywords":"python2,python3","license":"GNU General Public License v3 or later (GPLv3+)","maintainer":"","maintainer_email":"","name":"cs.units","package_url":"https://pypi.org/project/cs.units/","platform":null,"project_url":"https://pypi.org/project/cs.units/","project_urls":{"Homepage":"https://bitbucket.org/cameron_simpson/css/commits/all"},"provides_extra":null,"release_url":"https://pypi.org/project/cs.units/20220311/","requires_dist":null,"requires_python":"","summary":"Functions for decomposing nonnegative integers according to various unit scales and also parsing support for values written in scales.","version":"20220311","yanked":false,"yanked_reason":null},"last_serial":13143180,"releases":{"20181228":[{"comment_text":"","digests":{"blake2b_256":"812a8ab5be6b4745386144920122901908d9a6404a9561c166460c97475850a3","md5":"77887fb59b2bab9b669baca3e0973dfd","sha256":"4e2c4cf63356e4d2ae6faa65d46afe4ed23564b925afed068aee988d114e3490"},"downloads":-1,"filename":"cs.units-20181228.tar.gz","has_sig":false,"md5_digest":"77887fb59b2bab9b669baca3e0973dfd","packagetype":"sdist","python_version":"source","requires_python":null,"size":3362,"upload_time":"2018-12-28T04:49:42","upload_time_iso_8601":"2018-12-28T04:49:42.110989Z","url":"https://files.pythonhosted.org/packages/81/2a/8ab5be6b4745386144920122901908d9a6404a9561c166460c97475850a3/cs.units-20181228.tar.gz","yanked":false,"yanked_reason":null}],"20190220":[{"comment_text":"","digests":{"blake2b_256":"6b137794a385106c4a11745f1a7886a20910648962a482e6d359804903f6f134","md5":"a96684c67655da4391ab160689b6445c","sha256":"d2a35267eb0056f7bab72f1e279bab01fc07ed8cad14b68198a8b65aea74ac82"},"downloads":-1,"filename":"cs.units-20190220.tar.gz","has_sig":false,"md5_digest":"a96684c67655da4391ab160689b6445c","packagetype":"sdist","python_version":"source","requires_python":null,"size":3413,"upload_time":"2019-02-20T09:28:19","upload_time_iso_8601":"2019-02-20T09:28:19.018428Z","url":"https://files.pythonhosted.org/packages/6b/13/7794a385106c4a11745f1a7886a20910648962a482e6d359804903f6f134/cs.units-20190220.tar.gz","yanked":false,"yanked_reason":null}],"20200613":[{"comment_text":"","digests":{"blake2b_256":"f7a36afbe66127be2178e0945cae7fc55cd5241584c6f1a1fbdfc64e220cb0d8","md5":"3fb1dabe20e57e2f0704ea6ec5844268","sha256":"f86c804c22a2444ba75758640a331239b763d87b62a009abbc26f549744a1104"},"downloads":-1,"filename":"cs.units-20200613.tar.gz","has_sig":false,"md5_digest":"3fb1dabe20e57e2f0704ea6ec5844268","packagetype":"sdist","python_version":"source","requires_python":null,"size":3827,"upload_time":"2020-06-13T05:23:26","upload_time_iso_8601":"2020-06-13T05:23:26.819548Z","url":"https://files.pythonhosted.org/packages/f7/a3/6afbe66127be2178e0945cae7fc55cd5241584c6f1a1fbdfc64e220cb0d8/cs.units-20200613.tar.gz","yanked":false,"yanked_reason":null}],"20200626":[{"comment_text":"","digests":{"blake2b_256":"ff698dccf223c95974427f031822c6f927e6a5517e500c0ed939ca7a50221c38","md5":"78e4c0e407b31ae7baa0667d6ca99580","sha256":"058d7ae395fa6cab2e8f60e662dcfb73c97e53d2f8e617e97f841d7eb45f2588"},"downloads":-1,"filename":"cs.units-20200626.tar.gz","has_sig":false,"md5_digest":"78e4c0e407b31ae7baa0667d6ca99580","packagetype":"sdist","python_version":"source","requires_python":null,"size":3933,"upload_time":"2020-06-26T00:53:44","upload_time_iso_8601":"2020-06-26T00:53:44.845943Z","url":"https://files.pythonhosted.org/packages/ff/69/8dccf223c95974427f031822c6f927e6a5517e500c0ed939ca7a50221c38/cs.units-20200626.tar.gz","yanked":false,"yanked_reason":null}],"20200718":[{"comment_text":"","digests":{"blake2b_256":"247868f98d12cdde7195decb80034cd06cfba61251d3b82e724a35a0f05a8f61","md5":"e1535556da566b9ddf6806c912353136","sha256":"73c0902d01c671e88e92b9b528aa00918672aa085ed1ab2a854c5ff18da76651"},"downloads":-1,"filename":"cs.units-20200718.tar.gz","has_sig":false,"md5_digest":"e1535556da566b9ddf6806c912353136","packagetype":"sdist","python_version":"source","requires_python":null,"size":4391,"upload_time":"2020-07-18T09:15:28","upload_time_iso_8601":"2020-07-18T09:15:28.932502Z","url":"https://files.pythonhosted.org/packages/24/78/68f98d12cdde7195decb80034cd06cfba61251d3b82e724a35a0f05a8f61/cs.units-20200718.tar.gz","yanked":false,"yanked_reason":null}],"20201025":[{"comment_text":"","digests":{"blake2b_256":"cbe34a97945450a767268ff6f35b398d4d430db6c66c24955e79febbe47fb740","md5":"f3f1a70c13073853a80d0815d68107d6","sha256":"319eb8a42b3cd69e52f2efe4fbaa30b66a1956ba690c3a498dce12872b1df604"},"downloads":-1,"filename":"cs.units-20201025.tar.gz","has_sig":false,"md5_digest":"f3f1a70c13073853a80d0815d68107d6","packagetype":"sdist","python_version":"source","requires_python":null,"size":4449,"upload_time":"2020-10-25T05:30:38","upload_time_iso_8601":"2020-10-25T05:30:38.623711Z","url":"https://files.pythonhosted.org/packages/cb/e3/4a97945450a767268ff6f35b398d4d430db6c66c24955e79febbe47fb740/cs.units-20201025.tar.gz","yanked":false,"yanked_reason":null}],"20210717":[{"comment_text":"","digests":{"blake2b_256":"17b56a7e292fad3a96b0fb980d9e35b417221f5648a5296777b1093d4e32025f","md5":"9fd6db3ed0883d68b677c795340fa7b2","sha256":"69cfc077ce2f2ae353dcaa550290758c1f45441937125b5c121faf40a0d7519d"},"downloads":-1,"filename":"cs.units-20210717.tar.gz","has_sig":false,"md5_digest":"9fd6db3ed0883d68b677c795340fa7b2","packagetype":"sdist","python_version":"source","requires_python":null,"size":5125,"upload_time":"2021-07-17T01:59:37","upload_time_iso_8601":"2021-07-17T01:59:37.420878Z","url":"https://files.pythonhosted.org/packages/17/b5/6a7e292fad3a96b0fb980d9e35b417221f5648a5296777b1093d4e32025f/cs.units-20210717.tar.gz","yanked":false,"yanked_reason":null}],"20210809":[{"comment_text":"","digests":{"blake2b_256":"77c0e2e718dd26b0d9e767a0ae9a1b0efe51ac5a6656769a96e9c552398586d9","md5":"cf4ee0573b1d656f3cda4c5bf359c2b1","sha256":"5a991f45e13aeecc129bd1023d147f3d54637167b0f3637ff63bac4d2ff643ce"},"downloads":-1,"filename":"cs.units-20210809.tar.gz","has_sig":false,"md5_digest":"cf4ee0573b1d656f3cda4c5bf359c2b1","packagetype":"sdist","python_version":"source","requires_python":null,"size":5192,"upload_time":"2021-08-09T01:04:41","upload_time_iso_8601":"2021-08-09T01:04:41.467105Z","url":"https://files.pythonhosted.org/packages/77/c0/e2e718dd26b0d9e767a0ae9a1b0efe51ac5a6656769a96e9c552398586d9/cs.units-20210809.tar.gz","yanked":false,"yanked_reason":null}],"20220311":[{"comment_text":"","digests":{"blake2b_256":"d5c7bb5841adb292ed39bff6db9f9815952ef44f33951f5274f7e8d82351ba02","md5":"27ff91788bb7ea2c1a726cd4fa485aa2","sha256":"ab9c120d802c355c5c679710f73a9c938ed806ac1981d072085100d19ac1e17e"},"downloads":-1,"filename":"cs.units-20220311.tar.gz","has_sig":false,"md5_digest":"27ff91788bb7ea2c1a726cd4fa485aa2","packagetype":"sdist","python_version":"source","requires_python":null,"size":5237,"upload_time":"2022-03-10T22:26:57","upload_time_iso_8601":"2022-03-10T22:26:57.260769Z","url":"https://files.pythonhosted.org/packages/d5/c7/bb5841adb292ed39bff6db9f9815952ef44f33951f5274f7e8d82351ba02/cs.units-20220311.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"d5c7bb5841adb292ed39bff6db9f9815952ef44f33951f5274f7e8d82351ba02","md5":"27ff91788bb7ea2c1a726cd4fa485aa2","sha256":"ab9c120d802c355c5c679710f73a9c938ed806ac1981d072085100d19ac1e17e"},"downloads":-1,"filename":"cs.units-20220311.tar.gz","has_sig":false,"md5_digest":"27ff91788bb7ea2c1a726cd4fa485aa2","packagetype":"sdist","python_version":"source","requires_python":null,"size":5237,"upload_time":"2022-03-10T22:26:57","upload_time_iso_8601":"2022-03-10T22:26:57.260769Z","url":"https://files.pythonhosted.org/packages/d5/c7/bb5841adb292ed39bff6db9f9815952ef44f33951f5274f7e8d82351ba02/cs.units-20220311.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
