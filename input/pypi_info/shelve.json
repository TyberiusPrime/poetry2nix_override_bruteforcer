{"info":{"author":"Ton van den Heuvel","author_email":"tonvandenheuvel@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 2 - Pre-Alpha","Environment :: Console","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: POSIX","Topic :: Software Development :: Version Control","Topic :: Utilities"],"description":"Shelve command-line tool\n------------------------\n\nThis shelve command-line tool ``shelve.py`` supports shelving changes for\nMercurial and Subversion (1.7.x+) repositories similar to ``git stash``.  One\nmajor difference with ``git stash`` is that changes are not stored in a stack,\nbut rather as a named patch in a predefined location (``~/.shelf``).\n\nShelve allows to user to temporarily shelve all changes in a dirty working\ndirectory away to the shelf. All changes in the repository are reverted, and the\nrepository is back in a clean state.\n\nUsage\n=====\n\nTo temporarily shelve all changes including all added and removed files in a\nrepository issue:\n\n.. code-block:: none\n\n    $ shelve.py <patch name>\n\n``<patch name>`` is a user-defined name that describes the contents of the\npatch. In case a patch with the given name already exists, shelve will ask to\nuser to either overwrite the existing patch, or specify an alternative name for\nthe patch. The shelve command can be issued from any path within a repository,\nprovided it is either a Mercurial or Subversion respository.\n\nAll changes that are shelved in this way can be inspected using ``shelve.py\n-l``, and shown using ``shelve.py -s <patch name>``.\n\nChanges that were previously saved can be restored again using ``shelve.py -a\n<patch name>``,  potentially on top of a different commit. In case the changes\napplied cleanly to the current repository, the entry for the patch is\nautomatically removed from the shelf.  Otherwise, the files will be merged in\nplace (similar to ``merge``), and the patch will remain in the shelf.\n\nFor more information on the usage of shelve:\n\n.. code-block:: none\n\n    $ shelve.py -h\n\nBash completion support\n=======================\n\nWhen installing shelve, a command-line completion script is automatically\ninstalled to ``/etc/bash_completion.d``. This provides support for auto\ncompleting patch names in Bash.","description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/ton/shelve","keywords":null,"license":"BSD","maintainer":null,"maintainer_email":null,"name":"shelve","package_url":"https://pypi.org/project/shelve/","platform":"UNKNOWN","project_url":"https://pypi.org/project/shelve/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/ton/shelve"},"provides_extra":null,"release_url":"https://pypi.org/project/shelve/0.0.1/","requires_dist":null,"requires_python":null,"summary":"Shelve changes for source code repositories similar to `git stash`.","version":"0.0.1","yanked":false,"yanked_reason":null},"last_serial":356452,"releases":{"0.0.1":[]},"urls":[],"vulnerabilities":[]}
