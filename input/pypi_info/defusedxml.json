{"info":{"author":"Christian Heimes","author_email":"christian@python.org","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: Python Software Foundation License","Natural Language :: English","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Topic :: Text Processing :: Markup :: XML"],"description":"===================================================\ndefusedxml -- defusing XML bombs and other exploits\n===================================================\n\n.. image:: https://img.shields.io/pypi/v/defusedxml.svg\n    :target: https://pypi.org/project/defusedxml/\n    :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/pyversions/defusedxml.svg\n    :target: https://pypi.org/project/defusedxml/\n    :alt: Supported Python versions\n\n.. image:: https://travis-ci.org/tiran/defusedxml.svg?branch=master\n    :target: https://travis-ci.org/tiran/defusedxml\n    :alt: Travis CI\n\n.. image:: https://codecov.io/github/tiran/defusedxml/coverage.svg?branch=master\n    :target: https://codecov.io/github/tiran/defusedxml?branch=master\n    :alt: codecov\n\n.. image:: https://img.shields.io/pypi/dm/defusedxml.svg\n    :target: https://pypistats.org/packages/defusedxml\n    :alt: PyPI downloads\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n    :alt: Code style: black\n\n..\n\n    \"It's just XML, what could probably go wrong?\"\n\nChristian Heimes <christian@python.org>\n\nSynopsis\n========\n\nThe results of an attack on a vulnerable XML library can be fairly dramatic.\nWith just a few hundred **Bytes** of XML data an attacker can occupy several\n**Gigabytes** of memory within **seconds**. An attacker can also keep\nCPUs busy for a long time with a small to medium size request. Under some\ncircumstances it is even possible to access local files on your\nserver, to circumvent a firewall, or to abuse services to rebound attacks to\nthird parties.\n\nThe attacks use and abuse less common features of XML and its parsers. The\nmajority of developers are unacquainted with features such as processing\ninstructions and entity expansions that XML inherited from SGML. At best\nthey know about ``<!DOCTYPE>`` from experience with HTML but they are not\naware that a document type definition (DTD) can generate an HTTP request\nor load a file from the file system.\n\nNone of the issues is new. They have been known for a long time. Billion\nlaughs was first reported in 2003. Nevertheless some XML libraries and\napplications are still vulnerable and even heavy users of XML are\nsurprised by these features. It's hard to say whom to blame for the\nsituation. It's too short sighted to shift all blame on XML parsers and\nXML libraries for using insecure default settings. After all they\nproperly implement XML specifications. Application developers must not rely\nthat a library is always configured for security and potential harmful data\nby default.\n\n\n.. contents:: Table of Contents\n   :depth: 2\n\n\nAttack vectors\n==============\n\nbillion laughs / exponential entity expansion\n---------------------------------------------\n\nThe `Billion Laughs`_ attack -- also known as exponential entity expansion --\nuses multiple levels of nested entities. The original example uses 9 levels\nof 10 expansions in each level to expand the string ``lol`` to a string of\n3 * 10 :sup:`9` bytes, hence the name \"billion laughs\". The resulting string\noccupies 3 GB (2.79 GiB) of memory; intermediate strings require additional\nmemory. Because most parsers don't cache the intermediate step for every\nexpansion it is repeated over and over again. It increases the CPU load even\nmore.\n\nAn XML document of just a few hundred bytes can disrupt all services on a\nmachine within seconds.\n\nExample XML::\n\n    <!DOCTYPE xmlbomb [\n    <!ENTITY a \"1234567890\" >\n    <!ENTITY b \"&a;&a;&a;&a;&a;&a;&a;&a;\">\n    <!ENTITY c \"&b;&b;&b;&b;&b;&b;&b;&b;\">\n    <!ENTITY d \"&c;&c;&c;&c;&c;&c;&c;&c;\">\n    ]>\n    <bomb>&d;</bomb>\n\n\nquadratic blowup entity expansion\n---------------------------------\n\nA quadratic blowup attack is similar to a `Billion Laughs`_ attack; it abuses\nentity expansion, too. Instead of nested entities it repeats one large entity\nwith a couple of thousand chars over and over again. The attack isn't as\nefficient as the exponential case but it avoids triggering countermeasures of\nparsers against heavily nested entities. Some parsers limit the depth and\nbreadth of a single entity but not the total amount of expanded text\nthroughout an entire XML document.\n\nA medium-sized XML document with a couple of hundred kilobytes can require a\ncouple of hundred MB to several GB of memory. When the attack is combined\nwith some level of nested expansion an attacker is able to achieve a higher\nratio of success.\n\n::\n\n    <!DOCTYPE bomb [\n    <!ENTITY a \"xxxxxxx... a couple of ten thousand chars\">\n    ]>\n    <bomb>&a;&a;&a;... repeat</bomb>\n\n\nexternal entity expansion (remote)\n----------------------------------\n\nEntity declarations can contain more than just text for replacement. They can\nalso point to external resources by public identifiers or system identifiers.\nSystem identifiers are standard URIs. When the URI is a URL (e.g. a\n``http://`` locator) some parsers download the resource from the remote\nlocation and embed them into the XML document verbatim.\n\nSimple example of a parsed external entity::\n\n    <!DOCTYPE external [\n    <!ENTITY ee SYSTEM \"http://www.python.org/some.xml\">\n    ]>\n    <root>&ee;</root>\n\nThe case of parsed external entities works only for valid XML content. The\nXML standard also supports unparsed external entities with a\n``NData declaration``.\n\nExternal entity expansion opens the door to plenty of exploits. An attacker\ncan abuse a vulnerable XML library and application to rebound and forward\nnetwork requests with the IP address of the server. It highly depends\non the parser and the application what kind of exploit is possible. For\nexample:\n\n* An attacker can circumvent firewalls and gain access to restricted\n  resources as all the requests are made from an internal and trustworthy\n  IP address, not from the outside.\n* An attacker can abuse a service to attack, spy on or DoS your servers but\n  also third party services. The attack is disguised with the IP address of\n  the server and the attacker is able to utilize the high bandwidth of a big\n  machine.\n* An attacker can exhaust additional resources on the machine, e.g. with\n  requests to a service that doesn't respond or responds with very large\n  files.\n* An attacker may gain knowledge, when, how often and from which IP address\n  an XML document is accessed.\n* An attacker could send mail from inside your network if the URL handler\n  supports ``smtp://`` URIs.\n\n\nexternal entity expansion (local file)\n--------------------------------------\n\nExternal entities with references to local files are a sub-case of external\nentity expansion. It's listed as an extra attack because it deserves extra\nattention. Some XML libraries such as lxml disable network access by default\nbut still allow entity expansion with local file access by default. Local\nfiles are either referenced with a ``file://`` URL or by a file path (either\nrelative or absolute).\n\nAn attacker may be able to access and download all files that can be read by\nthe application process. This may include critical configuration files, too.\n\n::\n\n    <!DOCTYPE external [\n    <!ENTITY ee SYSTEM \"file:///PATH/TO/simple.xml\">\n    ]>\n    <root>&ee;</root>\n\n\nDTD retrieval\n-------------\n\nThis case is similar to external entity expansion, too. Some XML libraries\nlike Python's xml.dom.pulldom retrieve document type definitions from remote\nor local locations. Several attack scenarios from the external entity case\napply to this issue as well.\n\n::\n\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n      \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n    <html>\n        <head/>\n        <body>text</body>\n    </html>\n\n\nPython XML Libraries\n====================\n\n.. csv-table:: vulnerabilities and features\n   :header: \"kind\", \"sax\", \"etree\", \"minidom\", \"pulldom\", \"xmlrpc\", \"lxml\", \"genshi\"\n   :widths: 24, 7, 8, 8, 7, 8, 8, 8\n   :stub-columns: 0\n\n   \"billion laughs\", \"**True**\", \"**True**\", \"**True**\", \"**True**\", \"**True**\", \"False (1)\", \"False (5)\"\n   \"quadratic blowup\", \"**True**\", \"**True**\", \"**True**\", \"**True**\", \"**True**\", \"**True**\", \"False (5)\"\n   \"external entity expansion (remote)\", \"**True**\", \"False (3)\", \"False (4)\", \"**True**\", \"false\", \"False (1)\", \"False (5)\"\n   \"external entity expansion (local file)\", \"**True**\", \"False (3)\", \"False (4)\", \"**True**\", \"false\", \"**True**\", \"False (5)\"\n   \"DTD retrieval\", \"**True**\", \"False\", \"False\", \"**True**\", \"false\", \"False (1)\", \"False\"\n   \"gzip bomb\", \"False\", \"False\", \"False\", \"False\", \"**True**\", \"**partly** (2)\", \"False\"\n   \"xpath support (7)\", \"False\", \"False\", \"False\", \"False\", \"False\", \"**True**\", \"False\"\n   \"xsl(t) support (7)\", \"False\", \"False\", \"False\", \"False\", \"False\", \"**True**\", \"False\"\n   \"xinclude support (7)\", \"False\", \"**True** (6)\", \"False\", \"False\", \"False\", \"**True** (6)\", \"**True**\"\n   \"C library\", \"expat\", \"expat\", \"expat\", \"expat\", \"expat\", \"libxml2\", \"expat\"\n\n1. Lxml is protected against billion laughs attacks and doesn't do network\n   lookups by default.\n2. libxml2 and lxml are not directly vulnerable to gzip decompression bombs\n   but they don't protect you against them either.\n3. xml.etree doesn't expand entities and raises a ParserError when an entity\n   occurs.\n4. minidom doesn't expand entities and simply returns the unexpanded entity\n   verbatim.\n5. genshi.input of genshi 0.6 doesn't support entity expansion and raises a\n   ParserError when an entity occurs.\n6. Library has (limited) XInclude support but requires an additional step to\n   process inclusion.\n7. These are features but they may introduce exploitable holes, see\n   `Other things to consider`_\n\n\nSettings in standard library\n----------------------------\n\n\nxml.sax.handler Features\n........................\n\nfeature_external_ges (http://xml.org/sax/features/external-general-entities)\n  disables external entity expansion\n\nfeature_external_pes (http://xml.org/sax/features/external-parameter-entities)\n  the option is ignored and doesn't modify any functionality\n\nDOM xml.dom.xmlbuilder.Options\n..............................\n\nexternal_parameter_entities\n  ignored\n\nexternal_general_entities\n  ignored\n\nexternal_dtd_subset\n  ignored\n\nentities\n  unsure\n\n\ndefusedxml\n==========\n\nThe `defusedxml package`_ (`defusedxml on PyPI`_)\ncontains several Python-only workarounds and fixes\nfor denial of service and other vulnerabilities in Python's XML libraries.\nIn order to benefit from the protection you just have to import and use the\nlisted functions / classes from the right defusedxml module instead of the\noriginal module. Merely `defusedxml.xmlrpc`_ is implemented as monkey patch.\n\nInstead of::\n\n   >>> from xml.etree.ElementTree import parse\n   >>> et = parse(xmlfile)\n\nalter code to::\n\n   >>> from defusedxml.ElementTree import parse\n   >>> et = parse(xmlfile)\n\nAdditionally the package has an **untested** function to monkey patch\nall stdlib modules with ``defusedxml.defuse_stdlib()``.\n\nAll functions and parser classes accept three additional keyword arguments.\nThey return either the same objects as the original functions or compatible\nsubclasses.\n\nforbid_dtd (default: False)\n  disallow XML with a ``<!DOCTYPE>`` processing instruction and raise a\n  *DTDForbidden* exception when a DTD processing instruction is found.\n\nforbid_entities (default: True)\n  disallow XML with ``<!ENTITY>`` declarations inside the DTD and raise an\n  *EntitiesForbidden* exception when an entity is declared.\n\nforbid_external (default: True)\n  disallow any access to remote or local resources in external entities\n  or DTD and raising an *ExternalReferenceForbidden* exception when a DTD\n  or entity references an external resource.\n\n\ndefusedxml (package)\n--------------------\n\nDefusedXmlException, DTDForbidden, EntitiesForbidden,\nExternalReferenceForbidden, NotSupportedError\n\ndefuse_stdlib() (*experimental*)\n\n\ndefusedxml.cElementTree\n-----------------------\n\n**NOTE** ``defusedxml.cElementTree`` is deprecated and will be removed in a\nfuture release. Import from ``defusedxml.ElementTree`` instead.\n\nparse(), iterparse(), fromstring(), XMLParser\n\n\ndefusedxml.ElementTree\n-----------------------\n\nparse(), iterparse(), fromstring(), XMLParser\n\n\ndefusedxml.expatreader\n----------------------\n\ncreate_parser(), DefusedExpatParser\n\n\ndefusedxml.sax\n--------------\n\nparse(), parseString(), make_parser()\n\n\ndefusedxml.expatbuilder\n-----------------------\n\nparse(), parseString(), DefusedExpatBuilder, DefusedExpatBuilderNS\n\n\ndefusedxml.minidom\n------------------\n\nparse(), parseString()\n\n\ndefusedxml.pulldom\n------------------\n\nparse(), parseString()\n\n\ndefusedxml.xmlrpc\n-----------------\n\nThe fix is implemented as monkey patch for the stdlib's xmlrpc package (3.x)\nor xmlrpclib module (2.x). The function `monkey_patch()` enables the fixes,\n`unmonkey_patch()` removes the patch and puts the code in its former state.\n\nThe monkey patch protects against XML related attacks as well as\ndecompression bombs and excessively large requests or responses. The default\nsetting is 30 MB for requests, responses and gzip decompression. You can\nmodify the default by changing the module variable `MAX_DATA`. A value of\n`-1` disables the limit.\n\n\ndefusedxml.lxml\n---------------\n\n**DEPRECATED** The module is deprecated and will be removed in a future\nrelease.\n\nThe module acts as an *example* how you could protect code that uses\nlxml.etree. It implements a custom Element class that filters out\nEntity instances, a custom parser factory and a thread local storage for\nparser instances. It also has a check_docinfo() function which inspects\na tree for internal or external DTDs and entity declarations. In order to\ncheck for entities lxml > 3.0 is required.\n\nparse(), fromstring()\nRestrictedElement, GlobalParserTLS, getDefaultParser(), check_docinfo()\n\n\ndefusedexpat\n============\n\nThe `defusedexpat package`_ (`defusedexpat on PyPI`_)\ncomes with binary extensions and a\n`modified expat`_ library instead of the standard `expat parser`_. It's\nbasically a stand-alone version of the patches for Python's standard\nlibrary C extensions.\n\nModifications in expat\n----------------------\n\nnew definitions::\n\n  XML_BOMB_PROTECTION\n  XML_DEFAULT_MAX_ENTITY_INDIRECTIONS\n  XML_DEFAULT_MAX_ENTITY_EXPANSIONS\n  XML_DEFAULT_RESET_DTD\n\nnew XML_FeatureEnum members::\n\n  XML_FEATURE_MAX_ENTITY_INDIRECTIONS\n  XML_FEATURE_MAX_ENTITY_EXPANSIONS\n  XML_FEATURE_IGNORE_DTD\n\nnew XML_Error members::\n\n  XML_ERROR_ENTITY_INDIRECTIONS\n  XML_ERROR_ENTITY_EXPANSION\n\nnew API functions::\n\n  int XML_GetFeature(XML_Parser parser,\n                     enum XML_FeatureEnum feature,\n                     long *value);\n  int XML_SetFeature(XML_Parser parser,\n                     enum XML_FeatureEnum feature,\n                     long value);\n  int XML_GetFeatureDefault(enum XML_FeatureEnum feature,\n                            long *value);\n  int XML_SetFeatureDefault(enum XML_FeatureEnum feature,\n                            long value);\n\nXML_FEATURE_MAX_ENTITY_INDIRECTIONS\n   Limit the amount of indirections that are allowed to occur during the\n   expansion of a nested entity. A counter starts when an entity reference\n   is encountered. It resets after the entity is fully expanded. The limit\n   protects the parser against exponential entity expansion attacks (aka\n   billion laughs attack). When the limit is exceeded the parser stops and\n   fails with `XML_ERROR_ENTITY_INDIRECTIONS`.\n   A value of 0 disables the protection.\n\n   Supported range\n     0 .. UINT_MAX\n   Default\n     40\n\nXML_FEATURE_MAX_ENTITY_EXPANSIONS\n   Limit the total length of all entity expansions throughout the entire\n   document. The lengths of all entities are accumulated in a parser variable.\n   The setting protects against quadratic blowup attacks (lots of expansions\n   of a large entity declaration). When the sum of all entities exceeds\n   the limit, the parser stops and fails with `XML_ERROR_ENTITY_EXPANSION`.\n   A value of 0 disables the protection.\n\n   Supported range\n     0 .. UINT_MAX\n   Default\n     8 MiB\n\nXML_FEATURE_RESET_DTD\n   Reset all DTD information after the <!DOCTYPE> block has been parsed. When\n   the flag is set (default: false) all DTD information after the\n   endDoctypeDeclHandler has been called. The flag can be set inside the\n   endDoctypeDeclHandler. Without DTD information any entity reference in\n   the document body leads to `XML_ERROR_UNDEFINED_ENTITY`.\n\n   Supported range\n     0, 1\n   Default\n     0\n\n\nHow to avoid XML vulnerabilities\n================================\n\nBest practices\n--------------\n\n* Don't allow DTDs\n* Don't expand entities\n* Don't resolve externals\n* Limit parse depth\n* Limit total input size\n* Limit parse time\n* Favor a SAX or iterparse-like parser for potential large data\n* Validate and properly quote arguments to XSL transformations and\n  XPath queries\n* Don't use XPath expression from untrusted sources\n* Don't apply XSL transformations that come untrusted sources\n\n(based on Brad Hill's `Attacking XML Security`_)\n\n\nOther things to consider\n========================\n\nXML, XML parsers and processing libraries have more features and possible\nissue that could lead to DoS vulnerabilities or security exploits in\napplications. I have compiled an incomplete list of theoretical issues that\nneed further research and more attention. The list is deliberately pessimistic\nand a bit paranoid, too. It contains things that might go wrong under daffy\ncircumstances.\n\n\nattribute blowup / hash collision attack\n----------------------------------------\n\nXML parsers may use an algorithm with quadratic runtime O(n :sup:`2`) to\nhandle attributes and namespaces. If it uses hash tables (dictionaries) to\nstore attributes and namespaces the implementation may be vulnerable to\nhash collision attacks, thus reducing the performance to O(n :sup:`2`) again.\nIn either case an attacker is able to forge a denial of service attack with\nan XML document that contains thousands upon thousands of attributes in\na single node.\n\nI haven't researched yet if expat, pyexpat or libxml2 are vulnerable.\n\n\ndecompression bomb\n------------------\n\nThe issue of decompression bombs (aka `ZIP bomb`_) apply to all XML libraries\nthat can parse compressed XML stream like gzipped HTTP streams or LZMA-ed\nfiles. For an attacker it can reduce the amount of transmitted data by three\nmagnitudes or more. Gzip is able to compress 1 GiB zeros to roughly 1 MB,\nlzma is even better::\n\n    $ dd if=/dev/zero bs=1M count=1024 | gzip > zeros.gz\n    $ dd if=/dev/zero bs=1M count=1024 | lzma -z > zeros.xy\n    $ ls -sh zeros.*\n    1020K zeros.gz\n     148K zeros.xy\n\nNone of Python's standard XML libraries decompress streams except for\n``xmlrpclib``. The module is vulnerable <https://bugs.python.org/issue16043>\nto decompression bombs.\n\nlxml can load and process compressed data through libxml2 transparently.\nlibxml2 can handle even very large blobs of compressed data efficiently\nwithout using too much memory. But it doesn't protect applications from\ndecompression bombs. A carefully written SAX or iterparse-like approach can\nbe safe.\n\n\nProcessing Instruction\n----------------------\n\n`PI`_'s like::\n\n  <?xml-stylesheet type=\"text/xsl\" href=\"style.xsl\"?>\n\nmay impose more threats for XML processing. It depends if and how a\nprocessor handles processing instructions. The issue of URL retrieval with\nnetwork or local file access apply to processing instructions, too.\n\n\nOther DTD features\n------------------\n\n`DTD`_ has more features like ``<!NOTATION>``. I haven't researched how\nthese features may be a security threat.\n\n\nXPath\n-----\n\nXPath statements may introduce DoS vulnerabilities. Code should never execute\nqueries from untrusted sources. An attacker may also be able to create an XML\ndocument that makes certain XPath queries costly or resource hungry.\n\n\nXPath injection attacks\n-----------------------\n\nXPath injeciton attacks pretty much work like SQL injection attacks.\nArguments to XPath queries must be quoted and validated properly, especially\nwhen they are taken from the user. The page `Avoid the dangers of XPath injection`_\nlist some ramifications of XPath injections.\n\nPython's standard library doesn't have XPath support. Lxml supports\nparameterized XPath queries which does proper quoting. You just have to use\nits xpath() method correctly::\n\n   # DON'T\n   >>> tree.xpath(\"/tag[@id='%s']\" % value)\n\n   # instead do\n   >>> tree.xpath(\"/tag[@id=$tagid]\", tagid=name)\n\n\nXInclude\n--------\n\n`XML Inclusion`_ is another way to load and include external files::\n\n   <root xmlns:xi=\"http://www.w3.org/2001/XInclude\">\n     <xi:include href=\"filename.txt\" parse=\"text\" />\n   </root>\n\nThis feature should be disabled when XML files from an untrusted source are\nprocessed. Some Python XML libraries and libxml2 support XInclude but don't\nhave an option to sandbox inclusion and limit it to allowed directories.\n\n\nXMLSchema location\n------------------\n\nA validating XML parser may download schema files from the information in a\n``xsi:schemaLocation`` attribute.\n\n::\n\n  <ead xmlns=\"urn:isbn:1-931666-22-9\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"urn:isbn:1-931666-22-9 http://www.loc.gov/ead/ead.xsd\">\n  </ead>\n\n\nXSL Transformation\n------------------\n\nYou should keep in mind that XSLT is a Turing complete language. Never\nprocess XSLT code from unknown or untrusted source! XSLT processors may\nallow you to interact with external resources in ways you can't even imagine.\nSome processors even support extensions that allow read/write access to file\nsystem, access to JRE objects or scripting with Jython.\n\nExample from `Attacking XML Security`_ for Xalan-J::\n\n    <xsl:stylesheet version=\"1.0\"\n     xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n     xmlns:rt=\"http://xml.apache.org/xalan/java/java.lang.Runtime\"\n     xmlns:ob=\"http://xml.apache.org/xalan/java/java.lang.Object\"\n     exclude-result-prefixes= \"rt ob\">\n     <xsl:template match=\"/\">\n       <xsl:variable name=\"runtimeObject\" select=\"rt:getRuntime()\"/>\n       <xsl:variable name=\"command\"\n         select=\"rt:exec($runtimeObject, &apos;c:\\Windows\\system32\\cmd.exe&apos;)\"/>\n       <xsl:variable name=\"commandAsString\" select=\"ob:toString($command)\"/>\n       <xsl:value-of select=\"$commandAsString\"/>\n     </xsl:template>\n    </xsl:stylesheet>\n\n\nRelated CVEs\n============\n\nCVE-2013-1664\n  Unrestricted entity expansion induces DoS vulnerabilities in Python XML\n  libraries (XML bomb)\n\nCVE-2013-1665\n  External entity expansion in Python XML libraries inflicts potential\n  security flaws and DoS vulnerabilities\n\n\nOther languages / frameworks\n=============================\n\nSeveral other programming languages and frameworks are vulnerable as well. A\ncouple of them are affected by the fact that libxml2 up to 2.9.0 has no\nprotection against quadratic blowup attacks. Most of them have potential\ndangerous default settings for entity expansion and external entities, too.\n\nPerl\n----\n\nPerl's XML::Simple is vulnerable to quadratic entity expansion and external\nentity expansion (both local and remote).\n\n\nRuby\n----\n\nRuby's REXML document parser is vulnerable to entity expansion attacks\n(both quadratic and exponential) but it doesn't do external entity\nexpansion by default. In order to counteract entity expansion you have to\ndisable the feature::\n\n  REXML::Document.entity_expansion_limit = 0\n\nlibxml-ruby and hpricot don't expand entities in their default configuration.\n\n\nPHP\n---\n\nPHP's SimpleXML API is vulnerable to quadratic entity expansion and loads\nentities from local and remote resources. The option ``LIBXML_NONET`` disables\nnetwork access but still allows local file access. ``LIBXML_NOENT`` seems to\nhave no effect on entity expansion in PHP 5.4.6.\n\n\nC# / .NET / Mono\n----------------\n\nInformation in `XML DoS and Defenses (MSDN)`_ suggest that .NET is\nvulnerable with its default settings. The article contains code snippets\nhow to create a secure XML reader::\n\n  XmlReaderSettings settings = new XmlReaderSettings();\n  settings.ProhibitDtd = false;\n  settings.MaxCharactersFromEntities = 1024;\n  settings.XmlResolver = null;\n  XmlReader reader = XmlReader.Create(stream, settings);\n\n\nJava\n----\n\nUntested. The documentation of Xerces and its `Xerces SecurityMananger`_\nsounds like Xerces is also vulnerable to billion laugh attacks with its\ndefault settings. It also does entity resolving when an\n``org.xml.sax.EntityResolver`` is configured. I'm not yet sure about the\ndefault setting here.\n\nJava specialists suggest to have a custom builder factory::\n\n  DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();\n  builderFactory.setXIncludeAware(False);\n  builderFactory.setExpandEntityReferences(False);\n  builderFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, True);\n  # either\n  builderFactory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", True);\n  # or if you need DTDs\n  builderFactory.setFeature(\"http://xml.org/sax/features/external-general-entities\", False);\n  builderFactory.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", False);\n  builderFactory.setFeature(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\", False);\n  builderFactory.setFeature(\"http://apache.org/xml/features/nonvalidating/load-dtd-grammar\", False);\n\n\nTODO\n====\n\n* DOM: Use xml.dom.xmlbuilder options for entity handling\n* SAX: take feature_external_ges and feature_external_pes (?) into account\n* test experimental monkey patching of stdlib modules\n* improve documentation\n\n\nLicense\n=======\n\nCopyright (c) 2013-2017 by Christian Heimes <christian@python.org>\n\nLicensed to PSF under a Contributor Agreement.\n\nSee https://www.python.org/psf/license for licensing details.\n\n\nAcknowledgements\n================\n\nBrett Cannon (Python Core developer)\n  review and code cleanup\n\nAntoine Pitrou (Python Core developer)\n  code review\n\nAaron Patterson, Ben Murphy and Michael Koziarski (Ruby community)\n  Many thanks to Aaron, Ben and Michael from the Ruby community for their\n  report and assistance.\n\nThierry Carrez (OpenStack)\n  Many thanks to Thierry for his report to the Python Security Response\n  Team on behalf of the OpenStack security team.\n\nCarl Meyer (Django)\n  Many thanks to Carl for his report to PSRT on behalf of the Django security\n  team.\n\nDaniel Veillard (libxml2)\n  Many thanks to Daniel for his insight and assistance with libxml2.\n\nsemantics GmbH (https://www.semantics.de/)\n  Many thanks to my employer semantics for letting me work on the issue\n  during working hours as part of semantics's open source initiative.\n\n\nReferences\n==========\n\n* `XML DoS and Defenses (MSDN)`_\n* `Billion Laughs`_ on Wikipedia\n* `ZIP bomb`_ on Wikipedia\n* `Configure SAX parsers for secure processing`_\n* `Testing for XML Injection`_\n\n.. _defusedxml package: https://github.com/tiran/defusedxml\n.. _defusedxml on PyPI: https://pypi.python.org/pypi/defusedxml\n.. _defusedexpat package: https://github.com/tiran/defusedexpat\n.. _defusedexpat on PyPI: https://pypi.python.org/pypi/defusedexpat\n.. _modified expat: https://github.com/tiran/expat\n.. _expat parser: http://expat.sourceforge.net/\n.. _Attacking XML Security: https://www.isecpartners.com/media/12976/iSEC-HILL-Attacking-XML-Security-bh07.pdf\n.. _Billion Laughs: https://en.wikipedia.org/wiki/Billion_laughs\n.. _XML DoS and Defenses (MSDN): https://msdn.microsoft.com/en-us/magazine/ee335713.aspx\n.. _ZIP bomb: https://en.wikipedia.org/wiki/Zip_bomb\n.. _DTD: https://en.wikipedia.org/wiki/Document_Type_Definition\n.. _PI: https://en.wikipedia.org/wiki/Processing_Instruction\n.. _Avoid the dangers of XPath injection: http://www.ibm.com/developerworks/xml/library/x-xpathinjection/index.html\n.. _Configure SAX parsers for secure processing: http://www.ibm.com/developerworks/xml/library/x-tipcfsx/index.html\n.. _Testing for XML Injection: https://www.owasp.org/index.php/Testing_for_XML_Injection_(OWASP-DV-008)\n.. _Xerces SecurityMananger: https://xerces.apache.org/xerces2-j/javadocs/xerces2/org/apache/xerces/util/SecurityManager.html\n.. _XML Inclusion: https://www.w3.org/TR/xinclude/#include_element\n\nChangelog\n=========\n\ndefusedxml 0.7.1\n---------------------\n\n*Release date: 08-Mar-2021*\n\n- Fix regression ``defusedxml.ElementTree.ParseError`` (#63)\n  The ``ParseError`` exception is now the same class object as\n  ``xml.etree.ElementTree.ParseError`` again.\n\n\ndefusedxml 0.7.0\n----------------\n\n*Release date: 4-Mar-2021*\n\n- No changes\n\n\ndefusedxml 0.7.0rc2\n-------------------\n\n*Release date: 12-Jan-2021*\n\n- Re-add and deprecate ``defusedxml.cElementTree``\n- Use GitHub Actions instead of TravisCI\n- Restore ``ElementTree`` attribute of ``xml.etree`` module after patching\n\ndefusedxml 0.7.0rc1\n-------------------\n\n*Release date: 04-May-2020*\n\n- Add support for Python 3.9\n- ``defusedxml.cElementTree`` is not available with Python 3.9.\n- Python 2 is deprecate. Support for Python 2 will be removed in 0.8.0.\n\n\ndefusedxml 0.6.0\n----------------\n\n*Release date: 17-Apr-2019*\n\n- Increase test coverage.\n- Add badges to README.\n\n\ndefusedxml 0.6.0rc1\n-------------------\n\n*Release date: 14-Apr-2019*\n\n- Test on Python 3.7 stable and 3.8-dev\n- Drop support for Python 3.4\n- No longer pass *html* argument to XMLParse. It has been deprecated and\n  ignored for a long time. The DefusedXMLParser still takes a html argument.\n  A deprecation warning is issued when the argument is False and a TypeError\n  when it's True.\n- defusedxml now fails early when pyexpat stdlib module is not available or\n  broken.\n- defusedxml.ElementTree.__all__ now lists ParseError as public attribute.\n- The defusedxml.ElementTree and defusedxml.cElementTree modules had a typo\n  and used XMLParse instead of XMLParser as an alias for DefusedXMLParser.\n  Both the old and fixed name are now available.\n\n\ndefusedxml 0.5.0\n----------------\n\n*Release date: 07-Feb-2017*\n\n- No changes\n\n\ndefusedxml 0.5.0.rc1\n--------------------\n\n*Release date: 28-Jan-2017*\n\n- Add compatibility with Python 3.6\n- Drop support for Python 2.6, 3.1, 3.2, 3.3\n- Fix lxml tests (XMLSyntaxError: Detected an entity reference loop)\n\n\ndefusedxml 0.4.1\n----------------\n\n*Release date: 28-Mar-2013*\n\n- Add more demo exploits, e.g. python_external.py and Xalan XSLT demos.\n- Improved documentation.\n\n\ndefusedxml 0.4\n--------------\n\n*Release date: 25-Feb-2013*\n\n- As per http://seclists.org/oss-sec/2013/q1/340 please REJECT\n  CVE-2013-0278, CVE-2013-0279 and CVE-2013-0280 and use CVE-2013-1664,\n  CVE-2013-1665 for OpenStack/etc.\n- Add missing parser_list argument to sax.make_parser(). The argument is\n  ignored, though. (thanks to Florian Apolloner)\n- Add demo exploit for external entity attack on Python's SAX parser, XML-RPC\n  and WebDAV.\n\n\ndefusedxml 0.3\n--------------\n\n*Release date: 19-Feb-2013*\n\n- Improve documentation\n\n\ndefusedxml 0.2\n--------------\n\n*Release date: 15-Feb-2013*\n\n- Rename ExternalEntitiesForbidden to ExternalReferenceForbidden\n- Rename defusedxml.lxml.check_dtd() to check_docinfo()\n- Unify argument names in callbacks\n- Add arguments and formatted representation to exceptions\n- Add forbid_external argument to all functions and classes\n- More tests\n- LOTS of documentation\n- Add example code for other languages (Ruby, Perl, PHP) and parsers (Genshi)\n- Add protection against XML and gzip attacks to xmlrpclib\n\ndefusedxml 0.1\n--------------\n\n*Release date: 08-Feb-2013*\n\n- Initial and internal release for PSRT review\n\n\n","description_content_type":"","docs_url":null,"download_url":"https://pypi.python.org/pypi/defusedxml","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/tiran/defusedxml","keywords":"xml bomb DoS","license":"PSFL","maintainer":"Christian Heimes","maintainer_email":"christian@python.org","name":"defusedxml","package_url":"https://pypi.org/project/defusedxml/","platform":"all","project_url":"https://pypi.org/project/defusedxml/","project_urls":{"Download":"https://pypi.python.org/pypi/defusedxml","Homepage":"https://github.com/tiran/defusedxml"},"provides_extra":null,"release_url":"https://pypi.org/project/defusedxml/0.7.1/","requires_dist":null,"requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","summary":"XML bomb protection for Python stdlib modules","version":"0.7.1","yanked":false,"yanked_reason":null},"last_serial":19948735,"releases":{"0.3":[{"comment_text":"","digests":{"blake2b_256":"b011cb91fd91d878fc993a43236622e29b7bec93bcc3be29b78a0fcd5c87ff38","md5":"0d3f8ea5a1bc2c4221ac2d7fc320ae8b","sha256":"b7e655a01dba57a86fc996aa9b0d10a3d25bdc90a0fc89149125d5fff9a3f469"},"downloads":-1,"filename":"defusedxml-0.3.tar.gz","has_sig":false,"md5_digest":"0d3f8ea5a1bc2c4221ac2d7fc320ae8b","packagetype":"sdist","python_version":"source","requires_python":null,"size":46558,"upload_time":"2013-02-19T15:05:02","upload_time_iso_8601":"2013-02-19T15:05:02.856156Z","url":"https://files.pythonhosted.org/packages/b0/11/cb91fd91d878fc993a43236622e29b7bec93bcc3be29b78a0fcd5c87ff38/defusedxml-0.3.tar.gz","yanked":true,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e5f9e3e703e3141fd4ba1047384015b8d90f924677ce6fabcb03dcd202b738ff","md5":"ea0eca7e804d5a05c57efd00c3e1ce69","sha256":"3fb72845179ee44bf4de8eb8863f13fc9140aa1517fc38bd5d89ec41a10e40e0"},"downloads":-1,"filename":"defusedxml-0.3.zip","has_sig":false,"md5_digest":"ea0eca7e804d5a05c57efd00c3e1ce69","packagetype":"sdist","python_version":"source","requires_python":null,"size":58518,"upload_time":"2013-02-19T15:05:05","upload_time_iso_8601":"2013-02-19T15:05:05.900986Z","url":"https://files.pythonhosted.org/packages/e5/f9/e3e703e3141fd4ba1047384015b8d90f924677ce6fabcb03dcd202b738ff/defusedxml-0.3.zip","yanked":true,"yanked_reason":null}],"0.4":[{"comment_text":"","digests":{"blake2b_256":"2d8c08f34d5d900f1292f5d9b935bfa98a02e1fd6623a51916babda4e0ddb3ab","md5":"09873c31ce773d48b8a4759571655a2c","sha256":"51445f028ed7bd793a1cd2f57b86f071d2072db52cb99e8025107d1c9e2e55d4"},"downloads":-1,"filename":"defusedxml-0.4.tar.gz","has_sig":false,"md5_digest":"09873c31ce773d48b8a4759571655a2c","packagetype":"sdist","python_version":"source","requires_python":null,"size":48324,"upload_time":"2013-02-25T11:09:51","upload_time_iso_8601":"2013-02-25T11:09:51.057522Z","url":"https://files.pythonhosted.org/packages/2d/8c/08f34d5d900f1292f5d9b935bfa98a02e1fd6623a51916babda4e0ddb3ab/defusedxml-0.4.tar.gz","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7a4ca342faf53e7a6db7307b2daa9be6cdbdd701c28d6578e1632e234b888e5e","md5":"c0eaf24125abbdb0c45da13fd87782f1","sha256":"91418368c30c8dc383c11ccd627a275dea8b8275108541152bb9210c3ac128ec"},"downloads":-1,"filename":"defusedxml-0.4.zip","has_sig":false,"md5_digest":"c0eaf24125abbdb0c45da13fd87782f1","packagetype":"sdist","python_version":"source","requires_python":null,"size":61238,"upload_time":"2013-02-25T11:09:58","upload_time_iso_8601":"2013-02-25T11:09:58.210285Z","url":"https://files.pythonhosted.org/packages/7a/4c/a342faf53e7a6db7307b2daa9be6cdbdd701c28d6578e1632e234b888e5e/defusedxml-0.4.zip","yanked":false,"yanked_reason":null}],"0.4.1":[{"comment_text":"","digests":{"blake2b_256":"093bb1afa9649f48517d027e99413fec54f387f648c90156b3cf6451c8cd45f9","md5":"230a5eff64f878b392478e30376d673a","sha256":"cd551d5a518b745407635bb85116eb813818ecaf182e773c35b36239fc3f2478"},"downloads":-1,"filename":"defusedxml-0.4.1.tar.gz","has_sig":false,"md5_digest":"230a5eff64f878b392478e30376d673a","packagetype":"sdist","python_version":"source","requires_python":null,"size":48889,"upload_time":"2013-03-28T11:24:21","upload_time_iso_8601":"2013-03-28T11:24:21.251049Z","url":"https://files.pythonhosted.org/packages/09/3b/b1afa9649f48517d027e99413fec54f387f648c90156b3cf6451c8cd45f9/defusedxml-0.4.1.tar.gz","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7e2ec4262962c776cea315e1ebc8883a58e672064c561da84f4b937cd69219dc","md5":"a2b7b92d06e5c24d299302f17d21d2b3","sha256":"1f7e2f6546caba6a52bcd6a6087df60c1cc63cdbc0d9ca3e5d517adcb5823d0c"},"downloads":-1,"filename":"defusedxml-0.4.1.zip","has_sig":false,"md5_digest":"a2b7b92d06e5c24d299302f17d21d2b3","packagetype":"sdist","python_version":"source","requires_python":null,"size":62003,"upload_time":"2013-03-28T11:24:18","upload_time_iso_8601":"2013-03-28T11:24:18.442944Z","url":"https://files.pythonhosted.org/packages/7e/2e/c4262962c776cea315e1ebc8883a58e672064c561da84f4b937cd69219dc/defusedxml-0.4.1.zip","yanked":false,"yanked_reason":null}],"0.5.0":[{"comment_text":"","digests":{"blake2b_256":"871c17f3e3935a913dfe2a5ca85fa5ccbef366bfd82eb318b1f75dadbf0affca","md5":"37b51c8903a7c7e5060b5773b1694199","sha256":"702a91ade2968a82beb0db1e0766a6a273f33d4616a6ce8cde475d8e09853b20"},"downloads":-1,"filename":"defusedxml-0.5.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"37b51c8903a7c7e5060b5773b1694199","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":33717,"upload_time":"2017-02-09T14:20:10","upload_time_iso_8601":"2017-02-09T14:20:10.092507Z","url":"https://files.pythonhosted.org/packages/87/1c/17f3e3935a913dfe2a5ca85fa5ccbef366bfd82eb318b1f75dadbf0affca/defusedxml-0.5.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"74ba4ba4e89e21b5a2e267d80736ea674609a0a33cc4435a6d748ef04f1f9374","md5":"7ff1501366c6d1dcd2de8514dc2b755e","sha256":"24d7f2f94f7f3cb6061acb215685e5125fbcdc40a857eff9de22518820b0a4f4"},"downloads":-1,"filename":"defusedxml-0.5.0.tar.gz","has_sig":false,"md5_digest":"7ff1501366c6d1dcd2de8514dc2b755e","packagetype":"sdist","python_version":"source","requires_python":null,"size":60405,"upload_time":"2017-02-09T14:20:13","upload_time_iso_8601":"2017-02-09T14:20:13.792385Z","url":"https://files.pythonhosted.org/packages/74/ba/4ba4e89e21b5a2e267d80736ea674609a0a33cc4435a6d748ef04f1f9374/defusedxml-0.5.0.tar.gz","yanked":false,"yanked_reason":null}],"0.5.0rc1":[{"comment_text":"","digests":{"blake2b_256":"37bb207c1fc22b68ed4e56cea2a042dc0e256128bad5cef25f20b388a4b55061","md5":"a5a5c5a36fd3ae73650090efd139178c","sha256":"3fd7a1d9f30d7b9c3edbc07503c169cc18901060e06568d2d2835866b12927d3"},"downloads":-1,"filename":"defusedxml-0.5.0rc1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"a5a5c5a36fd3ae73650090efd139178c","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":33726,"upload_time":"2017-01-28T13:55:12","upload_time_iso_8601":"2017-01-28T13:55:12.100675Z","url":"https://files.pythonhosted.org/packages/37/bb/207c1fc22b68ed4e56cea2a042dc0e256128bad5cef25f20b388a4b55061/defusedxml-0.5.0rc1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"24a5351a93b89fa8977abc41603ef0197b48b06e0086c249dd9920baf7129405","md5":"d64fd94318d5ca029d1258beb39021ac","sha256":"f31b526f618e9b95dd18afb3e537769e1322e3adc47845ba8890dbd7f8949ba4"},"downloads":-1,"filename":"defusedxml-0.5.0rc1.tar.gz","has_sig":false,"md5_digest":"d64fd94318d5ca029d1258beb39021ac","packagetype":"sdist","python_version":"source","requires_python":null,"size":60341,"upload_time":"2017-01-28T13:55:15","upload_time_iso_8601":"2017-01-28T13:55:15.664920Z","url":"https://files.pythonhosted.org/packages/24/a5/351a93b89fa8977abc41603ef0197b48b06e0086c249dd9920baf7129405/defusedxml-0.5.0rc1.tar.gz","yanked":false,"yanked_reason":null}],"0.6.0":[{"comment_text":"","digests":{"blake2b_256":"06749b387472866358ebc08732de3da6dc48e44b0aacd2ddaa5cb85ab7e986a2","md5":"02efabcb521dcec66151157842090c9e","sha256":"6687150770438374ab581bb7a1b327a847dd9c5749e396102de3fad4e8a3ef93"},"downloads":-1,"filename":"defusedxml-0.6.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"02efabcb521dcec66151157842090c9e","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","size":23690,"upload_time":"2019-04-17T21:11:02","upload_time_iso_8601":"2019-04-17T21:11:02.771669Z","url":"https://files.pythonhosted.org/packages/06/74/9b387472866358ebc08732de3da6dc48e44b0aacd2ddaa5cb85ab7e986a2/defusedxml-0.6.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a45ff8aa58ca0cf01cbcee728abc9d88bfeb74e95e6cb4334cfd5bed5673ea77","md5":"a59741f675c4cba649de40a99f732897","sha256":"f684034d135af4c6cbb949b8a4d2ed61634515257a67299e5f940fbaa34377f5"},"downloads":-1,"filename":"defusedxml-0.6.0.tar.gz","has_sig":false,"md5_digest":"a59741f675c4cba649de40a99f732897","packagetype":"sdist","python_version":"source","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","size":62670,"upload_time":"2019-04-17T21:11:06","upload_time_iso_8601":"2019-04-17T21:11:06.199716Z","url":"https://files.pythonhosted.org/packages/a4/5f/f8aa58ca0cf01cbcee728abc9d88bfeb74e95e6cb4334cfd5bed5673ea77/defusedxml-0.6.0.tar.gz","yanked":false,"yanked_reason":null}],"0.6.0rc1":[{"comment_text":"","digests":{"blake2b_256":"2df0428bdfb0fcb0c58711c4a488f95bf957cf9ad0923c37014f405e9582103e","md5":"dff9883d3fb0c281308ffc12b63c2827","sha256":"6c0b1461695877ececd6921a6a330e4392790275c5d6e88fc8ea8261445468b1"},"downloads":-1,"filename":"defusedxml-0.6.0rc1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"dff9883d3fb0c281308ffc12b63c2827","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","size":23404,"upload_time":"2019-04-14T12:04:50","upload_time_iso_8601":"2019-04-14T12:04:50.540088Z","url":"https://files.pythonhosted.org/packages/2d/f0/428bdfb0fcb0c58711c4a488f95bf957cf9ad0923c37014f405e9582103e/defusedxml-0.6.0rc1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"441e4ff0ef72609c0a1f7a4356abb75aff00501a228ba27a39d77d58ca3a1d1e","md5":"93ebd1e90c8cb5340c55997171ee8c42","sha256":"06d4515a8f8965624d6db922093eb11e77fb8f9a9ebedd1c5d6df5a0fcd0a12c"},"downloads":-1,"filename":"defusedxml-0.6.0rc1.tar.gz","has_sig":false,"md5_digest":"93ebd1e90c8cb5340c55997171ee8c42","packagetype":"sdist","python_version":"source","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","size":47744,"upload_time":"2019-04-14T12:04:52","upload_time_iso_8601":"2019-04-14T12:04:52.086128Z","url":"https://files.pythonhosted.org/packages/44/1e/4ff0ef72609c0a1f7a4356abb75aff00501a228ba27a39d77d58ca3a1d1e/defusedxml-0.6.0rc1.tar.gz","yanked":false,"yanked_reason":null}],"0.7.0":[{"comment_text":"","digests":{"blake2b_256":"bd50818096d5e27a4028942072235fe64c9899f784f9bf50363d573c081e29f8","md5":"a942d0b4f621c09fd5064331a0a61fac","sha256":"a290cad10346ed366c8a0133d868eaf6585ec6afdd0c511286cdb11f5fc3d285"},"downloads":-1,"filename":"defusedxml-0.7.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"a942d0b4f621c09fd5064331a0a61fac","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","size":25453,"upload_time":"2021-03-04T09:44:55","upload_time_iso_8601":"2021-03-04T09:44:55.060808Z","url":"https://files.pythonhosted.org/packages/bd/50/818096d5e27a4028942072235fe64c9899f784f9bf50363d573c081e29f8/defusedxml-0.7.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6b3bae8d82e550dfae7431a168aea58a50e6af619c1ef20d462045791e72fce0","md5":"883fee3ebd5404f93b6717a63bb025e0","sha256":"86b15d9e3c639de79f4cb38aeffea3281f62aff78dde7d798e1352c63bfa6ea0"},"downloads":-1,"filename":"defusedxml-0.7.0.tar.gz","has_sig":false,"md5_digest":"883fee3ebd5404f93b6717a63bb025e0","packagetype":"sdist","python_version":"source","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","size":74865,"upload_time":"2021-03-04T09:44:56","upload_time_iso_8601":"2021-03-04T09:44:56.953504Z","url":"https://files.pythonhosted.org/packages/6b/3b/ae8d82e550dfae7431a168aea58a50e6af619c1ef20d462045791e72fce0/defusedxml-0.7.0.tar.gz","yanked":false,"yanked_reason":null}],"0.7.0rc1":[{"comment_text":"","digests":{"blake2b_256":"177f837dffa94f8822a4c306ab3529f19d0c5f9c844ee507eee9b27f669c65e9","md5":"124a5fa2b78ba966c5767037abfe8d1d","sha256":"8ede8ba04cf5bf7999e1492fa77df545db83717f52c5eab625f97228ebd539bf"},"downloads":-1,"filename":"defusedxml-0.7.0rc1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"124a5fa2b78ba966c5767037abfe8d1d","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","size":25395,"upload_time":"2020-05-04T21:51:34","upload_time_iso_8601":"2020-05-04T21:51:34.043137Z","url":"https://files.pythonhosted.org/packages/17/7f/837dffa94f8822a4c306ab3529f19d0c5f9c844ee507eee9b27f669c65e9/defusedxml-0.7.0rc1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0b1fee6045db8376d21a70bae01567917831d56e36a1efa234ea3de68a07ff30","md5":"36c60c7c9bcd7733ca49f7f9d1f525fc","sha256":"aa621655d72cdd30f57073893b96cd0c3831a85b08b8e4954531bdac47e3e8c8"},"downloads":-1,"filename":"defusedxml-0.7.0rc1.tar.gz","has_sig":false,"md5_digest":"36c60c7c9bcd7733ca49f7f9d1f525fc","packagetype":"sdist","python_version":"source","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","size":63544,"upload_time":"2020-05-04T21:51:37","upload_time_iso_8601":"2020-05-04T21:51:37.018572Z","url":"https://files.pythonhosted.org/packages/0b/1f/ee6045db8376d21a70bae01567917831d56e36a1efa234ea3de68a07ff30/defusedxml-0.7.0rc1.tar.gz","yanked":false,"yanked_reason":null}],"0.7.0rc2":[{"comment_text":"","digests":{"blake2b_256":"30b784b057e7437171d18c742d762cd42f44430624ddb459c9c02ab80295460d","md5":"5c865497f599a6ed5618aa891dc560aa","sha256":"a034ed41d090f2348e4ac209fb3796b54728f7bf5ba326b2c5c599c293c80659"},"downloads":-1,"filename":"defusedxml-0.7.0rc2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"5c865497f599a6ed5618aa891dc560aa","packagetype":"bdist_wheel","python_version":"3.9","requires_python":null,"size":25484,"upload_time":"2021-01-12T18:45:31","upload_time_iso_8601":"2021-01-12T18:45:31.358940Z","url":"https://files.pythonhosted.org/packages/30/b7/84b057e7437171d18c742d762cd42f44430624ddb459c9c02ab80295460d/defusedxml-0.7.0rc2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"73ad49efd1a294aa0cfb29422c16bf7098bfa2ae073fb006d184ef421a31ada1","md5":"45eb71adc2ba39a53eaf784f73bbdfc6","sha256":"24173aa6820e52524921533ff5af04bf5f0096f21c1628195ae59b44731acc5c"},"downloads":-1,"filename":"defusedxml-0.7.0rc2.tar.gz","has_sig":false,"md5_digest":"45eb71adc2ba39a53eaf784f73bbdfc6","packagetype":"sdist","python_version":"source","requires_python":null,"size":74821,"upload_time":"2021-01-12T18:45:33","upload_time_iso_8601":"2021-01-12T18:45:33.874436Z","url":"https://files.pythonhosted.org/packages/73/ad/49efd1a294aa0cfb29422c16bf7098bfa2ae073fb006d184ef421a31ada1/defusedxml-0.7.0rc2.tar.gz","yanked":false,"yanked_reason":null}],"0.7.1":[{"comment_text":"","digests":{"blake2b_256":"076caa3f2f849e01cb6a001cd8554a88d4c77c5c1a31c95bdf1cf9301e6d9ef4","md5":"f0f8408ec7056772fe2872cc31b55640","sha256":"a352e7e428770286cc899e2542b6cdaedb2b4953ff269a210103ec58f6198a61"},"downloads":-1,"filename":"defusedxml-0.7.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f0f8408ec7056772fe2872cc31b55640","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","size":25604,"upload_time":"2021-03-08T10:59:24","upload_time_iso_8601":"2021-03-08T10:59:24.450195Z","url":"https://files.pythonhosted.org/packages/07/6c/aa3f2f849e01cb6a001cd8554a88d4c77c5c1a31c95bdf1cf9301e6d9ef4/defusedxml-0.7.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0fd5c66da9b79e5bdb124974bfe172b4daf3c984ebd9c2a06e2b8a4dc7331c72","md5":"a50e7f21aa60a741efe6b1b658dfb3f8","sha256":"1bb3032db185915b62d7c6209c5a8792be6a32ab2fedacc84e01b52c51aa3e69"},"downloads":-1,"filename":"defusedxml-0.7.1.tar.gz","has_sig":false,"md5_digest":"a50e7f21aa60a741efe6b1b658dfb3f8","packagetype":"sdist","python_version":"source","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","size":75520,"upload_time":"2021-03-08T10:59:26","upload_time_iso_8601":"2021-03-08T10:59:26.269532Z","url":"https://files.pythonhosted.org/packages/0f/d5/c66da9b79e5bdb124974bfe172b4daf3c984ebd9c2a06e2b8a4dc7331c72/defusedxml-0.7.1.tar.gz","yanked":false,"yanked_reason":null}],"0.8.0rc1":[{"comment_text":"","digests":{"blake2b_256":"0ea75a4a672f01ec07e4bb895cdc98e008f565acdf9172ca6a8e2ab6241959ca","md5":"7696d58604621cb150171b92231ad7a7","sha256":"c15ecdb878f07e89a9135a2db2d4f3917d1330b406aa54aabd1e53aa36140e3c"},"downloads":-1,"filename":"defusedxml-0.8.0rc1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"7696d58604621cb150171b92231ad7a7","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":25265,"upload_time":"2023-09-28T07:12:57","upload_time_iso_8601":"2023-09-28T07:12:57.342276Z","url":"https://files.pythonhosted.org/packages/0e/a7/5a4a672f01ec07e4bb895cdc98e008f565acdf9172ca6a8e2ab6241959ca/defusedxml-0.8.0rc1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ee4049761a0a04d961dcdbf0a6fc8258932c3509f4fe627d315afeee394c4655","md5":"f07d139856d2e7ab4d513d656a57fefa","sha256":"c66f7e29c3a64ed1e0e26fe0a69a01297aff7ab1b04708ea66ee9d7f3dabf723"},"downloads":-1,"filename":"defusedxml-0.8.0rc1.tar.gz","has_sig":false,"md5_digest":"f07d139856d2e7ab4d513d656a57fefa","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":50571,"upload_time":"2023-09-28T07:12:59","upload_time_iso_8601":"2023-09-28T07:12:59.334331Z","url":"https://files.pythonhosted.org/packages/ee/40/49761a0a04d961dcdbf0a6fc8258932c3509f4fe627d315afeee394c4655/defusedxml-0.8.0rc1.tar.gz","yanked":false,"yanked_reason":null}],"0.8.0rc2":[{"comment_text":"","digests":{"blake2b_256":"5dc76b4ad89ca6f7732ff97ce5e9caa6fe739600d26c5d53c20d0bf9abb79ec5","md5":"dcccaddf2be80f05f362ab7b9aa7eb18","sha256":"1c812964311154c3bf4aaf3bc1443b31ee13530b7f255eaaa062c0553c76103d"},"downloads":-1,"filename":"defusedxml-0.8.0rc2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"dcccaddf2be80f05f362ab7b9aa7eb18","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":25756,"upload_time":"2023-09-29T08:01:25","upload_time_iso_8601":"2023-09-29T08:01:25.515138Z","url":"https://files.pythonhosted.org/packages/5d/c7/6b4ad89ca6f7732ff97ce5e9caa6fe739600d26c5d53c20d0bf9abb79ec5/defusedxml-0.8.0rc2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5e3bb8849dcc3f96913924137dc4ea041d74aa513a3c5dda83d8366491290c74","md5":"4fdcc7a439af8f9504ddd80fe8a2b735","sha256":"138c7d540a78775182206c7c97fe65b246a2f40b29471e1a2f1b0da76e7a3942"},"downloads":-1,"filename":"defusedxml-0.8.0rc2.tar.gz","has_sig":false,"md5_digest":"4fdcc7a439af8f9504ddd80fe8a2b735","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":52575,"upload_time":"2023-09-29T08:01:27","upload_time_iso_8601":"2023-09-29T08:01:27.517613Z","url":"https://files.pythonhosted.org/packages/5e/3b/b8849dcc3f96913924137dc4ea041d74aa513a3c5dda83d8366491290c74/defusedxml-0.8.0rc2.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"076caa3f2f849e01cb6a001cd8554a88d4c77c5c1a31c95bdf1cf9301e6d9ef4","md5":"f0f8408ec7056772fe2872cc31b55640","sha256":"a352e7e428770286cc899e2542b6cdaedb2b4953ff269a210103ec58f6198a61"},"downloads":-1,"filename":"defusedxml-0.7.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f0f8408ec7056772fe2872cc31b55640","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","size":25604,"upload_time":"2021-03-08T10:59:24","upload_time_iso_8601":"2021-03-08T10:59:24.450195Z","url":"https://files.pythonhosted.org/packages/07/6c/aa3f2f849e01cb6a001cd8554a88d4c77c5c1a31c95bdf1cf9301e6d9ef4/defusedxml-0.7.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0fd5c66da9b79e5bdb124974bfe172b4daf3c984ebd9c2a06e2b8a4dc7331c72","md5":"a50e7f21aa60a741efe6b1b658dfb3f8","sha256":"1bb3032db185915b62d7c6209c5a8792be6a32ab2fedacc84e01b52c51aa3e69"},"downloads":-1,"filename":"defusedxml-0.7.1.tar.gz","has_sig":false,"md5_digest":"a50e7f21aa60a741efe6b1b658dfb3f8","packagetype":"sdist","python_version":"source","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*","size":75520,"upload_time":"2021-03-08T10:59:26","upload_time_iso_8601":"2021-03-08T10:59:26.269532Z","url":"https://files.pythonhosted.org/packages/0f/d5/c66da9b79e5bdb124974bfe172b4daf3c984ebd9c2a06e2b8a4dc7331c72/defusedxml-0.7.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
