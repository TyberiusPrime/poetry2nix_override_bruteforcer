{"info":{"author":"Ramaravind Mothilal, Amit Sharma, Chenhao Tan","author_email":"raam.arvind93@gmail.com","bugtrack_url":null,"classifiers":["Intended Audience :: Developers","Intended Audience :: Science/Research","License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description":"|PyPiVersion|_ |CondaVersion|_ |MITlicense| |PythonSupport|_ |Downloads|_ \n\n|BuildStatusTests|_ |BuildStatusNotebooks|_ \n\n.. |MITlicense| image:: https://img.shields.io/badge/License-MIT-blue.svg\n.. _MITlicense: https://img.shields.io/badge/License-MIT-blue.svg\n\n.. |PyPiVersion| image:: https://img.shields.io/pypi/v/dice-ml\n.. _PyPiVersion: https://pypi.org/project/dice-ml/\n\n.. |Downloads| image:: https://static.pepy.tech/personalized-badge/dice-ml?period=total&units=international_system&left_color=grey&right_color=orange&left_text=Downloads\n.. _Downloads: https://pepy.tech/project/dice-ml\n\n.. |PythonSupport| image:: https://img.shields.io/pypi/pyversions/dice-ml\n.. _PythonSupport: https://pypi.org/project/dice-ml/\n\n.. |CondaVersion| image:: https://anaconda.org/conda-forge/dice-ml/badges/version.svg\n.. _CondaVersion: https://anaconda.org/conda-forge/dice-ml\n\n.. |BuildStatusTests| image:: https://github.com/interpretml/DiCE/actions/workflows/python-package.yml/badge.svg?branch=main\n.. _BuildStatusTests: https://github.com/interpretml/DiCE/actions/workflows/python-package.yml?query=workflow%3A%22Python+package%22\n\n.. |BuildStatusNotebooks| image:: https://github.com/interpretml/DiCE/actions/workflows/notebook-tests.yml/badge.svg?branch=main\n.. _BuildStatusNotebooks: https://github.com/interpretml/DiCE/actions/workflows/notebook-tests.yml?query=workflow%3A%22Notebook+tests%22\n\nDiverse Counterfactual Explanations (DiCE) for ML\n======================================================================\n\n*How to explain a machine learning model such that the explanation is truthful to the model and yet interpretable to people?*\n\n`Ramaravind K. Mothilal <https://raam93.github.io/>`_, `Amit Sharma <http://www.amitsharma.in/>`_, `Chenhao Tan <https://chenhaot.com/>`_\n  \n`FAT* '20 paper <https://arxiv.org/abs/1905.07697>`_ | `Docs <https://interpretml.github.io/DiCE/>`_ | `Example Notebooks <https://github.com/interpretml/DiCE/tree/master/docs/source/notebooks>`_ | Live Jupyter notebook |Binder|_\n\n.. |Binder| image:: https://mybinder.org/badge_logo.svg\n.. _Binder:  https://mybinder.org/v2/gh/interpretML/DiCE/master?filepath=docs/source/notebooks\n\n **Blog Post**: `Explanation for ML using diverse counterfactuals <https://www.microsoft.com/en-us/research/blog/open-source-library-provides-explanation-for-machine-learning-through-diverse-counterfactuals/>`_\n \n **Case Studies**: `Towards Data Science <https://towardsdatascience.com/dice-diverse-counterfactual-explanations-for-hotel-cancellations-762c311b2c64>`_ (Hotel Bookings) | `Analytics Vidhya <https://medium.com/analytics-vidhya/dice-ml-models-with-counterfactual-explanations-for-the-sunk-titanic-30aa035056e0>`_ (Titanic Dataset)\n \n.. image:: https://www.microsoft.com/en-us/research/uploads/prod/2020/01/MSR-Amit_1400x788-v3-1blog.gif\n  :align: center\n  :alt: Visualizing a counterfactual explanation\n  \nExplanations are critical for machine learning, especially as machine learning-based systems are being used to inform decisions in societally critical domains such as finance, healthcare, education, and criminal justice.\nHowever, most explanation methods depend on an approximation of the ML model to\ncreate an interpretable explanation. For example,\nconsider a person who applied for a loan and was rejected by the loan distribution algorithm of a financial company. Typically, the company may provide an explanation on why the loan was rejected, for example, due to \"poor credit history\". However, such an explanation does not help the person decide *what they should do next* to improve their chances of being approved in the future. Critically, the most important feature may not be enough to flip the decision of the algorithm, and in practice, may not even be changeable such as gender and race.\n\n\nDiCE implements `counterfactual (CF) explanations <https://arxiv.org/abs/1711.00399>`_  that provide this information by showing feature-perturbed versions of the same person who would have received the loan, e.g., ``you would have received the loan if your income was higher by $10,000``. In other words, it provides \"what-if\" explanations for model output and can be a useful complement to other explanation methods, both for end-users and model developers.\n\nBarring simple linear models, however, it is difficult to generate CF examples that work for any machine learning model. DiCE is based on `recent research <https://arxiv.org/abs/1905.07697>`_ that generates CF explanations for any ML model. The core idea is to setup finding such explanations as an optimization problem, similar to finding adversarial examples. The critical difference is that for explanations, we need perturbations that change the output of a machine learning model, but are also diverse and feasible to change. Therefore, DiCE supports generating a set of counterfactual explanations  and has tunable parameters for diversity and proximity of the explanations to the original input. It also supports simple constraints on features to ensure feasibility of the generated counterfactual examples.\n\n\nInstalling DICE\n-----------------\nDiCE supports Python 3+. The stable version of DiCE is available on `PyPI <https://pypi.org/project/dice-ml/>`_.\n\n.. code:: bash\n\n    pip install dice-ml\n\nDiCE is also available on `conda-forge <https://anaconda.org/conda-forge/dice-ml>`_. \n\n.. code:: bash\n\n    conda install -c conda-forge dice-ml\n\nTo install the latest (dev) version of DiCE and its dependencies, clone this repo and run `pip install` from the top-most folder of the repo:\n\n.. code:: bash\n\n    pip install -e .\n\nIf you face any problems, try installing dependencies manually.\n\n.. code:: bash\n\n    pip install -r requirements.txt\n    # Additional dependendies for deep learning models\n    pip install -r requirements-deeplearning.txt\n    # For running unit tests\n    pip install -r requirements-test.txt\n\n\nGetting started with DiCE\n-------------------------\nWith DiCE, generating explanations is a simple three-step  process: set up a dataset, train a model, and then invoke DiCE to generate counterfactual examples for any input. DiCE can also work with pre-trained models, with or without their original training data. \n\n\n.. code:: python\n\n    import dice_ml\n    from dice_ml.utils import helpers # helper functions\n    from sklearn.model_selection import train_test_split\n\n    dataset = helpers.load_adult_income_dataset()\n    target = dataset[\"income\"] # outcome variable \n    train_dataset, test_dataset, _, _ = train_test_split(dataset,\n                                                         target,\n                                                         test_size=0.2,\n                                                         random_state=0,\n                                                         stratify=target)\n    # Dataset for training an ML model\n    d = dice_ml.Data(dataframe=train_dataset,\n                     continuous_features=['age', 'hours_per_week'],\n                     outcome_name='income')\n    \n    # Pre-trained ML model\n    m = dice_ml.Model(model_path=dice_ml.utils.helpers.get_adult_income_modelpath(),\n                      backend='TF2', func=\"ohe-min-max\")\n    # DiCE explanation instance\n    exp = dice_ml.Dice(d,m)\n\nFor any given input, we can now generate counterfactual explanations. For\nexample, the following input leads to class 0 (low income) and we would like to know what minimal changes would lead to a prediction of 1 (high income).\n\n.. code:: python\n    \n    # Generate counterfactual examples\n    query_instance = test_dataset.drop(columns=\"income\")[0:1]\n    dice_exp = exp.generate_counterfactuals(query_instance, total_CFs=4, desired_class=\"opposite\")\n    # Visualize counterfactual explanation\n    dice_exp.visualize_as_dataframe()\n\n.. image:: https://raw.githubusercontent.com/interpretml/DiCE/master/docs/_static/getting_started_updated.png \n  :width: 400\n  :alt: List of counterfactual examples\n\nYou can save the generated counterfactual examples in the following way.\n\n.. code:: python\n\n    # Save generated counterfactual examples to disk\n    dice_exp.cf_examples_list[0].final_cfs_df.to_csv(path_or_buf='counterfactuals.csv', index=False)\n\n\nFor more details, check out the `docs/source/notebooks <https://github.com/interpretml/DiCE/tree/master/docs/source/notebooks>`_ folder. Here are some example notebooks:\n\n* `Getting Started <https://github.com/interpretml/DiCE/blob/master/docs/source/notebooks/DiCE_getting_started.ipynb>`_: Generate CF examples for a `sklearn`, `tensorflow` or `pytorch` binary classifier and compute feature importance scores.\n* `Explaining Multi-class Classifiers and Regressors\n  <https://github.com/interpretml/DiCE/blob/master/docs/source/notebooks/DiCE_multiclass_classification_and_regression.ipynb>`_: Generate CF explanations for a multi-class classifier or regressor.\n* `Local and Global Feature Importance <https://github.com/interpretml/DiCE/blob/master/docs/source/notebooks/DiCE_feature_importances.ipynb>`_: Estimate local and global feature importance scores using generated counterfactuals.\n* `Providing Constraints on Counterfactual Generation\n  <https://github.com/interpretml/DiCE/blob/master/docs/source/notebooks/DiCE_model_agnostic_CFs.ipynb>`_: Specifying which features to vary and their permissible ranges for valid counterfactual examples.\n\nSupported methods for generating counterfactuals\n------------------------------------------------\nDiCE can generate counterfactual examples using the following methods.\n\n**Model-agnostic methods**\n\n* Randomized sampling \n* KD-Tree (for counterfactuals within the training data)\n* Genetic algorithm \n\nSee `model-agnostic notebook\n<https://github.com/interpretml/DiCE/blob/master/docs/source/notebooks/DiCE_model_agnostic_CFs.ipynb>`_ for code examples on using these methods.\n\n**Gradient-based methods**\n\n* An explicit loss-based method described in `Mothilal et al. (2020) <https://arxiv.org/abs/1905.07697>`_ (Default for deep learning models).\n* A Variational AutoEncoder (VAE)-based method described in `Mahajan et al. (2019) <https://arxiv.org/abs/1912.03277>`_ (see the BaseVAE `notebook <https://github.com/interpretml/DiCE/blob/master/docs/notebooks/DiCE_getting_started_feasible.ipynb>`_).\n\nThe last two methods require a differentiable model, such as a neural network. If you are interested in a specific method, do raise an issue `here <https://github.com/interpretml/DiCE/issues>`_.\n\nSupported use-cases\n-------------------\n**Data**\n\nDiCE does not need access to the full dataset. It only requires metadata properties for each feature (min, max for continuous features and levels for categorical features). Thus, for sensitive data, the dataset can be provided as:\n\n.. code:: python\n\n    d = data.Data(features={\n                       'age':[17, 90],\n                       'workclass': ['Government', 'Other/Unknown', 'Private', 'Self-Employed'],\n                       'education': ['Assoc', 'Bachelors', 'Doctorate', 'HS-grad', 'Masters', 'Prof-school', 'School', 'Some-college'],\n                       'marital_status': ['Divorced', 'Married', 'Separated', 'Single', 'Widowed'],\n                       'occupation':['Blue-Collar', 'Other/Unknown', 'Professional', 'Sales', 'Service', 'White-Collar'],\n                       'race': ['Other', 'White'],\n                       'gender':['Female', 'Male'],\n                       'hours_per_week': [1, 99]},\n             outcome_name='income')\n\n**Model**\n\nWe support pre-trained models as well as training a model. Here's a simple example using Tensorflow. \n\n.. code:: python\n\n    sess = tf.InteractiveSession()\n    # Generating train and test data\n    train, _ = d.split_data(d.normalize_data(d.one_hot_encoded_data))\n    X_train = train.loc[:, train.columns != 'income']\n    y_train = train.loc[:, train.columns == 'income']\n    # Fitting a dense neural network model\n    ann_model = keras.Sequential()\n    ann_model.add(keras.layers.Dense(20, input_shape=(X_train.shape[1],), kernel_regularizer=keras.regularizers.l1(0.001), activation=tf.nn.relu))\n    ann_model.add(keras.layers.Dense(1, activation=tf.nn.sigmoid))\n    ann_model.compile(loss='binary_crossentropy', optimizer=tf.keras.optimizers.Adam(0.01), metrics=['accuracy'])\n    ann_model.fit(X_train, y_train, validation_split=0.20, epochs=100, verbose=0, class_weight={0:1,1:2})\n\n    # Generate the DiCE model for explanation\n    m = model.Model(model=ann_model)\n\nCheck out the `Getting Started <https://github.com/interpretml/DiCE/blob/master/docs/source/notebooks/DiCE_getting_started.ipynb>`_ notebook to see code examples on using DiCE with sklearn and PyTorch models.\n\n**Explanations**\n\nWe visualize explanations through a table highlighting the change in features. We plan to support an English language explanation too!\n\nFeasibility of counterfactual explanations\n-------------------------------------------\nWe acknowledge that not all counterfactual explanations may be feasible for a\nuser. In general, counterfactuals closer to an individual's profile will be\nmore feasible. Diversity is also important to help an individual choose between\nmultiple possible options.\n\nDiCE provides tunable parameters for diversity and proximity to generate\ndifferent kinds of explanations.\n\n.. code:: python\n\n    dice_exp = exp.generate_counterfactuals(query_instance,\n                    total_CFs=4, desired_class=\"opposite\",\n                    proximity_weight=1.5, diversity_weight=1.0)\n\nAdditionally, it may be the case that some features are harder to change than\nothers (e.g., education level is harder to change than working hours per week). DiCE allows input of relative difficulty in changing a feature through specifying *feature weights*. A higher feature weight means that the feature is harder to change than others. For instance, one way is to use the mean absolute deviation from the median as a measure of relative difficulty of changing a continuous feature. By default, DiCE computes this internally and divides the distance between continuous features by the MAD of the feature's values in the training set. We can also assign different values through the *feature_weights* parameter. \n\n.. code:: python\n\n    # assigning new weights\n    feature_weights = {'age': 10, 'hours_per_week': 5}\n    # Now generating explanations using the new feature weights\n    dice_exp = exp.generate_counterfactuals(query_instance,\n                    total_CFs=4, desired_class=\"opposite\",\n                    feature_weights=feature_weights)\n\nFinally, some features are impossible to change such as one's age or race. Therefore, DiCE also allows inputting a\nlist of features to vary.\n\n.. code:: python\n\n    dice_exp = exp.generate_counterfactuals(query_instance,\n                    total_CFs=4, desired_class=\"opposite\",\n                    features_to_vary=['age','workclass','education','occupation','hours_per_week'])\n\nIt also supports simple constraints on\nfeatures that reflect practical constraints (e.g., working hours per week\nshould be between 10 and 50 using the ``permitted_range`` parameter).\n\nFor more details, check out `this <https://github.com/interpretml/DiCE/blob/master/docs/source/notebooks/DiCE_model_agnostic_CFs.ipynb>`_ notebook.\n\nThe promise of counterfactual explanations\n-------------------------------------------\nBeing truthful to the model, counterfactual explanations can be useful to all stakeholders for a decision made by a machine learning model that makes decisions.\n\n* **Decision subjects**: Counterfactual explanations can be used to explore actionable recourse for a person based on a decision received by a ML model. DiCE shows decision outcomes with *actionable* alternative profiles, to help people understand what they could have done to change their model outcome.\n\n* **ML model developers**: Counterfactual explanations are also useful for model developers to debug their model for potential problems. DiCE can be used to show CF explanations for a selection of inputs that can uncover if there are any problematic (in)dependences on some features (e.g., for 95% of inputs, changing features X and Y change the outcome, but not for the other 5%). We aim to support aggregate metrics to help developers debug ML models.\n\n* **Decision makers**: Counterfactual explanations may be useful to\n  decision-makers such as doctors or judges who may use ML models to make decisions. For a particular individual, DiCE allows probing the ML model to see the possible changes that lead to a different ML outcome, thus enabling decision-makers to assess their trust in the prediction.\n\n* **Decision evaluators**: Finally, counterfactual explanations can be useful\n  to decision evaluators who may be interested in fairness or other desirable\n  properties of an ML model. We plan to add support for this in the future.\n\n\nRoadmap\n-------\nIdeally, counterfactual explanations should balance between a wide range of suggested changes (*diversity*), and the relative ease of adopting those changes (*proximity* to the original input), and also follow the causal laws of the world, e.g., one can hardly lower their educational degree or change their race.\n\nWe are working on adding the following features to DiCE:\n\n* Support for using DiCE for debugging machine learning models\n* Constructed English phrases (e.g., ``desired outcome if feature was changed``) and other ways to output the counterfactual examples\n* Evaluating feature attribution methods like LIME and SHAP on necessity and sufficiency metrics using counterfactuals (see `this paper <https://arxiv.org/abs/2011.04917>`_)\n* Support for Bayesian optimization and other algorithms for generating counterfactual explanations\n* Better feasibility constraints for counterfactual generation \n\nCiting\n-------\nIf you find DiCE useful for your research work, please cite it as follows.\n\nRamaravind K. Mothilal, Amit Sharma, and Chenhao Tan (2020). **Explaining machine learning classifiers through diverse counterfactual explanations**. *Proceedings of the 2020 Conference on Fairness, Accountability, and Transparency*. \n\nBibtex::\n\n\t@inproceedings{mothilal2020dice,\n  \t\ttitle={Explaining machine learning classifiers through diverse counterfactual explanations},\n  \t\tauthor={Mothilal, Ramaravind K and Sharma, Amit and Tan, Chenhao},\n  \t\tbooktitle={Proceedings of the 2020 Conference on Fairness, Accountability, and Transparency},\n  \t\tpages={607--617},\n  \t\tyear={2020}\n\t}\n\n\nContributing\n------------\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.microsoft.com.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the `Microsoft Open Source Code of Conduct <https://opensource.microsoft.com/codeofconduct/>`_.\nFor more information see the `Code of Conduct FAQ <https://opensource.microsoft.com/codeofconduct/faq/>`_ or\ncontact `opencode@microsoft.com <mailto:opencode@microsoft.com>`_ with any additional questions or comments.\n","description_content_type":"text/x-rst","docs_url":null,"download_url":"https://github.com/interpretml/DiCE/archive/v0.11.tar.gz","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/interpretml/DiCE","keywords":"machine-learning explanation interpretability counterfactual","license":"MIT","maintainer":"","maintainer_email":"","name":"dice-ml","package_url":"https://pypi.org/project/dice-ml/","platform":null,"project_url":"https://pypi.org/project/dice-ml/","project_urls":{"Download":"https://github.com/interpretml/DiCE/archive/v0.11.tar.gz","Homepage":"https://github.com/interpretml/DiCE"},"provides_extra":null,"release_url":"https://pypi.org/project/dice-ml/0.11/","requires_dist":["jsonschema","numpy","pandas <2.0.0","scikit-learn","tqdm","raiutils >=0.4.0","tensorflow >=1.13.1 ; extra == 'deeplearning'","torch ; extra == 'deeplearning'"],"requires_python":">=3.6","summary":"Generate Diverse Counterfactual Explanations for any machine learning model.","version":"0.11","yanked":false,"yanked_reason":null},"last_serial":20357742,"releases":{"0.10":[{"comment_text":"","digests":{"blake2b_256":"5ff507a2e7240e93e5f09fdbc529886ce6e7f323d057b1e88e99f2c16287a96d","md5":"1814d13743f12ee3c62d87447e700e67","sha256":"2aaa117360524aabfa2be9fea7b79d1374b95e2d794e6bd7189805e693517fe1"},"downloads":-1,"filename":"dice_ml-0.10-py3-none-any.whl","has_sig":false,"md5_digest":"1814d13743f12ee3c62d87447e700e67","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":2557014,"upload_time":"2023-06-26T15:48:32","upload_time_iso_8601":"2023-06-26T15:48:32.753997Z","url":"https://files.pythonhosted.org/packages/5f/f5/07a2e7240e93e5f09fdbc529886ce6e7f323d057b1e88e99f2c16287a96d/dice_ml-0.10-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"89e399f9a819cf5c770ec9bae2c5524b25c54591a596ce8298628792beabdd44","md5":"e76f3fd83ecebbd2e8953b84b801a88a","sha256":"c0ff75cf6defcd141d3e79500586d648481d5c15b2294871c20540b0ec9117de"},"downloads":-1,"filename":"dice_ml-0.10.tar.gz","has_sig":false,"md5_digest":"e76f3fd83ecebbd2e8953b84b801a88a","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":15028133,"upload_time":"2023-06-26T15:48:35","upload_time_iso_8601":"2023-06-26T15:48:35.688501Z","url":"https://files.pythonhosted.org/packages/89/e3/99f9a819cf5c770ec9bae2c5524b25c54591a596ce8298628792beabdd44/dice_ml-0.10.tar.gz","yanked":false,"yanked_reason":null}],"0.11":[{"comment_text":"","digests":{"blake2b_256":"691cec136743072d7b4917d72d975e094c8dc9bce86920519aff97854a7dc3ce","md5":"bf876d652e75cdb3dade38f5f2416db1","sha256":"9a1c199f4a0f9a865319a17f00a76c07e21c9d090e1aa10f23ea13e25e8d8455"},"downloads":-1,"filename":"dice_ml-0.11-py3-none-any.whl","has_sig":false,"md5_digest":"bf876d652e75cdb3dade38f5f2416db1","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":2526789,"upload_time":"2023-10-27T03:54:06","upload_time_iso_8601":"2023-10-27T03:54:06.293214Z","url":"https://files.pythonhosted.org/packages/69/1c/ec136743072d7b4917d72d975e094c8dc9bce86920519aff97854a7dc3ce/dice_ml-0.11-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f4fc2129adcdcd6ffb771ef369b9413ca8461d76b24c203b09d306bef56fb6cf","md5":"26d6b2cd38dea22cf1a1f342d21a3710","sha256":"29e6bea9e4c877caa68ecdd5d981f91cc8de3b73cdad453fd7c7e000a336576d"},"downloads":-1,"filename":"dice_ml-0.11.tar.gz","has_sig":false,"md5_digest":"26d6b2cd38dea22cf1a1f342d21a3710","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":15030781,"upload_time":"2023-10-27T03:54:08","upload_time_iso_8601":"2023-10-27T03:54:08.891044Z","url":"https://files.pythonhosted.org/packages/f4/fc/2129adcdcd6ffb771ef369b9413ca8461d76b24c203b09d306bef56fb6cf/dice_ml-0.11.tar.gz","yanked":false,"yanked_reason":null}],"0.2":[{"comment_text":"","digests":{"blake2b_256":"bc999a1f296c6cbde33bcfbe6e2eb82ba4f079d25584cd8acc1bbd296afa0c19","md5":"02dfb92de4f78af54c8e127b09dda600","sha256":"fddf63e69aa29784a1054951b4d345833f2b40e57b8277766627b0f323b2fd66"},"downloads":-1,"filename":"dice_ml-0.2-py3-none-any.whl","has_sig":false,"md5_digest":"02dfb92de4f78af54c8e127b09dda600","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.4","size":53746,"upload_time":"2020-03-17T10:49:01","upload_time_iso_8601":"2020-03-17T10:49:01.360854Z","url":"https://files.pythonhosted.org/packages/bc/99/9a1f296c6cbde33bcfbe6e2eb82ba4f079d25584cd8acc1bbd296afa0c19/dice_ml-0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"027e49830f440f1d8f41d760a585ef3099b2174717b6c786bba640b026926dc9","md5":"9a036d7805a9eb035118904fa8bd61fb","sha256":"f1b9175d014330f1275c361faea2a76b44fce2595841fe803e1c9014071cbfdc"},"downloads":-1,"filename":"dice_ml-0.2.tar.gz","has_sig":false,"md5_digest":"9a036d7805a9eb035118904fa8bd61fb","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":43085,"upload_time":"2020-03-17T10:49:03","upload_time_iso_8601":"2020-03-17T10:49:03.721452Z","url":"https://files.pythonhosted.org/packages/02/7e/49830f440f1d8f41d760a585ef3099b2174717b6c786bba640b026926dc9/dice_ml-0.2.tar.gz","yanked":false,"yanked_reason":null}],"0.4":[{"comment_text":"","digests":{"blake2b_256":"ee5a7c94dea50f61a7a4a793fa9b06f2940b5af32d145d1b248311c9bc88744f","md5":"afa95398ebe348982bdf2196bfe8f351","sha256":"651966035bdb9fafa3a38a3d653b58a59f14a16ae40b2310d75495628d83ea6f"},"downloads":-1,"filename":"dice_ml-0.4-py3-none-any.whl","has_sig":false,"md5_digest":"afa95398ebe348982bdf2196bfe8f351","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.4","size":134729,"upload_time":"2020-09-22T06:57:33","upload_time_iso_8601":"2020-09-22T06:57:33.478728Z","url":"https://files.pythonhosted.org/packages/ee/5a/7c94dea50f61a7a4a793fa9b06f2940b5af32d145d1b248311c9bc88744f/dice_ml-0.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"045376d35408c9689071ac2791b28d3a89dc6d1738e110830c81247ed0315142","md5":"372c1c86c33251f5f4cdfc6ca2476379","sha256":"43160aa0fbfcc384c053974686dba6d0b36ff98596bbbc619bba3be63d194cd5"},"downloads":-1,"filename":"dice_ml-0.4.tar.gz","has_sig":false,"md5_digest":"372c1c86c33251f5f4cdfc6ca2476379","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":7073143,"upload_time":"2020-09-22T06:57:52","upload_time_iso_8601":"2020-09-22T06:57:52.132670Z","url":"https://files.pythonhosted.org/packages/04/53/76d35408c9689071ac2791b28d3a89dc6d1738e110830c81247ed0315142/dice_ml-0.4.tar.gz","yanked":false,"yanked_reason":null}],"0.5":[{"comment_text":"","digests":{"blake2b_256":"6f0ced21504b3367246aa659c8efff7261e2a3d44ad80e390f74457caa4ce790","md5":"48a593fd5e07c38682c8ae306a0afd28","sha256":"8983e2d07c57cc751d95b67fd9b29b5d83148b50766d055021dd81e332bbd9ef"},"downloads":-1,"filename":"dice_ml-0.5-py3-none-any.whl","has_sig":false,"md5_digest":"48a593fd5e07c38682c8ae306a0afd28","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.4","size":224048,"upload_time":"2021-03-01T15:44:45","upload_time_iso_8601":"2021-03-01T15:44:45.395866Z","url":"https://files.pythonhosted.org/packages/6f/0c/ed21504b3367246aa659c8efff7261e2a3d44ad80e390f74457caa4ce790/dice_ml-0.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7ca89f5c0fe7c720193c477e8297f83531f4743a55447871190c8583c6f6f2d1","md5":"14e4eb8eb51d2bd3c141c6dfb4ab5da9","sha256":"f2e6c8cd5ff79319740f3cb1cf7eb6ed6cfc57ad2b7a3fa15fb1e05ad98573b7"},"downloads":-1,"filename":"dice_ml-0.5.tar.gz","has_sig":false,"md5_digest":"14e4eb8eb51d2bd3c141c6dfb4ab5da9","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":12635405,"upload_time":"2021-03-01T15:44:47","upload_time_iso_8601":"2021-03-01T15:44:47.300500Z","url":"https://files.pythonhosted.org/packages/7c/a8/9f5c0fe7c720193c477e8297f83531f4743a55447871190c8583c6f6f2d1/dice_ml-0.5.tar.gz","yanked":false,"yanked_reason":null}],"0.6":[{"comment_text":"","digests":{"blake2b_256":"de4be95db3a0d0adcaef564965657bd14a05beb65091b1d7a9cc4c18e1d80456","md5":"30df997acd1b3f6b37f84e6f0add19d9","sha256":"82db118101c8692aea9049e201fe74110f2a6f9527ea71dfe356a2ad7c4205d3"},"downloads":-1,"filename":"dice_ml-0.6-py3-none-any.whl","has_sig":false,"md5_digest":"30df997acd1b3f6b37f84e6f0add19d9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":229378,"upload_time":"2021-04-28T11:51:07","upload_time_iso_8601":"2021-04-28T11:51:07.190493Z","url":"https://files.pythonhosted.org/packages/de/4b/e95db3a0d0adcaef564965657bd14a05beb65091b1d7a9cc4c18e1d80456/dice_ml-0.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6d6aac480e498198d2020358b63f913779937311dccfab44889a0ef73f29ea47","md5":"82e4cb7971a0d6756d2b393330d6a899","sha256":"5e95406162313f21c3e7d64d2a901f722930916a381552b95f0ae48665f223c1"},"downloads":-1,"filename":"dice_ml-0.6.tar.gz","has_sig":false,"md5_digest":"82e4cb7971a0d6756d2b393330d6a899","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":12668946,"upload_time":"2021-04-28T11:51:10","upload_time_iso_8601":"2021-04-28T11:51:10.006969Z","url":"https://files.pythonhosted.org/packages/6d/6a/ac480e498198d2020358b63f913779937311dccfab44889a0ef73f29ea47/dice_ml-0.6.tar.gz","yanked":false,"yanked_reason":null}],"0.6.1":[{"comment_text":"","digests":{"blake2b_256":"5df6a03a99da609497eac2217be1caecdf0d7d26933d86bc12c293360b3f6fc9","md5":"970c2956ebf07585e8967155cf1e20df","sha256":"a612a9c6e92e05c950867f55a270a87b8da324a8a38e5416a7de309337594d07"},"downloads":-1,"filename":"dice_ml-0.6.1-py3-none-any.whl","has_sig":false,"md5_digest":"970c2956ebf07585e8967155cf1e20df","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":231561,"upload_time":"2021-05-10T16:05:55","upload_time_iso_8601":"2021-05-10T16:05:55.912758Z","url":"https://files.pythonhosted.org/packages/5d/f6/a03a99da609497eac2217be1caecdf0d7d26933d86bc12c293360b3f6fc9/dice_ml-0.6.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"97db7cec827af883d34c8b9781bbfd5f4e20116754976a5e81c76fef450ec3e4","md5":"c7e7dd96be3f05c623331c30694d2363","sha256":"1d56f6b5d6db24556668f7aa06c674efe2aa4fb2d68560cdda1d0a86777833e4"},"downloads":-1,"filename":"dice_ml-0.6.1.tar.gz","has_sig":false,"md5_digest":"c7e7dd96be3f05c623331c30694d2363","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":12672164,"upload_time":"2021-05-10T16:05:59","upload_time_iso_8601":"2021-05-10T16:05:59.594780Z","url":"https://files.pythonhosted.org/packages/97/db/7cec827af883d34c8b9781bbfd5f4e20116754976a5e81c76fef450ec3e4/dice_ml-0.6.1.tar.gz","yanked":false,"yanked_reason":null}],"0.7":[{"comment_text":"","digests":{"blake2b_256":"a163f4f602e3f26aa5c547289665b316351295f500a491da835f76268ec9b5e1","md5":"7546d2650a3fdfa27a9365c02dd7eec2","sha256":"983429056db8119111fa59f2753265ff7fb680287b985ec8d9272a608e4fd378"},"downloads":-1,"filename":"dice_ml-0.7-py3-none-any.whl","has_sig":false,"md5_digest":"7546d2650a3fdfa27a9365c02dd7eec2","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":241687,"upload_time":"2021-08-17T13:07:46","upload_time_iso_8601":"2021-08-17T13:07:46.487713Z","url":"https://files.pythonhosted.org/packages/a1/63/f4f602e3f26aa5c547289665b316351295f500a491da835f76268ec9b5e1/dice_ml-0.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dbfa29caf4603bb4e28988623372fbf3a59ddb702d21cba8b9aeb6f2c3f1220d","md5":"4e656353553695ebf21786c77ca7c813","sha256":"feaf651bc8f8f6964134df6b068e99dfb347e5fad50896be9e06206f65993a4b"},"downloads":-1,"filename":"dice_ml-0.7.tar.gz","has_sig":false,"md5_digest":"4e656353553695ebf21786c77ca7c813","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":12705242,"upload_time":"2021-08-17T13:07:49","upload_time_iso_8601":"2021-08-17T13:07:49.034896Z","url":"https://files.pythonhosted.org/packages/db/fa/29caf4603bb4e28988623372fbf3a59ddb702d21cba8b9aeb6f2c3f1220d/dice_ml-0.7.tar.gz","yanked":false,"yanked_reason":null}],"0.7.1":[{"comment_text":"","digests":{"blake2b_256":"bbd6d2565d26f666493faea6273b96f89c2aa8319fb0a00274a304986b3406e0","md5":"69a5f6297a8ab2f47174abec088614e0","sha256":"2c612009a9f5f8b0024bee19945c985495d001febdbb8db9e41c08ae465b4ac5"},"downloads":-1,"filename":"dice_ml-0.7.1-py3-none-any.whl","has_sig":false,"md5_digest":"69a5f6297a8ab2f47174abec088614e0","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":242133,"upload_time":"2021-08-24T06:54:07","upload_time_iso_8601":"2021-08-24T06:54:07.395630Z","url":"https://files.pythonhosted.org/packages/bb/d6/d2565d26f666493faea6273b96f89c2aa8319fb0a00274a304986b3406e0/dice_ml-0.7.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7aaf643f5ac073927cff7742b37b52857c4bb7150628bdc7582919b71dc38ab7","md5":"bc1c3bc9df7f1014397766c0fc3dba3f","sha256":"828fa0371cb7792d059ef5559e7265fd86047d24e4dd5667d4b49adce4754e31"},"downloads":-1,"filename":"dice_ml-0.7.1.tar.gz","has_sig":false,"md5_digest":"bc1c3bc9df7f1014397766c0fc3dba3f","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":12705549,"upload_time":"2021-08-24T06:54:09","upload_time_iso_8601":"2021-08-24T06:54:09.861577Z","url":"https://files.pythonhosted.org/packages/7a/af/643f5ac073927cff7742b37b52857c4bb7150628bdc7582919b71dc38ab7/dice_ml-0.7.1.tar.gz","yanked":false,"yanked_reason":null}],"0.7.2":[{"comment_text":"","digests":{"blake2b_256":"0cc73dc3ff197ed5d34d5624147109b799412630073b6147f97af4a1fab2926f","md5":"eee8e82a677969aefa59e201bb587dbd","sha256":"65df1622476dd46f86fe8ce8faa9da7a497f14ecdf453fe7c144d38c80207ca4"},"downloads":-1,"filename":"dice_ml-0.7.2-py3-none-any.whl","has_sig":false,"md5_digest":"eee8e82a677969aefa59e201bb587dbd","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":242169,"upload_time":"2021-09-27T06:59:57","upload_time_iso_8601":"2021-09-27T06:59:57.489276Z","url":"https://files.pythonhosted.org/packages/0c/c7/3dc3ff197ed5d34d5624147109b799412630073b6147f97af4a1fab2926f/dice_ml-0.7.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"770105763130cc2b164120b98a408a8c8bcff78aad902a94eb3d125e406f41aa","md5":"3ffbe42bd04ca5fcad988acdccf93425","sha256":"917867750cf47c00ef33176b5ef0e9013cb11cee00b2087afff4b248904ab013"},"downloads":-1,"filename":"dice_ml-0.7.2.tar.gz","has_sig":false,"md5_digest":"3ffbe42bd04ca5fcad988acdccf93425","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":12705483,"upload_time":"2021-09-27T06:59:59","upload_time_iso_8601":"2021-09-27T06:59:59.968974Z","url":"https://files.pythonhosted.org/packages/77/01/05763130cc2b164120b98a408a8c8bcff78aad902a94eb3d125e406f41aa/dice_ml-0.7.2.tar.gz","yanked":false,"yanked_reason":null}],"0.8":[{"comment_text":"","digests":{"blake2b_256":"8b2b6281cfde6406e820878738fb02fe9a412de14d4a93f5790c5813e8549399","md5":"7cca3bdca18568010ed2896ed6775477","sha256":"d064dcf81be1a29bbf62e51fd2bbd294f73299353b98b595e1a70e1f4bbeb4e0"},"downloads":-1,"filename":"dice_ml-0.8-py3-none-any.whl","has_sig":false,"md5_digest":"7cca3bdca18568010ed2896ed6775477","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":213849,"upload_time":"2022-06-02T13:40:03","upload_time_iso_8601":"2022-06-02T13:40:03.976135Z","url":"https://files.pythonhosted.org/packages/8b/2b/6281cfde6406e820878738fb02fe9a412de14d4a93f5790c5813e8549399/dice_ml-0.8-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2c0fff86bb26c7aaa3834049516d640e5f53577d4fbf23b4e6217d6bc2ca0892","md5":"daa8411cd0011be449c989ffd0842fe9","sha256":"23843489558d5eb27682b2766479b24e90548a4fab2c027a81b4bac0cbadc06d"},"downloads":-1,"filename":"dice_ml-0.8.tar.gz","has_sig":false,"md5_digest":"daa8411cd0011be449c989ffd0842fe9","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":12707518,"upload_time":"2022-06-02T13:40:07","upload_time_iso_8601":"2022-06-02T13:40:07.172199Z","url":"https://files.pythonhosted.org/packages/2c/0f/ff86bb26c7aaa3834049516d640e5f53577d4fbf23b4e6217d6bc2ca0892/dice_ml-0.8.tar.gz","yanked":false,"yanked_reason":null}],"0.9":[{"comment_text":"","digests":{"blake2b_256":"ea6764c5a91638dbcb4ac40f1fbbefeefe7a4e2df765e4e60866cc1048ecc915","md5":"7ea050948e23616a4ea4f06b2a064cd1","sha256":"13ea91b6efb1322aa210bd40804bd1880da78c7ea888d14fa28b75cba247f6cc"},"downloads":-1,"filename":"dice_ml-0.9-py3-none-any.whl","has_sig":false,"md5_digest":"7ea050948e23616a4ea4f06b2a064cd1","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":2555942,"upload_time":"2022-10-19T11:34:11","upload_time_iso_8601":"2022-10-19T11:34:11.281602Z","url":"https://files.pythonhosted.org/packages/ea/67/64c5a91638dbcb4ac40f1fbbefeefe7a4e2df765e4e60866cc1048ecc915/dice_ml-0.9-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"646850a1b8ed3e1a567b7870930245706a08493f483035625cc79cf48aac752a","md5":"16153a7821f9391973c498e08081e169","sha256":"0c4c2cb57f2218ba324ef2931304ab42f5f685759688a5898b0eb85b7a25b97a"},"downloads":-1,"filename":"dice_ml-0.9.tar.gz","has_sig":false,"md5_digest":"16153a7821f9391973c498e08081e169","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":14958417,"upload_time":"2022-10-19T11:34:14","upload_time_iso_8601":"2022-10-19T11:34:14.615148Z","url":"https://files.pythonhosted.org/packages/64/68/50a1b8ed3e1a567b7870930245706a08493f483035625cc79cf48aac752a/dice_ml-0.9.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"691cec136743072d7b4917d72d975e094c8dc9bce86920519aff97854a7dc3ce","md5":"bf876d652e75cdb3dade38f5f2416db1","sha256":"9a1c199f4a0f9a865319a17f00a76c07e21c9d090e1aa10f23ea13e25e8d8455"},"downloads":-1,"filename":"dice_ml-0.11-py3-none-any.whl","has_sig":false,"md5_digest":"bf876d652e75cdb3dade38f5f2416db1","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":2526789,"upload_time":"2023-10-27T03:54:06","upload_time_iso_8601":"2023-10-27T03:54:06.293214Z","url":"https://files.pythonhosted.org/packages/69/1c/ec136743072d7b4917d72d975e094c8dc9bce86920519aff97854a7dc3ce/dice_ml-0.11-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f4fc2129adcdcd6ffb771ef369b9413ca8461d76b24c203b09d306bef56fb6cf","md5":"26d6b2cd38dea22cf1a1f342d21a3710","sha256":"29e6bea9e4c877caa68ecdd5d981f91cc8de3b73cdad453fd7c7e000a336576d"},"downloads":-1,"filename":"dice_ml-0.11.tar.gz","has_sig":false,"md5_digest":"26d6b2cd38dea22cf1a1f342d21a3710","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":15030781,"upload_time":"2023-10-27T03:54:08","upload_time_iso_8601":"2023-10-27T03:54:08.891044Z","url":"https://files.pythonhosted.org/packages/f4/fc/2129adcdcd6ffb771ef369b9413ca8461d76b24c203b09d306bef56fb6cf/dice_ml-0.11.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
