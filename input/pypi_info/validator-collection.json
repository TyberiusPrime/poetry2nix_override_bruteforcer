{"info":{"author":"Insight Industry Inc.","author_email":"software@insightindustry.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Web Environment","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python :: 2","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Topic :: Internet :: WWW/HTTP :: Dynamic Content","Topic :: Software Development :: Libraries","Topic :: Software Development :: Libraries :: Python Modules","Topic :: Utilities"],"description":"\n======================\nValidator Collection\n======================\n\n**Python library of 60+ commonly-used validator functions**\n\n.. list-table::\n   :widths: 10 90\n   :header-rows: 1\n\n   * - Branch\n     - Unit Tests\n   * - `latest <https://github.com/insightindustry/validator-collection/tree/master>`_\n     -\n       .. image:: https://travis-ci.org/insightindustry/validator-collection.svg?branch=master\n          :target: https://travis-ci.org/insightindustry/validator-collection\n          :alt: Build Status (Travis CI)\n\n       .. image:: https://codecov.io/gh/insightindustry/validator-collection/branch/master/graph/badge.svg\n          :target: https://codecov.io/gh/insightindustry/validator-collection\n          :alt: Code Coverage Status (Codecov)\n\n       .. image:: https://readthedocs.org/projects/validator-collection/badge/?version=latest\n          :target: http://validator-collection.readthedocs.io/en/latest/?badge=latest\n          :alt: Documentation Status (ReadTheDocs)\n\n   * - `v. 1.5 <https://github.com/insightindustry/validator-collection/tree/v.1.5.0>`_\n     -\n       .. image:: https://travis-ci.org/insightindustry/validator-collection.svg?branch=v.1.5.0\n          :target: https://travis-ci.org/insightindustry/validator-collection\n          :alt: Build Status (Travis CI)\n\n       .. image:: https://codecov.io/gh/insightindustry/validator-collection/branch/v.1.5.0/graph/badge.svg\n          :target: https://codecov.io/gh/insightindustry/validator-collection\n          :alt: Code Coverage Status (Codecov)\n\n       .. image:: https://readthedocs.org/projects/validator-collection/badge/?version=v.1.5.0\n          :target: http://validator-collection.readthedocs.io/en/latest/?badge=v.1.5.0\n          :alt: Documentation Status (ReadTheDocs)\n\n   * - `v. 1.4 <https://github.com/insightindustry/validator-collection/tree/v.1.4.2>`_\n     -\n       .. image:: https://travis-ci.org/insightindustry/validator-collection.svg?branch=v.1.4.2\n          :target: https://travis-ci.org/insightindustry/validator-collection\n          :alt: Build Status (Travis CI)\n\n       .. image:: https://codecov.io/gh/insightindustry/validator-collection/branch/v.1.4.2/graph/badge.svg\n          :target: https://codecov.io/gh/insightindustry/validator-collection\n          :alt: Code Coverage Status (Codecov)\n\n       .. image:: https://readthedocs.org/projects/validator-collection/badge/?version=v.1.4.2\n          :target: http://validator-collection.readthedocs.io/en/latest/?badge=v.1.4.2\n          :alt: Documentation Status (ReadTheDocs)\n\n   * - `v. 1.3 <https://github.com/insightindustry/validator-collection/tree/v.1.3.8>`_\n     -\n       .. image:: https://travis-ci.org/insightindustry/validator-collection.svg?branch=v.1.3.8\n          :target: https://travis-ci.org/insightindustry/validator-collection\n          :alt: Build Status (Travis CI)\n\n       .. image:: https://codecov.io/gh/insightindustry/validator-collection/branch/v.1.3.8/graph/badge.svg\n          :target: https://codecov.io/gh/insightindustry/validator-collection\n          :alt: Code Coverage Status (Codecov)\n\n       .. image:: https://readthedocs.org/projects/validator-collection/badge/?version=v.1.3.8\n          :target: http://validator-collection.readthedocs.io/en/latest/?badge=v.1.3.8\n          :alt: Documentation Status (ReadTheDocs)\n\n   * - `v. 1.2 <https://github.com/insightindustry/validator-collection/tree/v.1.2.0>`_\n     -\n       .. image:: https://travis-ci.org/insightindustry/validator-collection.svg?branch=v.1.2.0\n          :target: https://travis-ci.org/insightindustry/validator-collection\n          :alt: Build Status (Travis CI)\n\n       .. image:: https://codecov.io/gh/insightindustry/validator-collection/branch/v.1.2.0/graph/badge.svg\n          :target: https://codecov.io/gh/insightindustry/validator-collection\n          :alt: Code Coverage Status (Codecov)\n\n       .. image:: https://readthedocs.org/projects/validator-collection/badge/?version=v.1.2.0\n          :target: http://validator-collection.readthedocs.io/en/latest/?badge=v.1.2.0\n          :alt: Documentation Status (ReadTheDocs)\n\n   * - `v. 1.1 <https://github.com/insightindustry/validator-collection/tree/v.1.1.0>`_\n     -\n       .. image:: https://travis-ci.org/insightindustry/validator-collection.svg?branch=v.1.1.0\n          :target: https://travis-ci.org/insightindustry/validator-collection\n          :alt: Build Status (Travis CI)\n\n       .. image:: https://codecov.io/gh/insightindustry/validator-collection/branch/v.1.1.0/graph/badge.svg\n          :target: https://codecov.io/gh/insightindustry/validator-collection\n          :alt: Code Coverage Status (Codecov)\n\n       .. image:: https://readthedocs.org/projects/validator-collection/badge/?version=v.1.1.0\n          :target: http://validator-collection.readthedocs.io/en/latest/?badge=v.1.1.0\n          :alt: Documentation Status (ReadTheDocs)\n\n   * - `v. 1.0 <https://github.com/insightindustry/validator-collection/tree/v1-0-0>`_\n     -\n       .. image:: https://travis-ci.org/insightindustry/validator-collection.svg?branch=v.1.0.0\n          :target: https://travis-ci.org/insightindustry/validator-collection\n          :alt: Build Status (Travis CI)\n\n       .. image:: https://codecov.io/gh/insightindustry/validator-collection/branch/v.1.0.0/graph/badge.svg\n          :target: https://codecov.io/gh/insightindustry/validator-collection\n          :alt: Code Coverage Status (Codecov)\n\n       .. image:: https://readthedocs.org/projects/validator-collection/badge/?version=v.1.0.0\n          :target: http://validator-collection.readthedocs.io/en/latest/?badge=v.1.0.0\n          :alt: Documentation Status (ReadTheDocs)\n\n   * - `develop <https://github.com/insightindustry/validator-collection/tree/develop>`_\n     -\n       .. image:: https://travis-ci.org/insightindustry/validator-collection.svg?branch=develop\n          :target: https://travis-ci.org/insightindustry/validator-collection\n          :alt: Build Status (Travis CI)\n\n       .. image:: https://codecov.io/gh/insightindustry/validator-collection/branch/develop/graph/badge.svg\n          :target: https://codecov.io/gh/insightindustry/validator-collection\n          :alt: Code Coverage Status (Codecov)\n\n       .. image:: https://readthedocs.org/projects/validator-collection/badge/?version=develop\n          :target: http://validator-collection.readthedocs.io/en/latest/?badge=develop\n          :alt: Documentation Status (ReadTheDocs)\n\n\nThe **Validator Collection** is a Python library that provides more than 60\nfunctions that can be used to validate the type and contents of an input value.\n\nEach function has a consistent syntax for easy use, and has been tested on\nPython 2.7, 3.4, 3.5, 3.6, 3.7, and 3.8.\n\nFor a list of validators available, please see the lists below.\n\n**COMPLETE DOCUMENTATION ON READTHEDOCS:** http://validator-collection.readthedocs.io/en/latest\n\n------\n\n.. contents:: Contents\n  :local:\n  :depth: 3\n  :backlinks: entry\n\n--------\n\n***************\nInstallation\n***************\n\nTo install the **Validator Collection**, just execute:\n\n.. code:: bash\n\n  $ pip install validator-collection\n\n**Dependencies:**\n\n.. list-table::\n  :widths: 50 50\n  :header-rows: 1\n\n  * - Python 3.x\n    - Python 2.7\n  * - `jsonschema <https://pypi.org/project/jsonschema/>`_ for JSON Schema Validation.\n    - `jsonschema <https://pypi.org/project/jsonschema/>`_ for JSON Schema Validation.\n\n      The `regex <https://pypi.python.org/pypi/regex>`_ drop-in replacement for\n      Python's (buggy) standard ``re`` module.\n\n      Conditional dependencies will be automatically installed if you are\n      installing to Python 2.x.\n\n-------\n\n***********************************\nAvailable Validators and Checkers\n***********************************\n\nValidators\n=============\n\n**SEE:** `Validator Reference <http://validator-collection.readthedocs.io/en/latest/validators.html>`_\n\n.. list-table::\n  :widths: 30 30 30 30 30\n  :header-rows: 1\n\n  * - Core\n    - Date/Time\n    - Numbers\n    - File-related\n    - Internet-related\n  * - ``dict``\n    - ``date``\n    - ``numeric``\n    - ``bytesIO``\n    - ``email``\n  * - ``json``\n    - ``datetime``\n    - ``integer``\n    - ``stringIO``\n    - ``url``\n  * - ``string``\n    - ``time``\n    - ``float``\n    - ``path``\n    - ``domain``\n  * - ``iterable``\n    - ``timezone``\n    - ``fraction``\n    - ``path_exists``\n    - ``ip_address``\n  * - ``none``\n    - ``timedelta``\n    - ``decimal``\n    - ``file_exists``\n    - ``ipv4``\n  * - ``not_empty``\n    -\n    -\n    - ``directory_exists``\n    - ``ipv6``\n  * - ``uuid``\n    -\n    -\n    - ``readable``\n    - ``mac_address``\n  * - ``variable_name``\n    -\n    -\n    - ``writeable``\n    - ``mimetype``\n  * -\n    -\n    -\n    - ``executable``\n    -\n\nCheckers\n==========\n\n**SEE:** `Checker Reference <http://validator-collection.readthedocs.io/en/latest/checkers.html>`_\n\n.. list-table::\n  :widths: 30 30 30 30 30\n  :header-rows: 1\n\n  * - Core\n    - Date/Time\n    - Numbers\n    - File-related\n    - Internet-related\n  * - ``is_type``\n    - ``is_date``\n    - ``is_numeric``\n    - ``is_bytesIO``\n    - ``is_email``\n  * - ``is_between``\n    - ``is_datetime``\n    - ``is_integer``\n    - ``is_stringIO``\n    - ``is_url``\n  * - ``has_length``\n    - ``is_time``\n    - ``is_float``\n    - ``is_pathlike``\n    - ``is_domain``\n  * - ``are_equivalent``\n    - ``is_timezone``\n    - ``is_fraction``\n    - ``is_on_filesystem``\n    - ``is_ip_address``\n  * - ``are_dicts_equivalent``\n    - ``is_timedelta``\n    - ``is_decimal``\n    - ``is_file``\n    - ``is_ipv4``\n  * - ``is_dict``\n    -\n    -\n    - ``is_directory``\n    - ``is_ipv6``\n  * - ``is_json``\n    -\n    -\n    - ``is_readable``\n    - ``is_mac_address``\n  * - ``is_string``\n    -\n    -\n    - ``is_writeable``\n    - ``is_mimetype``\n  * - ``is_iterable``\n    -\n    -\n    - ``is_executable``\n    -\n  * - ``is_not_empty``\n    -\n    -\n    -\n    -\n  * - ``is_none``\n    -\n    -\n    -\n    -\n  * - ``is_callable``\n    -\n    -\n    -\n    -\n  * - ``is_uuid``\n    -\n    -\n    -\n    -\n  * - ``is_variable_name``\n    -\n    -\n    -\n    -\n\n-----\n\n************************************\nHello, World and Standard Usage\n************************************\n\nAll validator functions have a consistent syntax so that using them is pretty\nmuch identical. Here's how it works:\n\n.. code-block:: python\n\n  from validator_collection import validators, checkers, errors\n\n  email_address = validators.email('test@domain.dev')\n  # The value of email_address will now be \"test@domain.dev\"\n\n  email_address = validators.email('this-is-an-invalid-email')\n  # Will raise a ValueError\n\n  try:\n      email_address = validators.email(None)\n      # Will raise an EmptyValueError\n  except errors.EmptyValueError:\n      # Handling logic goes here\n  except errors.InvalidEmailError:\n      # More handlign logic goes here\n\n  email_address = validators.email(None, allow_empty = True)\n  # The value of email_address will now be None\n\n  email_address = validators.email('', allow_empty = True)\n  # The value of email_address will now be None\n\n  is_email_address = checkers.is_email('test@domain.dev')\n  # The value of is_email_address will now be True\n\n  is_email_address = checkers.is_email('this-is-an-invalid-email')\n  # The value of is_email_address will now be False\n\n  is_email_address = checkers.is_email(None)\n  # The value of is_email_address will now be False\n\nPretty simple, right? Let's break it down just in case: Each validator comes in\ntwo flavors: a validator and a checker.\n\n.. _validators-explained:\n\nUsing Validators\n==================\n\n**SEE:** `Validator Reference <http://validator-collection.readthedocs.io/en/latest/validators.html>`_\n\nA validator does what it says on the tin: It validates that an input value is\nwhat you think it should be, and returns its valid form.\n\nEach validator is expressed as the name of the thing being validated, for example\n``email()``.\n\nEach validator accepts a value as its first argument, and an optional ``allow_empty``\nboolean as its second argument. For example:\n\n.. code-block:: python\n\n  email_address = validators.email(value, allow_empty = True)\n\nIf the value you're validating validates successfully, it will be returned. If\nthe value you're validating needs to be coerced to a different type, the\nvalidator will try to do that. So for example:\n\n.. code-block:: python\n\n  validators.integer(1)\n  validators.integer('1')\n\nwill both return an ``int`` of ``1``.\n\nIf the value you're validating is empty/falsey and ``allow_empty`` is ``False``,\nthen the validator will raise a ``EmptyValueError`` exception (which inherits from\nthe built-in ``ValueError``). If ``allow_empty`` is ``True``, then an empty/falsey\ninput value will be converted to a ``None`` value.\n\n**CAUTION:** By default, ``allow_empty`` is always set to ``False``.\n\n**HINT:** Some validators (particularly numeric ones like ``integer``) have additional\noptions which are used to make sure the value meets criteria that you set for\nit. These options are always included as keyword arguments *after* the\n``allow_empty`` argument, and are documented for each validator below.\n\nWhen Validation Fails\n-----------------------\n\nValidators raise exceptions when validation fails. All exceptions raised inherit\nfrom built-in exceptions like ``ValueError``, ``TypeError``, and ``IOError``.\n\nIf the value you're validating fails its validation for some reason, the validator\nmay raise different exceptions depending on the reason. In most cases, this will\nbe a descendent of ``ValueError`` though it can sometimes be a\n``TypeError``, or an ``IOError``, etc.\n\nFor specifics on each validator's likely exceptions and what can cause them, please\nreview the\n`Validator Reference <http://validator-collection.readthedocs.io/en/latest/validators.html>`_\n\n**HINT:** While validators will always raise built-in exceptions from the standard library,\nto give you greater programmatic control over how to respond when validation\nfails, we have defined a set of custom exceptions that inherit from those\nbuilt-ins.\n\nOur custom exceptions provide you with very specific, fine-grained information\nas to *why* validation for a given value failed. In general, most validators\nwill raise ``ValueError`` or ``TypeError`` exceptions, and you can safely catch those\nand be fine. But if you want to handle specific types of situations with greater\ncontrol, then you can instead catch ``EmptyValueError``, ``CannotCoerceError``,\n``MaximumValueError``, and the like.\n\nFor more detailed information, please see:\n\n* `Error Reference <http://validator-collection.readthedocs.io/en/latest/errors.html>`_\n* `Validator Reference <http://validator-collection.readthedocs.io/en/latest/validators.html>`_\n\nDisabling Validation\n----------------------\n\n**CAUTION:**  If you are `disabling validators <#disabling-validation>`_ using the\n``VALIDATORS_DISABLED`` environment variable, their related checkers will **also**\nbe disabled (meaning they will always return ``True``).\n\nValidation can at times be an expensive (in terms of performance) operation. As\na result, there are times when you want to disable certain kinds of validation\nwhen running in production. Using the **Validator-Collection** this is simple:\n\nJust add the name of the validator you want disabled to the ``VALIDATORS_DISABLED``\nenvironment variable, and validation will automatically be skipped.\n\n**CAUTION:** ``VALIDATORS_DISABLED`` expects a comma-separated list of values. If it isn't\ncomma-separated, it won't work properly.\n\nHere's how it works in practice. Let's say we define the following environment\nvariable:\n\n.. code-block:: bash\n\n  $ export VALIDATORS_DISABLED = \"variable_name, email, ipv4\"\n\nThis disables the ``variable_name()``, ``email()``, and ``ipv4()`` validators respectively.\n\nNow if we run:\n\n.. code-block:: python\n\n  from validator_collection import validators, errors\n\n  try:\n      result = validators.variable_name('this is an invalid variable name')\n  except ValueError:\n      # handle the error\n\nThe validator will return the ``value`` supplied to it un-changed. So that means\n``result`` will be equal to ``this is an invalid variable name``.\n\nHowever, if we run:\n\n.. code-block:: python\n\n  from validator_collection import validators, errors\n\n  try:\n      result = validators.integer('this is an invalid variable name')\n  except errors.NotAnIntegerError:\n      # handle the error\n\nthe validator will run and raise ``NotAnIntegerError``.\n\nWe can force validators to run (even if disabled using the environment variable)\nby passing a ``force_run = True`` keyword argument. For example:\n\n.. code-block:: python\n\n  from validator_collection import validators, errors\n\n  try:\n      result = validators.variable_name('this is an invalid variable name',\n                                        force_run = True)\n  except ValueError:\n      # handle the error\n\nwill produce a ``InvalidVariableNameError`` (which is a type of\n``ValueError``).\n\n.. _checkers-explained:\n\nUsing Checkers\n================\n\nPlease see the `Checker Reference <http://validator-collection.readthedocs.io/en/latest/checkers.html>`_\n\nLikewise, a checker is what it sounds like: It checks that an input value\nis what you expect it to be, and tells you ``True``/``False`` whether it is or not.\n\n**IMPORTANT:** Checkers do *not* verify or convert object types. You can think of a checker as\na tool that tells you whether its corresponding `validator <#using-validators>`_\nwould fail. See `Best Practices <#best-practices>`_ for tips and tricks on\nusing the two together.\n\nEach checker is expressed as the name of the thing being validated, prefixed by\n``is_``. So the checker for an email address is ``is_email()`` and the checker\nfor an integer is ``is_integer()``.\n\nCheckers take the input value you want to check as their first (and often only)\npositional argumet. If the input value validates, they will return ``True``. Unlike\n`validators <#using-validators>`_, checkers will not raise an exception if\nvalidation fails. They will instead return ``False``.\n\n**HINT:** If you need to know *why* a given value failed to validate, use the validator\ninstead.\n\n**HINT:** Some checkers (particularly numeric ones like ``is_integer()``) have additional\noptions which are used to make sure the value meets criteria that you set for\nit. These options are always *optional* and are included as keyword arguments\n*after* the input value argument. For details, please see the\n`Checker Reference <http://validator-collection.readthedocs.io/en/latest/checkers.html>`_.\n\nDisabling Checking\n----------------------\n\n**CAUTION:**  If you are disabling validators using the ``VALIDATORS_DISABLED``\nenvironment variable, their related checkers will **also** be disabled. This means\nthey will always return ``True`` unless called with ``force_run = True``.\n\nChecking can at times be an expensive (in terms of performance) operation. As\na result, there are times when you want to disable certain kinds of checking\nwhen running in production. Using the **Validator-Collection** this is simple:\n\nJust add the name of the checker you want disabled to the ``CHECKERS_DISABLED``\nenvironment variable, and validation will automatically be skipped.\n\n**CAUTION:** ``CHECKERS_DISABLED`` expects a comma-separated list of values. If\nit isn't comma-separated, it won't work properly.\n\nHere's how it works in practice. Let's say we define the following environment\nvariable:\n\n.. code-block:: bash\n\n  $ export CHECKERS_DISABLED = \"is_variable_name, is_email, is_ipv4\"\n\nThis disables the ``is_variable_name()``, ``is_email()``, and ``is_ipv4()``\ncheckers respectively.\n\nNow if we run:\n\n.. code-block:: python\n\n  from validator_collection import checkers\n\n  result = checkers.is_variable_name('this is an invalid variable name')\n  # result will be True\n\nThe checker will return ``True``.\n\nHowever, if we run:\n\n.. code-block:: python\n\n  from validator_collection import checkers\n\n  result = validators.is_integer('this is an invalid variable name')\n  # result will be False\n\nthe checker will return ``False``\n\nWe can force checkers to run (even if disabled using the environment variable)\nby passing a ``force_run = True`` keyword argument. For example:\n\n.. code-block:: python\n\n  from validator_collection import checkers\n\n  result = checkers.is_variable_name('this is an invalid variable name',\n                                     force_run = True)\n  # result will be False\n\nwill return ``False``.\n\n.. _best-practices:\n\n------\n\n*****************\nBest Practices\n*****************\n\n`Checkers <#using-checkers>`_ and `Validators <#using-validators>`_\nare designed to be used together. You can think of them as a way to quickly and\neasily verify that a value contains the information you expect, and then make\nsure that value is in the form your code needs it in.\n\nThere are two fundamental patterns that we find work well in practice.\n\nDefensive Approach: Check, then Convert if Necessary\n=======================================================\n\nWe find this pattern is best used when we don't have any certainty over a given\nvalue might contain. It's fundamentally defensive in nature, and applies the\nfollowing logic:\n\n#. Check whether ``value`` contains the information we need it to or can be\n   converted to the form we need it in.\n#. If ``value`` does not contain what we need but *can* be converted to what\n   we need, do the conversion.\n#. If ``value`` does not contain what we need but *cannot* be converted to what\n   we need, raise an error (or handle it however it needs to be handled).\n\nWe tend to use this where we're first receiving data from outside of our control,\nso when we get data from a user, from the internet, from a third-party API, etc.\n\nHere's a quick example of how that might look in code:\n\n.. code-block:: python\n\n  from validator_collection import checkers, validators\n\n  def some_function(value):\n      # Check whether value contains a whole number.\n      is_valid = checkers.is_integer(value,\n                                     coerce_value = False)\n\n      # If the value does not contain a whole number, maybe it contains a\n      # numeric value that can be rounded up to a whole number.\n      if not is_valid and checkers.is_integer(value, coerce_value = True):\n          # If the value can be rounded up to a whole number, then do so:\n          value = validators.integer(value, coerce_value = True)\n      elif not is_valid:\n          # Since the value does not contain a whole number and cannot be converted to\n          # one, this is where your code to handle that error goes.\n          raise ValueError('something went wrong!')\n\n      return value\n\n  value = some_function(3.14)\n  # value will now be 4\n\n  new_value = some_function('not-a-number')\n  # will raise ValueError\n\nLet's break down what this code does. First, we define ``some_function()`` which\ntakes a value. This function uses the\n``is_integer()``\nchecker to see if ``value`` contains a whole number, regardless of its type.\n\nIf it doesn't contain a whole number, maybe it contains a numeric value that can\nbe rounded up to a whole number? It again uses the\n``is_integer()`` to check if that's\npossible. If it is, then it calls the\n``integer()`` validator to coerce\n``value`` to a whole number.\n\nIf it can't coerce ``value`` to a whole number? It raises a ``ValueError``.\n\n\nConfident Approach: try ... except\n=====================================\n\nSometimes, we'll have more confidence in the values that we can expect to work\nwith. This means that we might expect ``value`` to *generally* have the kind of\ndata we need to work with. This means that situations where ``value`` doesn't\ncontain what we need will truly be exceptional situations, and can be handled\naccordingly.\n\nIn this situation, a good approach is to apply the following logic:\n\n#. Skip a checker entirely, and just wrap the validator in a\n   ``try...except`` block.\n\nWe tend to use this in situations where we're working with data that our own\ncode has produced (meaning we know - generally - what we can expect, unless\nsomething went seriously wrong).\n\nHere's an example:\n\n.. code-block:: python\n\n  from validator_collection import validators, errors\n\n  def some_function(value):\n      try:\n          email_address = validators.email(value, allow_empty = False)\n      except errors.InvalidEmailError as error:\n          # handle the error here\n      except ValueError as error:\n          # handle other ValueErrors here\n\n      # do something with your new email address value\n\n      return email_address\n\n  email = some_function('email@domain.com')\n  # This will return the email address.\n\n  email = some_function('not-a-valid-email')\n  # This will raise a ValueError that some_function() will handle.\n\n  email = some_function(None)\n  # This will raise a ValueError that some_function() will handle.\n\nSo what's this code do? It's pretty straightforward. ``some_function()`` expects\nto receive a ``value`` that contains an email address. We expect that ``value``\nwill *typically* be an email address, and not something weird (like a number or\nsomething). So we just try the validator - and if validation fails, we handle\nthe error appropriately.\n\n----------\n\n*********************\nQuestions and Issues\n*********************\n\nYou can ask questions and report issues on the project's\n`Github Issues Page <https://github.com/insightindustry/validator-collection/issues>`_\n\n*********************\nContributing\n*********************\n\nWe welcome contributions and pull requests! For more information, please see the\n`Contributor Guide <http://validator-collection.readthedocs.io/en/latest/contributing.html>`_.\n\nAnd thanks to `all those who have contributed <https://github.com/insightindustry/validator-collection/graphs/contributors>`_!\n\n*********************\nTesting\n*********************\n\nWe use `TravisCI <http://travisci.org>`_ for our build automation and\n`ReadTheDocs <https://readthedocs.org>`_ for our documentation.\n\nDetailed information about our test suite and how to run tests locally can be\nfound in our `Testing Reference <http://validator-collection.readthedocs.io/en/latest/testing.html>`_.\n\n**********************\nLicense\n**********************\n\nThe **Validator Collection** is made available on a **MIT License**.\n\n\n","description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/insightindustry/validator-collection","keywords":"validator validate validation validators","license":"MIT","maintainer":"","maintainer_email":"","name":"validator-collection","package_url":"https://pypi.org/project/validator-collection/","platform":"","project_url":"https://pypi.org/project/validator-collection/","project_urls":{"Bug Reports":"https://github.com/insightindustry/validator-collection/issues","Documentation":"http://validator-collection.readthedocs.io/en/latest","Homepage":"https://github.com/insightindustry/validator-collection","Source":"https://github.com/insightindustry/validator-collection/"},"provides_extra":null,"release_url":"https://pypi.org/project/validator-collection/1.5.0/","requires_dist":["jsonschema","regex ; python_version < \"3\"","check-manifest ; extra == 'dev'","sphinx ; extra == 'dev'","sphinx-rtd-theme ; extra == 'dev'","sphinx-tabs ; extra == 'dev'","coverage ; extra == 'test'","pytest ; extra == 'test'","pytest-benchmark ; extra == 'test'","pytest-cov ; extra == 'test'","tox ; extra == 'test'","codecov ; extra == 'test'","pyfakefs ; extra == 'test'"],"requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","summary":"Collection of 60+ Python functions for validating data","version":"1.5.0","yanked":false,"yanked_reason":null},"last_serial":8395500,"releases":{"1.0.0.1":[{"comment_text":"","digests":{"blake2b_256":"df47a787b9fb4b36e76744962b72e391284cc28d353e26cd580f5b19701fcf6c","md5":"6125d1bf61f5a0b239fd450faf5046be","sha256":"89fa3a8f288d8d08971fdb9fed0bbde33316358a98c4920d3e04b19f7106d5f7"},"downloads":-1,"filename":"validator_collection-1.0.0.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"6125d1bf61f5a0b239fd450faf5046be","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":22062,"upload_time":"2018-04-16T13:21:15","upload_time_iso_8601":"2018-04-16T13:21:15.833218Z","url":"https://files.pythonhosted.org/packages/df/47/a787b9fb4b36e76744962b72e391284cc28d353e26cd580f5b19701fcf6c/validator_collection-1.0.0.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d92e196725a163347a7e21138d78dd803e8ce567799435f2b1bcd80aa752a8bb","md5":"df8671f7993711204dbea5067f7456c8","sha256":"cf5c28377905c61a26d3d3bb49c553bff3e901b13849bbe50457586441967e30"},"downloads":-1,"filename":"validator-collection-1.0.0.1.tar.gz","has_sig":false,"md5_digest":"df8671f7993711204dbea5067f7456c8","packagetype":"sdist","python_version":"source","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":30935,"upload_time":"2018-04-16T13:21:16","upload_time_iso_8601":"2018-04-16T13:21:16.931129Z","url":"https://files.pythonhosted.org/packages/d9/2e/196725a163347a7e21138d78dd803e8ce567799435f2b1bcd80aa752a8bb/validator-collection-1.0.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"5d6fa09e036f90c8eb53d361e2575cb681d47b81f83e7f40c591ced5d208bd01","md5":"c25710fd3ea90a863648df0ee5f344fa","sha256":"02c64732d352340e8c437333ef10474087d03eb9fd97debd787c6486a92e3698"},"downloads":-1,"filename":"validator_collection-1.1.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"c25710fd3ea90a863648df0ee5f344fa","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":31494,"upload_time":"2018-04-23T22:02:37","upload_time_iso_8601":"2018-04-23T22:02:37.958074Z","url":"https://files.pythonhosted.org/packages/5d/6f/a09e036f90c8eb53d361e2575cb681d47b81f83e7f40c591ced5d208bd01/validator_collection-1.1.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a36cf42f06efee172795393dac4650845db14344e85e9caaad22d7f2152ae542","md5":"74389b558ab5744c095fd3f0c13478be","sha256":"e240c9c19d9ef3dede9df538dd3bcac86b0fb59d2ea272ab29eced6813570030"},"downloads":-1,"filename":"validator-collection-1.1.0.tar.gz","has_sig":false,"md5_digest":"74389b558ab5744c095fd3f0c13478be","packagetype":"sdist","python_version":"source","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":39714,"upload_time":"2018-04-23T22:02:38","upload_time_iso_8601":"2018-04-23T22:02:38.982064Z","url":"https://files.pythonhosted.org/packages/a3/6c/f42f06efee172795393dac4650845db14344e85e9caaad22d7f2152ae542/validator-collection-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"370d7123f34f0bed27f7d236ac99dd5428dcac8d84795affd5ef98d7a4dba3c3","md5":"c7dd4779131fc41eaccdcc0d88258424","sha256":"be1ed1384cedf8845c9772e8ad754694495e1feaf4f94116b73ba3108021b707"},"downloads":-1,"filename":"validator_collection-1.2.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"c7dd4779131fc41eaccdcc0d88258424","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":31935,"upload_time":"2018-08-04T21:09:59","upload_time_iso_8601":"2018-08-04T21:09:59.520169Z","url":"https://files.pythonhosted.org/packages/37/0d/7123f34f0bed27f7d236ac99dd5428dcac8d84795affd5ef98d7a4dba3c3/validator_collection-1.2.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.3.0":[{"comment_text":"","digests":{"blake2b_256":"44ba4b75a3f16055cb6d2a2617716c7733b6887cf4239a7f5219095d3aca1b3e","md5":"2274cadff92a4d2cefd5ce4a1879a444","sha256":"a4d644c0db8410b5f284b485ffbf0a4c27056f321735cabec16150c8c2ebfdc5"},"downloads":-1,"filename":"validator_collection-1.3.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"2274cadff92a4d2cefd5ce4a1879a444","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":32578,"upload_time":"2018-11-13T12:47:45","upload_time_iso_8601":"2018-11-13T12:47:45.624473Z","url":"https://files.pythonhosted.org/packages/44/ba/4b75a3f16055cb6d2a2617716c7733b6887cf4239a7f5219095d3aca1b3e/validator_collection-1.3.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.3.1":[{"comment_text":"","digests":{"blake2b_256":"582c6659748ca3eb1eb7d9f3da5765b5cbce89217126b91d5a9d6fe4a76a81e6","md5":"63765f1f11eece12ab6c55d9c89679eb","sha256":"1008f31ead2271e5caf1b655e1605ff42fde2b39620be7953558b58d5d8f1325"},"downloads":-1,"filename":"validator_collection-1.3.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"63765f1f11eece12ab6c55d9c89679eb","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":32741,"upload_time":"2018-11-30T23:07:51","upload_time_iso_8601":"2018-11-30T23:07:51.682874Z","url":"https://files.pythonhosted.org/packages/58/2c/6659748ca3eb1eb7d9f3da5765b5cbce89217126b91d5a9d6fe4a76a81e6/validator_collection-1.3.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.3.2":[{"comment_text":"","digests":{"blake2b_256":"ee59ef743f119b3306ffcb8079a2180980520161ba19f24caefee1fe35d2484e","md5":"c25818a2a774612cf87239808989cff9","sha256":"e8ddec6d301bd3be40cacb9d4f9f85573bc003e3e17a66ba7267ef46b9a8e3d2"},"downloads":-1,"filename":"validator_collection-1.3.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"c25818a2a774612cf87239808989cff9","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":33873,"upload_time":"2019-02-09T18:35:03","upload_time_iso_8601":"2019-02-09T18:35:03.650398Z","url":"https://files.pythonhosted.org/packages/ee/59/ef743f119b3306ffcb8079a2180980520161ba19f24caefee1fe35d2484e/validator_collection-1.3.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.3.3":[{"comment_text":"","digests":{"blake2b_256":"c83c01e6d5f8fdd3d913578e6bed5612622c92c7ca86bc258acab075ff674729","md5":"9acc475aad2901898b1e88c07eeb7dd6","sha256":"d8f4065fa8d08fa356676c2ec5c335a29608a5db9e03e6b837f274de6af8588d"},"downloads":-1,"filename":"validator_collection-1.3.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9acc475aad2901898b1e88c07eeb7dd6","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":33891,"upload_time":"2019-03-23T19:59:24","upload_time_iso_8601":"2019-03-23T19:59:24.269131Z","url":"https://files.pythonhosted.org/packages/c8/3c/01e6d5f8fdd3d913578e6bed5612622c92c7ca86bc258acab075ff674729/validator_collection-1.3.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.3.4":[{"comment_text":"","digests":{"blake2b_256":"ad5f047fbf06653a0ddc2fe2afaab23c65db5bb587e2aead5bff30c93fb8f7a0","md5":"317cdcb47181a2e034b306c8f44d900e","sha256":"8ee41115c232fb6a88942d1b4134a5da377c375ff439aba94a15741aa41c936a"},"downloads":-1,"filename":"validator_collection-1.3.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"317cdcb47181a2e034b306c8f44d900e","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":33874,"upload_time":"2019-04-04T02:11:38","upload_time_iso_8601":"2019-04-04T02:11:38.824411Z","url":"https://files.pythonhosted.org/packages/ad/5f/047fbf06653a0ddc2fe2afaab23c65db5bb587e2aead5bff30c93fb8f7a0/validator_collection-1.3.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.3.5":[{"comment_text":"","digests":{"blake2b_256":"a3d5cdf8fc90e75b6dbdda6b2982acd6909890ce7a735f012853a6de3b491b03","md5":"bf9bda785ffd8c1ea530724a8fc84608","sha256":"12a7415f623478c1ee087d206b36a0965155eacc4aa8a8594d4ab7b38f8211eb"},"downloads":-1,"filename":"validator_collection-1.3.5-py2.py3-none-any.whl","has_sig":false,"md5_digest":"bf9bda785ffd8c1ea530724a8fc84608","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":34010,"upload_time":"2019-05-17T23:00:44","upload_time_iso_8601":"2019-05-17T23:00:44.465851Z","url":"https://files.pythonhosted.org/packages/a3/d5/cdf8fc90e75b6dbdda6b2982acd6909890ce7a735f012853a6de3b491b03/validator_collection-1.3.5-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.3.6":[{"comment_text":"","digests":{"blake2b_256":"d095bda4664ba590c92f6805a23a8ec825280f711f3ef1e2aa3c2773640cb1e9","md5":"55c989103e2e6e6fb58807dbc588bf65","sha256":"a3df71eeca9e3ae614fc06ccb71193352c1c33f9bee616bedd4c468149d307b2"},"downloads":-1,"filename":"validator_collection-1.3.6-py2.py3-none-any.whl","has_sig":false,"md5_digest":"55c989103e2e6e6fb58807dbc588bf65","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":34091,"upload_time":"2019-08-30T02:10:52","upload_time_iso_8601":"2019-08-30T02:10:52.066107Z","url":"https://files.pythonhosted.org/packages/d0/95/bda4664ba590c92f6805a23a8ec825280f711f3ef1e2aa3c2773640cb1e9/validator_collection-1.3.6-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.3.7":[{"comment_text":"","digests":{"blake2b_256":"696ade752482c6ee18c421349b1be9e33f38a6d9868ce0439f5383a0b4be6d40","md5":"48d7c2444715d0e02a0dab71c060384f","sha256":"29b08080e68748e888bf852f5c50ab25dc2efb5763a56810eb9b9f9f0227a8f6"},"downloads":-1,"filename":"validator_collection-1.3.7-py2.py3-none-any.whl","has_sig":false,"md5_digest":"48d7c2444715d0e02a0dab71c060384f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":34332,"upload_time":"2019-09-08T15:58:25","upload_time_iso_8601":"2019-09-08T15:58:25.298347Z","url":"https://files.pythonhosted.org/packages/69/6a/de752482c6ee18c421349b1be9e33f38a6d9868ce0439f5383a0b4be6d40/validator_collection-1.3.7-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.3.8":[{"comment_text":"","digests":{"blake2b_256":"49c459b31c3164f023f7026c8f165235753410b5bf51b586104780649efa9dd9","md5":"e6dc5b8d2d9eb622ffb5dcf65246935b","sha256":"80b72ef4950298b170399263bfd56eb4f0a9e3b269501f3d22ab0ab952ba4032"},"downloads":-1,"filename":"validator_collection-1.3.8-py2.py3-none-any.whl","has_sig":false,"md5_digest":"e6dc5b8d2d9eb622ffb5dcf65246935b","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":34566,"upload_time":"2019-12-07T21:17:01","upload_time_iso_8601":"2019-12-07T21:17:01.196029Z","url":"https://files.pythonhosted.org/packages/49/c4/59b31c3164f023f7026c8f165235753410b5bf51b586104780649efa9dd9/validator_collection-1.3.8-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.4.0":[{"comment_text":"","digests":{"blake2b_256":"302bbc7219e324fb55d9b6e0704985e63f5f7ade91bc21e66f2b706da4a0cbc7","md5":"87008a25fe6eb99c7af152170a96c922","sha256":"c0f99730a27880add58eb4c42c215b9a21febf1725ebe28d8167ae451d9847d5"},"downloads":-1,"filename":"validator_collection-1.4.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"87008a25fe6eb99c7af152170a96c922","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":35880,"upload_time":"2019-12-21T17:23:36","upload_time_iso_8601":"2019-12-21T17:23:36.847353Z","url":"https://files.pythonhosted.org/packages/30/2b/bc7219e324fb55d9b6e0704985e63f5f7ade91bc21e66f2b706da4a0cbc7/validator_collection-1.4.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.4.1":[{"comment_text":"","digests":{"blake2b_256":"eb8c52fbb84e7f9b5b5da2251d598a40414ef04f963f4774b6b14ca94cbf51f0","md5":"a46c812c55aec4fd1d17f85f3e8a1166","sha256":"6e800bb5e8fb886d69a6b1a3850867760c061ae90a77ade496042da925ddd533"},"downloads":-1,"filename":"validator_collection-1.4.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"a46c812c55aec4fd1d17f85f3e8a1166","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":35896,"upload_time":"2020-01-01T22:39:32","upload_time_iso_8601":"2020-01-01T22:39:32.923173Z","url":"https://files.pythonhosted.org/packages/eb/8c/52fbb84e7f9b5b5da2251d598a40414ef04f963f4774b6b14ca94cbf51f0/validator_collection-1.4.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.4.2":[{"comment_text":"","digests":{"blake2b_256":"b037fe43c26b1374b58c8a7c95388e01b341b704c868ba7dcc1cd1b020bb3700","md5":"97916d56ca8475dd5ed690bb634c6cf1","sha256":"8c6d9d9215b356694511545a40ce55c6526bd78f77a21c83b997502eb67329cb"},"downloads":-1,"filename":"validator_collection-1.4.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"97916d56ca8475dd5ed690bb634c6cf1","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":36186,"upload_time":"2020-06-19T17:14:22","upload_time_iso_8601":"2020-06-19T17:14:22.075923Z","url":"https://files.pythonhosted.org/packages/b0/37/fe43c26b1374b58c8a7c95388e01b341b704c868ba7dcc1cd1b020bb3700/validator_collection-1.4.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.5.0":[{"comment_text":"","digests":{"blake2b_256":"4ccb051b87d913beb43f7890b16e421965a1550d791637629893a7448bb2b832","md5":"b1f505232547c5478271b3f5fd7cc46f","sha256":"56f6dc65d86c2e5b8f04f22acedd33af2c233edc1082fe4d24fd3996bd19d0fe"},"downloads":-1,"filename":"validator_collection-1.5.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b1f505232547c5478271b3f5fd7cc46f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":36418,"upload_time":"2020-10-12T17:24:20","upload_time_iso_8601":"2020-10-12T17:24:20.021709Z","url":"https://files.pythonhosted.org/packages/4c/cb/051b87d913beb43f7890b16e421965a1550d791637629893a7448bb2b832/validator_collection-1.5.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e018037926fffcdb09dd9ccde56de6bbffa379270f2c8f5474857ad6c04b55f2","md5":"5aafda85b0337812facc63ee4c1c4adc","sha256":"f9395cad9a30cb9864fa0c0d18a84daead1eb8807774f4e09f588f89b7dc77d8"},"downloads":-1,"filename":"validator-collection-1.5.0.tar.gz","has_sig":false,"md5_digest":"5aafda85b0337812facc63ee4c1c4adc","packagetype":"sdist","python_version":"source","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":46010,"upload_time":"2020-10-12T17:24:21","upload_time_iso_8601":"2020-10-12T17:24:21.666565Z","url":"https://files.pythonhosted.org/packages/e0/18/037926fffcdb09dd9ccde56de6bbffa379270f2c8f5474857ad6c04b55f2/validator-collection-1.5.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"4ccb051b87d913beb43f7890b16e421965a1550d791637629893a7448bb2b832","md5":"b1f505232547c5478271b3f5fd7cc46f","sha256":"56f6dc65d86c2e5b8f04f22acedd33af2c233edc1082fe4d24fd3996bd19d0fe"},"downloads":-1,"filename":"validator_collection-1.5.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b1f505232547c5478271b3f5fd7cc46f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":36418,"upload_time":"2020-10-12T17:24:20","upload_time_iso_8601":"2020-10-12T17:24:20.021709Z","url":"https://files.pythonhosted.org/packages/4c/cb/051b87d913beb43f7890b16e421965a1550d791637629893a7448bb2b832/validator_collection-1.5.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e018037926fffcdb09dd9ccde56de6bbffa379270f2c8f5474857ad6c04b55f2","md5":"5aafda85b0337812facc63ee4c1c4adc","sha256":"f9395cad9a30cb9864fa0c0d18a84daead1eb8807774f4e09f588f89b7dc77d8"},"downloads":-1,"filename":"validator-collection-1.5.0.tar.gz","has_sig":false,"md5_digest":"5aafda85b0337812facc63ee4c1c4adc","packagetype":"sdist","python_version":"source","requires_python":">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4","size":46010,"upload_time":"2020-10-12T17:24:21","upload_time_iso_8601":"2020-10-12T17:24:21.666565Z","url":"https://files.pythonhosted.org/packages/e0/18/037926fffcdb09dd9ccde56de6bbffa379270f2c8f5474857ad6c04b55f2/validator-collection-1.5.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
