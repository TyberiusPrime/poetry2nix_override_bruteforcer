{"info":{"author":"Manuel Barkhau","author_email":"mbarkhau@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Environment :: Console","Environment :: Other Environment","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Operating System :: MacOS :: MacOS X","Operating System :: Microsoft :: Windows","Operating System :: POSIX","Operating System :: Unix","Programming Language :: Python","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Software Development :: Libraries","Topic :: Software Development :: Libraries :: Python Modules"],"description":"<div align=\"center\">\n<p align=\"center\">\n  <img alt=\"logo\" src=\"https://raw.githubusercontent.com/mbarkhau/bumpver/master/bumpver_128.png\">\n</p>\n</div>\n\n\n# [BumpVer: Automatic Versioning][url_repo]\n\nWith the CLI command `bumpver`, you can search for and update version strings in your project files. It has a flexible pattern syntax to support many version schemes ([SemVer][url_semver_org], [CalVer][url_calver_org] or otherwise). BumpVer features:\n\n- Configurable version patterns\n- Optional Git or Mercurial integration\n- Works with plaintext, so you can use it with any project.\n\n[url_repo]: https://github.com/mbarkhau/bumpver\n[url_semver_org]: https://semver.org/\n[url_calver_org]: https://calver.org/\n\n\nProject/Repo:\n\n[![MIT License][img_license]][url_license]\n[![Supported Python Versions][img_pyversions]][url_pyversions]\n[![CalVer 2023.1129][img_version]][url_version]\n[![PyPI Releases][img_pypi]][url_pypi]\n[![PyPI Downloads][img_downloads]][url_downloads]\n\nCode Quality/CI:\n\n[![GitHub Build Status][img_github_build]][url_github_build]\n[![GitLab Build Status][img_gitlab_build]][url_gitlab_build]\n[![Type Checked with mypy][img_mypy]][url_mypy]\n[![Code Coverage][img_codecov]][url_codecov]\n[![Code Style: sjfmt][img_style]][url_style]\n\n\n[img_github_build]: https://github.com/mbarkhau/pycalver/workflows/CI/badge.svg\n[url_github_build]: https://github.com/mbarkhau/pycalver/actions?query=workflow%3ACI\n\n[img_gitlab_build]: https://gitlab.com/mbarkhau/pycalver/badges/master/pipeline.svg\n[url_gitlab_build]: https://gitlab.com/mbarkhau/pycalver/pipelines\n\n[img_codecov]: https://gitlab.com/mbarkhau/pycalver/badges/master/coverage.svg\n[url_codecov]: https://mbarkhau.gitlab.io/pycalver/cov\n\n[img_license]: https://img.shields.io/badge/License-MIT-blue.svg\n[url_license]: https://github.com/mbarkhau/bumpver/blob/master/LICENSE\n\n[img_mypy]: https://img.shields.io/badge/mypy-checked-green.svg\n[url_mypy]: https://mbarkhau.gitlab.io/pycalver/mypycov\n\n[img_style]: https://img.shields.io/badge/code%20style-%20sjfmt-f71.svg\n[url_style]: https://gitlab.com/mbarkhau/straitjacket/\n\n[img_downloads]: https://pepy.tech/badge/bumpver/month\n[url_downloads]: https://pepy.tech/project/bumpver\n\n[img_version]: https://img.shields.io/static/v1.svg?label=CalVer&message=2023.1129&color=blue\n[url_version]: https://pypi.org/project/bumpver/\n\n[img_pypi]: https://img.shields.io/badge/PyPI-wheels-green.svg\n[url_pypi]: https://pypi.org/project/bumpver/#files\n\n[img_pyversions]: https://img.shields.io/pypi/pyversions/bumpver.svg\n[url_pyversions]: https://pypi.python.org/pypi/bumpver\n\n<!--\n  $ pip install -U md-toc\n  $ md_toc --in-place --skip-lines 10 github README.md\n-->\n\n<!--TOC-->\n\n- [Overview](#overview)\n  - [Search and Replace](#search-and-replace)\n  - [Name Change PyCalVer -> BumpVer](#name-change-pycalver---bumpver)\n  - [Related Projects/Alternatives](#related-projectsalternatives)\n- [Example Usage](#example-usage)\n  - [Testing a `version_pattern`](#testing-a-version_pattern)\n  - [Using `MAJOR`/`MINOR`/`PATCH` (SemVer Parts)](#using-majorminorpatch-semver-parts)\n  - [Auto Increment Parts: `BUILD`/`INC0`/`INC1`](#auto-increment-parts-buildinc0inc1)\n  - [Persistent Parts: `BUILD`/`TAG`/`PYTAG`](#persistent-parts-buildtagpytag)\n  - [Searching for Patterns with `grep`](#searching-for-patterns-with-grep)\n- [Reference](#reference)\n  - [Command Line](#command-line)\n  - [Part Overview](#part-overview)\n  - [Normalization Caveats](#normalization-caveats)\n  - [Pattern Examples](#pattern-examples)\n  - [Week Numbering](#week-numbering)\n- [Configuration](#configuration)\n  - [Configuration Setup](#configuration-setup)\n  - [Debugging Configuration](#debugging-configuration)\n- [Bump It Up](#bump-it-up)\n  - [Version State](#version-state)\n  - [The Current Version](#the-current-version)\n  - [Dry Mode](#dry-mode)\n  - [VCS Parameters (git/mercurial)](#vcs-parameters-gitmercurial)\n\n<!--TOC-->\n\n\n## Overview\n\n### Search and Replace\n\nWith `bumpver`, you configure a single `version_pattern` which is then used to\n\n1. Search for version strings in your project files\n2. Replace these with an updated/bumped version number.\n\nYour configuration might look something like this:\n\n```\n# pyproject.toml\n[bumpver]\ncurrent_version = \"1.5.2\"\nversion_pattern = \"MAJOR.MINOR.PATCH\"\n\n[bumpver.file_patterns]\n\"setup.py\" = [\n    'version=\"{version}\",$',\n]\n\"src/mymodule/__init__.py\" = [\n    '^__version__ = \"{version}\"$',\n]\n```\n\nUsing this configuration, the output of `bumpver update --dry` might look something like this:\n\n```diff\n$ bumpver update --patch --dry\nINFO    - Old Version: 1.5.2\nINFO    - New Version: 1.5.3\n--- setup.py\n+++ setup.py\n@@ -63,7 +63,7 @@\n     name=\"mymodule\",\n-    version=\"1.5.2\",\n+    version=\"1.5.3\",\n     description=description,\n\n--- src/mymodule/__init__.py\n+++ src/mymodule/__init__.py\n@@ -3,3 +3,3 @@\n\n-__version__ = \"1.5.2\"\n+__version__ = \"1.5.3\"\n```\n\n\n### Name Change PyCalVer -> BumpVer\n\nThis project was originally developed under the name PyCalVer, with the intent to support various CalVer schemes. The package has since been renamed from PyCalVer to BumpVer and the CLI command from `pycalver` to `bumpver`.\n\nThis name change is to reduce confusion that this project is only suitable for Python projects or only for CalVer versioning schemes, neither of which is the case.\n\n\n### Related Projects/Alternatives\n\nIf you are looking for an alternative, BumpVer was heavily influenced by [bumpversion/bump2version][url_bump2version]. You may also wish to take a look at their list of related projects: [bump2version/RELATED.md][url_bump2version_related]\n\n[url_bump2version]: https://github.com/c4urself/bump2version/\n[url_bump2version_related]: https://github.com/c4urself/bump2version/blob/master/RELATED.md\n\n\n## Example Usage\n\nYou can override the date used by `bumpver` with the  `--date=<isodate>` option. Adding this every time would be distracting, so the examples assume the following date:\n\n```shell\n$ date --iso\n2020-10-15\n```\n\n\n### Testing a `version_pattern`\n\nTo test a `version_pattern` and how to increment it, you can use `bumpver test`:\n\n```shell\n$ bumpver test 'v2020.37' 'vYYYY.WW'\nNew Version: v2020.41\n```\n\nA `version_pattern` consists of three kinds of characters:\n\n- Literal text, such as `v`, `.`, and `-`, typically used as delimiters.\n- A [valid part](#parts-overview) such as `YYYY`/`WW` in the previous example.\n- Square brackets `[]` to mark an optional segment.\n\nThe following example uses all three: `vYYYY.WW[-TAG]`\n\n```\n               vYYYY.WW[-TAG]\nliteral text   ^    ^   ^\n```\n\n```shell\n$ bumpver test 'v2020.37-beta' 'vYYYY.WW[-TAG]'\nNew Version: v2020.41-beta\nPEP440     : 2020.41b0\n```\n\nHere we see the week number changed from 37 to 41. The test command also shows the normalized version pattern according to [PEP440][pep_440_ref]. This removes the `\"v\"` prefix and shortens the release tag from `-beta` to `b0`.\n\n[pep_440_ref]: https://www.python.org/dev/peps/pep-0440/\n\nTo remove the release tag, use the option `--tag=final`.\n\n```shell\n$ bumpver test 'v2020.37-beta' 'vYYYY.WW[-TAG]' --tag=final\nNew Version: v2020.41\nPEP440     : 2020.41\n```\n\n### Using `MAJOR`/`MINOR`/`PATCH` (SemVer Parts)\n\nA CalVer `version_pattern` may not require any flags to determine which part should be incremented, so long as the date has changed.\nWith SemVer you must always specify one of `--major/--minor/--patch`.\n\n```shell\n$ bumpver test '1.2.3' 'MAJOR.MINOR.PATCH[PYTAGNUM]' --major\nNew Version: 2.0.0\n\n$ bumpver test '1.2.3' 'MAJOR.MINOR.PATCH[PYTAGNUM]' --minor\nNew Version: 1.3.0\n\n$ bumpver test '1.2.3' 'MAJOR.MINOR.PATCH[PYTAGNUM]' --patch\nNew Version: 1.2.4\n\n$ bumpver test '1.2.3' 'MAJOR.MINOR.PATCH[PYTAGNUM]' --patch --tag=beta\nNew Version: 1.2.4b0\n\n$ bumpver test '1.2.4b0' 'MAJOR.MINOR.PATCH[PYTAGNUM]' --tag-num\nNew Version: 1.2.4b1\n```\n\nThese non date based parts also make sense for a CalVer `version_pattern`, so that you can create multiple releases in the same month. It is common to include e.g. a `PATCH` part.\n\n```shell\n$ bumpver test '2020.10.0' 'YYYY.MM.PATCH' --patch\nNew Version: 2020.10.1\n```\n\nWithout this flag, we would get an error if the date is still in October.\n\n```shell\n$ date --iso\n2020-10-15\n\n$ bumpver test '2020.10.0' 'YYYY.MM.PATCH'\nERROR   - Invalid arguments or pattern, version did not change.\nERROR   - Version did not change: '2020.10.0'. Invalid version and/or pattern 'YYYY.MM.PATCH'.\nINFO    - Perhaps try: bumpver test --patch\n```\n\nOnce the date is in November, the `PATCH` part will roll over back to zero. This happens whenever parts to the left change (in this case the year and month), just as it does if `MAJOR` or `MINOR` were incremented in SemVer.\n\n```shell\n$ bumpver test '2020.10.1' 'YYYY.MM.PATCH' --date 2020-11-01\nNew Version: 2020.11.0\n```\n\nThe rollover to zero will happen even if you use the `--patch` argument, so that your first release in a month will always have a `PATCH` set to 0 instead of 1. You can make the `PATCH` part optional with `[.PATCH]` and always supply the `--patch`  flag in your build script. This will cause the part to be omitted when 0 and added when > 0.\n\n```shell\n$ bumpver test '2020.9.1' 'YYYY.MM[.PATCH]' --patch\nNew Version: 2020.10\n\n$ bumpver test '2020.10' 'YYYY.MM[.PATCH]' --patch\nNew Version: 2020.10.1\n\n$ bumpver test '2020.10.1' 'YYYY.MM[.PATCH]' --patch\nNew Version: 2020.10.2\n```\n\n\nWith CalVer, the version is based on a calendar date, so you only have to specify such flags if you've already published a release for the current date. Without such a flag, BumpVer will show the error, that the \"version did not change\".\n\n```shell\n$ bumpver test 'v2020.41-beta0' 'vYYYY.WW[-TAGNUM]'\nERROR   - Invalid arguments or pattern, version did not change.\nERROR   - Invalid version 'v2020.41-beta0' and/or pattern 'vYYYY.WW[-TAGNUM]'.\n```\n\nIn this case you have to change one of the parts that are not based on a calendar date.\n\n```shell\n$ bumpver test 'v2020.41-beta0' 'vYYYY.WW[-TAGNUM]' --tag-num\nNew Version: v2020.41-beta1\nPEP440     : 2020.41b1\n\n$ bumpver test 'v2020.41-beta0' 'vYYYY.WW[-TAGNUM]' --tag=final\nNew Version: v2020.41\nPEP440     : 2020.41\n```\n\nIf a pattern is not applicable to a version string, then you will get an error message.\n\n```shell\n$ bumpver test '2020.37' 'YYYY.MM'     # expected to fail because 37 is not valid for part MM\nERROR   - Incomplete match '2020.3' for version string '2020.37' with pattern 'YYYY.MM'/'(?P<year_y>[1-9][0-9]{3})\\.(?P<month>1[0-2]|[1-9])'\nERROR   - Invalid version '2020.37' and/or pattern 'YYYY.MM'.\n```\n\nThis illustrates that each pattern is internally translated to a regular expression which must match the version string. The `--verbose` flag will show a verbose form of the regular expression, which may help to debug the discrepancy between the pattern and the version.\n\n```shell\n$ bumpver test 'v2020.37' 'YYYY.WW' --verbose  # missing \"v\" prefix\nINFO    - Using pattern YYYY.WW\nINFO    - regex = re.compile(r\"\"\"\n    (?P<year_y>[1-9][0-9]{3})\n    \\.\n    (?P<week_w>5[0-2]|[1-4][0-9]|[0-9])\n\"\"\", flags=re.VERBOSE)\nERROR   - Invalid version string 'v2020.37' for pattern ...\n```\n\nTo fix the above, you can either remove the \"v\" prefix from the version or add it to the pattern.\n\n```shell\n$ bumpver test 'v2020.37' 'vYYYY.WW'   # added \"v\" prefix\nNew Version: v2020.41\nPEP440     : 2020.41\n```\n\n\n### Auto Increment Parts: `INC0`/`INC1`/`BUILD`\n\nThese parts are incremented automatically, and do not use/require a CLI flag: `BUILD`/`INC0`/`INC1`.\n\n```shell\n$ bumpver test '2020.10.1' 'YYYY.MM.INC0'\nNew Version: 2020.10.2\n\n$ bumpver test '2020.10.2' 'YYYY.MM.INC0' --date 2020-11-01\nNew Version: 2020.11.0\n```\n\nYou can make the part optional using the `[PART]` syntax and it will be added/removed as needed.\n\n```shell\n$ bumpver test '2020.10' 'YYYY.MM[.INC0]'\nNew Version: 2020.10.1\n\n$ bumpver test '2020.10.1' 'YYYY.MM[.INC0]' --date 2020-11-01\nNew Version: 2020.11\n```\n\nYou can the `BUILD` part to [maintain lexical ordering][url_pypi_lexid]  of version numbers. This means that the expression `older < newer` will always be true, whether you are dealing with integers or strings, whether you are using software that understands how to parse version numbers or not.\n\n```shell\n$ bumpver test '2020.1001' 'YYYY.BUILD'\nNew Version: 2020.1002\n\n$ bumpver test '2020.1002' 'YYYY.BUILD'\nNew Version: 2020.1003\n\n$ bumpver test '2020.1999' 'YYYY.BUILD'\nNew Version: 2020.22000\n```\n\n[url_pypi_lexid]: https://pypi.org/project/lexid/\n\n\n### Persistent Parts: `BUILD`/`TAG`/`PYTAG`\n\nThe `BUILD` and `TAG` parts will not rollover/reset. Instead they are carried forward from one version to the next.\n\n```shell\n$ bumpver test 'v2020.1051-beta' 'vYYYY.BUILD[-TAG]'\nNew Version: v2020.1052-beta\nPEP440     : 2020.1052b0\n\n$ bumpver test 'v2020.1051-beta' 'vYYYY.BUILD[-TAG]' --date 2021-01-01\nNew Version: v2021.1052-beta\nPEP440     : 2021.1052b0\n\n$ bumpver test 'v2020.1051-beta' 'vYYYY.BUILD[-TAG]' --tag=rc\nNew Version: v2020.1052-rc\nPEP440     : 2020.1052rc0\n```\n\nTo remove a release tag, mark it as final with `--tag=final`.\n\n```shell\n$ bumpver test 'v2020.1051-beta' 'vYYYY.BUILD[-TAG]' --tag=final\nNew Version: v2020.1052\nPEP440     : 2020.1052\n```\n\n\n### Explicit `--set-version`\n\nIf the various automatic version incrementing methods don't work for you, you can explicitly do `--set-version=<version>`.\n\n```diff\n$ bumpver update --dry --set-version=\"v2020.1060\"\nINFO    - Old Version: v2020.1051-beta\nINFO    - New Version: v2020.1060\n--- setup.py\n+++ setup.py\n@@ -63,7 +63,7 @@\n     name=\"mymodule\",\n-    version=\"2020.1051b0\",\n+    version=\"2020.1060\",\n     description=description,\n\n--- src/mymodule/__init__.py\n+++ src/mymodule/__init__.py\n@@ -3,3 +3,3 @@\n\n-__version__ = \"v2020.1051-beta\"\n+__version__ = \"v2020.1060\"\n```\n\n<!--\n\n#### Add git hash to version string\n\nIf you want to build a package straight from your git repository,\nwithout making a release first, you can explictly add git hash to\nthe version number using ``GITHASH`` version part.\n\nLet's say your ``pyproject.toml`` looks like this:\n\n```ini\n[bumpver]\n...\nversion_pattern = \"YYYY.BUILD[-TAG][GITHASH]\"\n...\n```\n\nThen, to update all configured files, you need to execute this command:\n\n```shell\n$ bumpver update --no-commit --no-tag --set-version=\"v202202.1085.8+ged2c3aaf\"\n```\n\nThis will modify your source tree, but won't commit or tag\nanything, so you can build your packages with that version\nnumber. Then, remember to reset local  changes after (by typing\n``git reset --hard``) as standard bumpver behaviour with such\nversion number makes not much sense.\n\n-->\n\n\n### Searching for Patterns with `grep`\n\nYou can use `bumpver grep` to test and debug entries for your configuration.\n\n```shell\n$ bumpver grep \\\n\t'__version__ = \"YYYY.MM[-TAGNUM]\"' \\\n\tsrc/module/__init__.py\n\n 3:\n 4: __version__ = \"2020.9-beta1\"\n 5:\n```\n\nWhen searching your project files for version strings, there are some limitations to keep in mind:\n\n  1. A version string cannot span multiple lines.\n  2. Brackets `[]` can be escaped with backslash: `\\[\\]`.\n  3. There is no way to escape a valid part (so you cannot match the literal text `YYYY`).\n\nNote that everything in the pattern is treated as literal text, except for a valid part (in all caps).\n\n```\n              __version__ = \"YYYY.MM[-TAGNUM]\"\nliteral text  ^^^^^^^^^^^^^^^    ^   ^       ^\n```\n\nWhen you write your configuration, you can avoid repeating your version pattern in every search pattern, by using these placeholders\n\n- `{version}`\n- `{pep440_version}`\n\nApplied to the above example, you can instead write this:\n\n```shell\n$ bumpver grep \\\n  --version-pattern \"YYYY.MM[-TAGNUM]\"  \\\n  '__version__ = \"{version}\"' \\\n  src/module/__init__.py\n\n 3:\n 4: __version__ = \"2020.9-beta1\"\n 5:\n```\n\nThe corresponding configuration would look like this.\n\n```ini\n[bumpver]\ncurrent_version = \"2020.9-beta1\"\nversion_pattern = \"YYYY.MM[-TAGNUM]\"\n...\n\n[bumpver:file_patterns]\nsrc/module/__init__.py\n  __version__ = \"{version}\"\n...\n```\n\nIf you use a version pattern that is not in the PEP440 normalized form (such as the one above), you can nonetheless match version strings in your project files which *are* in the [PEP440 normalized form][url_pep_440]. To do this, you can use the placeholder `{pep440_version}` instead of the `{version}` placeholder.\n\n```shell\n$ bumpver grep --version-pattern \"YYYY.MM[-TAGNUM]\" 'version=\"{pep440_version}\"' setup.py\nsetup.py\n  65:     url=\"https://github.com/org/project\",\n  66:     version=\"2020.9b1\",\n  67:     description=description,\n```\n\nThe placeholder `{version}` matches `2020.9-beta1`, while the placeholder `{pep440_version}` matches `2020.9b1` (excluding the \"v\" prefix, the \"-\" separator and with a short form release tag \"b1\" instead of \"beta1\"). These two placeholders make it possible to mostly use your preferred format for version strings, but use a PEP440 compliant/normalized version string where appropriate.\n\n[url_pep_440]: https://www.python.org/dev/peps/pep-0440/\n\nAs a ~~neat trick~~ further illustration of how the search and replace works, you might wish to keep the year of your copyright headers up to date.\n\n```shell\n$ bumpver grep 'Copyright (c) 2018-YYYY' src/mymodule/*.py | head\nsrc/mymodule/__init__.py\n   3:\n   4: # Copyright (c) 2018-2020 Vandelay Industries - All rights reserved.\n   5:\n\nsrc/mymodule/config.py\n   3:\n   4: # Copyright (c) 2018-2020 Vandelay Industries - All rights reserved.\n   5:\n```\n\nThe corresponding configuration for this pattern would look like this.\n\n```ini\n[bumpver:file_patterns]\n...\nsrc/mymodule/*.py\n  Copyright (c) 2018-YYYY Vandelay Industries - All rights reserved.\n```\n\nNote that there must be a match for every entry in `file_patterns`. If there is no match, `bumpver` will show an error. This ensures that a pattern is not skipped when your project changes. In this case the side effect is to make sure that every file has a copyright header.\n\n```shell\n$ bumpver update --dry\nERROR   - No match for pattern 'Copyright (c) 2018-YYYY Vandelay Industries - All rights reserved.'\nERROR   -\n# https://regex101.com/?flavor=python&flags=gmx&regex=Copyright%5B%20%5D%5C%28c%5C%29%0A%5B%20%5D2018%5C-%0A%28%3FP%3Cyear_y%3E%5B1-9%5D%5B0-9%5D%7B3%7D%29%0A%5B%20%5DVandelay%5B%20%5DIndustries%5B%20%5D%5C-%5B%20%5DAll%5B%20%5Drights%5B%20%5Dreserved%5C.\nregex = re.compile(r\"\"\"\n    Copyright[ ]\\(c\\)\n    [ ]2018\\-\n    (?P<year_y>[1-9][0-9]{3})\n    [ ]Vandelay[ ]Industries[ ]\\-[ ]All[ ]rights[ ]reserved\\.\n\"\"\", flags=re.VERBOSE)\nERROR   - No patterns matched for file 'src/mymodule/utils.py'\n```\n\n\n## Reference\n\n### Command Line\n\n<!-- BEGIN bumpver --help -->\n\n```\n$ bumpver --help\nUsage: bumpver [OPTIONS] COMMAND [ARGS]...\n\n  Automatically update version strings in plaintext files.\n\nOptions:\n  --version      Show the version and exit.\n  -v, --verbose  Control log level. -vv for debug level.\n  -h, --help     Show this message and exit.\n\nCommands:\n  grep    Search file(s) for a version pattern.\n  init    Initialize [bumpver] configuration.\n  show    Show current version of your project.\n  test    Increment a version number for demo purposes.\n  update  Update project files with the incremented version string.\n```\n\n<!-- END bumpver --help -->\n\n<!-- BEGIN bumpver update --help -->\n\n```\n$ bumpver update --help\nUsage: bumpver update [OPTIONS]\n\n  Update project files with the incremented version string.\n\nOptions:\n  -d, --dry                       Display diff of changes, don't rewrite\n                                  files.\n  -f, --fetch / -n, --no-fetch    Sync tags from remote origin.\n  -v, --verbose                   Control log level. -vv for debug level.\n  --allow-dirty                   Commit even when working directory is has\n                                  uncomitted changes. (WARNING: The commit\n                                  will still be aborted if there are\n                                  uncomitted to files with version strings.\n  --ignore-vcs-tag                Ignore VCS tag invariant and update version\n                                  anyway.\n  --set-version <VERSION>         Set version explicitly.\n  --date <ISODATE>                Set explicit date in format YYYY-0M-0D (e.g.\n                                  2023-07-10).\n  --pin-date                      Leave date components unchanged.\n  --pin-increments                Leave the auto-increments INC0 and INC1\n                                  unchanged.\n  --tag-num                       Increment release tag number (rc1, rc2,\n                                  rc3..).\n  -t, --tag <NAME>                Override release tag of current_version.\n                                  Valid options are: alpha, beta, dev, rc,\n                                  post, final.\n  -p, --patch                     Increment PATCH component.\n  -m, --minor                     Increment MINOR component.\n  --major                         Increment MAJOR component.\n  -c, --commit-message <TMPL>     Set commit message template.\n  --tag-message <TMPL>            Set tag message template.\n  --commit / --no-commit          Create a commit with all updated files.\n  --tag-commit / --no-tag-commit  Tag the newly created commit.\n  --push / --no-push              Push to the default remote.\n  --tag-scope [default|global|branch]\n                                  Tag scope for the current version.\n  --pre-commit-hook <PATH>        Custom script that runs before the commit\n                                  step\n  --post-commit-hook <PATH>       Custom script that runs after the commit\n                                  step is completed\n  -h, --help                      Show this message and exit.\n```\n\n<!-- END bumpver update --help -->\n\nTo help with shell script automation, you can use `bumpver show --environ`.\n\n```shell\n$ bumpver show -n --environ\nYEAR_Y=2020\nYEAR_G=\n...\nTAG=final\n...\n\n$ eval $(bumpver show -n --environ)\n$ echo $TAG\nfinal\n```\n\n\n### Part Overview\n\n> Where possible, these patterns match the conventions from [CalVer.org][url_calver_org_scheme].\n\n[url_calver_org_scheme]: https://calver.org/#scheme\n\n|    part    | range / example(s)         |                     info                    |\n|------------|----------------------------|---------------------------------------------|\n| `MAJOR`    | 0..9, 10..99, 100..        | `bumpver update --major`                    |\n| `MINOR`    | 0..9, 10..99, 100..        | `bumpver update --minor`                    |\n| `PATCH`    | 0..9, 10..99, 100..        | `bumpver update --patch`                    |\n| `TAG`      | dev, alpha, beta, rc, post | `--tag=<tag>`                               |\n| `PYTAG`    | a, b, rc, post             | `--tag=<tag>`                               |\n| `NUM`      | 0, 1, 2...                 | `-r/--tag-num`                              |\n| `YYYY`     | 2019, 2020...              | Full year, based on `strftime('%Y')`        |\n| `YY`       | 18, 19..99, 0, 1           | Short year, based on `int(strftime('%y'))`  |\n| `MM`       | 9, 10, 11, 12              | Month, based on `int(strftime('%m'))`       |\n| `DD`       | 1, 2, 3..31                | Day, based on `int(strftime('%d'))`         |\n| `BUILD`    | 1001, 1002 .. 1999, 22000  | build number (maintains lexical order)      |\n| `INC0`     | 0, 1, 2...                 | 0-based auto incrementing number            |\n| `INC1`     | 1, 2...                    | 1-based auto incrementing number            |\n| `PYTAGNUM` | a0, a1, rc0, ...           | `PYTAG` + `NUM` (no white-space in between) |\n\n\nThe following are also available, but you should review the [Normalization Caveats](#normalization-caveats) before you decide to use them.\n\n\n| part   | range / example(s)  | comment                                      |\n| ------ | ------------------- | -------------------------------------------- |\n| `Q`    | 1, 2, 3, 4          | Quarter                                      |\n| `0Y`   | 18, 19..99, 00, 01  | Short Year `strftime('%y')`(zero-padded)     |\n| `0M`   | 09, 10, 11, 12      | Month `strftime('%m')` (zero-padded)         |\n| `0D`   | 01, 02, 03..31      | Day `strftime('%d')` (zero-padded)           |\n| `JJJ`  | 1,2,3..366          | Day of year `int(strftime('%j'))`            |\n| `00J`  | 001, 002..366       | Day of year `strftime('%j')` (zero-padded)   |\n| `WW`   | 0, 1, 2..52         | Week number¹ `int(strftime('%W'))`           |\n| `0W`   | 00, 01, 02..52      | Week number¹ `strftime('%W')` (zero-padded)  |\n| `UU`   | 0, 1, 2..52         | Week number² `int(strftime('%U'))`           |\n| `0U`   | 00, 01, 02..52      | Week number² `strftime('%U')` (zero-padded)  |\n| `VV`   | 1, 2..53            | Week number¹³ `int(strftime('%V'))`          |\n| `0V`   | 01, 02..53          | Week number¹³ `strftime('%V')` (zero-padded) |\n| `GGGG` | 2019, 2020...       | `strftime(\"%G\")` ISO 8601 week-based year    |\n| `GG`   | 19, 20...99, 0, 1   | Short ISO 8601 week-based year               |\n| `0G`   | 19, 20...99, 00, 01 | Zero-padded ISO 8601 week-based year         |\n\n- ¹ Monday is the first day of the week.\n- ² Sunday is the first day of the week.\n- ³ ISO 8601 week. Week 1 contains Jan 4th.\n\n\n### Normalization Caveats\n\nPackage managers and installation tools will parse your version numbers. When doing so, your version number may go through a normalization process and may not be exactly  as you specified. In the case of Python, the packaging tools (such as pip, twine, [setuptools][setuptools_ref]) follow [PEP440 normalization rules][pep_440_normalzation_ref].\n\nAccording to these rules (among other things):\n\n- Any non-numerical prefix (such as `v`) is removed\n- Leading zeros in delimited parts are truncated `XX.08` -> `XX.8`\n- Tags are converted to a short form (`-alpha` -> `a0`)\n\nFor example:\n\n- Pattern: `vYY.0M.0D[-TAG]`\n- Version: `v20.08.02-beta`\n- PEP440 : `20.8.2b0`\n\nI am not aware of any technical reason to use a normalized representation everywhere in your project. However, if you choose a pattern which is always in a normalized form, it will help to avoid confusion. For example, it may not be obvious at a glance, that `v20.08.02-beta` is the same as `20.8.2b0` .\n\nA further consideration for the choice of your `version_pattern` is that it may be processed by tools that *do not* interpret it as a version number, but treat it just like any other string. It may also be confusing to your users if they a list of version numbers, sorted lexicographically by some tool (e.g. from `git tags`) and versions are not listed in order of their release:\n\n```\n$ git tag\n18.6b4\n18.9b0\n19.10b0\n19.3b0\n20.8b0\n20.8b1\n```\n\nIf you wish to avoid this, you should use a pattern which maintains lexicographical ordering.\n\n[setuptools_ref]: https://setuptools.readthedocs.io/en/latest/setuptools.html#specifying-your-project-s-version\n\n[pep_440_normalzation_ref]: https://www.python.org/dev/peps/pep-0440/#id31\n\n\n### Pattern Examples\n\n<!-- BEGIN pattern_examples -->\n\n| pattern                         | examples                          | PEP440 | lexico. |\n|---------------------------------|-----------------------------------|--------|---------|\n| `MAJOR.MINOR.PATCH[PYTAGNUM]`   | `0.13.10          0.16.10`        | yes    | no      |\n| `MAJOR.MINOR[.PATCH[PYTAGNUM]]` | `0.11.15          0.16.18`        | yes    | no      |\n| `YYYY.BUILD[PYTAGNUM]`          | `2020.1031        2020.1406`      | yes    | yes     |\n| `YYYY.BUILD[-TAG]`              | `2021.1393-beta   2022.1279`      | no     | yes     |\n| `YYYY.INC0[PYTAGNUM]`           | `2020.4b0         2020.16`        | yes    | no      |\n| `YYYY0M.PATCH[-TAG]`            | `202210.10        202211.13-beta` | no     | no¹     |\n| `YYYY0M.BUILD[-TAG]`            | `202005.1269-beta 202206.1056`    | no     | yes     |\n| `YYYY.0M`                       | `2020.01          2021.04`        | no     | yes     |\n| `YYYY.MM`                       | `2020.2           2022.2`         | yes    | no      |\n| `YYYY.WW`                       | `2020.33          2020.39`        | yes    | no      |\n| `YYYY.MM.PATCH[PYTAGNUM]`       | `2022.3.1b0       2022.11.15b0`   | yes    | no      |\n| `YYYY.0M.PATCH[PYTAGNUM]`       | `2020.03.2        2022.02.4`      | no     | no¹     |\n| `YYYY.MM.INC0`                  | `2020.7.10        2021.7.7`       | yes    | no      |\n| `YYYY.MM.DD`                    | `2020.8.9         2020.8.20`      | yes    | no      |\n| `YYYY.0M.0D`                    | `2020.11.02       2022.05.03`     | no     | yes     |\n| `YY.0M.PATCH`                   | `20.05.12         22.03.5`        | no     | no²     |\n\n<!-- END pattern_examples -->\n\n- ¹ If `PATCH > 9`\n- ² For the year 2100, the part `YY` will produce 0\n\n\n### Week Numbering\n\nWeek numbering is a bit special, as it depends on your definition of \"week\":\n\n- First day of the week is either Monday or Sunday.\n- Range either from 0-52 or 1-53.\n- At the beginning/end of the year, you either have partial weeks or a week that spans multiple years.\n\nIf you use `VV`/`0V`, be aware that you cannot also use `YYYY`.\nInstead use `GGGG`. This is to avoid an edge case where your version\nnumber would run backwards if it was created around New Year.\n\n\n<!-- BEGIN weeknum_example -->\n\n```\n                   YYYY WW UU  GGGG VV\n2020-12-26 (Sat):  2020 51 51  2020 52\n2020-12-27 (Sun):  2020 51 52  2020 52\n2020-12-28 (Mon):  2020 52 52  2020 53\n2020-12-29 (Tue):  2020 52 52  2020 53\n2020-12-30 (Wed):  2020 52 52  2020 53\n2020-12-31 (Thu):  2020 52 52  2020 53\n2021-01-01 (Fri):  2021 00 00  2020 53\n2021-01-02 (Sat):  2021 00 00  2020 53\n2021-01-03 (Sun):  2021 00 01  2020 53\n2021-01-04 (Mon):  2021 01 01  2021 01\n```\n\n<!-- END weeknum_example -->\n\n\n## Configuration\n\n### Configuration Setup\n\nThe create an initial configuration for project with `bumpver init`.\n\n```shell\n$ pip install bumpver\n...\nInstalling collected packages: click toml lexid bumpver\nSuccessfully installed bumpver-2023.1129\n\n$ cd myproject\n~/myproject/\n\n$ bumpver init --dry\nExiting because of '-d/--dry'. Would have written to bumpver.toml:\n\n    [bumpver]\n    current_version = \"2020.1001a0\"\n    version_pattern = \"YYYY.BUILD[PYTAGNUM]\"\n    commit_message = \"bump version to {new_version}\"\n    tag_message = \"{new_version}\"\n    tag_scope = \"default\"\n    pre_commit_hook = \"\"\n    post_commit_hook = \"\"\n    commit = true\n    tag = true\n    push = true\n\n    [bumpver.file_patterns]\n    \"README.md\" = [\n        \"{version}\",\n        \"{pep440_version}\",\n    ]\n    \"bumpver.toml\" = [\n        'current_version = \"{version}\"',\n    ]\n```\n\nIf you already have configuration file in your project (such as `setup.cfg` or `pyproject.toml`), then `bumpver init` will update that file instead.\n\n```\n~/myproject\n$ bumpver init\nUpdated pyproject.toml\n```\n\nYour `pyproject.toml` may now look something like this:\n\n```ini\n[bumpver]\ncurrent_version = \"2019.1001-alpha\"\nversion_pattern = \"YYYY.BUILD[-TAG]\"\ncommit_message = \"bump version to {new_version}\"\ntag_message = \"{new_version}\"\ntag_scope = \"default\"\npre_commit_hook = \"\"\npost_commit_hook = \"\"\ncommit = true\ntag = true\npush = true\n\n[bumpver.file_patterns]\n\"pyproject.toml\" = [\n    'current_version = \"{version}\"',\n]\n\"setup.py\" = [\n    'version=\"{pep440_version}\",',\n]\n\"README.md\" = [\n    '{version}',\n    '{pep440_version}',\n]\n```\n\n\n### Debugging Configuration\n\nFor the entries in `[bumpver:file_patterns]` you can expect two failure modes:\n\n- False negative: A pattern *will not* match a version number in the associated file *which it should* match.\n- False positive: A pattern *will* match something it *should not match* (less likely).\n\nMost obviously you will see such cases when you first attempt to use `bumpver update`:\n\n```shell\n$ bumpver update --dry --no-fetch\nINFO    - Old Version: 2020.1001-alpha\nINFO    - New Version: 2020.1002-alpha\nERROR   - No match for pattern 'version=\"YYYY.BUILD[PYTAGNUM]\",'\nERROR   -\n# https://regex101.com/?flavor=python&flags=gmx&regex=version%3D%5C%22%0A%28%3FP%3Cyear_y%3E%5B1-9%5D%5B0-9%5D%7B3%7D%29%0A%5C.%0A%28%3FP%3Cbid%3E%5B1-9%5D%5B0-9%5D%2A%29%0A%28%3F%3A%0A%20%20%20%20%28%3FP%3Cpytag%3Epost%7Crc%7Ca%7Cb%29%0A%20%20%20%20%28%3FP%3Cnum%3E%5B0-9%5D%2B%29%0A%29%3F%0A%5C%22%2C\nregex = re.compile(r\"\"\"\n    version=\\\"\n    (?P<year_y>[1-9][0-9]{3})\n    \\.\n    (?P<bid>[1-9][0-9]*)\n    (?:\n        (?P<pytag>post|rc|a|b)\n        (?P<num>[0-9]+)\n    )?\n    \\\",\n\"\"\", flags=re.VERBOSE)\nERROR   - No patterns matched for file 'setup.py'\n```\n\nThe internally used regular expression is also shown, which you can use to debug the issue, for example on [regex101.com](https://regex101.com/r/ajQDTz/2).\n\nTo debug such issues, you can simplify your pattern and see if you can find a match with `bumpver grep` .\n\n```shell\n$ bumpver grep 'YYYY.BUILD[PYTAGNUM]' setup.py\n 45:    name='myproject',\n 46:    version='2019.1001b0',\n 47:    license='MIT',\n\n```\n\nHere we can see that the pattern for setup.py should be changed to used single quotes instead of doublequotes.\n\nAs with `bumpver update`, if your pattern is not found, `bumpver grep` will show an error message with the regular expression it uses, to help you debug the issue.\n\n```shell\n$ bumpver grep 'YYYY.BUILD[PYTAGNUM]' setup.py\nERROR   - Pattern not found: 'YYYY.BUILD[PYTAGNUM]'\n# https://regex101.com/...\n```\n\nAn example of a more complex pattern is one where you want to keep a version badge in your README up to date.\n\n```shell\n$ bumpver grep 'shields.io/badge/CalVer-YYYY.BUILD[--TAG]-blue' README.md\n  61:\n  62: [img_version]: https://img.shields.io/badge/CalVer-2020.1001--beta-blue\n  63: [url_version]: https://pypi.org/org/package/\n```\n\n\n## Bump It Up\n\n\n### Version State\n\nThe `current_version` is considered global state and must be stored somewhere. Typically this might be in a `VERSION` file, or some other file which is part of the repository. This creates the risk that parallel branches can have different states. If the `current_version`  were defined only by files in the local checkout, the same version might be generated on different systems for different commits.\n\nTo avoid this issue, `bumpver` treats Git/Mercurial tags as a second source, depending on the `tag_scope` option, for the most recent version and attempts to change this state in the most atomic way possible. This is why some actions of the `bumpver` command can take a few seconds, as it is synchronizing with the remote repository to get the most recent versions and to push any new version tags as soon as possible.\n\n\n### The Current Version\n\nThe current version depends on the configured `tag_scope` and is either\n\n| `tag_scope =` |\t`current_version =`                                 |\n|---------------|-----------------------------------------------------|\n| `default`     |\t`max(config.current_version, max(global_vcs_tags))` |\n| `global`      | `max(global_vcs_tags)`                              |\n| `branch`      | `max(branch_vcs_tags)`                              |\n\n- Before any tags have been created `bumpver` will always default to the value of `current_version` in `bumpver.toml` / `setup.cfg` / `pyproject.toml`.\n- Only Git/Mercurial tags which matches the `version_pattern` from your config will be considered and sorted using [`pkg_resources.parse_version`][url_setuptools_pkg_resources].\n\n[url_setuptools_pkg_resources]: https://setuptools.readthedocs.io/en/latest/pkg_resources.html#parsing-utilities\n\nAs part of doing `bumpver update` and `bumpver show`, your local tags are updated using `git fetch --tags`/`hg pull`.\n\n```shell\n$ bumpver show -vv\n2020-10-18T20:20:58.062 DEBUG   bumpver.cli       - Logging configured.\n2020-10-18T20:20:58.065 DEBUG   bumpver.config    - Config Parsed: Config(\n    ...\n2020-10-18T20:20:58.067 DEBUG   bumpver.vcs       - vcs found: git\n2020-10-18T20:20:58.067 INFO    bumpver.vcs       - fetching tags from remote (to turn off use: -n / --no-fetch)\n2020-10-18T20:20:58.068 DEBUG   bumpver.vcs       - git fetch\n2020-10-18T20:21:00.886 DEBUG   bumpver.vcs       - git tag --list\n2020-10-18T20:21:00.890 INFO    bumpver.cli       - Latest version from git tag: 2020.1019\nCurrent Version: 2020.1019\n```\n\nHere we see that:\n\n- Git had a newer version than we had locally (`2020.1019` vs `2020.1018`).\n- It took 2 seconds to fetch the tags from the remote repository.\n\nThe approach of fetching tags before the version is bumped/incremented, helps to reduce the risk that the newest tag is not known locally. This means that it less likely for the same version to be generated by different systems for different commits. This would result in an ambiguous version tag, which may not be the end of the world, but is better to avoid. Typically this might happen if you have a build system where multiple builds are triggered at the same time.\n\nFor a small project (with only one maintainer and no automated packaging) this is a non-issue and you can always use `-n/--no-fetch` to skip fetching the tags.\n\n\n### Dry Mode\n\nOnce you have a valid configuration, you can use `bumpver update --dry` to see  the changes it would make (and leave your project files untouched).\n\n```diff\n$ bumpver update --dry --no-fetch\nINFO    - Old Version: 2019.1001-beta\nINFO    - New Version: 2019.1002-beta\n--- README.md\n+++ README.md\n@@ -11,7 +11,7 @@\n\n [![Supported Python Versions][pyversions_img]][pyversions_ref]\n-[![Version 2019.1001-beta][version_img]][version_ref]\n+[![Version 2019.1002-beta][version_img]][version_ref]\n [![PyPI Releases][pypi_img]][pypi_ref]\n\n--- src/mymodule_v1/__init__.py\n+++ src/mymodule_v1/__init__.py\n@@ -1,1 +1,1 @@\n-__version__ = \"2019.1001-beta\"\n+__version__ = \"2019.1002-beta\"\n\n--- src/mymodule_v2/__init__.py\n+++ src/mymodule_v2/__init__.py\n@@ -1,1 +1,1 @@\n-__version__ = \"2019.1001-beta\"\n+__version__ = \"2019.1002-beta\"\n\n--- setup.py\n+++ setup.py\n@@ -44,7 +44,7 @@\n     name=\"myproject\",\n-    version=\"2019.1001b0\",\n+    version=\"2019.1002b0\",\n     license=\"MIT\",\n```\n\n\n### VCS Parameters (git/mercurial)\n\nThe individual steps performed by `bumpver update`:\n\n 1. *Fetch* VCS tags from origin.\n 2. Get most recent version.\n 3. Generate the updated version string.\n 4. Check that you have no local changes that are uncommitted.\n 5. Replace version strings in all files configured in `file_patterns`.\n 6. Run pre-commit hook.\n 7. *Commit* the updated files.\n 8. Run post-commit hook.\n 9. *Tag* the new commit.\n10. *Push* the new commit and tag.\n\nThe configuration for these steps can be done with the following parameters:\n\n|      Parameter     |   Type   |                 Description                |\n|--------------------|----------|--------------------------------------------|\n| `tag_scope`        | string   | Scope for the `current_version` in step 2. |\n| `commit_message`   | string¹  | Template for commit message in step 6.     |\n| `tag_message`      | string¹  | Template for tag message in step 9.        |\n| `pre_commit_hook`  | string²  | Path to the pre-commit script.             |\n| `commit`           | boolean  | Create a commit with all updated files.    |\n| `post_commit_hook` | string²  | Path to the post-commit script.            |\n| `tag`              | boolean² | Tag the newly created commit.              |\n| `push`             | boolean² | Push to the default remote.                |\n\n- ¹ Available template placeholders: `{new_version}`, `{old_version}`, `{new_version_pep440}`, `{old_version_pep440}`\n- ² Requires `commit = True`\n\nAn example configuration might look like this:\n\n```ini\n[bumpver]\n...\ncommit_message = \"bump version to {new_version}\"\ntag_message = \"{new_version}\"\ntag_scope = \"default\"\npre_commit_hook = \"scripts/run_checks.sh\"\npost_commit_hook = \"scripts/update_changelog.sh\"\ncommit = True\ntag = True\npush = True\n```\n\nIf everything looks OK, you can do `bumpver update`.\n\n```shell\n$ bumpver update --verbose\nINFO    - fetching tags from remote (to turn off use: -n / --no-fetch)\nINFO    - Old Version: 2020.1005\nINFO    - New Version: 2020.1006\nINFO    - Run pre-commit hook: scripts/run_checks.sh\nINFO    - \t...\nINFO    - git commit --message 'bump version to 2020.1006'\nINFO    - Run post-commit hook: scripts/update_changelog.sh\nINFO    - \t...\nINFO    - git tag --annotate 2020.1006 --message 2020.1006\nINFO    - git push origin --follow-tags 2020.1006 HEAD\n```\n\nYou can also override the config values by passing these command line flags to `bumpver update`:\n\n|       Flag        |                 Override config                 |\n|-------------------|-------------------------------------------------|\n| `--commit`        | `commit = True`                                 |\n| `--no-commit`     | `commit = False`, `tag = False`, `push = False` |\n| `--tag-commit`    | `tag = True`                                    |\n| `--no-tag-commit` | `tag = False`                                   |\n| `--push`          | `push = True`                                   |\n| `--no-push`       | `push = False`                                  |\n\n\n### Custom Commit Message\n\nIn addition to the `commit_message` configuration, you can also override the string used as the the commit message template with the `-c/--commit-message=<TMPL>` parameter:\n\n```shell\n$ bumpver update --tag final --commit-message 'bump version {old_version} -> {new_version} [ci-publish]' --verbose\nINFO    - Old Version: 2021.1005b0\nINFO    - New Version: 2021.1006\nINFO    - git commit --message 'bump version 2020.1005b0 -> 2021.1006 [ci-publish]'\nINFO    - git tag --annotate 2020.1006 --message '2020.1006'\nINFO    - git push origin --follow-tags 2020.1006 HEAD\n```\n\nAs this is a manual operation (rather than a long lived configuration option), you can use the placeholders `OLD` and `NEW` for convenience, instead of the more verbose `{old_version}` and `{new_version}`.\n\n```shell\n$ bumpver update -f -t final -c '[final-version] OLD -> NEW'\n...\nINFO    - Old Version: 1.2.0b2\nINFO    - New Version: 1.2.0\nINFO    - git commit --message '[final-version] 1.2.0b2 -> 1.2.0'\n...\n```\n\n\n### Custom Tag Message\n\nSimilarly to `--commit-message` you can provide a tag message template by using the `--tag-message=<TMPL>` parameter or the `tag_message` configuration:\n\n```shell\n$ bumpver update -f -t final --tag-message 'release NEW'\nINFO    - Old Version: 1.2.0b2\nINFO    - New Version: 1.2.0\n...\nINFO    - git tag --annotate 1.2.0 --message 'release 1.2.0'\n...\n```\n\nYou can use the same placeholders as in the `--commit-message` template.\n\nIf an empty tag message is provided, bumpver uses a lightweight tag in Git. Otherwise, it utilizes an annotated Git tag. You can read more about Git tagging [here](https://git-scm.com/book/en/v2/Git-Basics-Tagging).\n\n```shell\n$ bumpver update -f -t final --tag-message ''\nINFO    - Old Version: 1.2.0b2\nINFO    - New Version: 1.2.0\n...\nINFO    - git tag 1.2.0\n...\n```\n\n\n### Pre/Post-Commit Hooks\n\n`Bumpver` allows you to run custom scripts *before* and *after* the commit step using the `--pre-commit-hook=<PATH>` and `--post-commit-hook=<PATH>` parameter, respectively their configuration counterparts `pre_commit_hook` and `post_commit_hook`. Both options require `commit=True` to be set and the `<PATH>` must be either absolute or relative to the working dir.\n\nIf a script fails (exits with a `return_code!=0`) `bumpver` aborts and all subsequent steps won't be executed, e.g. *commit*, *tag* and *push*.\n\nFor your convenience there are two environment variables available which can be used in the scripts: `BUMPVER_OLD_VERSION` and `BUMPVER_NEW_VERSION`.\n\nExample:\n```python\n#!/usr/bin/env python\n# File path: scripts/print_new_version.py\nfrom os import environ\nprint(\"The new version is \" + environ.get('BUMPVER_NEW_VERSION', ''))\n```\n\n```\n$ bumpver update --post-commit-hook scripts/print_new_version.py\nINFO    - fetching tags from remote (to turn off use: -n / --no-fetch)\nINFO    - Old Version: 2023.1001-alpha\nINFO    - New Version: 2023.1002-alpha\nINFO    - git commit --message 'bump version 2023.1001-alpha -> 2023.1002-alpha'\nINFO    - Run post-commit hook: scripts/print_new_version.py\nINFO    - \tThe new version is 2023.1002-alpha\nINFO    - git tag --annotate 2023.1002-alpha --message '2023.1002-alpha'\nINFO    - git push origin --follow-tags 2023.1002-alpha HEAD\n```\n\nMake sure your script is executable, otherwise you might be greeted with:\n```\n$ bumpver update --post-commit-hook scripts/print_new_version.py\n...\nINFO    - Run post-commit hook: scripts/print_new_version.py\nERROR   - \t[Errno 13] Permission denied: 'scripts/print_new_version.py'\nERROR   - Script exited with an error. Stopping\n```\n\n\n## Contributors\n\n|                Name                 |    role           |  since  | until |\n|-------------------------------------|-------------------|---------|-------|\n| Manuel Barkhau (mbarkhau@gmail.com) | author/maintainer | 2018-09 | -     |\n\n\n# Changelog for https://github.com/mbarkhau/bumpver\n\n## BumpVer 2023.1129\n\n- Fix [#224][gh_i224]: Add `--environ` so it emits `0` values. Depricate `-e/--env`.\n- Add [#223][gh_pr223]: Add support for `.bumpver.toml`\n\n[gh_i224]: https://github.com/mbarkhau/bumpver/issues/224\n[gh_pr223]: https://github.com/mbarkhau/bumpver/pull/223\n\nThank you [Adrianne](https://github.com/elfgirl) for this issue report.\nThank you [Xavier Francisco](https://github.com/XF-FW) for your contribution.\n\n\n## BumpVer 2023.1127\n\n- Add [#222][gh_pr222]: Add part HEXHASH.\n\n[gh_pr222]: https://github.com/mbarkhau/bumpver/pull/222\n\nThank you [Atwam](https://github.com/atwam) for your contribution.\n\n\n## BumpVer 2023.1126\n\n- Add [#214][gh_pr214]: Support for pre/post commit hooks.\n- Add [#219][gh_pr219]: Fix pathlib issues on Windows.\n- Fix [#201][gh_i201]: Better error message for SemVer corner case.\n- Update [#215][gh_i215]: Better error message for greedy pattern matching.\n- Update [#216][gh_i216]: Use .toml format in REAMDE examples.\n\n[gh_pr214]: https://github.com/mbarkhau/bumpver/pull/214\n[gh_pr219]: https://github.com/mbarkhau/bumpver/pull/219\n[gh_i201]: https://github.com/mbarkhau/bumpver/issues/201\n[gh_i215]: https://github.com/mbarkhau/bumpver/issues/215\n[gh_i216]: https://github.com/mbarkhau/bumpver/issues/216\n\nThank you [Sven Lohrmann](https://github.com/malnvenshorn) for your contribution.\nThank you [Maikel Punie](https://github.com/Cereal2nd) your issue report.\nThank you for your help in debugging Windows issues:\n - [Søren Furbo](https://github.com/SRFU-NN)\n - [Michal Vašut](https://github.com/MichalVasut)\n - [Justin Cooksey](https://github.com/jscooksey)\n - [yqbear](https://github.com/yqbear)\n\n\n## BumpVer 2023.1125\n\n- Add [#188][gh_i188]: Add `--tag-scope=<SCOPE>` to support separate versioning for branches.\n- Add [#185][gh_i185]: Add `--tag-message=<TMPL>` parameter and `tag_message` configuration option.\n- Fix [#209][gh_i209]: Make `--no-tag-commit` ommit `--follow-tags`.\n\n[gh_i188]: https://github.com/mbarkhau/bumpver/issues/188\n[gh_i185]: https://github.com/mbarkhau/bumpver/issues/185\n[gh_i209]: https://github.com/mbarkhau/bumpver/issues/209\n\nThank you [Sven Lohrmann](https://github.com/malnvenshorn) for your contributions.\nThank you [tardis4500](https://github.com/tardis4500) for the issue report.\n\n\n## BumpVer 2023.1124\n\n- Fix [#208][gh_i208]: Fix handling of versions with PEP440 epoch.\n\n[gh_i208]: https://github.com/mbarkhau/bumpver/issues/208\n\nThank you [Wen Kokke](https://github.com/wenkokke) for the issue report.\n\n\n## BumpVer 2023.1122\n\n- Fix [#207][gh_i207]: Add --ignore-vcs-tag to support bumping older versions\n\n[gh_i207]: https://github.com/mbarkhau/bumpver/issues/207\n\nThank you [Jusong Yu](https://github.com/unkcpz) for your contribution.\n\n\n## BumpVer 2023.1121\n\n- Fix [#200][gh_i200]: Fix compatability with packaging 23.0.\n- Fix [#203][gh_i203]: Add dev to the list of valid release tags\n\n[gh_i200]: https://github.com/mbarkhau/bumpver/issues/200\n[gh_i203]: https://github.com/mbarkhau/bumpver/issues/203\n\nThank you [Sharon Yogev](https://github.com/sharonyogev) for your contribution.\n\n\n## BumpVer 2022.1120\n\n- Fix [#196][gh_i196]: Add `--pin-increments`.\n\n[gh_i196]: https://github.com/mbarkhau/bumpver/issues/196\n\nThank you [Markus Holtermann](https://github.com/MarkusH) for\nthis contribution.\n\n\n## BumpVer 2022.1119\n\n- Fix [#190][gh_i190]: Allow multiple patterns on the same line\n\n- Fix [#182][gh_i182]: Use quotes for vcs commands\n\n[gh_i190]: https://github.com/mbarkhau/bumpver/issues/190\n[gh_i182]: https://github.com/mbarkhau/bumpver/issues/182\n\n\n## BumpVer 2022.1118\n\n- Fix [#181][gh_i181]: Enable use of ``^$`` charachters to restrict\n  matching to beginning and end of line.\n- Add ``GITHASH`` to ``version_pattern`` (@mpasternak)\n\n[gh_i181]: https://github.com/mbarkhau/bumpver/issues/181\n\n\n## BumpVer 2022.1116\n\n - Fix: [incorrect version comparison when updating from vcs tag][gh_i174].\n\n   When comparing the updated version to the latest vcs tag,\n   an insufficient string comparison was used instead of\n   comparing the parsed versions.\n\n[gh_i174]: https://github.com/mbarkhau/bumpver/issues/174\n\nThank you to Timo Ludwig @timoludwig for this contribution.\n\n\n## BumpVer 2022.1115\n\n - Fix: [use default date values][gh_i172].\n\n   When parsing the current version, if it doesn't specify anyt\n   date part, (such as is the case for e.g. SemVer), then use the\n   current date to populate default parts.\n\n   This enables updating YYYY patterns in copyright headers even\n   for projects that don't use a CalVer pattern.\n\n   Thank you [Benjamin Depardon (@bdepardo)][gh_bdepardo] for\n   finding and reporting this issue.\n\n[gh_i172]: https://github.com/mbarkhau/bumpver/issues/172\n[gh_bdepardo]: https://github.com/bdepardo\n\n\n## BumpVer 2021.1114\n\n - Add: [flags to override vcs options][gh_i168] for `bumpver update`\n\n[gh_i168]: https://github.com/mbarkhau/bumpver/issues/168\n\nThank you to Timo Ludwig @timoludwig for this contribution.\n\n\n## BumpVer 2021.1113\n\n - Add: [`--commit-message` argument][gh_i162] for `bumpver update`\n\n[gh_i162]: https://github.com/mbarkhau/bumpver/issues/162\n\n\n## BumpVer 2021.1112\n\n - Fix: Build from source on windows.\n\n\n## BumpVer 2021.1110\n\n - Fix [github#157][gh_i157]: Improve error messages.\n - Fix [github#158][gh_i158]: Clarify `PYTAGNUM` \"part\"\n\n[gh_i157]: https://github.com/mbarkhau/bumpver/issues/157\n[gh_i158]: https://github.com/mbarkhau/bumpver/issues/158\n\nThank you to Julien Palard @JulienPalard for testing and feedback.\n\n\n## BumpVer 2021.1109\n\n - Add `-e/--env` option to support shell script automation.\n - Fix [github#151][gh_i151]: invalid increment of `TAGNUM` when `TAG=final` is set.\n\n[gh_i151]: https://github.com/mbarkhau/bumpver/issues/151\n\nThank you to Dave Wapstra @dwapstra for your contributions.\n\n\n## BumpVer 2020.1108\n\n- Don't match empty patterns (possibly causing a whole file to be rewritten if braces `[]` are not escaped).\n\n\n## BumpVer 2020.1107\n\n- Non-Beta release (no significant code changes).\n\n## BumpVer 2020.1105-beta\n\n- Fix [gitlab#15][gitlab_i15]: Fix config parsing corner case.\n- Fix [gitlab#16][gitlab_i16]: Fix rollover handling for tag/pytag.\n\n[gitlab_i15]: https://gitlab.com/mbarkhau/pycalver/-/issues/15\n[gitlab_i16]: https://gitlab.com/mbarkhau/pycalver/-/issues/16\n\n\n## BumpVer 2020.1104-beta\n\n- Fix [gitlab#13][gitlab_i13]: Add `--set-version=<VERSION>` to explicitly set version.\n- Fix [gitlab#14][gitlab_i14]: Parse `tool.bumpver` when using pyproject.toml as per PEP 518.\n\n[gitlab_i13]: https://gitlab.com/mbarkhau/pycalver/-/issues/13\n[gitlab_i14]: https://gitlab.com/mbarkhau/pycalver/-/issues/14\n\n\n## BumpVer 2020.1100-beta\n\nRename package and module from PyCalVer to BumpVer. This name change is due to confusion that this project is either Python specific, or only suitible for CalVer versioning schemes, neither of which is the case.\n\nThis release includes a new syntax for patterns.\n\n```\nversion_pattern = \"vYYYY0M.BUILD[-RELEASE]\"             # new style\nversion_pattern = \"v{year}{month}{build}{release}\"      # old style\n\nversion_pattern = \"MAJOR.MINOR.PATCH\"                   # new style semver\nversion_pattern = \"{MAJOR}.{MINOR}.{PATCH}\"             # old style semver\n```\n\nThe main reasons for this switch were:\n- To enable optional parts using braces `[PART]`.\n- To align the syntax with the conventions used on CalVer.org\n\nThe previous syntax will continue to be supported, but all documentation has been updated to primarily reference new style patterns.\n\n- Switch main repo from gitlab to github.\n- New [gitlab#7][gitlab_i7]: New style pattern syntax.\n  - Better support for week numbers.\n  - Better support for optional parts.\n  - New: `BUILD` part now starts at `1000` instead of `0001` to avoid truncation of leading zeros.\n  - New: Add `INC0` (0-based) and `INC1` (1-based) parts that do auto increment and rollover.\n  - New: `MAJOR`/`MINOR`/`PATCH`/`INC` will roll over when a date part changes to their left.\n- New [gitlab#2][gitlab_i2]: Added `grep` sub-command to help with debugging of patterns.\n- New [gitlab#10][gitlab_i10]: `--pin-date` to keep date parts unchanged, and only increment non-date parts.\n- New: Added `--date=<iso-date>` parameter to set explicit date (instead of current date).\n- New: Added `--release-num` to increment the `alphaN`/`betaN`/`a0`/`b0`/etc. release number\n- New: Added better error messages to debug regular expressions.\n- New [gitlab#9][gitlab_i9]: Make commit message configurable.\n- Fix [gitlab#12][gitlab_i12]: Error with sorting non-lexical version tags (e.g. SemVer).\n- Fix [gitlab#11][gitlab_i11]: Show regexp when `--verbose` is used.\n- Fix [gitlab#8][gitlab_i8]: `bumpver update` will now also push HEAD (previously only the tag itself was pushed).\n- Fix: Disallow `--release=dev`. The semantics of a `dev` releases are different than for other release tags and further development would be required to support them correctly.\n- Fix: Entries in `file_patterns` were ignored if there were multiple entries for the same file.\n\nThis release no longer includes the `pycalver.lexid` module, which has been moved into its own package: [pypi.org/project/lexid/](https://pypi.org/project/lexid/).\n\nMany thanks to contributors of this release: @LucidOne, @khanguslee, @chaudum\n\n[gitlab_i7]:https://gitlab.com/mbarkhau/pycalver/-/issues/7\n[gitlab_i2]: https://gitlab.com/mbarkhau/pycalver/-/issues/2\n[gitlab_i10]: https://gitlab.com/mbarkhau/pycalver/-/issues/10\n[gitlab_i9]: https://gitlab.com/mbarkhau/pycalver/-/issues/9\n[gitlab_i12]: https://gitlab.com/mbarkhau/pycalver/-/issues/12\n[gitlab_i11]: https://gitlab.com/mbarkhau/pycalver/-/issues/11\n[gitlab_i8]: https://gitlab.com/mbarkhau/pycalver/-/issues/8\n\n\n## PyCalVer v202010.1042\n\n- Add deprication warning to README.md\n\n\n## PyCalVer v201907.0036\n\n- Fix: Don't use git/hg command if `commit=False` is configured (thanks @valentin87)\n\n\n## PyCalVer v201907.0035\n\n- Fix [gitlab#6][gitlab_i6]: Add parts `{month_short}`, `{dom_short}`, `{doy_short}`.\n- Fix [gitlab#5][gitlab_i5]: Better warning when using bump with SemVer (one of --major/--minor/--patch is required)\n- Fix [gitlab#4][gitlab_i4]: Make {release} part optional, so that versions generated by --release=final are parsed.\n\n[gitlab_i6]: https://gitlab.com/mbarkhau/pycalver/-/issues/6\n[gitlab_i5]: https://gitlab.com/mbarkhau/pycalver/-/issues/5\n[gitlab_i4]: https://gitlab.com/mbarkhau/pycalver/-/issues/4\n\n\n## PyCalVer v201903.0030\n\n- Fix: Use pattern from config instead of hard-coded {pycalver} pattern.\n- Fix: Better error messages for git/hg issues.\n- Add: Implicit default pattern for config file.\n\n\n## PyCalVer v201903.0028\n\n- Fix: Add warnings when configured files are not under version control.\n- Add: Colored output for bump --dry\n\n\n## PyCalVer v201902.0027\n\n- Fix: Allow --release=post\n- Fix: Better error reporting for bad patterns\n- Fix: Regex escaping issue with \"?\"\n\n\n## PyCalVer v201902.0024\n\n- Added: Support for globs in file patterns.\n- Fixed: Better error reporting for invalid config.\n\n\n## PyCalVer v201902.0020\n\n- Added: Support for many more custom version patterns.\n\n\n## PyCalVer v201812.0018\n\n- Fixed: Better handling of pattern replacements with \"-final\" releases.\n\n\n## PyCalVer v201812.0017\n\n- Fixed [github#2]. `pycalver init` was broken.\n- Fixed pattern escaping issues.\n- Added lots more tests for cli.\n- Cleaned up documentation.\n\n[gihlab_i2]: https://github.com/mbarkhau/pycalver/-/issues/2\n\n\n## PyCalVer v201812.0011-beta\n\n- Add version tags using git/hg.\n- Use git/hg tags as SSOT for most recent version.\n- Start using https://gitlab.com/mbarkhau/bootstrapit\n- Move to https://gitlab.com/mbarkhau/pycalver\n\n\n## PyCalVer v201809.0001-alpha\n\n- Initial release\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/mbarkhau/bumpver","keywords":"version bumpver calver semver versioning bumpversion pep440","license":"MIT","maintainer":"","maintainer_email":"","name":"bumpver","package_url":"https://pypi.org/project/bumpver/","platform":null,"project_url":"https://pypi.org/project/bumpver/","project_urls":{"Homepage":"https://github.com/mbarkhau/bumpver"},"provides_extra":null,"release_url":"https://pypi.org/project/bumpver/2023.1129/","requires_dist":["toml","lexid","colorama (>=0.4)","pathlib2 ; python_version < \"3.4\"","enum34 ; python_version < \"3.4\"","typing ; python_version < \"3.5\"","setuptools (<45.0.0) ; python_version < \"3.5\"","click (<8.0) ; python_version < \"3.6\"","looseversion ; python_version >= \"3.5\"","click ; python_version >= \"3.6\""],"requires_python":">=2.7","summary":"Bump version numbers in project files.","version":"2023.1129","yanked":false,"yanked_reason":null},"last_serial":20159842,"releases":{"2020.1100b0":[{"comment_text":"","digests":{"blake2b_256":"0f87eb8109651ac338f21e30cba016c84daf07882b760629c578299d784a6fa3","md5":"44008cfdf57b7f235ec3ade6e24b2899","sha256":"bec469d7d6c1f35708c90f7996f51b5dd3fa68948a86e689ec7098efe20ff3f1"},"downloads":-1,"filename":"bumpver-2020.1100b0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"44008cfdf57b7f235ec3ade6e24b2899","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":52749,"upload_time":"2020-10-18T21:08:20","upload_time_iso_8601":"2020-10-18T21:08:20.580368Z","url":"https://files.pythonhosted.org/packages/0f/87/eb8109651ac338f21e30cba016c84daf07882b760629c578299d784a6fa3/bumpver-2020.1100b0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c7fcd3994cb20223ed6042c1409f119e181d3eb384707e2d72ecefadc0f39187","md5":"27f49a243cb5ce91381e893aada8821c","sha256":"26d1acc0bc0883fc0d68f0d660b4c7e5bfdc3357834643cf2229bfca882264a5"},"downloads":-1,"filename":"bumpver-2020.1100b0.tar.gz","has_sig":false,"md5_digest":"27f49a243cb5ce91381e893aada8821c","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":86491,"upload_time":"2020-10-18T21:08:24","upload_time_iso_8601":"2020-10-18T21:08:24.244040Z","url":"https://files.pythonhosted.org/packages/c7/fc/d3994cb20223ed6042c1409f119e181d3eb384707e2d72ecefadc0f39187/bumpver-2020.1100b0.tar.gz","yanked":false,"yanked_reason":null}],"2020.1101b0":[{"comment_text":"","digests":{"blake2b_256":"072f298f388a440ec4f4f30e86ef40fb0c993ed0fea001bf69cfda24c003d316","md5":"314851908baf5f754be3d02472d42cea","sha256":"62a706dbd4f52d1aa8e96e4ad13d08abbbbc0e49ec3a6fe3196b63ade2d96c47"},"downloads":-1,"filename":"bumpver-2020.1101b0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"314851908baf5f754be3d02472d42cea","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":52757,"upload_time":"2020-10-18T21:10:35","upload_time_iso_8601":"2020-10-18T21:10:35.961376Z","url":"https://files.pythonhosted.org/packages/07/2f/298f388a440ec4f4f30e86ef40fb0c993ed0fea001bf69cfda24c003d316/bumpver-2020.1101b0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a89f0314e45d34e115dfb97d4e54ab5a924733b07f7dbc7eea5b91faab81652d","md5":"cb2cb3df7eade72b0bbe2dac64ab132c","sha256":"aab31f8233530355238d85ecace25db59bf14dde8a7b9c75becf80ddee75fc2e"},"downloads":-1,"filename":"bumpver-2020.1101b0.tar.gz","has_sig":false,"md5_digest":"cb2cb3df7eade72b0bbe2dac64ab132c","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":86486,"upload_time":"2020-10-18T21:10:37","upload_time_iso_8601":"2020-10-18T21:10:37.806786Z","url":"https://files.pythonhosted.org/packages/a8/9f/0314e45d34e115dfb97d4e54ab5a924733b07f7dbc7eea5b91faab81652d/bumpver-2020.1101b0.tar.gz","yanked":false,"yanked_reason":null}],"2020.1102b0":[{"comment_text":"","digests":{"blake2b_256":"926b39a7220bfad56a081624e921a6cc3ef37f33a5bb42505a5fbc596c2eb4fa","md5":"be6891a2c35381fc020f8126fc477b81","sha256":"d7663191f1b79d9733856906d42a241500bcddfd7c5a4d2318f944cfce236fa1"},"downloads":-1,"filename":"bumpver-2020.1102b0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"be6891a2c35381fc020f8126fc477b81","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":52759,"upload_time":"2020-10-18T21:11:41","upload_time_iso_8601":"2020-10-18T21:11:41.840344Z","url":"https://files.pythonhosted.org/packages/92/6b/39a7220bfad56a081624e921a6cc3ef37f33a5bb42505a5fbc596c2eb4fa/bumpver-2020.1102b0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"be040a3c6549d09c4eb5dfa8b7f9a4152f54e151629e4874fb7682d2c005142d","md5":"48b180d059d2ba6d7c2575fc8064499e","sha256":"6894489016fa730e06160df9fabd9c51a26291d3b8f106f78bb3caeb509cf98c"},"downloads":-1,"filename":"bumpver-2020.1102b0.tar.gz","has_sig":false,"md5_digest":"48b180d059d2ba6d7c2575fc8064499e","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":86482,"upload_time":"2020-10-18T21:11:43","upload_time_iso_8601":"2020-10-18T21:11:43.773938Z","url":"https://files.pythonhosted.org/packages/be/04/0a3c6549d09c4eb5dfa8b7f9a4152f54e151629e4874fb7682d2c005142d/bumpver-2020.1102b0.tar.gz","yanked":false,"yanked_reason":null}],"2020.1103b0":[{"comment_text":"","digests":{"blake2b_256":"7c0114639e06b09e9a72a1fa2e6de7301758d6b4d0f2a3c23c4ff6da09051c63","md5":"53471ae833a57c584f9e6e6f0cbede72","sha256":"24240092285c1dd0cea80dd45d5c1122c3c67a7d93234ed7aabdf53e11bb464e"},"downloads":-1,"filename":"bumpver-2020.1103b0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"53471ae833a57c584f9e6e6f0cbede72","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":52758,"upload_time":"2020-10-18T21:17:39","upload_time_iso_8601":"2020-10-18T21:17:39.766301Z","url":"https://files.pythonhosted.org/packages/7c/01/14639e06b09e9a72a1fa2e6de7301758d6b4d0f2a3c23c4ff6da09051c63/bumpver-2020.1103b0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c40db64f941a87af5753978bd6b33dba7ea1fc676c1f9babb5a50ce82036bec2","md5":"05cbf226253610fefd6d9882dde64d89","sha256":"abd6b0307f5545b9abfcb3585db8310a13568b42dc835bdf174d4b3be0d0a674"},"downloads":-1,"filename":"bumpver-2020.1103b0.tar.gz","has_sig":false,"md5_digest":"05cbf226253610fefd6d9882dde64d89","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":86469,"upload_time":"2020-10-18T21:17:41","upload_time_iso_8601":"2020-10-18T21:17:41.744436Z","url":"https://files.pythonhosted.org/packages/c4/0d/b64f941a87af5753978bd6b33dba7ea1fc676c1f9babb5a50ce82036bec2/bumpver-2020.1103b0.tar.gz","yanked":false,"yanked_reason":null}],"2020.1104b0":[{"comment_text":"","digests":{"blake2b_256":"fa0ff9101f1fc81b2e1ea7a0b185c690d0889e1707bbf631c216f1cbc603ab77","md5":"d7eb26a3075b4fd778a9abfa4ad8c9fa","sha256":"f92f825cd1e4fa4a5c7742a0b8fe5c9c203cfabb700c499cd372a40e93ed2e4a"},"downloads":-1,"filename":"bumpver-2020.1104b0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"d7eb26a3075b4fd778a9abfa4ad8c9fa","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":53451,"upload_time":"2020-11-01T18:43:56","upload_time_iso_8601":"2020-11-01T18:43:56.490777Z","url":"https://files.pythonhosted.org/packages/fa/0f/f9101f1fc81b2e1ea7a0b185c690d0889e1707bbf631c216f1cbc603ab77/bumpver-2020.1104b0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1a3d6822c33d6b81cfb1de291551d5cf1d443f02111dc2980d6eab8ad11ded85","md5":"4bde754345c348d33ffff13f99621816","sha256":"6428659502ea2350d98f961ac4e95e907b21cd35981a82fe1a341877d1bf5d80"},"downloads":-1,"filename":"bumpver-2020.1104b0.tar.gz","has_sig":false,"md5_digest":"4bde754345c348d33ffff13f99621816","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":88003,"upload_time":"2020-11-01T18:43:59","upload_time_iso_8601":"2020-11-01T18:43:59.621368Z","url":"https://files.pythonhosted.org/packages/1a/3d/6822c33d6b81cfb1de291551d5cf1d443f02111dc2980d6eab8ad11ded85/bumpver-2020.1104b0.tar.gz","yanked":false,"yanked_reason":null}],"2020.1105b0":[{"comment_text":"","digests":{"blake2b_256":"9207cd8a92ea246d8a521dbea91f93ac9c77f375f79a62aeab927970749d169e","md5":"b9da56a8095f2cd8f5de4ea6c2da70a5","sha256":"a68a79f53c835cb006943069d054d2a73b3fd3f080470b09efaa15b4e0f91e0b"},"downloads":-1,"filename":"bumpver-2020.1105b0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b9da56a8095f2cd8f5de4ea6c2da70a5","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":53753,"upload_time":"2020-11-16T23:09:26","upload_time_iso_8601":"2020-11-16T23:09:26.232875Z","url":"https://files.pythonhosted.org/packages/92/07/cd8a92ea246d8a521dbea91f93ac9c77f375f79a62aeab927970749d169e/bumpver-2020.1105b0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6eadb38afe8552f2b6781d8382efc9054e120a7ec802b33e596cbd1c8eb1add4","md5":"7e4c0ae2ebbc71969a9a21a7d3edceac","sha256":"a8a5d99ff0c2a9bb0bbada3039d1bee5b00062ddcd52683f8159184039ef8be1"},"downloads":-1,"filename":"bumpver-2020.1105b0.tar.gz","has_sig":false,"md5_digest":"7e4c0ae2ebbc71969a9a21a7d3edceac","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":88717,"upload_time":"2020-11-16T23:09:28","upload_time_iso_8601":"2020-11-16T23:09:28.053637Z","url":"https://files.pythonhosted.org/packages/6e/ad/b38afe8552f2b6781d8382efc9054e120a7ec802b33e596cbd1c8eb1add4/bumpver-2020.1105b0.tar.gz","yanked":false,"yanked_reason":null}],"2020.1106":[{"comment_text":"","digests":{"blake2b_256":"5fa8bcb9e1a284e4b21db984b0fe6315c3de9865a2300ab601d7b56fddd92e19","md5":"f929eaab2d8ac1e07804cbf9e5940bdc","sha256":"7f441f479eeb164c2be5da6c5dba15046d7ecc8d96ef610c05ee0ed99484b952"},"downloads":-1,"filename":"bumpver-2020.1106-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f929eaab2d8ac1e07804cbf9e5940bdc","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":53716,"upload_time":"2020-11-24T20:14:44","upload_time_iso_8601":"2020-11-24T20:14:44.593000Z","url":"https://files.pythonhosted.org/packages/5f/a8/bcb9e1a284e4b21db984b0fe6315c3de9865a2300ab601d7b56fddd92e19/bumpver-2020.1106-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"450c92038311325f9b3ecc347a062dd5f24d4c9ca51670f68f695b889dfefd5a","md5":"c89f4769a1c266f05c36eab7fbaf041d","sha256":"67820c3fe00428020adac1bf55faedff0c0ac263675f3557b8126b9973a07eed"},"downloads":-1,"filename":"bumpver-2020.1106.tar.gz","has_sig":false,"md5_digest":"c89f4769a1c266f05c36eab7fbaf041d","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":90746,"upload_time":"2020-11-24T20:14:46","upload_time_iso_8601":"2020-11-24T20:14:46.785308Z","url":"https://files.pythonhosted.org/packages/45/0c/92038311325f9b3ecc347a062dd5f24d4c9ca51670f68f695b889dfefd5a/bumpver-2020.1106.tar.gz","yanked":false,"yanked_reason":null}],"2020.1107":[{"comment_text":"","digests":{"blake2b_256":"e6ca8c11dda7c6f384bd630cbe131cc812b26df2e79474a1ee11778dd984094a","md5":"ca0df440cfd4e7613081706c9a1108a0","sha256":"11502bcf5b39e0fcdf1df5a4de343662592f1c8676542cb5c885e32e8de7e2a2"},"downloads":-1,"filename":"bumpver-2020.1107-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ca0df440cfd4e7613081706c9a1108a0","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":53747,"upload_time":"2020-11-24T20:54:51","upload_time_iso_8601":"2020-11-24T20:54:51.781162Z","url":"https://files.pythonhosted.org/packages/e6/ca/8c11dda7c6f384bd630cbe131cc812b26df2e79474a1ee11778dd984094a/bumpver-2020.1107-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bff18abc63fa85778af02ba9ca9cb97d5507bfbc4ee41ffd2520a0c9b7822b0a","md5":"451a07af9f023e837d4aa2610f5945bf","sha256":"75704333a8d1699e2cadcf1fcd3027a2cab6837ae343af10a61c6eef4e0313d7"},"downloads":-1,"filename":"bumpver-2020.1107.tar.gz","has_sig":false,"md5_digest":"451a07af9f023e837d4aa2610f5945bf","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":90865,"upload_time":"2020-11-24T20:54:54","upload_time_iso_8601":"2020-11-24T20:54:54.150201Z","url":"https://files.pythonhosted.org/packages/bf/f1/8abc63fa85778af02ba9ca9cb97d5507bfbc4ee41ffd2520a0c9b7822b0a/bumpver-2020.1107.tar.gz","yanked":false,"yanked_reason":null}],"2020.1108":[{"comment_text":"","digests":{"blake2b_256":"64d888a577b3f407ce62ac79a1b2a87249dafe20014e92b3237ac0997be02843","md5":"d10c2c67a865a3e426359c22abdf6cd9","sha256":"6ef9e9bb579febee30b2fafe43215b0828d9b0229db6b78b0c336e88293d3b33"},"downloads":-1,"filename":"bumpver-2020.1108-py2.py3-none-any.whl","has_sig":false,"md5_digest":"d10c2c67a865a3e426359c22abdf6cd9","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":53883,"upload_time":"2020-12-06T23:05:48","upload_time_iso_8601":"2020-12-06T23:05:48.172225Z","url":"https://files.pythonhosted.org/packages/64/d8/88a577b3f407ce62ac79a1b2a87249dafe20014e92b3237ac0997be02843/bumpver-2020.1108-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2dc67d7877ee80cc4a5db0edc44ecf82f842a8274c4d3925e8a9e6b0b73770ea","md5":"5dab296f9b91ef86c1fef26c4959de3d","sha256":"f557df8cb4d8ecca9b41af5aa07638653f9a36fab227bcd1c93aa3e910ce0bae"},"downloads":-1,"filename":"bumpver-2020.1108.tar.gz","has_sig":false,"md5_digest":"5dab296f9b91ef86c1fef26c4959de3d","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":91190,"upload_time":"2020-12-06T23:05:50","upload_time_iso_8601":"2020-12-06T23:05:50.256425Z","url":"https://files.pythonhosted.org/packages/2d/c6/7d7877ee80cc4a5db0edc44ecf82f842a8274c4d3925e8a9e6b0b73770ea/bumpver-2020.1108.tar.gz","yanked":false,"yanked_reason":null}],"2021.1109":[{"comment_text":"","digests":{"blake2b_256":"b559613d689f79f0b6fbfbc02db390b03fb43386c968bcfc6dee2cc3a49e7b17","md5":"745a5730e97bea36765214e090bb8260","sha256":"da177c1a52fb0be57609478d04d505fd2726eacb5dfa4ddeb4b46ccadae7bbee"},"downloads":-1,"filename":"bumpver-2021.1109-py2.py3-none-any.whl","has_sig":false,"md5_digest":"745a5730e97bea36765214e090bb8260","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":54261,"upload_time":"2021-01-17T21:56:06","upload_time_iso_8601":"2021-01-17T21:56:06.983144Z","url":"https://files.pythonhosted.org/packages/b5/59/613d689f79f0b6fbfbc02db390b03fb43386c968bcfc6dee2cc3a49e7b17/bumpver-2021.1109-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f0ecf6ad3a90d2515cf54962726a5c076564f5a3f74bd29bb22fc37e06b4e5c5","md5":"66769dcf6ab3a43eba2e5b70cd842f58","sha256":"a5e5892a0089e34c426d5f8b6094640cd4dbe3e317e4ec747204b8d4bdbfb1d4"},"downloads":-1,"filename":"bumpver-2021.1109.tar.gz","has_sig":false,"md5_digest":"66769dcf6ab3a43eba2e5b70cd842f58","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":92087,"upload_time":"2021-01-17T21:56:09","upload_time_iso_8601":"2021-01-17T21:56:09.250068Z","url":"https://files.pythonhosted.org/packages/f0/ec/f6ad3a90d2515cf54962726a5c076564f5a3f74bd29bb22fc37e06b4e5c5/bumpver-2021.1109.tar.gz","yanked":false,"yanked_reason":null}],"2021.1110":[{"comment_text":"","digests":{"blake2b_256":"fb75713c1699903c4dcd665f0056d746af06f7da61436bbb4a7b81b0cf799e2d","md5":"a44af91d454f2ce5b5ec234276de110e","sha256":"3f4dfb38aca133d6ce8e7d6f2cc8743f8f384363b9ae3a90e6db286cd0b0a492"},"downloads":-1,"filename":"bumpver-2021.1110-py2.py3-none-any.whl","has_sig":false,"md5_digest":"a44af91d454f2ce5b5ec234276de110e","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":54422,"upload_time":"2021-03-18T20:11:06","upload_time_iso_8601":"2021-03-18T20:11:06.325208Z","url":"https://files.pythonhosted.org/packages/fb/75/713c1699903c4dcd665f0056d746af06f7da61436bbb4a7b81b0cf799e2d/bumpver-2021.1110-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2970ad9686630b1a8c9ff53fdea83ff434fb6ac803ac2e83d81d71b1b4ba331d","md5":"d519b93c01b3c662e3707a577e6535c7","sha256":"b6a0ddb78db7e00ae7ffe895bf8ef97f91e6310dfc1c4721896bdfd044b1cb03"},"downloads":-1,"filename":"bumpver-2021.1110.tar.gz","has_sig":false,"md5_digest":"d519b93c01b3c662e3707a577e6535c7","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":94143,"upload_time":"2021-03-18T20:11:08","upload_time_iso_8601":"2021-03-18T20:11:08.874795Z","url":"https://files.pythonhosted.org/packages/29/70/ad9686630b1a8c9ff53fdea83ff434fb6ac803ac2e83d81d71b1b4ba331d/bumpver-2021.1110.tar.gz","yanked":false,"yanked_reason":null}],"2021.1112":[{"comment_text":"","digests":{"blake2b_256":"bba0a46708fcac7a842f00f6f69a0b2bf93761f0bbdace55b1750580aefaca70","md5":"67b9e31a077ac6ff40385ece3b88f5e7","sha256":"b96729f2ad8e0fd6223b370b16c257dea34ffe13259b65aa7e799a043ef34e90"},"downloads":-1,"filename":"bumpver-2021.1112-py2.py3-none-any.whl","has_sig":false,"md5_digest":"67b9e31a077ac6ff40385ece3b88f5e7","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":54523,"upload_time":"2021-04-02T20:40:35","upload_time_iso_8601":"2021-04-02T20:40:35.623154Z","url":"https://files.pythonhosted.org/packages/bb/a0/a46708fcac7a842f00f6f69a0b2bf93761f0bbdace55b1750580aefaca70/bumpver-2021.1112-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ed4c33aed64d9b3995fab7f2d9a5354581de94653e0acf56c6f8d5248437b4a4","md5":"1f33733669ce08b68b22304cea01bcb6","sha256":"715dd9e8526609de2008a9c62ec80d891af41055f95e6c328a8ca6dc8f0fa54a"},"downloads":-1,"filename":"bumpver-2021.1112.tar.gz","has_sig":false,"md5_digest":"1f33733669ce08b68b22304cea01bcb6","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":94493,"upload_time":"2021-04-02T20:40:38","upload_time_iso_8601":"2021-04-02T20:40:38.173163Z","url":"https://files.pythonhosted.org/packages/ed/4c/33aed64d9b3995fab7f2d9a5354581de94653e0acf56c6f8d5248437b4a4/bumpver-2021.1112.tar.gz","yanked":false,"yanked_reason":null}],"2021.1113":[{"comment_text":"","digests":{"blake2b_256":"a500a12b797059a3607392d1e3ce62022661eabd8d78671bcaaf08adcabd1bd7","md5":"63f600784d6b8bdb27d4ef06c17c06db","sha256":"a2fcefba10c9ad18644f0ba773a779fc1a904d94ac51f4a07025c0a7b107f70b"},"downloads":-1,"filename":"bumpver-2021.1113-py2.py3-none-any.whl","has_sig":false,"md5_digest":"63f600784d6b8bdb27d4ef06c17c06db","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":54980,"upload_time":"2021-05-13T20:47:03","upload_time_iso_8601":"2021-05-13T20:47:03.190335Z","url":"https://files.pythonhosted.org/packages/a5/00/a12b797059a3607392d1e3ce62022661eabd8d78671bcaaf08adcabd1bd7/bumpver-2021.1113-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a460b2fbfc0c3c5ec2d2ba2cabe444ab2f6681d4508de6438b330269a3ef4b5b","md5":"75a86c4cfeec0bf681bfff068a6f420a","sha256":"86232c6b9f137a2fddfcc811a4f6c23aedc952a8f4e4b0bd700469da156de883"},"downloads":-1,"filename":"bumpver-2021.1113.tar.gz","has_sig":false,"md5_digest":"75a86c4cfeec0bf681bfff068a6f420a","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":95875,"upload_time":"2021-05-13T20:47:05","upload_time_iso_8601":"2021-05-13T20:47:05.854060Z","url":"https://files.pythonhosted.org/packages/a4/60/b2fbfc0c3c5ec2d2ba2cabe444ab2f6681d4508de6438b330269a3ef4b5b/bumpver-2021.1113.tar.gz","yanked":false,"yanked_reason":null}],"2021.1114":[{"comment_text":"","digests":{"blake2b_256":"d53eedc0b6a8cb12d9cabd0322ae14bf59a204dec4e4f2304fe9155e3ebf1c7a","md5":"c989e0388473015775c6fd335d74adb1","sha256":"a6fe78ca0fb2d35728cbd4e088f8d44706347cb79c52c8d3e98239b0ad1343ac"},"downloads":-1,"filename":"bumpver-2021.1114-py2.py3-none-any.whl","has_sig":false,"md5_digest":"c989e0388473015775c6fd335d74adb1","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":55506,"upload_time":"2021-11-07T12:47:18","upload_time_iso_8601":"2021-11-07T12:47:18.444615Z","url":"https://files.pythonhosted.org/packages/d5/3e/edc0b6a8cb12d9cabd0322ae14bf59a204dec4e4f2304fe9155e3ebf1c7a/bumpver-2021.1114-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f4965d8c7237c6a24eca2407fa1f108708a4800c363bf3e09ba6870635b55cdd","md5":"97c9095b73ae4d27631156091761539e","sha256":"20d865a51ca799f7d6f126a1c577b0a8f73e4d25b692d0249450bf9e9e8a319a"},"downloads":-1,"filename":"bumpver-2021.1114.tar.gz","has_sig":false,"md5_digest":"97c9095b73ae4d27631156091761539e","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":96046,"upload_time":"2021-11-07T12:47:20","upload_time_iso_8601":"2021-11-07T12:47:20.684846Z","url":"https://files.pythonhosted.org/packages/f4/96/5d8c7237c6a24eca2407fa1f108708a4800c363bf3e09ba6870635b55cdd/bumpver-2021.1114.tar.gz","yanked":false,"yanked_reason":null}],"2022.1115":[{"comment_text":"","digests":{"blake2b_256":"3146582d88ca6f9c0ed2e71d8a07d5a03b235651bfed5833e29d90d1b4b8f724","md5":"132689524962756ffd78bd9258c1a836","sha256":"baf80bf050f4c355795a82ee9a060a4f6a613d9a78a89888bc543fc1c5e8ca93"},"downloads":-1,"filename":"bumpver-2022.1115-py2.py3-none-any.whl","has_sig":false,"md5_digest":"132689524962756ffd78bd9258c1a836","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":55799,"upload_time":"2022-02-11T22:46:09","upload_time_iso_8601":"2022-02-11T22:46:09.531907Z","url":"https://files.pythonhosted.org/packages/31/46/582d88ca6f9c0ed2e71d8a07d5a03b235651bfed5833e29d90d1b4b8f724/bumpver-2022.1115-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6a85b72ed9a749a02565e79d40cb4f2b8f5be106f64b85473070fe7d5206f7d0","md5":"be144e687f8a17e77e068dcf78807df0","sha256":"c0cfb3d966b368ebc086ac6afc80527e177c88143de3667b346f1c4643c16c80"},"downloads":-1,"filename":"bumpver-2022.1115.tar.gz","has_sig":false,"md5_digest":"be144e687f8a17e77e068dcf78807df0","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":96695,"upload_time":"2022-02-11T22:46:12","upload_time_iso_8601":"2022-02-11T22:46:12.334898Z","url":"https://files.pythonhosted.org/packages/6a/85/b72ed9a749a02565e79d40cb4f2b8f5be106f64b85473070fe7d5206f7d0/bumpver-2022.1115.tar.gz","yanked":false,"yanked_reason":null}],"2022.1116":[{"comment_text":"","digests":{"blake2b_256":"1b9186f16ae9cdcf8224c3fea2fb00b6bf3e3d229e53f9b02f216a56718dd7c0","md5":"7109ce6e176386c06b29d7a25eb4308b","sha256":"4c87e85faf9bc04a696f4ba85b76bcec9045f6e86c4ba5a8a1bbf2364d32daea"},"downloads":-1,"filename":"bumpver-2022.1116-py2.py3-none-any.whl","has_sig":false,"md5_digest":"7109ce6e176386c06b29d7a25eb4308b","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":55911,"upload_time":"2022-03-11T12:44:01","upload_time_iso_8601":"2022-03-11T12:44:01.701297Z","url":"https://files.pythonhosted.org/packages/1b/91/86f16ae9cdcf8224c3fea2fb00b6bf3e3d229e53f9b02f216a56718dd7c0/bumpver-2022.1116-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e611e2823002f4b9d4926ad40901c610f6475e8d5b24d328e066219d8afb6f89","md5":"923cb4613dbb46136683ce96637a805a","sha256":"8851504c7b6b8406f7e91c650b4453fe516f01aafb0532dd55f9c8e3a5ba2df9"},"downloads":-1,"filename":"bumpver-2022.1116.tar.gz","has_sig":false,"md5_digest":"923cb4613dbb46136683ce96637a805a","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":97004,"upload_time":"2022-03-11T12:44:04","upload_time_iso_8601":"2022-03-11T12:44:04.647022Z","url":"https://files.pythonhosted.org/packages/e6/11/e2823002f4b9d4926ad40901c610f6475e8d5b24d328e066219d8afb6f89/bumpver-2022.1116.tar.gz","yanked":false,"yanked_reason":null}],"2022.1118":[{"comment_text":"","digests":{"blake2b_256":"09213594d5a3a7f0d14c81b3909d7525f2005547bcc31d4838a628e583de830d","md5":"37f98245ee53f8b6d847dba115160ebd","sha256":"a1c5e1956ec4fccb4d8e59aa87b194c99d07585085ba3221ee470acd401c107e"},"downloads":-1,"filename":"bumpver-2022.1118-py2.py3-none-any.whl","has_sig":false,"md5_digest":"37f98245ee53f8b6d847dba115160ebd","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":56683,"upload_time":"2022-07-01T22:55:59","upload_time_iso_8601":"2022-07-01T22:55:59.998552Z","url":"https://files.pythonhosted.org/packages/09/21/3594d5a3a7f0d14c81b3909d7525f2005547bcc31d4838a628e583de830d/bumpver-2022.1118-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"14674d3301aa6a45b5f6feafa09add183ca5a69823c8b0a16b3a7e090ce13e85","md5":"399063f4d046fa79b34674c56bc553d3","sha256":"865c324780b0c3a2bdf5dfa615a310d5b5d8e0c2c56d80af58c07213137a27d6"},"downloads":-1,"filename":"bumpver-2022.1118.tar.gz","has_sig":false,"md5_digest":"399063f4d046fa79b34674c56bc553d3","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":98645,"upload_time":"2022-07-01T22:56:03","upload_time_iso_8601":"2022-07-01T22:56:03.083298Z","url":"https://files.pythonhosted.org/packages/14/67/4d3301aa6a45b5f6feafa09add183ca5a69823c8b0a16b3a7e090ce13e85/bumpver-2022.1118.tar.gz","yanked":false,"yanked_reason":null}],"2022.1119":[{"comment_text":"","digests":{"blake2b_256":"34e4c9ca423e253ba606e7ac65ec18b4abd4f4a672f421dab00ab3dabed518c9","md5":"727472b56b1d7cd7d39877c6797f170e","sha256":"c4cc84a881bf945510a4831200fd082c3520665c61e73ff7732e26249a6a86c9"},"downloads":-1,"filename":"bumpver-2022.1119-py2.py3-none-any.whl","has_sig":false,"md5_digest":"727472b56b1d7cd7d39877c6797f170e","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":56924,"upload_time":"2022-10-14T17:29:34","upload_time_iso_8601":"2022-10-14T17:29:34.160197Z","url":"https://files.pythonhosted.org/packages/34/e4/c9ca423e253ba606e7ac65ec18b4abd4f4a672f421dab00ab3dabed518c9/bumpver-2022.1119-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8605510f620a80ffb07c8f728015e955934e3a77d95c45b61a0d7dd2c4ad1af5","md5":"57d2ebeb5151c344e3fe20caf32384a9","sha256":"afed711d286403ed848daabba6006318ed2fb8d4c1f192466ac20756afc31a61"},"downloads":-1,"filename":"bumpver-2022.1119.tar.gz","has_sig":false,"md5_digest":"57d2ebeb5151c344e3fe20caf32384a9","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":99093,"upload_time":"2022-10-14T17:29:36","upload_time_iso_8601":"2022-10-14T17:29:36.416539Z","url":"https://files.pythonhosted.org/packages/86/05/510f620a80ffb07c8f728015e955934e3a77d95c45b61a0d7dd2c4ad1af5/bumpver-2022.1119.tar.gz","yanked":false,"yanked_reason":null}],"2022.1120":[{"comment_text":"","digests":{"blake2b_256":"b9a9bb8b6f1f1e5d2873a37c5fcb89eed7f8a15f96fa0670e5dfdcfa51245238","md5":"0f09660e683e873b0420f51d551f7f6d","sha256":"9da18a6997ade04c66bec05f5349acc5f2f146b16fb77b307f91ef3370c6aa55"},"downloads":-1,"filename":"bumpver-2022.1120-py2.py3-none-any.whl","has_sig":false,"md5_digest":"0f09660e683e873b0420f51d551f7f6d","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":57108,"upload_time":"2022-12-02T01:40:55","upload_time_iso_8601":"2022-12-02T01:40:55.377659Z","url":"https://files.pythonhosted.org/packages/b9/a9/bb8b6f1f1e5d2873a37c5fcb89eed7f8a15f96fa0670e5dfdcfa51245238/bumpver-2022.1120-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0990b276575a9c718e029e9c3b39087c793e594422db4b04df33921868b77b0b","md5":"485fec41205319aaa599d1ad276bfc1e","sha256":"ff8ad562a2ed87e862e07683cb68c4b61046679bf155f7a7ebb20b2ea47775cd"},"downloads":-1,"filename":"bumpver-2022.1120.tar.gz","has_sig":false,"md5_digest":"485fec41205319aaa599d1ad276bfc1e","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":99463,"upload_time":"2022-12-02T01:40:58","upload_time_iso_8601":"2022-12-02T01:40:58.625559Z","url":"https://files.pythonhosted.org/packages/09/90/b276575a9c718e029e9c3b39087c793e594422db4b04df33921868b77b0b/bumpver-2022.1120.tar.gz","yanked":false,"yanked_reason":null}],"2023.1121":[{"comment_text":"","digests":{"blake2b_256":"3bd6f710bc5071d196d472dddebfb5cb7314d5cdbded3708f4dc42560d7c8c87","md5":"b439f63c59a033290798ca7b96ee829b","sha256":"f088d1caf13518353928d0f0e1258c6f60b1d1fe6c18c24d65e9de1325dc9806"},"downloads":-1,"filename":"bumpver-2023.1121-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b439f63c59a033290798ca7b96ee829b","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":57271,"upload_time":"2023-05-04T16:35:44","upload_time_iso_8601":"2023-05-04T16:35:44.693098Z","url":"https://files.pythonhosted.org/packages/3b/d6/f710bc5071d196d472dddebfb5cb7314d5cdbded3708f4dc42560d7c8c87/bumpver-2023.1121-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"36c49c6d38cb04c71c5ed4d0ba620c013470ab9e124521152b6fe504917ecf85","md5":"fa2c043181ccaa4a1c765db7affe936c","sha256":"7dd5f80d0956a13c3ae87300b85cacd04a498c99c913f9f52f998ebc4515dafe"},"downloads":-1,"filename":"bumpver-2023.1121.tar.gz","has_sig":false,"md5_digest":"fa2c043181ccaa4a1c765db7affe936c","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":99981,"upload_time":"2023-05-04T16:35:48","upload_time_iso_8601":"2023-05-04T16:35:48.277712Z","url":"https://files.pythonhosted.org/packages/36/c4/9c6d38cb04c71c5ed4d0ba620c013470ab9e124521152b6fe504917ecf85/bumpver-2023.1121.tar.gz","yanked":false,"yanked_reason":null}],"2023.1122":[{"comment_text":"","digests":{"blake2b_256":"d7aaa225ba5823d495c88350e70dd92219d928a30eea3d0a06b57c4f22fbfd30","md5":"6e6ccc99fdeb93aa8309375fdcd000f7","sha256":"52d422be0680638fd24dbd1fdd4daca34fb9849f8a8270688f915a2904a23079"},"downloads":-1,"filename":"bumpver-2023.1122-py2.py3-none-any.whl","has_sig":false,"md5_digest":"6e6ccc99fdeb93aa8309375fdcd000f7","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":57440,"upload_time":"2023-05-18T14:56:08","upload_time_iso_8601":"2023-05-18T14:56:08.293941Z","url":"https://files.pythonhosted.org/packages/d7/aa/a225ba5823d495c88350e70dd92219d928a30eea3d0a06b57c4f22fbfd30/bumpver-2023.1122-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"81d9e8991bab4ecabb5a81d49d2897d601583efdf1398aa27f1b86de704ac7a3","md5":"a6d9c46ccc70579e4b79c48ac5b07e94","sha256":"412561a12e738950bbabedcaa6322b7c2bcd52af862f696a45bfe581de346a2f"},"downloads":-1,"filename":"bumpver-2023.1122.tar.gz","has_sig":false,"md5_digest":"a6d9c46ccc70579e4b79c48ac5b07e94","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":100717,"upload_time":"2023-05-18T14:56:10","upload_time_iso_8601":"2023-05-18T14:56:10.792478Z","url":"https://files.pythonhosted.org/packages/81/d9/e8991bab4ecabb5a81d49d2897d601583efdf1398aa27f1b86de704ac7a3/bumpver-2023.1122.tar.gz","yanked":false,"yanked_reason":null}],"2023.1124":[{"comment_text":"","digests":{"blake2b_256":"38a1db4404d109cbf109278f3e3322a22fa7f02cea233b7d93e132d6cfa24fa8","md5":"c1c84b685fab88087507241c15ec03d9","sha256":"e5632c9da189c12b16da568f0c9b5e6d7c7786a4361c150f99fb0d24fd1b7910"},"downloads":-1,"filename":"bumpver-2023.1124-py2.py3-none-any.whl","has_sig":false,"md5_digest":"c1c84b685fab88087507241c15ec03d9","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":57500,"upload_time":"2023-05-18T16:43:43","upload_time_iso_8601":"2023-05-18T16:43:43.053097Z","url":"https://files.pythonhosted.org/packages/38/a1/db4404d109cbf109278f3e3322a22fa7f02cea233b7d93e132d6cfa24fa8/bumpver-2023.1124-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f373d024da9118c67e3538f7b5046436d57680df646638fb7b0dd8eee141aa39","md5":"74fb07715025ac71587308bba7ac4013","sha256":"81ef4c969adfdb14eb3a029d46998fbb72eb7bb533073ad3468f0ecec2f4c09c"},"downloads":-1,"filename":"bumpver-2023.1124.tar.gz","has_sig":false,"md5_digest":"74fb07715025ac71587308bba7ac4013","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":100994,"upload_time":"2023-05-18T16:43:46","upload_time_iso_8601":"2023-05-18T16:43:46.009145Z","url":"https://files.pythonhosted.org/packages/f3/73/d024da9118c67e3538f7b5046436d57680df646638fb7b0dd8eee141aa39/bumpver-2023.1124.tar.gz","yanked":false,"yanked_reason":null}],"2023.1125":[{"comment_text":"","digests":{"blake2b_256":"cf659bcf3950cc8b89cecefaff427c7d4d11f84005c886bd1bdd9d539a21f7e7","md5":"f58c3b8c06011187b6232b34570163a3","sha256":"caf314572c31b9c3dcb47d3faa2d63188e81ffd58ff8ed308bbe996326562f7b"},"downloads":-1,"filename":"bumpver-2023.1125-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f58c3b8c06011187b6232b34570163a3","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":58838,"upload_time":"2023-07-17T21:05:36","upload_time_iso_8601":"2023-07-17T21:05:36.358644Z","url":"https://files.pythonhosted.org/packages/cf/65/9bcf3950cc8b89cecefaff427c7d4d11f84005c886bd1bdd9d539a21f7e7/bumpver-2023.1125-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"810af7064ec5184e43e231599cb40af18f03c09e2933d3a3133882873fa775b4","md5":"95cbba87f5a69dfeea2350138c9b6448","sha256":"a61f9025c63cdb645db2a8826a01e44d1fa55f689f1e10d7c80148c50e61ef91"},"downloads":-1,"filename":"bumpver-2023.1125.tar.gz","has_sig":false,"md5_digest":"95cbba87f5a69dfeea2350138c9b6448","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":104383,"upload_time":"2023-07-17T21:05:39","upload_time_iso_8601":"2023-07-17T21:05:39.361005Z","url":"https://files.pythonhosted.org/packages/81/0a/f7064ec5184e43e231599cb40af18f03c09e2933d3a3133882873fa775b4/bumpver-2023.1125.tar.gz","yanked":false,"yanked_reason":null}],"2023.1126":[{"comment_text":"","digests":{"blake2b_256":"fb0240384dd513f2aa57de3ede56dbbb26f7787c754a07f684793e1d778e0f2b","md5":"97f07a2e8f6edc41edb0aff4fe31bea5","sha256":"34efba8301a818a390cfcf38750c888e63ac143764c6a235d4ccb7c60bba3893"},"downloads":-1,"filename":"bumpver-2023.1126-py2.py3-none-any.whl","has_sig":false,"md5_digest":"97f07a2e8f6edc41edb0aff4fe31bea5","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":61618,"upload_time":"2023-08-11T01:39:57","upload_time_iso_8601":"2023-08-11T01:39:57.018399Z","url":"https://files.pythonhosted.org/packages/fb/02/40384dd513f2aa57de3ede56dbbb26f7787c754a07f684793e1d778e0f2b/bumpver-2023.1126-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cab36514a44eea0974be3bc3db819deaeac64a2b77f457d8e3dc5656f2d129d8","md5":"fd4b21992fa197e2e76bcffac236170a","sha256":"85f79632d0283aa24ba4576d3275f82f143dc21e5641c9019420da8dddc8e31e"},"downloads":-1,"filename":"bumpver-2023.1126.tar.gz","has_sig":false,"md5_digest":"fd4b21992fa197e2e76bcffac236170a","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":109631,"upload_time":"2023-08-11T01:39:59","upload_time_iso_8601":"2023-08-11T01:39:59.624165Z","url":"https://files.pythonhosted.org/packages/ca/b3/6514a44eea0974be3bc3db819deaeac64a2b77f457d8e3dc5656f2d129d8/bumpver-2023.1126.tar.gz","yanked":false,"yanked_reason":null}],"2023.1127":[{"comment_text":"","digests":{"blake2b_256":"883faf67fd0fc28fa4107cf64a20e228ae9abfca3c1c9038fbf108730d6125e8","md5":"9f59af258aa9bfa84fee027c75187764","sha256":"ed57c7256cfbe09622e8f3e4096b494dfc49f69465c526f101d03fddabca69f9"},"downloads":-1,"filename":"bumpver-2023.1127-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9f59af258aa9bfa84fee027c75187764","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":61696,"upload_time":"2023-10-03T21:43:26","upload_time_iso_8601":"2023-10-03T21:43:26.417413Z","url":"https://files.pythonhosted.org/packages/88/3f/af67fd0fc28fa4107cf64a20e228ae9abfca3c1c9038fbf108730d6125e8/bumpver-2023.1127-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"25dc117ec57c8d51ef8db342e39445190b296c74b426137d73a0be35f24a41e5","md5":"d9c39accdb870f78331783b7e1df21a8","sha256":"ce9e5cb393168842adcc4978b226ad9045606704330937a0656e7e9f4aaba54f"},"downloads":-1,"filename":"bumpver-2023.1127.tar.gz","has_sig":false,"md5_digest":"d9c39accdb870f78331783b7e1df21a8","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":109787,"upload_time":"2023-10-03T21:43:28","upload_time_iso_8601":"2023-10-03T21:43:28.917947Z","url":"https://files.pythonhosted.org/packages/25/dc/117ec57c8d51ef8db342e39445190b296c74b426137d73a0be35f24a41e5/bumpver-2023.1127.tar.gz","yanked":false,"yanked_reason":null}],"2023.1129":[{"comment_text":"","digests":{"blake2b_256":"f0ee147b9a684a9af36e429f75b6dc76c06f8086b114483de4bd4ae3a303fda9","md5":"bca1f1508ea3d061510e85c829a900d2","sha256":"b2a55c0224215b6ca1c3a0c99827749927b7c61cbb5dfef75565dbda8e75f687"},"downloads":-1,"filename":"bumpver-2023.1129-py2.py3-none-any.whl","has_sig":false,"md5_digest":"bca1f1508ea3d061510e85c829a900d2","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":61957,"upload_time":"2023-10-13T11:24:05","upload_time_iso_8601":"2023-10-13T11:24:05.369288Z","url":"https://files.pythonhosted.org/packages/f0/ee/147b9a684a9af36e429f75b6dc76c06f8086b114483de4bd4ae3a303fda9/bumpver-2023.1129-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7e317087ec411432b395e04c449e9c5569b6ef677bbb506a900251fe91070eb5","md5":"5b5c081c293755030f7890c15be563e7","sha256":"2a09813066d92ae2eabf882d4f9a88ebd60135e828c424bdf7800e1723e15010"},"downloads":-1,"filename":"bumpver-2023.1129.tar.gz","has_sig":false,"md5_digest":"5b5c081c293755030f7890c15be563e7","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":110275,"upload_time":"2023-10-13T11:24:07","upload_time_iso_8601":"2023-10-13T11:24:07.326025Z","url":"https://files.pythonhosted.org/packages/7e/31/7087ec411432b395e04c449e9c5569b6ef677bbb506a900251fe91070eb5/bumpver-2023.1129.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"f0ee147b9a684a9af36e429f75b6dc76c06f8086b114483de4bd4ae3a303fda9","md5":"bca1f1508ea3d061510e85c829a900d2","sha256":"b2a55c0224215b6ca1c3a0c99827749927b7c61cbb5dfef75565dbda8e75f687"},"downloads":-1,"filename":"bumpver-2023.1129-py2.py3-none-any.whl","has_sig":false,"md5_digest":"bca1f1508ea3d061510e85c829a900d2","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":61957,"upload_time":"2023-10-13T11:24:05","upload_time_iso_8601":"2023-10-13T11:24:05.369288Z","url":"https://files.pythonhosted.org/packages/f0/ee/147b9a684a9af36e429f75b6dc76c06f8086b114483de4bd4ae3a303fda9/bumpver-2023.1129-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7e317087ec411432b395e04c449e9c5569b6ef677bbb506a900251fe91070eb5","md5":"5b5c081c293755030f7890c15be563e7","sha256":"2a09813066d92ae2eabf882d4f9a88ebd60135e828c424bdf7800e1723e15010"},"downloads":-1,"filename":"bumpver-2023.1129.tar.gz","has_sig":false,"md5_digest":"5b5c081c293755030f7890c15be563e7","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":110275,"upload_time":"2023-10-13T11:24:07","upload_time_iso_8601":"2023-10-13T11:24:07.326025Z","url":"https://files.pythonhosted.org/packages/7e/31/7087ec411432b395e04c449e9c5569b6ef677bbb506a900251fe91070eb5/bumpver-2023.1129.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
