{"info":{"author":"Floyd Hightower","author_email":"floyd.hightower27@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 2 - Pre-Alpha","Intended Audience :: Developers","License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)","Natural Language :: English","Programming Language :: Python :: 3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description":"# Democritus Strings\n\n[![PyPI](https://img.shields.io/pypi/v/d8s-strings.svg)](https://pypi.python.org/pypi/d8s-strings)\n[![CI](https://github.com/democritus-project/d8s-strings/workflows/CI/badge.svg)](https://github.com/democritus-project/d8s-strings/actions)\n[![Lint](https://github.com/democritus-project/d8s-strings/workflows/Lint/badge.svg)](https://github.com/democritus-project/d8s-strings/actions)\n[![codecov](https://codecov.io/gh/democritus-project/d8s-strings/branch/main/graph/badge.svg?token=V0WOIXRGMM)](https://codecov.io/gh/democritus-project/d8s-strings)\n[![The Democritus Project uses semver version 2.0.0](https://img.shields.io/badge/-semver%20v2.0.0-22bfda)](https://semver.org/spec/v2.0.0.html)\n[![The Democritus Project uses black to format code](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![License: LGPL v3](https://img.shields.io/badge/License-LGPL%20v3-blue.svg)](https://choosealicense.com/licenses/lgpl-3.0/)\n\nDemocritus functions<sup>[1]</sup> for working with Python strings.\n\n[1] Democritus functions are <i>simple, effective, modular, well-tested, and well-documented</i> Python functions.\n\nWe use `d8s` (pronounced \"dee-eights\") as an abbreviation for `democritus` (you can read more about this [here](https://github.com/democritus-project/roadmap#what-is-d8s)).\n\n## Installation\n\n```\npip install d8s-strings\n```\n\n## Usage\n\nYou import the library like:\n\n```python\nfrom d8s_strings import *\n```\n\nOnce imported, you can use any of the functions listed below.\n\n## Functions\n\n  - ```python\n    def string_chars_at_start(string: str, chars: Iterable) -> Iterable[str]:\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def string_chars_at_start_len(string: str, chars: Iterable) -> int:\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def a10n(string: str) -> str:\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def string_remove_index(string: str, index: int) -> str:\n        \"\"\"Remove the item from the string at the given index.\"\"\"\n    ```\n  - ```python\n    def string_replace_index(string: str, index: int, replacement: str) -> str:\n        \"\"\"Replace the character in the string at the given index with the replacement.\"\"\"\n    ```\n  - ```python\n    def string_remove_before(string: str, stop_string: str):\n        \"\"\"Remove everything from the start of the given string until the stop_string.\"\"\"\n    ```\n  - ```python\n    def string_remove_after(string: str, start_string: str):\n        \"\"\"Remove everything after the start_string to the end of the given string.\"\"\"\n    ```\n  - ```python\n    def string_is_palindrome(string: str) -> bool:\n        \"\"\"Return whether or not the given string is a palindrome.\"\"\"\n    ```\n  - ```python\n    def string_reverse(string: str) -> str:\n        \"\"\"Reverse the given string.\"\"\"\n    ```\n  - ```python\n    def indefinite_article(word):\n        \"\"\"Return the word with the appropriate indefinite article.\"\"\"\n    ```\n  - ```python\n    def is_plural(possible_plural: str) -> bool:\n        \"\"\"Return whether or not the possible_plural is plural.\"\"\"\n    ```\n  - ```python\n    def pluralize(word: str) -> str:\n        \"\"\"Make the word plural.\"\"\"\n    ```\n  - ```python\n    def is_singular(possible_singular: str) -> bool:\n        \"\"\"Return whether or not the possible_singular is singular.\"\"\"\n    ```\n  - ```python\n    def singularize(word: str) -> str:\n        \"\"\"Make the word singular.\"\"\"\n    ```\n  - ```python\n    def cardinalize(word: str, count: int) -> str:\n        \"\"\"Return the appropriate form of the given word for the count.\"\"\"\n    ```\n  - ```python\n    def ordinalize(number: int) -> str:\n        \"\"\"Return the appropriate form for the ordinal form of the given number.\"\"\"\n    ```\n  - ```python\n    def string_forms(text):\n        \"\"\"Return multiple forms for the given text.\"\"\"\n    ```\n  - ```python\n    def string_left_pad(string, length: int, *, padding_characters=' '):\n        \"\"\"Pad the given string with the given padding_characters such that the length of the resulting string is equal to the `length` argument. Adapted from the javascript code here: https://www.theregister.co.uk/2016/03/23/npm_left_pad_chaos/.\"\"\"\n    ```\n  - ```python\n    def string_to_bool(string: str) -> bool:\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def text_examples(n=10):\n        \"\"\"Create n example texts.\"\"\"\n    ```\n  - ```python\n    def string_has_multiple_consecutive_spaces(string):\n        \"\"\"Return True if the given string has multiple, consecutive spaces.\"\"\"\n    ```\n  - ```python\n    def character_examples(n=10):\n        \"\"\"Create n example characters.\"\"\"\n    ```\n  - ```python\n    def text_abbreviate(text):\n        \"\"\"Abbreviate the given text.\"\"\"\n    ```\n  - ```python\n    def text_input_is_yes(message):\n        \"\"\"Get yes/no input from the user and return `True` if the input is yes and `False` if the input is no.\"\"\"\n    ```\n  - ```python\n    def text_input_is_no(message):\n        \"\"\"Get yes/no input from the user and return `True` if the input is no and `False` if the input is yes.\"\"\"\n    ```\n  - ```python\n    def string_is_yes(string):\n        \"\"\"Check if a string is some form of `y` or `yes`.\"\"\"\n    ```\n  - ```python\n    def string_is_no(string):\n        \"\"\"Check if a string is some form of `n` or `no`.\"\"\"\n    ```\n  - ```python\n    def xor(message, key):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def text_join(join_character, *args):\n        \"\"\"Join all of the arguments around the given join_character.\"\"\"\n    ```\n  - ```python\n    def string_insert(existing_string, new_string, index):\n        \"\"\"Insert the new_string into the existing_string at the given index.\"\"\"\n    ```\n  - ```python\n    def base64_encode(input_string):\n        \"\"\"Base64 encode the string.\"\"\"\n    ```\n  - ```python\n    def base64_decode(input_string):\n        \"\"\"Base64 decode the string.\"\"\"\n    ```\n  - ```python\n    def string_sequence_matcher(string_a, string_b):\n        \"\"\"Create a difflib.SequenceMatcher for the given string.\"\"\"\n    ```\n  - ```python\n    def strings_diff(string_a, string_b):\n        \"\"\"Return the diff of the two strings.\"\"\"\n    ```\n  - ```python\n    def string_add_to_start_of_each_line(string: str, string_to_add_to_each_line: str):\n        \"\"\"Add the given string_to_add_to_each_line to the beginning of each line in the string.\"\"\"\n    ```\n  - ```python\n    def string_get_closes_matches(word, possible_matches, maximum_matches=3, cutoff=0.6):\n        \"\"\"Return the words from the list of possible matches that are closest to the given word.\"\"\"\n    ```\n  - ```python\n    def strings_similarity(a: str, b: str):\n        \"\"\"Return the ratio of similarity between the two strings.\"\"\"\n    ```\n  - ```python\n    def strings_matching_blocks(a: str, b: str):\n        \"\"\"Return the matching blocks in the given strings.\"\"\"\n    ```\n  - ```python\n    def strings_longest_matching_block(a: str, b: str):\n        \"\"\"Return the longest matching block in the string.\"\"\"\n    ```\n  - ```python\n    def strings_diff_opcodes(a: str, b: str):\n        \"\"\"Return the opcodes representing the differences/similarities between two strings.\"\"\"\n    ```\n  - ```python\n    def string_common_prefix(a: str, b: str) -> str:\n        \"\"\"Returns the common prefix string from left to right between a and b.\"\"\"\n    ```\n  - ```python\n    def string_common_suffix(a: str, b: str):\n        \"\"\"Returns the common suffix string from left to right between a and b.\"\"\"\n    ```\n  - ```python\n    def characters(input_string):\n        \"\"\"Return all of the characters in the given string.\"\"\"\n    ```\n  - ```python\n    def hex_to_string(hex_string):\n        \"\"\"Convert the given hex string to ascii.\"\"\"\n    ```\n  - ```python\n    def string_to_hex(ascii_string: str, seperator='') -> str:\n        \"\"\"Convert the given ascii string to hex.\"\"\"\n    ```\n  - ```python\n    def character_to_unicode_number(character):\n        \"\"\"Convert the given character to its Unicode number. This is the same as the `ord` function in python.\"\"\"\n    ```\n  - ```python\n    def unicode_number_to_character(unicode_number):\n        \"\"\"Convert the given unicode_number to it's unicode character form. This is the same as the `chr` function in python.\"\"\"\n    ```\n  - ```python\n    def hamming_distance(string_1, string_2, as_percent=False):\n        \"\"\"Return the number of positions at which corresponding symbols in string_1 and string_2 are different (this is known as the Hamming Distance). See https://en.wikipedia.org/wiki/Hamming_distance.\"\"\"\n    ```\n  - ```python\n    def from_char_code(integer_list):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def text_ascii_characters(text: str) -> Tuple[str]:\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def text_non_ascii_characters(text: str) -> Tuple[str]:\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def letter_as_number(letter):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def letter_frequency(letter, text):\n        \"\"\"Find the frequency of the given letter in the given text.\"\"\"\n    ```\n  - ```python\n    def string_entropy(text, ignore_case=False):\n        \"\"\"Find the shannon entropy of the text. Inspired by the algorithm here https://web.archive.org/web/20160320142455/https://deadhacker.com/2007/05/13/finding-entropy-in-binary-files/. You can see more here: https://en.wikipedia.org/wiki/Entropy_(information_theory)\"\"\"\n    ```\n  - ```python\n    def substrings(iterable):\n        \"\"\"Find all substrings in the given string.\"\"\"\n    ```\n  - ```python\n    def string_remove_non_alphabetic_characters(string: str):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def string_remove_non_numeric_characters(string: str):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def string_remove_non_alpha_numeric_characters(string: str):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def string_remove(regex_pattern, input_string, **kwargs):\n        \"\"\"Remove the regex_pattern from the input_string.\"\"\"\n    ```\n  - ```python\n    def string_remove_unicode(string: str):\n        \"\"\"Remove all Unicode characters from the given string.\"\"\"\n    ```\n  - ```python\n    def string_remove_numbers(input_string: str, replacement: str = ' '):\n        \"\"\"Remove all numbers from the input_strings.\"\"\"\n    ```\n  - ```python\n    def string_remove_from_start(input_string, string_to_remove):\n        \"\"\"Remove the string_to_remove from the start of the input_string.\"\"\"\n    ```\n  - ```python\n    def string_remove_from_end(input_string, string_to_remove):\n        \"\"\"Remove the string_to_remove from the end of the input_string.\"\"\"\n    ```\n  - ```python\n    def string_as_numbers(input_string: str):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def string_in_iterable_fuzzy(input_string, iterable):\n        \"\"\"Find if the given input_string is in one of the strings in an iterable.\"\"\"\n    ```\n  - ```python\n    def string_find_between(input_string: str, start_string: str, end_string: str, *args):\n        \"\"\"Find the string in the input_string that is between the start_string and the end_string.\"\"\"\n    ```\n  - ```python\n    def switch(a, b, text):\n        \"\"\"Switch a and b in the text.\"\"\"\n    ```\n  - ```python\n    def string_encode_as_bytes(input_string, encoding='utf-8', **kwargs):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def bytes_decode_as_string(bytes_text, encoding='utf-8', **kwargs):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def string_shorten(input_string, length, suffix='...'):\n        \"\"\"Shorten the given input_string to the given length.\"\"\"\n    ```\n  - ```python\n    def string_split_without_empty(input_string, split_char):\n        \"\"\"Split a input_string on split_char and remove empty entries.\"\"\"\n    ```\n  - ```python\n    def string_has_index(string: str, index: Union[str, int]) -> bool:\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def string_split_on_uppercase(input_string: str, include_uppercase_characters=False, split_acronyms=True):\n        \"\"\"Split the input_string on uppercase characters. If split_acronyms is False, the function will not split consecutive uppercase letters.\"\"\"\n    ```\n  - ```python\n    def string_split_on_lowercase(input_string, include_lowercase_characters=False):\n        \"\"\"Split the string on lowercase characters.\"\"\"\n    ```\n  - ```python\n    def string_split_multiple(string, *splitting_characters):\n        \"\"\"Split a string up based on multiple splitting_characters.\"\"\"\n    ```\n  - ```python\n    def string_reverse_case(input_string):\n        \"\"\"Make lowercase characters uppercased and visa-versa.\"\"\"\n    ```\n  - ```python\n    def text_vowels(text):\n        \"\"\"Return all of the vowels in the text.\"\"\"\n    ```\n  - ```python\n    def text_vowel_count(text):\n        \"\"\"Count the number of vowels in the text.\"\"\"\n    ```\n  - ```python\n    def text_consonants(text):\n        \"\"\"Return all of the consonants in the text.\"\"\"\n    ```\n  - ```python\n    def text_consonant_count(text):\n        \"\"\"Count the number of consonants in the text.\"\"\"\n    ```\n  - ```python\n    def text_input(message='Enter/Paste your content.'):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def text_ensure_starts_with(text: str, prefix: str):\n        \"\"\"Make sure the given text starts with the given prefix.\"\"\"\n    ```\n  - ```python\n    def text_ensure_ends_with(text: str, suffix: str):\n        \"\"\"Make sure the given text ends with the given suffix.\"\"\"\n    ```\n  - ```python\n    def titlecase(item):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def uppercase(item):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def uppercase_first_letter(text):\n        \"\"\"Make the first letter of the text uppercase.\"\"\"\n    ```\n  - ```python\n    def lowercase_first_letter(text):\n        \"\"\"Make the first letter of the text lowercase.\"\"\"\n    ```\n  - ```python\n    def crazycase(text):\n        \"\"\"Make the case of the characters in the given text pseudo-random\"\"\"\n    ```\n  - ```python\n    def kebab_case(text):\n        \"\"\"Return the text with a \"-\" in place of every space.\"\"\"\n    ```\n  - ```python\n    def snake_case(text):\n        \"\"\"Return the text with a \"_\" in place of every space.\"\"\"\n    ```\n  - ```python\n    def camel_case(text: str):\n        \"\"\"Return the text with no spaces and every word (except the first one) capitalized.\"\"\"\n    ```\n  - ```python\n    def pascal_case(text: str):\n        \"\"\"Return the text with no spaces and every word capitalized.\"\"\"\n    ```\n  - ```python\n    def sentence_case(text: str):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def uppercase_count(text):\n        \"\"\"Count the number of uppercase letters in the given text.\"\"\"\n    ```\n  - ```python\n    def lowercase_count(text):\n        \"\"\"Count the number of lowercase letters in the given text.\"\"\"\n    ```\n  - ```python\n    def lowercase(item):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def string_rotate(text, rot=13):\n        \"\"\"Return the text converted using a Caesar cipher (https://en.wikipedia.org/wiki/Caesar_cipher) in which the text is rotated by the given amount (using the `rot` argument).\"\"\"\n    ```\n  - ```python\n    def text_is_english_sentence(text: str) -> bool:\n        \"\"\"Determine whether or not the sentence is likely English.\"\"\"\n    ```\n  - ```python\n    def leet_speak_to_text(leet_speak_text):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def text_to_leet_speak(text):\n        \"\"\".\"\"\"\n    ```\n  - ```python\n    def unicode_to_ascii(text: str):\n        \"\"\"Convert the text to ascii.\"\"\"\n    ```\n\n## Development\n\n👋 &nbsp;If you want to get involved in this project, we have some short, helpful guides below:\n\n- [contribute to this project 🥇][contributing]\n- [test it 🧪][local-dev]\n- [lint it 🧹][local-dev]\n- [explore it 🔭][local-dev]\n\nIf you have any questions or there is anything we did not cover, please raise an issue and we'll be happy to help.\n\n## Credits\n\nThis package was created with [Cookiecutter](https://github.com/audreyr/cookiecutter) and Floyd Hightower's [Python project template](https://github.com/fhightower-templates/python-project-template).\n\n[contributing]: https://github.com/democritus-project/.github/blob/main/CONTRIBUTING.md#contributing-a-pr-\n[local-dev]: https://github.com/democritus-project/.github/blob/main/CONTRIBUTING.md#local-development-\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/democritus-project/d8s-strings","keywords":"democritus,utility,python,python-strings,python-strings-utility,python-strings","license":"GNU Lesser General Public License v3","maintainer":"","maintainer_email":"","name":"d8s-strings","package_url":"https://pypi.org/project/d8s-strings/","platform":"","project_url":"https://pypi.org/project/d8s-strings/","project_urls":{"Homepage":"https://github.com/democritus-project/d8s-strings"},"provides_extra":null,"release_url":"https://pypi.org/project/d8s-strings/0.5.0/","requires_dist":["d8s-hypothesis (==0.*)","d8s-uuids (==0.*)","d8s-lists (==0.8.0)","hypothesis","inflect","more-itertools","d8s-dicts (==0.6.0)","d8s-math (==0.7.0)","importlib-metadata ; python_version < \"3.8\""],"requires_python":"","summary":"Democritus functions for working with Python strings.","version":"0.5.0","yanked":false,"yanked_reason":null},"last_serial":10478710,"releases":{"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"8073b66108300df18a0200b779079842c668512f1796ce99b8f8c5db44064459","md5":"45a32dd333d24b0df7e850bd62df82e3","sha256":"e8ae7a8c231cf6dd4eb628faf902b4342caabbd9226ad9406cd14885b181d102"},"downloads":-1,"filename":"d8s_strings-0.1.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"45a32dd333d24b0df7e850bd62df82e3","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":21520,"upload_time":"2021-03-16T11:27:30","upload_time_iso_8601":"2021-03-16T11:27:30.864004Z","url":"https://files.pythonhosted.org/packages/80/73/b66108300df18a0200b779079842c668512f1796ce99b8f8c5db44064459/d8s_strings-0.1.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8415a640d4446392dd60b4b7959f4a0503cc7cbaaf2fd4943c1d26d0f3e57fc1","md5":"b14bec01474111fd33ac16cbf263224a","sha256":"868f82fd4bb45ac510d858602846cf2b3bdca131ae5031b91145f1b109fe2d82"},"downloads":-1,"filename":"d8s_strings-0.1.0.tar.gz","has_sig":false,"md5_digest":"b14bec01474111fd33ac16cbf263224a","packagetype":"sdist","python_version":"source","requires_python":null,"size":30002,"upload_time":"2021-03-16T11:27:32","upload_time_iso_8601":"2021-03-16T11:27:32.128227Z","url":"https://files.pythonhosted.org/packages/84/15/a640d4446392dd60b4b7959f4a0503cc7cbaaf2fd4943c1d26d0f3e57fc1/d8s_strings-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"0d622cd003eed50a018a19d4a7bd30d64bf6b48a91c2bcd74a07793ddf260776","md5":"567857287e015f4e2ada2cdd02446d63","sha256":"b8c03ebdf561df897525b1cfc220c098ac6162792c619e6c0a857a9d6081ee14"},"downloads":-1,"filename":"d8s_strings-0.2.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"567857287e015f4e2ada2cdd02446d63","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":21519,"upload_time":"2021-03-16T12:08:49","upload_time_iso_8601":"2021-03-16T12:08:49.451530Z","url":"https://files.pythonhosted.org/packages/0d/62/2cd003eed50a018a19d4a7bd30d64bf6b48a91c2bcd74a07793ddf260776/d8s_strings-0.2.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1d11eb63495504c8182fb210094e3dd2014ab2138df61f2a011242966c4660c3","md5":"67af57034de5dfde70dbf03022bb8226","sha256":"98232c745e9dd7f12f9222753ef7f6da17797207c5b9ca108d15290eccb7ae5d"},"downloads":-1,"filename":"d8s_strings-0.2.0.tar.gz","has_sig":false,"md5_digest":"67af57034de5dfde70dbf03022bb8226","packagetype":"sdist","python_version":"source","requires_python":null,"size":29998,"upload_time":"2021-03-16T12:08:50","upload_time_iso_8601":"2021-03-16T12:08:50.511983Z","url":"https://files.pythonhosted.org/packages/1d/11/eb63495504c8182fb210094e3dd2014ab2138df61f2a011242966c4660c3/d8s_strings-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.2.1":[{"comment_text":"","digests":{"blake2b_256":"d8b242fa7e541669603a8a462c12ff101771ab5a96c5794b12f142cd7b9cd2dd","md5":"a26960eb714141feec437e02cf00a26c","sha256":"d375c5baa4389c32b2b4154c2b2f4b78e4bc48f1104d3423e76bed1d26c221be"},"downloads":-1,"filename":"d8s_strings-0.2.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"a26960eb714141feec437e02cf00a26c","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":36092,"upload_time":"2021-04-05T12:17:48","upload_time_iso_8601":"2021-04-05T12:17:48.949609Z","url":"https://files.pythonhosted.org/packages/d8/b2/42fa7e541669603a8a462c12ff101771ab5a96c5794b12f142cd7b9cd2dd/d8s_strings-0.2.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"19d6ed70c6ad77e8046ea9a654534022668428464a4e75fecb4f8ff58247ce20","md5":"3d04d0c5433213b25daa439b363cf31a","sha256":"f791b71b54b34815af586424d8d6769c9a51ef3dcd0da5dbd1a94689981ad6e9"},"downloads":-1,"filename":"d8s_strings-0.2.1.tar.gz","has_sig":false,"md5_digest":"3d04d0c5433213b25daa439b363cf31a","packagetype":"sdist","python_version":"source","requires_python":null,"size":44773,"upload_time":"2021-04-05T12:17:50","upload_time_iso_8601":"2021-04-05T12:17:50.231265Z","url":"https://files.pythonhosted.org/packages/19/d6/ed70c6ad77e8046ea9a654534022668428464a4e75fecb4f8ff58247ce20/d8s_strings-0.2.1.tar.gz","yanked":false,"yanked_reason":null}],"0.2.2":[{"comment_text":"","digests":{"blake2b_256":"20fadbaa3df7ee93a5d275b419a0a9c4e412483511e309960b6480dc84377c7d","md5":"e5719bea92ba621dbeb9f1c882accf04","sha256":"cd443ca1744d2edcbee9cc7034a9b2eb955c255dca13d11dc1e09b2e935a9db9"},"downloads":-1,"filename":"d8s_strings-0.2.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"e5719bea92ba621dbeb9f1c882accf04","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":38987,"upload_time":"2021-04-15T11:58:03","upload_time_iso_8601":"2021-04-15T11:58:03.610542Z","url":"https://files.pythonhosted.org/packages/20/fa/dbaa3df7ee93a5d275b419a0a9c4e412483511e309960b6480dc84377c7d/d8s_strings-0.2.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ff9bac1015bafedbdb37cd55dffda10062be1fc7491bb5b96bf7c20711518c8a","md5":"15a592a6ff2b792626ce658ba9733c6b","sha256":"9cc6d9019f5422ec7270e884b94f684db6d88fd5c130b806c175a5a1ce8da25c"},"downloads":-1,"filename":"d8s_strings-0.2.2.tar.gz","has_sig":false,"md5_digest":"15a592a6ff2b792626ce658ba9733c6b","packagetype":"sdist","python_version":"source","requires_python":null,"size":50414,"upload_time":"2021-04-15T11:58:05","upload_time_iso_8601":"2021-04-15T11:58:05.043461Z","url":"https://files.pythonhosted.org/packages/ff/9b/ac1015bafedbdb37cd55dffda10062be1fc7491bb5b96bf7c20711518c8a/d8s_strings-0.2.2.tar.gz","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"e9357b74cba19661f61a4328824c45527531a9f78e784472c529575bbd46946d","md5":"2209014063bc350513c4d3d35b228a83","sha256":"20f334a94bc9e54c0b2fdff418b24f867f365c1cf91d908f7baaf5b4559a14ce"},"downloads":-1,"filename":"d8s_strings-0.3.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"2209014063bc350513c4d3d35b228a83","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":39087,"upload_time":"2021-05-07T11:00:11","upload_time_iso_8601":"2021-05-07T11:00:11.362932Z","url":"https://files.pythonhosted.org/packages/e9/35/7b74cba19661f61a4328824c45527531a9f78e784472c529575bbd46946d/d8s_strings-0.3.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2943fe00f75743fe7622cc853dfa479bdeaed6adbb9981103ed0ffd9014ab57e","md5":"fbdc7ba219bdd2973818a945e5ceee73","sha256":"5b3adc4d021bc10dd1d9d1ee86ddc06c9fb3849f1a7bff424dc3400679c142ac"},"downloads":-1,"filename":"d8s_strings-0.3.0.tar.gz","has_sig":false,"md5_digest":"fbdc7ba219bdd2973818a945e5ceee73","packagetype":"sdist","python_version":"source","requires_python":null,"size":51007,"upload_time":"2021-05-07T11:00:13","upload_time_iso_8601":"2021-05-07T11:00:13.780437Z","url":"https://files.pythonhosted.org/packages/29/43/fe00f75743fe7622cc853dfa479bdeaed6adbb9981103ed0ffd9014ab57e/d8s_strings-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"0.4.0":[{"comment_text":"","digests":{"blake2b_256":"95ac15c28c96c402f9e7cc7e182ad305e25053e6d7bb7e2853fd4bb1fa9fce60","md5":"c0547e771d711a26b21033cccebca80a","sha256":"54f52766c4fbf4fb16a8d42b4a34f623a3d0451ef3709f2d54e3872d5d24a74e"},"downloads":-1,"filename":"d8s_strings-0.4.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"c0547e771d711a26b21033cccebca80a","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":37223,"upload_time":"2021-05-11T10:59:49","upload_time_iso_8601":"2021-05-11T10:59:49.315353Z","url":"https://files.pythonhosted.org/packages/95/ac/15c28c96c402f9e7cc7e182ad305e25053e6d7bb7e2853fd4bb1fa9fce60/d8s_strings-0.4.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a09272de6d93398801408faae28376382c11cef671693bfe7375c8b2dbeee455","md5":"5da41b85508c03106ccd0fddc95446a3","sha256":"767ad027b5b9b2a8c3dc76acc37a8e6804c5c7a02b0ed6ceed3ec0f6b280f777"},"downloads":-1,"filename":"d8s_strings-0.4.0.tar.gz","has_sig":false,"md5_digest":"5da41b85508c03106ccd0fddc95446a3","packagetype":"sdist","python_version":"source","requires_python":null,"size":48665,"upload_time":"2021-05-11T10:59:50","upload_time_iso_8601":"2021-05-11T10:59:50.770608Z","url":"https://files.pythonhosted.org/packages/a0/92/72de6d93398801408faae28376382c11cef671693bfe7375c8b2dbeee455/d8s_strings-0.4.0.tar.gz","yanked":false,"yanked_reason":null}],"0.5.0":[{"comment_text":"","digests":{"blake2b_256":"b31f6c6a9c1de2e16551d8ae56d87b5c53520017b3d2fd44a3bab8745bb6942a","md5":"3b30c03723fb82395afe3c1f5e683417","sha256":"4fc926120ce027d7ada5af225d9557b9c6923675f148817fb1b49bbd1f721116"},"downloads":-1,"filename":"d8s_strings-0.5.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"3b30c03723fb82395afe3c1f5e683417","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":37665,"upload_time":"2021-05-26T18:22:52","upload_time_iso_8601":"2021-05-26T18:22:52.221871Z","url":"https://files.pythonhosted.org/packages/b3/1f/6c6a9c1de2e16551d8ae56d87b5c53520017b3d2fd44a3bab8745bb6942a/d8s_strings-0.5.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9fd457949627e245ad733cbf7f753cad9f8bd43d79b91c9720fa279dcb2690d4","md5":"6b5dce7c909adc3b277b2e188a477180","sha256":"5271d08f49d73228801a29a70cad53661b063effb50a7abd42aacf781ded5de9"},"downloads":-1,"filename":"d8s_strings-0.5.0.tar.gz","has_sig":false,"md5_digest":"6b5dce7c909adc3b277b2e188a477180","packagetype":"sdist","python_version":"source","requires_python":null,"size":49181,"upload_time":"2021-05-26T18:22:53","upload_time_iso_8601":"2021-05-26T18:22:53.685638Z","url":"https://files.pythonhosted.org/packages/9f/d4/57949627e245ad733cbf7f753cad9f8bd43d79b91c9720fa279dcb2690d4/d8s_strings-0.5.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"b31f6c6a9c1de2e16551d8ae56d87b5c53520017b3d2fd44a3bab8745bb6942a","md5":"3b30c03723fb82395afe3c1f5e683417","sha256":"4fc926120ce027d7ada5af225d9557b9c6923675f148817fb1b49bbd1f721116"},"downloads":-1,"filename":"d8s_strings-0.5.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"3b30c03723fb82395afe3c1f5e683417","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":37665,"upload_time":"2021-05-26T18:22:52","upload_time_iso_8601":"2021-05-26T18:22:52.221871Z","url":"https://files.pythonhosted.org/packages/b3/1f/6c6a9c1de2e16551d8ae56d87b5c53520017b3d2fd44a3bab8745bb6942a/d8s_strings-0.5.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9fd457949627e245ad733cbf7f753cad9f8bd43d79b91c9720fa279dcb2690d4","md5":"6b5dce7c909adc3b277b2e188a477180","sha256":"5271d08f49d73228801a29a70cad53661b063effb50a7abd42aacf781ded5de9"},"downloads":-1,"filename":"d8s_strings-0.5.0.tar.gz","has_sig":false,"md5_digest":"6b5dce7c909adc3b277b2e188a477180","packagetype":"sdist","python_version":"source","requires_python":null,"size":49181,"upload_time":"2021-05-26T18:22:53","upload_time_iso_8601":"2021-05-26T18:22:53.685638Z","url":"https://files.pythonhosted.org/packages/9f/d4/57949627e245ad733cbf7f753cad9f8bd43d79b91c9720fa279dcb2690d4/d8s_strings-0.5.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
