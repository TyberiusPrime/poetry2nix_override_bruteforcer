{"info":{"author":null,"author_email":"Cameron Simpson <cs@cskk.id.au>","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Topic :: Software Development :: Libraries :: Python Modules"],"description":"Simple filesystem based file tagging\nand the associated `fstags` command line script.\n\n*Latest release 20240709*:\n* New CachedValue class to manage a cached TaggedPath tag value.\n* New TaggedPath.cached_value() method to return a CachedValue.\n\nMany basic tasks can be performed with the `fstags` command line utility,\ndocumented under the `FSTagsCommand` class below.\n\nWhy `fstags`?\nBy storing the tags in a separate file we:\n* can store tags without modifying a file\n* do not need to know the file's format,\n  or even whether that format supports metadata\n* can process tags on any kind of file\n* because tags are inherited from parent directories,\n  tags can be automatically acquired merely by arranging your file tree\n\nTags are stored in the file `.fstags` in each directory;\nthere is a line for each entry in the directory\nconsisting of the directory entry name and the associated tags.\n\nTags may be \"bare\", or have a value.\nIf there is a value it is expressed with an equals (`'='`)\nfollowed by the JSON encoding of the value.\n\nThe tags for a file are the union of its direct tags\nand all relevant ancestor tags,\nwith priority given to tags closer to the file.\n\nFor example, a media file for a television episode with the pathname\n`/path/to/series-name/season-02/episode-name--s02e03--something.mp4`\nmight have the tags:\n\n    series_title=\"Series Full Name\"\n    season=2\n    sf\n    episode=3\n    episode_title=\"Full Episode Title\"\n\nobtained from the following `.fstags` entries:\n* tag file `/path/to/.fstags`:\n\n    series-name sf series_title=\"Series Full Name\"\n\n* tag file `/path/to/series-name/.fstags`:\n\n  season-02 season=2\n\n* tag file `/path/to/series-name/season-02/.fstags`:\n\n  episode-name--s02e03--something.mp4 episode=3 episode_title=\"Full Episode Title\"\n\n## `fstags` Examples ##\n\n### Backing up a media tree too big for the removable drives ###\n\nWalk the media tree for files tagged for backup to `archive2`:\n\n    fstags find /path/to/media backup=archive2\n\nWalk the media tree for files not assigned to a backup archive:\n\n    fstags find /path/to/media -backup\n\nBackup the `archive2` files using `rsync`:\n\n    fstags find --for-rsync /path/to/media backup=archive2 \\\n    | rsync -ia --include-from=- /path/to/media /path/to/backup_archive2\n\n## Class `CachedValue`\n\nManage a cached value stored in a `TaggedPath`.\nThe value and the validity state are stored in a prefixed\nsubsection of the tags.\n\nThis is how modules like `cs.hashindex` cache file content hashcodes.\n\nThe default state function is `TaggedPath.stat_size_mtime`,\nwhich returns `{'st_size':st_size,'st_mtime':int(st_mtime)}` by default,\nessentially the same criteria used by `rsync(1)` to skip\ncomparing file contents.\n\nExample:\n\n      tags = fstags[fspath]\n      hash\n\n*Method `CachedValue.__init__(self, taggedpath: cs.fstags.TaggedPath, prefix: str, name: str, *, state_func: Optional[Callable[[str], Mapping[str, Any]]] = None)`*:\nInitialise a cached value reference.\n\nParameters:\n* `taggedpath`: the `TaggedPath` tagged file system path\n* `prefix`: the tags prefix\n* `name`: the tag name for the value\n* `state_func`; an optional function to compute the current\n  state if `taggedpath`; the default is\n  `CachedValue.stat_size_mtime` which returns the current\n  file `st_size` and `st_mtime`\n\n*Method `CachedValue.get(self) -> Tuple[Optional[Any], Mapping[str, Any]]`*:\nGet the cached value if the current state matches the cache\nstate, otherwise `None`.\nReturn the valu or `None` and the current state.\n\n*Method `CachedValue.set(self, value: Any, *, state: Mapping = None)`*:\nUpdate the cached value and associated state.\nIf the state is omitted, the current state is used.\n\n*Method `CachedValue.stat_size_mtime(fspath: str, round_mtime=<class 'int'>, follow_symlinks=True) -> dict`*:\nReturn the default cache state mapping.\nThis function `stat`s the `fspath` and returns `{'size':st_size,'mtime':int(st_mtime)}`.\n\n## Class `CascadeRule`\n\nA cascade rule of possible source tag names to provide a target tag.\n\n*Method `CascadeRule.infer_tag(self, tagset)`*:\nApply the rule to the `TagSet` `tagset`.\nReturn a new `Tag(self.target,value)`\nfor the first cascade `value` found in `tagset`,\nor `None` if there is no match.\n\n## `DEFAULT_FSTAGS = FSTags('.fstags')`\n\nA class to examine filesystem tags.\n\n## Class `FSTags(cs.resources.MultiOpenMixin)`\n\nA class to examine filesystem tags.\n\n*Method `FSTags.__init__(self, tagsfile_basename=None, ontology_filepath=None, physical=None, update_mapping: Optional[Mapping] = None, update_prefix: Optional[str] = 'cs.fstags', update_uuid_tag_name: Optional[str] = 'uuid')`*:\nInitialise the `FSTags` instance.\n\nParameters:\n* `tagsfile_basename`: optional basename forthe backing tags files,\n  default from `TAGSFILE_BASENAME`: `'.fstags'`\n* `ontology_filepath`: optional filesystem path for an associated ontology\n* `physical`: optional flag for the associated `FSTagsConfig`\n  specifying whether `TagFile`s are indexed by their physical or logical\n  filesystem paths\n* `update_mapping`: optional secondary mapping to which to mirror\n  tags, such as an `SQLTags`;\n  the default comes from an `SQLTags` specified by the\n  environment variable `$FSTAGS_UPDATE_MAPPING`\n  if present\n* `update_prefix`: optional key prefix for use in the secondary mapping;\n  the default comes from the environment variable\n  `$FSTAGS_UPDATE_MAPPING_PREFIX` if present,\n  otherwise `'cs.fstags'`\n* `update_uuid_tag_name`: optional name for the per file UUID tag name;\n  default `'uuid'`\n\n*Method `FSTags.__getitem__(self, path) -> 'TaggedPath'`*:\nReturn the `TaggedPath` for `abspath(path)`.\n\n*Method `FSTags.apply_tag_choices(self, tag_choices, paths)`*:\nApply the `tag_choices` to `paths`.\n\nParameters:\n* `tag_choices`:\n  an iterable of `Tag` or an equality `TagBasedTest`.\n  Each item applies or removes a `Tag`\n  from each path's direct tags.\n* `paths`:\n  an iterable of filesystem paths.\n\n*Method `FSTags.attach_path(self, attach, srcpath, dstpath, *, force=False, crop_ok=False)`*:\nAttach `srcpath` to `dstpath` using the `attach` callable.\n\nParameters:\n* `attach`: callable accepting `attach(srcpath,dstpath)`\n  to do the desired attachment,\n  such as a copy, link or move\n* `srcpath`: the source filesystem object\n* `dstpath`: the destination filesystem object\n* `crop_ok`: if true and the OS raises `OSError(ENAMETOOLONG)`\n  attempt to crop the name before the file extension and retry\n* `force`: default `False`.\n  If true and the destination exists\n  try to remove it before calling `attach`.\n  Otherwise if the destination exists\n  raise a `ValueError`.\n\n*Method `FSTags.cascade_tags(self, tags, cascade_rules=None)`*:\nYield `Tag`s\nwhich cascade from the `TagSet` `tags`\nvia `cascade_rules` (an iterable of `CascadeRules`).\n\n*Method `FSTags.copy(self, srcpath, dstpath, **kw)`*:\nCopy `srcpath` to `dstpath`.\n\n*Method `FSTags.dir_tagfile(self, dirpath: str) -> 'FSTagsTagFile'`*:\nReturn the `FSTagsTagFile` associated with `dirpath`.\n\n*Method `FSTags.edit_dirpath(self, dirpath, all_names=False)`*:\nEdit the filenames and tags in a directory.\n\nIf `all_names` is true, include names commencing with a dot,\notherwise exclude them.\n\n*Method `FSTags.export_xattrs(self, paths)`*:\nImport the extended attributes of `paths`\nand use them to update the fstags.\n\n*Method `FSTags.find(self, path, tag_tests, use_direct_tags=False)`*:\nWalk the file tree from `path`\nsearching for files matching the supplied `tag_tests`.\nYield the matching file paths.\n\nParameters:\n* `path`: the top of the file tree to walk\n* `tag_tests`: a sequence of `TagBasedTest`s\n* `use_direct_tags`: test the `direct_tags` if true,\n  otherwise the `all_tags`.\n  Default: `False`\n\n*Method `FSTags.find_ontology(self, dirpath, ontbase=None)`*:\nLocate an ontology for the directory `dirpath`.\nThe optional `ontbase` may override the relative path to the file,\ndefault is `self.ontology_filepath`.\nReturn a `TagOntology` or `None` if not found.\n\n*Method `FSTags.find_ontpath(self, dirpath, ontbase=None)`*:\nLocate an ontology file for the directory `dirpath`.\nThe optional `ontbase` may override the relative path to the file,\ndefault is `self.ontology_filepath`.\nReturn the found ontology file or `None` if not found.\n\n*Method `FSTags.import_xattrs(self, paths)`*:\nUpdate the extended attributes of `paths`\nfrom their fstags.\n\n*Method `FSTags.keypath(self, fspath)`*:\nCompute the absolute path used to index a `TaggedPath` instance.\n\nThis returns `realpath(fspath)` if `self.config.physical`,\notherwise `abspath(fspath)`.\n\n*Method `FSTags.link(self, srcpath, dstpath, **kw)`*:\nLink `srcpath` to `dstpath`.\n\n*Method `FSTags.move(self, srcpath, dstpath, **kw)`*:\nMove `srcpath` to `dstpath`.\n\n*Method `FSTags.mv(self, srcpath: str, dstpath: str, *, symlink=False, remove=True)`*:\nMove (or link or symlink) `srcpath` to `dstpath`.\n\nParameters:\n* `srcpath`: the source filesystem path\n* `dstpath`: the destination filesystem path\n* `symlink`: default `False`: if true, make a symbolic link\n* `remove`: default `True`: if true, remove `srcpath` after\n  hard linking to `dstpath`\n\n*Property `FSTags.ontology`*:\nThe primary `TagsOntology`, or `None` if `self.ontology_filepath` was `None`.\n\n*Property `FSTags.ontology_filepath`*:\nThe ontology file basename.\n\n*Method `FSTags.ontology_for(self, path, ontbase=None)`*:\nReturn the `TagsOntology` associated with `path`.\nReturns `None` if an ontology cannot be found.\n\n*Method `FSTags.open_ontology(self, ontpath)`*:\nOpen the contology file at `ontpath`.\n\n*Method `FSTags.path_tagfiles(self, fspath)`*:\nGenerator yielding a sequence of `(FSTagsTagFile,name)` pairs\nwhere `name` is the key within the `FSTagsTagFile`\nfor the `FSTagsTagFile`s affecting `fspath`\nin order from the root to `dirname(fspath)`.\n\n*Method `FSTags.resolve_format_string(self, format_string)`*:\nSee if `format_string` looks like `[`*clausename*`]`*entryname*.\nif so, return the corresponding config entry string,\notherwise return `format_string` unchanged.\n\n*Method `FSTags.scrub(self, path)`*:\nScrub tags for names which do not exist in the filesystem.\n\n*Method `FSTags.startup_shutdown(self)`*:\nSync tag files and db mapping on final close.\n\n*Method `FSTags.sync(self)`*:\nFlush modified tag files.\n\n*Method `FSTags.tagfile_for(self, fspath)`*:\nReturn the `FSTagsTagFile` storing the `Tag`s for `fspath`.\n\n*Property `FSTags.tagsfile_basename`*:\nThe tag file basename.\n\n*Method `FSTags.test(self, path, tag_tests, use_direct_tags=False)`*:\nTest a path against `tag_tests`.\n\nParameters:\n* `path`: path to test\n* `tag_tests`: an iterable of `TagBasedTest`s\n* `use_direct_tags`: test the `direct_tags` if true,\n  otherwise the `all_tags`.\n  Default: `False`\n\n## Class `FSTagsCommand(cs.cmdutils.BaseCommand, cs.tagset.TagsCommandMixin)`\n\n`fstags` main command line utility.\n\n\n\nUsage summary:\n\n    Usage: fstags [-o ontology] [-P] subcommand [...]\n      -o ontology   Specify the path to an ontology file.\n      -P            Physical. Resolve pathnames through symlinks.\n                    Default ~/.fstagsrc[general]physical or False.\n      Subcommands:\n        autotag paths...\n          Tag paths based on rules from the rc file.\n        cp [-finv] srcpath dstpath, cp [-finv] srcpaths... dstdirpath\n          POSIX cp(1) equivalent, but also copying tags: copy files and their tags into targetdir.\n          -f  Force: remove destination if it exists.\n          -i  Interactive: fail if the destination exists.\n          -n  No remove: fail if the destination exists.\n          -v  Verbose: show copied files.\n        cptags srcpath dstpath\n          Copy the direct tags from srcpath to dstpath.\n        edit [-ad] [path]\n          Edit the direct tagsets of path, default: '.'.\n          If path is a directory, provide the tags of its entries.\n          Otherwise edit just the tags for path.\n          -a    List all names in directory edit mode; normally\n                names commencing with a dot are omitted.\n          -d    Treat directories like files: edit just its tags.\n        export [-a] [--direct] path {tag[=value]|-tag}...\n          Export tags for files from paths matching all the constraints.\n          -a        Export all paths, not just those with tags.\n          --direct  Export the direct tags instead of the computed tags.\n          The output is in the same CSV format as that from \"sqltags export\",\n          with the following columns:\n          * unixtime: the file's st_mtime from os.stat.\n          * id: empty\n          * name: the file path\n          * tags: the file's direct or indirect tags\n        find [--direct] [--for-rsync] [-o output_format] path {tag[=value]|-tag}...\n          List files from path matching all the constraints.\n          --direct    Use direct tags instead of all tags.\n          --for-rsync Instead of listing matching paths, emit a\n                      sequence of rsync(1) patterns suitable for use with\n                      --include-from in order to do a selective rsync of the\n                      matched paths.\n          -o output_format\n                      Use output_format as a Python format string to lay out\n                      the listing.\n                      Default: {fspath}\n        help [-l] [subcommand-names...]\n          Print help for subcommands.\n          This outputs the full help for the named subcommands,\n          or the short help for all subcommands if no names are specified.\n          -l  Long help even if no subcommand-names provided.\n        import {-|srcpath}...\n          Import CSV data in the format emitted by \"export\".\n          Each argument is a file path or \"-\", indicating standard input.\n        infer pathname\n          Print the base and inferred tags for pathname.\n        json_import --prefix=tag_prefix {-|path} {-|tags.json}\n          Apply JSON data to path.\n          A path named \"-\" indicates that paths should be read from\n          the standard input.\n          The JSON tag data come from the file \"tags.json\"; the name\n          \"-\" indicates that the JSON data should be read from the\n          standard input.\n        ln [-finv] srcpath dstpath, ln [-finv] srcpaths... dstdirpath\n          POSIX ln(1) equivalent, but also copying the tags: link files and their tags into targetdir.\n          -f  Force: remove destination if it exists.\n          -i  Interactive: fail if the destination exists.\n          -n  No remove: fail if the destination exists.\n          -v  Verbose: show linked files.\n        ls [-dlr] [--direct] [-o output_format] [paths...]\n          List files from paths and their tags.\n          -d          Treat directories like files, do not recurse.\n          --direct    List direct tags instead of all tags.\n          -l          Long format.\n          -o output_format\n                      Use output_format as a Python format string to lay out\n                      the listing.\n                      Default: {fspath:json} {tags}\n          -r          Recurse into subdirectories.\n        mv [-finv] srcpath dstpath, mv [-finv] srcpaths... dstdirpath\n          POSIX mv(1) equivalent, but also copying the tags: move files and their tags into targetdir.\n          -f  Force: remove destination if it exists.\n          -i  Interactive: fail if the destination exists.\n          -n  No remove: fail if the destination exists.\n          -v  Verbose: show moved files.\n        ns [-d] [--direct] [paths...]\n          Report on the available primary namespace fields for formatting.\n          Note that because the namespace used for formatting has\n          inferred field names there are also unshown secondary field\n          names available in format strings.\n          -d          Treat directories like files, do not recurse.\n          --direct    List direct tags instead of all tags.\n        ont [subcommand [args...]]\n          With no arguments, print the ontology.\n        rename -o basename_format paths...\n          Rename paths according to a format string.\n          -o basename_format\n              Use basename_format as a Python format string to\n              compute the new basename for each path.\n        scrub paths...\n          Remove all tags for missing paths.\n          If a path is a directory, scrub the immediate paths in the directory.\n        shell\n          Run a command prompt via cmd.Cmd using this command's subcommands.\n        tag {-|path} {tag[=value]|-tag}...\n          Tag a path with multiple tags.\n          With the form \"-tag\", remove that tag from the direct tags.\n          A path named \"-\" indicates that paths should be read from the\n          standard input.\n        tagfile tagfile_path [subcommand ...]\n          Perform operations on a tag file.\n          Subcommands:\n            tag tagset_name {tag[=value]|-tag}...\n              Directly modify tag_name within the tag file tagfile_path.\n        tagpaths {tag[=value]|-tag} {-|paths...}\n          Tag multiple paths.\n          With the form \"-tag\", remove the tag from the immediate tags.\n          A single path named \"-\" indicates that paths should be read\n          from the standard input.\n        test [--direct] path {tag[=value]|-tag}...\n          Test whether the path matches all the constraints.\n          --direct    Use direct tags instead of all tags.\n        xattr_export {-|paths...}\n          Import tag information from extended attributes.\n        xattr_import {-|paths...}\n          Update extended attributes from tags.\n\n*`FSTagsCommand.Options`*\n\n*Method `FSTagsCommand.apply_opt(self, opt, val)`*:\nApply command line option.\n\n*Method `FSTagsCommand.cmd_autotag(self, argv, *, upd: cs.upd.Upd, runstate: Optional[cs.resources.RunState] = <function uses_runstate.<locals>.<lambda> at 0x104a57ce0>)`*:\nUsage: {cmd} paths...\nTag paths based on rules from the rc file.\n\n*Method `FSTagsCommand.cmd_cp(self, argv)`*:\nUsage: {cmd} [-finv] srcpath dstpath, {cmd} [-finv] srcpaths... dstdirpath\nPOSIX cp(1) equivalent, but also copying tags: copy files and their tags into targetdir.\n-f  Force: remove destination if it exists.\n-i  Interactive: fail if the destination exists.\n-n  No remove: fail if the destination exists.\n-v  Verbose: show copied files.\n\n*Method `FSTagsCommand.cmd_cptags(self, argv)`*:\nUsage: {cmd} srcpath dstpath\nCopy the direct tags from srcpath to dstpath.\n\n*Method `FSTagsCommand.cmd_edit(self, argv)`*:\nUsage: {cmd} [-ad] [path]\nEdit the direct tagsets of path, default: '.'.\nIf path is a directory, provide the tags of its entries.\nOtherwise edit just the tags for path.\n-a    List all names in directory edit mode; normally\n      names commencing with a dot are omitted.\n-d    Treat directories like files: edit just its tags.\n\n*Method `FSTagsCommand.cmd_export(self, argv, *, runstate: Optional[cs.resources.RunState] = <function uses_runstate.<locals>.<lambda> at 0x104c18220>)`*:\nUsage: {cmd} [-a] [--direct] path {{tag[=value]|-tag}}...\nExport tags for files from paths matching all the constraints.\n-a        Export all paths, not just those with tags.\n--direct  Export the direct tags instead of the computed tags.\nThe output is in the same CSV format as that from \"sqltags export\",\nwith the following columns:\n* unixtime: the file's st_mtime from os.stat.\n* id: empty\n* name: the file path\n* tags: the file's direct or indirect tags\n\n*Method `FSTagsCommand.cmd_find(self, argv, *, runstate: Optional[cs.resources.RunState] = <function uses_runstate.<locals>.<lambda> at 0x104c18400>)`*:\nUsage: {cmd} [--direct] [--for-rsync] [-o output_format] path {{tag[=value]|-tag}}...\nList files from path matching all the constraints.\n--direct    Use direct tags instead of all tags.\n--for-rsync Instead of listing matching paths, emit a\n            sequence of rsync(1) patterns suitable for use with\n            --include-from in order to do a selective rsync of the\n            matched paths.\n-o output_format\n            Use output_format as a Python format string to lay out\n            the listing.\n            Default: {FIND_OUTPUT_FORMAT_DEFAULT}\n\n*Method `FSTagsCommand.cmd_import(self, argv)`*:\nUsage: {cmd} {{-|srcpath}}...\nImport CSV data in the format emitted by \"export\".\nEach argument is a file path or \"-\", indicating standard input.\n\n*Method `FSTagsCommand.cmd_infer(self, argv)`*:\nUsage: {cmd} pathname\nPrint the base and inferred tags for pathname.\n\n*Method `FSTagsCommand.cmd_json_import(self, argv)`*:\nUsage: json_import --prefix=tag_prefix {{-|path}} {{-|tags.json}}\nApply JSON data to path.\nA path named \"-\" indicates that paths should be read from\nthe standard input.\nThe JSON tag data come from the file \"tags.json\"; the name\n\"-\" indicates that the JSON data should be read from the\nstandard input.\n\n*Method `FSTagsCommand.cmd_ln(self, argv)`*:\nUsage: {cmd} [-finv] srcpath dstpath, {cmd} [-finv] srcpaths... dstdirpath\nPOSIX ln(1) equivalent, but also copying the tags: link files and their tags into targetdir.\n-f  Force: remove destination if it exists.\n-i  Interactive: fail if the destination exists.\n-n  No remove: fail if the destination exists.\n-v  Verbose: show linked files.\n\n*Method `FSTagsCommand.cmd_ls(self, argv, *, runstate: Optional[cs.resources.RunState] = <function uses_runstate.<locals>.<lambda> at 0x104c18860>)`*:\nUsage: {cmd} [-dlr] [--direct] [-o output_format] [paths...]\nList files from paths and their tags.\n-d          Treat directories like files, do not recurse.\n--direct    List direct tags instead of all tags.\n-l          Long format.\n-o output_format\n            Use output_format as a Python format string to lay out\n            the listing.\n            Default: {LS_OUTPUT_FORMAT_DEFAULT}\n-r          Recurse into subdirectories.\n\n*Method `FSTagsCommand.cmd_mv(self, argv)`*:\nUsage: {cmd} [-finv] srcpath dstpath, {cmd} [-finv] srcpaths... dstdirpath\nPOSIX mv(1) equivalent, but also copying the tags: move files and their tags into targetdir.\n-f  Force: remove destination if it exists.\n-i  Interactive: fail if the destination exists.\n-n  No remove: fail if the destination exists.\n-v  Verbose: show moved files.\n\n*Method `FSTagsCommand.cmd_ns(self, argv)`*:\nUsage: {cmd} [-d] [--direct] [paths...]\nReport on the available primary namespace fields for formatting.\nNote that because the namespace used for formatting has\ninferred field names there are also unshown secondary field\nnames available in format strings.\n-d          Treat directories like files, do not recurse.\n--direct    List direct tags instead of all tags.\n\n*Method `FSTagsCommand.cmd_ont(self, argv)`*:\nOntology operations.\n\nUsage: {cmd} [subcommand [args...]]\n  With no arguments, print the ontology.\n\n*Method `FSTagsCommand.cmd_rename(self, argv)`*:\nUsage: {cmd} -o basename_format paths...\nRename paths according to a format string.\n-o basename_format\n    Use basename_format as a Python format string to\n    compute the new basename for each path.\n\n*Method `FSTagsCommand.cmd_scrub(self, argv)`*:\nUsage: {cmd} paths...\nRemove all tags for missing paths.\nIf a path is a directory, scrub the immediate paths in the directory.\n\n*Method `FSTagsCommand.cmd_tag(self, argv)`*:\nUsage: {cmd} {{-|path}} {{tag[=value]|-tag}}...\nTag a path with multiple tags.\nWith the form \"-tag\", remove that tag from the direct tags.\nA path named \"-\" indicates that paths should be read from the\nstandard input.\n\n*Method `FSTagsCommand.cmd_tagfile(self, argv)`*:\nUsage: {cmd} tagfile_path [subcommand ...]\nPerform operations on a tag file.\nSubcommands:\n  tag tagset_name {{tag[=value]|-tag}}...\n    Directly modify tag_name within the tag file tagfile_path.\n\n*Method `FSTagsCommand.cmd_tagpaths(self, argv)`*:\nUsage: {cmd} {{tag[=value]|-tag}} {{-|paths...}}\nTag multiple paths.\nWith the form \"-tag\", remove the tag from the immediate tags.\nA single path named \"-\" indicates that paths should be read\nfrom the standard input.\n\n*Method `FSTagsCommand.cmd_test(self, argv)`*:\nUsage: {cmd} [--direct] path {{tag[=value]|-tag}}...\nTest whether the path matches all the constraints.\n--direct    Use direct tags instead of all tags.\n\n*Method `FSTagsCommand.cmd_xattr_export(self, argv)`*:\nUsage: {cmd} {{-|paths...}}\nImport tag information from extended attributes.\n\n*Method `FSTagsCommand.cmd_xattr_import(self, argv)`*:\nUsage: {cmd} {{-|paths...}}\nUpdate extended attributes from tags.\n\n*Method `FSTagsCommand.import_csv_file(self, f, *, convert_name=None)`*:\nImport CSV data from the file `f`.\n\nParameters:\n* `f`: the source CSV file\n* `convert_name`: a callable to convert each input name\n  into a file path; the default is to use the input name directly\n\n*Method `FSTagsCommand.run_context(self)`*:\nPush the `FSTags`.\n\n## Class `FSTagsConfig(cs.fs.FSPathBasedSingleton)`\n\nA configuration for fstags.\n\n*Method `FSTagsConfig.__init__(self, rcfilepath=None, physical=None)`*:\nInitialise the config.\n\nParameters:\n* `rcfilepath`: the path to the confguration file\n  If `None`, default to `'~/.fstagsrc'` (from `RCFILE`).\n\n*Method `FSTagsConfig.cascade_rules_from_config(config)`*:\nReturn a list of the `[cascade]` tag rules from the config.\n\n*Method `FSTagsConfig.filename_rules_from_config(config)`*:\nReturn a list of the `[filename_autotag]` tag rules from the config.\n\n*Method `FSTagsConfig.load_config(rcfilepath)`*:\nRead an rc file, return a `ConfigParser` instance.\n\n*Property `FSTagsConfig.tagsfile_basename`*:\nThe tags filename, default `'.fstags'`.\n\n## Class `FSTagsTagFile(cs.tagset.TagFile, HasFSTagsMixin)`\n\nA `FSTagsTagFile` indexing `TagSet`s for file paths\nwhich lives in the file path's directory.\n\n*Method `FSTagsTagFile.TagSetClass(self, name: str) -> cs.fstags.TaggedPath`*:\nfactory to create a `TaggedPath` from a `name`.\n\n*Property `FSTagsTagFile.dirpath`*:\nReturn the path of the directory associated with this `FSTagsTagFile`.\n\n## Function `get_xattr_value(fspath, xattr_name)`\n\nRead the extended attribute `xattr_name` of `fspath`.\nReturn the extended attribute value as a string,\nor `None` if the attribute does not exist.\n\nParameters:\n* `fspath`: the filesystem path to update\n* `xattr_name`: the extended attribute to obtain\n  if this is a `str`, the attribute is the UTF-8 encoding of that name.\n\n## Class `HasFSTagsMixin`\n\nMixin providing an automatic `.fstags` property.\n\n*Property `HasFSTagsMixin.fstags`*:\nReturn the `.fstags` property,\ndefault a shared default `FSTags` instance.\n\n## Function `is_valid_basename(name: str)`\n\nTest whether `name` is a valid basefile for something in a directory.\n\n## Function `main(argv=None)`\n\nCommand line mode.\n\n## Function `rsync_patterns(paths, top_path)`\n\nReturn a list of rsync include lines\nsuitable for use with the `--include-from` option.\n\n## Class `TaggedPath(cs.tagset.TagSet, HasFSTagsMixin, cs.fs.HasFSPath, cs.deco.Promotable)`\n\nClass to manipulate the tags for a specific filesystem path.\n\n*Property `TaggedPath.all_tags`*:\nCached cumulative tags for this path as a `TagSet`\nby merging the tags from the root to the path.\n\nNote that subsequent changes to some path component's `direct_tags`\nwill not affect this `TagSet`.\n\n*Method `TaggedPath.as_tags(self, prefix=None, all_tags=False)`*:\nYield the tag data as `Tag`s.\n\nThis overrides `TagSet.as_tags`,\nhonouring an `optional `all_tags` parameter.\n\n*Method `TaggedPath.auto_infer(self, attr)`*:\nInfer a value from `attr` via the associated `FSTags.cascade_rules`.\n\nThis implementation tries the cascade rules from the configuration\nand falls back to the superclass inference (the direct tag, if present).\nTherefore a tagset with a rule for `.title` and also a\ndirect `.title` Tag would return the direct tag value for\n`.title` and the rule value for `.auto.title`.\n\n*Property `TaggedPath.basename`*:\nThe name of the final path component.\n\n*Method `TaggedPath.cached_value(self, prefix: str, name: str, *, state_func: Optional[Callable[[str], Mapping[str, Any]]] = None) -> 'CachedValue'`*:\nReturn `CachedValue` managing the  `prefix.name` tag.\n\n*Method `TaggedPath.export_xattrs(self)`*:\nUpdate the extended attributes of the file.\n\n*Method `TaggedPath.findup(self, check)`*:\nLocate the first `TaggedPath` from `self` upwards (via `.parent`)\nfor which `check(TaggedPath)` is true.\n\n*Method `TaggedPath.format_kwargs(self, *, direct=False)`*:\nFormat arguments suitable for `str.format_map`.\n\nThis returns an `ExtendedNamespace` from `TagSet.ns()`\nfor a computed `TagSet`.\n\nIn addition to the normal `TagSet.ns()` names\nthe following additional names are available:\n* `fspath.basename`: basename of the `TaggedPath.fspath`\n* `fspath.pathname`: the `TaggedPath.fspath`\n* `fspath.encoded`: the JSON encoded fspath\n* `tags`: the `TagSet` as a string\n\n*Method `TaggedPath.format_tagset(self, *, direct=False)`*:\nCompute a `TagSet` from this file's tags\nwith additional derived tags.\n\nThis can be converted into an `ExtendedNamespace`\nsuitable for use with `str.format_map`\nvia the `TagSet`'s `.format_kwargs()` method.\n\nIn addition to the normal `TagSet.ns()` names\nthe following additional names are available:\n* `fspath.basename`: basename of the `TaggedPath.fspath`\n* `fspath.ext`: the file extension of the basename\n  of the `TaggedPath.fspath`\n* `fspath.pathname`: the `TaggedPath.fspath`\n* `fspath.encoded`: the JSON encoded fspath\n\n*Method `TaggedPath.from_str(fspath, *, fstags: Optional[cs.fstags.FSTags] = <function <lambda> at 0x104a57740>)`*:\nSupports the `@promote` decorator.\n\n*Method `TaggedPath.get_xattr_tagset(self, xattr_name=None)`*:\nReturn a new `TagSet`\nfrom the extended attribute `xattr_name` of `self.fspath`.\nThe default `xattr_name` is `XATTR_B` (`None`).\n\n*Method `TaggedPath.import_xattrs(self)`*:\nUpdate the direct tags from the file's extended attributes.\n\n*Method `TaggedPath.infer_from_basename(self, rules=None)`*:\nApply `rules` to the basename of this `TaggedPath`,\nreturn a `TagSet` of inferred `Tag`s.\n\nTag values from earlier rules override values from later rules.\n\nThe default rules come from `self.fstags.config.filename_rules`,\nwhich is sourced from `~/.fstagsrc`.\n\n*Method `TaggedPath.infer_tags(self)`*:\nInfer tags for this path.\n\nIn order of preference:\n* from filesystem fstags\n* from file basename matching\n* from various `_type` suffixes\n* from the cascade rules (see `FSTags.cascade_rules`)\n\n*Property `TaggedPath.keypath`*:\nThe key path used to index this `TaggedPath` within its `FSTags`\nfrom `FSTags.keypath(path)`.\n\n*Method `TaggedPath.merged_tags(self)`*:\nCompute the cumulative tags for this path as a new `TagSet`\nby merging the tags from the root to the path.\n\n*Property `TaggedPath.name`*:\nThe `.name` is `basename(self.fspath)`.\n\n*Property `TaggedPath.parent`*:\nA reference to the parent of this `TaggedPath`, or `None`.\n\n*Method `TaggedPath.prune_inherited(self)`*:\nExamine the tags of this path's parent.\nRemove any tag on this file if they are present on the parent.\nReturn a `TagSet` containing the pruned `Tag`s.\n\n*Method `TaggedPath.save(self, prune=True)`*:\nUpdate the associated `FSTagsTagFile`.\n\n*Method `TaggedPath.set(self, tag_name, value, **kw)`*:\nForbid the special tag name `'name'`, reserved for the filename.\n\n*Property `TaggedPath.tagfile`*:\nReturn the `FSTagsTagFile` storing the state for this `TaggedPath`.\n\n## Function `update_xattr_value(fspath, xattr_name, new_xattr_value)`\n\nUpdate the extended attributes of `fspath`\nwith `new_xattr_value` for `xattr_name`.\nReturn the previous value, or `None` if the attribute was missing.\n\nWe avoid calling `os.setxattr` if the value will not change.\n\nParameters:\n* `fspath`: the filesystem path to update\n* `xattr_name`: the extended attribute to update;\n  if this is a `str`, the attribute is the UTF-8 encoding of that name.\n* `new_xattr_value`: the new extended attribute value, a `str`\n  which should be the transcription of `TagSet`\n  i.e. `str(tagset)`\n\n## Function `verbose(msg, *a)`\n\nEmit message if in verbose mode.\n\n# Release Log\n\n\n\n*Release 20240709*:\n* New CachedValue class to manage a cached TaggedPath tag value.\n* New TaggedPath.cached_value() method to return a CachedValue.\n\n*Release 20240422*:\n* Bugfix: .fstags files should no longer get Python repr() output for weirdly typed tag values.\n* Some other minor internal updates.\n\n*Release 20240412*:\nChanges to accomodate dropping BaseCommandOptions.runstate.\n\n*Release 20240316*:\n* TaggedPath.infer_tags: add _dt, _date, _f conversions, skip conversions which raise TypeError or ValueError.\n* rpaths: fix to yield relative paths.\n\n*Release 20240211*:\n* TaggedPath: subclass Promotable, add from_str(fspath) class method.\n* FSTags: new mv(srcpath,dstpath) method to move/link/symlink a file bringing its tags.\n\n*Release 20240201.1*:\nRelease with \"fstags\" script.\n\n*Release 20240201*:\nFSTags.attach_path: do not save the tagfile if the FSTags is open - the final close will do it.\n\n*Release 20231129*:\nFSTags.startup_shutdown: run self.sync() in a finally clause.\n\n*Release 20230407*:\n* FSTags: support open/close of self.update_mapping, update startup/shutdown to startup_shutdown.\n* Move the (optional) ORM open/close from FSTags.startup_shutdown to TagFile.save, greatly shortens the ORM lock.\n\n*Release 20230217*:\nFSTagsCommand.cmd_rename: use -o for the format string as for other commands, -n is for \"no action\".\n\n*Release 20230212*:\n* FSTags.keypath(fspath) and TaggedPath.keypath with the singleton filesystem path for a TaggedPath.\n* TaggedPath.parent property.\n* TaggedPath.findup(check) method.\n* FSTagsCommand: cmd_find,cmd_ls: abort if runstate.cancelled thus honouring SIGINT/^C.\n\n*Release 20230211*:\nFSTags.__init__: treat empty $FSTAGS_UPDATE_MAPPING as missing i.e. None.\n\n*Release 20230210*:\nNew optional update_mapping for mirroring tags eg to an SQLTags; activated automatically by an $FSTAGS_UPDATE_MAPPING environment variable.\n\n*Release 20221228*:\nTaggedPath.save: new options prune=True parameter to drop empty top level dict/lists.\n\n*Release 20220918*:\n* FSTagsConfig: add empty .provided dict for config overrides.\n* FSTagsConfig: set FSPATH_DEFAULT=RCFILE for use by FSPathBasedSingleton._singleton_key.\n* FSTagsConfig: accept optional `physical` parameter to choose `realpath` over `abspath` and new `.physical` property.\n* FSTags.__getitem__: use `abspath` or `realpath` depending on `self.config.physical`.\n* FSTagsCommand: new -P option for \"physical\" mode, plumb though to the config and self.options.\n* Provide a DEFAULT_FSTAGS instance and an @uses_fstags decorator.\n\n*Release 20220606*:\nFSTagsCommand.edit: mention the filename in the header comments in tagset edit mode.\n\n*Release 20220430*:\nMinor bugfixes.\n\n*Release 20220311*:\n* New TaggedPath.infer_tags() method to compute and return the inferred TagSet.\n* New \"fstags infer pathname\" command.\n\n*Release 20211212*:\n* Rename edit_many to edit_tagsets for clarity.\n* FSTags.edit_dirpath: include realpath(dirpath) at the top of the edit list.\n\n*Release 20210906*:\n* TaggedPath: new auto_infer method overriding the inherited TagSet.auto_infer which consults the cascade_rules from the .fstagsrc.\n* fstags ls: new -l option to print a multiline tag listing.\n* fstags cptags: copy the tags from one path to another.\n* Assorted other changes.\n\n*Release 20210404*:\n* FSTags.edit_dirpath: new all_names parameter to include dot-names.\n* FSTagsCommand.cmd_edit: new -a option to turn on the all_names parameter.\n\n*Release 20210306*:\n* FSTags: new tagfile_for(filepath) to obtain the TagFile for filepath.\n* FSTagsCommand: new -o ontology option to supply an ontology file for the FSTags.\n* FSTagsCommand.cmd_ont: drop -o/--ontology, superceded by global -o option.\n* Move BaseTagFile from cs.fstags to TagFile in cs.tagset.\n* FSTags.edit_dirpath: we now get (old_name,new_name,TaggedPath) back from edit_many, obviating the te_id_map.\n* TaggedPath: .name property returning basename(self.filepath), .set and .discard methods rejecting use of the 'name' tag.\n* FSTagsCommand: port to new cs.cmdutils API.\n* Many small refactors and bugfixes.\n\n*Release 20200717.1*:\nAdd the manual page MarkDown source files. Note: well out of date, need updating.\n\n*Release 20200717*:\nDISTINFO: require cs.obj>=20200716 for SingletonMixin API change.\n\n*Release 20200716*:\n* Update for changed cs.obj.SingletonMixin API.\n* fstags: new \"export\" and \"import\" subcommands roughly paralleling those from \"sqltags\", providing CSV formatted export/import.\n* fstags export: ew -a (all paths) option - the default is not to not export paths with no tags.\n\n*Release 20200521.1*:\nfix DISTINFO.install_requires\n\n*Release 20200521*:\n* Add -i option to cp,ln,mv for command line compatibility, just disables -f.\n* New \"rename\" subcommand to rename files according to a format string.\n* Ontology support (optional).\n* Various classes are now singletons to avoid dissonance.\n* Fold \"edittags\" subcommand into \"edit\" via the \"-d\" (directories like files) option.\n* New \"ns\" subcommand reporting on the primary names available for formatting.\n* Accept [clausename]entryname as a format string to obtain the string from that entry of the config file.\n* Many bugfixes and improvements.\n\n*Release 20200229*:\n* New TaggedPath.modified property aliasing the TagSet.modified attribute.\n* ls: new -d option to treat directories like files (do not recurse), aiding reporting of tags for a directory.\n* find,ls subcommands: work off the realpath of the supplied top level path.\n* Tag: now subclasses namedtuple.\n* Rewrite rpaths() to use scandir and to also yield (is_dir,path) tuples.\n* TagSet, Tag, TagChoice moved into new cs.tagset module for reuse.\n* json_import: make --prefix mandatory, is \".\" as separator if not empty.\n* Move filename regexp rules to [filename_rules] config section.\n* New CascadeRule for representing a \"target_tag_name = tag_name1 tag_name2...\" config rules.\n* autotag: include the cascade rules in the autotagging after the filename rules.\n\n*Release 20200210*:\n* New \"json_import\" subcommand to import a JSON dict as tags, initial use case to load the metadata from youtube-dl.\n* New \"scrub\" command line operation, to purge tags of paths which do not exist.\n* New \"cp\", \"ln\" and \"mv\" subcommands to copy/link/move paths and take their tags with them.\n* New \"test\" subcommand to test paths against tag criteria, useful for find and scripts.\n* Small bugfixes.\n\n*Release 20200130*:\n* New FSTagsConfig class which parses the .fstagsrc as a .ini file; related adjustments.\n* New HasFSTagsMixin presenting a settable .fstags property with a shared default.\n* New xattr_import and xattr_export subcommands, remove implicit xattr access/update from other operations.\n* New TagSet.__len__ returning the number of tags.\n* Add \"-\" support for stdin to \"tag\" and \"tagpaths\" subcommands.\n\n*Release 20200113.2*:\nFSTagsCommand docstring tweak.\n\n*Release 20200113.1*:\nSmall docstring updates.\n\n*Release 20200113*:\nMirror tags to user.cs.fstags xattr to honour Linux namespace requirements. Add \"filesize\" to available tag string format (-o option). Small bugfixes.\n\n*Release 20191230*:\n* Command line: new \"find\" command to search a file tree based on tags.\n* Command line: new \"mv\" command to move a file and its tags.\n* Command line: Python string formats for \"find\" and \"ls\" output.\n* TaggedPath.autotag: new optional `no_save` parameter, default False, to suppress update of the associated .fstags file.\n* Inital and untested \"mirror tags to xattrs\" support.\n\n*Release 20191201*:\nNew \"edit\" subcommand to rename files and edit tags.\n\n*Release 20191130.1*:\nInitial release: fstags, filesystem based tagging utility.\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"python3","license":"GNU General Public License v3 or later (GPLv3+)","maintainer":null,"maintainer_email":null,"name":"cs.fstags","package_url":"https://pypi.org/project/cs.fstags/","platform":null,"project_url":"https://pypi.org/project/cs.fstags/","project_urls":{"MonoRepo Commits":"https://bitbucket.org/cameron_simpson/css/commits/branch/main","Monorepo Git Mirror":"https://github.com/cameron-simpson/css","Monorepo Hg/Mercurial Mirror":"https://hg.sr.ht/~cameron-simpson/css","Source":"https://github.com/cameron-simpson/css/blob/main/lib/python/cs/fstags.py"},"provides_extra":null,"release_url":"https://pypi.org/project/cs.fstags/20240709/","requires_dist":["cs.cmdutils>=20210404","cs.context>=20240630","cs.deco>=20240709","cs.fileutils>=20240709","cs.fs>=20220429","cs.lex>=20240630","cs.logutils>=20240630","cs.pfx>=20240630","cs.resources>=20240630","cs.tagset>=20211212","cs.threads>=20240630","cs.upd>=20240630","icontract","typeguard"],"requires_python":null,"summary":"Simple filesystem based file tagging and the associated `fstags` command line script.","version":"20240709","yanked":false,"yanked_reason":null},"last_serial":24042691,"releases":{"20191130.1":[{"comment_text":"","digests":{"blake2b_256":"a9636e1d54cd9299b653dea1ec9b036edd2d5bc3c9cfb6df2b8d5839eaf44213","md5":"58c35f76da0bcbc2788537ddf1258f88","sha256":"bdc1f76e82043695fe893096363ca50f3e8ab4de3c66fb4b38e4a0a7cc373a70"},"downloads":-1,"filename":"cs.fstags-20191130.1.tar.gz","has_sig":false,"md5_digest":"58c35f76da0bcbc2788537ddf1258f88","packagetype":"sdist","python_version":"source","requires_python":null,"size":8438,"upload_time":"2019-11-30T10:12:07","upload_time_iso_8601":"2019-11-30T10:12:07.735835Z","url":"https://files.pythonhosted.org/packages/a9/63/6e1d54cd9299b653dea1ec9b036edd2d5bc3c9cfb6df2b8d5839eaf44213/cs.fstags-20191130.1.tar.gz","yanked":false,"yanked_reason":null}],"20191201":[{"comment_text":"","digests":{"blake2b_256":"232e837f6f6f6adf5aae7a91c33e759b5ae5c21e87e50c159a4ed13d6192ab1f","md5":"c34ce629dbbbf73fdf78d1add575d084","sha256":"4e7d93f1cd7eed6abdb3fb0a7cc2cdd63e0638e230c91c1c63eee597e0fee44c"},"downloads":-1,"filename":"cs.fstags-20191201.tar.gz","has_sig":false,"md5_digest":"c34ce629dbbbf73fdf78d1add575d084","packagetype":"sdist","python_version":"source","requires_python":null,"size":9196,"upload_time":"2019-12-01T02:15:57","upload_time_iso_8601":"2019-12-01T02:15:57.126839Z","url":"https://files.pythonhosted.org/packages/23/2e/837f6f6f6adf5aae7a91c33e759b5ae5c21e87e50c159a4ed13d6192ab1f/cs.fstags-20191201.tar.gz","yanked":false,"yanked_reason":null}],"20191230":[{"comment_text":"","digests":{"blake2b_256":"8032d6e6b7293cd143278113bf1ceaabbb39400fb7f6d3b814fe54fcce309869","md5":"fca0707782a89195ffc20eafbbee4fe8","sha256":"0c882083e512537e807204f2598c014570fc2b79fbd74dd09f85529d27368a0d"},"downloads":-1,"filename":"cs.fstags-20191230.tar.gz","has_sig":false,"md5_digest":"fca0707782a89195ffc20eafbbee4fe8","packagetype":"sdist","python_version":"source","requires_python":null,"size":15433,"upload_time":"2019-12-30T02:19:55","upload_time_iso_8601":"2019-12-30T02:19:55.738986Z","url":"https://files.pythonhosted.org/packages/80/32/d6e6b7293cd143278113bf1ceaabbb39400fb7f6d3b814fe54fcce309869/cs.fstags-20191230.tar.gz","yanked":false,"yanked_reason":null}],"20200113":[{"comment_text":"","digests":{"blake2b_256":"69300065cf3e891d9daaed0388089753a22ce5dcd41743f159f46f7bbf7987e8","md5":"b1572cabf7a561c1a752840ec2da99c9","sha256":"57859e3a3c42983c7e9c1264c1de66bb6726b7aba5691a45bb9937d0f605eddc"},"downloads":-1,"filename":"cs.fstags-20200113.tar.gz","has_sig":false,"md5_digest":"b1572cabf7a561c1a752840ec2da99c9","packagetype":"sdist","python_version":"source","requires_python":null,"size":15744,"upload_time":"2020-01-12T21:14:54","upload_time_iso_8601":"2020-01-12T21:14:54.754328Z","url":"https://files.pythonhosted.org/packages/69/30/0065cf3e891d9daaed0388089753a22ce5dcd41743f159f46f7bbf7987e8/cs.fstags-20200113.tar.gz","yanked":false,"yanked_reason":null}],"20200113.1":[{"comment_text":"","digests":{"blake2b_256":"26e65dbbfc8052d01a49662727a85f65b4139c976aedf539d375fa960b8cff1e","md5":"579bb4d8089810c6f8d3da63f5af2920","sha256":"c1cb890f27e6836caeb4db77daa8403356215bdf839ddb216301a4d17908625b"},"downloads":-1,"filename":"cs.fstags-20200113.1.tar.gz","has_sig":false,"md5_digest":"579bb4d8089810c6f8d3da63f5af2920","packagetype":"sdist","python_version":"source","requires_python":null,"size":16518,"upload_time":"2020-01-13T03:56:11","upload_time_iso_8601":"2020-01-13T03:56:11.390917Z","url":"https://files.pythonhosted.org/packages/26/e6/5dbbfc8052d01a49662727a85f65b4139c976aedf539d375fa960b8cff1e/cs.fstags-20200113.1.tar.gz","yanked":false,"yanked_reason":null}],"20200113.2":[{"comment_text":"","digests":{"blake2b_256":"d27933f30e33c398b18beaa2a4bb46f05600a0a9feb4dc96da15eecd7a10b003","md5":"37e00d057fd11ad6ceee8c64041735eb","sha256":"ea052feb2db9ba8e475104938bdcea9375352df057ca5795b37fc4d2a2432f6f"},"downloads":-1,"filename":"cs.fstags-20200113.2.tar.gz","has_sig":false,"md5_digest":"37e00d057fd11ad6ceee8c64041735eb","packagetype":"sdist","python_version":"source","requires_python":null,"size":16699,"upload_time":"2020-01-13T04:07:27","upload_time_iso_8601":"2020-01-13T04:07:27.892553Z","url":"https://files.pythonhosted.org/packages/d2/79/33f30e33c398b18beaa2a4bb46f05600a0a9feb4dc96da15eecd7a10b003/cs.fstags-20200113.2.tar.gz","yanked":false,"yanked_reason":null}],"20200130":[{"comment_text":"","digests":{"blake2b_256":"7d3ce07428f21cec2b3275b11a93271451c45a41806a2b662ac496ae85099b1c","md5":"3e500f1b4f4340301a1672dd2324f4ea","sha256":"1cf0f0e8a5fa2156a9025976606876bd85bfda95614864c2f0fd642636945dcf"},"downloads":-1,"filename":"cs.fstags-20200130.tar.gz","has_sig":false,"md5_digest":"3e500f1b4f4340301a1672dd2324f4ea","packagetype":"sdist","python_version":"source","requires_python":null,"size":19818,"upload_time":"2020-01-30T06:19:48","upload_time_iso_8601":"2020-01-30T06:19:48.699700Z","url":"https://files.pythonhosted.org/packages/7d/3c/e07428f21cec2b3275b11a93271451c45a41806a2b662ac496ae85099b1c/cs.fstags-20200130.tar.gz","yanked":false,"yanked_reason":null}],"20200210":[{"comment_text":"","digests":{"blake2b_256":"e80124b154e176f53184c5db50d728e1243248a348a76cebdb07982e3a1e44e4","md5":"19010b29c6f4c28961790d81822a27b4","sha256":"989f30dea507711adaf1df7e152f87a7d1ce624447b2d30c6c65688f27a606cc"},"downloads":-1,"filename":"cs.fstags-20200210.tar.gz","has_sig":false,"md5_digest":"19010b29c6f4c28961790d81822a27b4","packagetype":"sdist","python_version":"source","requires_python":null,"size":22662,"upload_time":"2020-02-10T10:57:44","upload_time_iso_8601":"2020-02-10T10:57:44.473168Z","url":"https://files.pythonhosted.org/packages/e8/01/24b154e176f53184c5db50d728e1243248a348a76cebdb07982e3a1e44e4/cs.fstags-20200210.tar.gz","yanked":false,"yanked_reason":null}],"20200229":[{"comment_text":"","digests":{"blake2b_256":"e414bc166341e35d0a385946a6c66f3ef77996be20069bd3cc70815a514e7d86","md5":"c8a934a38ba84ef8b2cb9068b9612939","sha256":"30a7b3e2b834ee9dd40d2306bd3c84f57b4088170031235631e1a13fde5e95df"},"downloads":-1,"filename":"cs.fstags-20200229.tar.gz","has_sig":false,"md5_digest":"c8a934a38ba84ef8b2cb9068b9612939","packagetype":"sdist","python_version":"source","requires_python":null,"size":20648,"upload_time":"2020-02-29T04:58:21","upload_time_iso_8601":"2020-02-29T04:58:21.963159Z","url":"https://files.pythonhosted.org/packages/e4/14/bc166341e35d0a385946a6c66f3ef77996be20069bd3cc70815a514e7d86/cs.fstags-20200229.tar.gz","yanked":false,"yanked_reason":null}],"20200521":[{"comment_text":"","digests":{"blake2b_256":"72b697db1041b634d4d9d5a0cf7c1ae90aa468f0f136065b41fd11e4b2e1fd50","md5":"28ce005576ff87412a4273bd978ac62f","sha256":"c09a4d8c9c427e1c23c50813ad84a9bf66c2b6ff5eda9e52cd8f2430a86e48c9"},"downloads":-1,"filename":"cs.fstags-20200521.tar.gz","has_sig":false,"md5_digest":"28ce005576ff87412a4273bd978ac62f","packagetype":"sdist","python_version":"source","requires_python":null,"size":36075,"upload_time":"2020-05-21T02:23:01","upload_time_iso_8601":"2020-05-21T02:23:01.140260Z","url":"https://files.pythonhosted.org/packages/72/b6/97db1041b634d4d9d5a0cf7c1ae90aa468f0f136065b41fd11e4b2e1fd50/cs.fstags-20200521.tar.gz","yanked":false,"yanked_reason":null}],"20200521.1":[{"comment_text":"","digests":{"blake2b_256":"1d92d93f0504b9437dfca47c371b73e56e7e9e0d70ac8ea55f6bbc27a3649eb2","md5":"ebdf4f46a1281b16211904bd4afea2ea","sha256":"93165589436173e6e07269900ade302e9d0aa3a9095be3d90e720f68f0561ebd"},"downloads":-1,"filename":"cs.fstags-20200521.1.tar.gz","has_sig":false,"md5_digest":"ebdf4f46a1281b16211904bd4afea2ea","packagetype":"sdist","python_version":"source","requires_python":null,"size":36098,"upload_time":"2020-05-21T04:24:59","upload_time_iso_8601":"2020-05-21T04:24:59.583625Z","url":"https://files.pythonhosted.org/packages/1d/92/d93f0504b9437dfca47c371b73e56e7e9e0d70ac8ea55f6bbc27a3649eb2/cs.fstags-20200521.1.tar.gz","yanked":false,"yanked_reason":null}],"20200717.1":[{"comment_text":"","digests":{"blake2b_256":"2e2b60b388e4f0452c4bcd0bf62d0b8806071669a31b8874bdda50f58fbd4197","md5":"2e0ea4320f3cd329a984f1a5b199d16e","sha256":"3f8a807335c4bf72ac3a19229c8af8fb1682941539a90bca54c7e89d5cb6776f"},"downloads":-1,"filename":"cs.fstags-20200717.1.tar.gz","has_sig":false,"md5_digest":"2e0ea4320f3cd329a984f1a5b199d16e","packagetype":"sdist","python_version":"source","requires_python":null,"size":40676,"upload_time":"2020-07-17T00:11:05","upload_time_iso_8601":"2020-07-17T00:11:05.443635Z","url":"https://files.pythonhosted.org/packages/2e/2b/60b388e4f0452c4bcd0bf62d0b8806071669a31b8874bdda50f58fbd4197/cs.fstags-20200717.1.tar.gz","yanked":false,"yanked_reason":null}],"20210306":[{"comment_text":"","digests":{"blake2b_256":"aae6ac3c7f2ceba54c6e07f1b32874441fdaed12882941088fa0229557d9b937","md5":"53b532957f201fc202493d6f55912905","sha256":"2ed73124a4c204ad893740a4485e184be945a7fb4109ba99ada0dc8e1f7b463a"},"downloads":-1,"filename":"cs.fstags-20210306.tar.gz","has_sig":false,"md5_digest":"53b532957f201fc202493d6f55912905","packagetype":"sdist","python_version":"source","requires_python":null,"size":54156,"upload_time":"2021-03-06T00:17:08","upload_time_iso_8601":"2021-03-06T00:17:08.520673Z","url":"https://files.pythonhosted.org/packages/aa/e6/ac3c7f2ceba54c6e07f1b32874441fdaed12882941088fa0229557d9b937/cs.fstags-20210306.tar.gz","yanked":false,"yanked_reason":null}],"20211212":[{"comment_text":"","digests":{"blake2b_256":"4d32e6a430ab2e839f40559b77783fcd4c99974a0aab9be8bebc2f5e6d3291cf","md5":"7a5781cf8d1812ea609baa59e74ecb10","sha256":"30a151ff45abd029607beb1a34f983bfe4bfd188d92f06420416e1409eaf2c42"},"downloads":-1,"filename":"cs.fstags-20211212.tar.gz","has_sig":false,"md5_digest":"7a5781cf8d1812ea609baa59e74ecb10","packagetype":"sdist","python_version":"source","requires_python":null,"size":59091,"upload_time":"2021-12-11T23:28:24","upload_time_iso_8601":"2021-12-11T23:28:24.730708Z","url":"https://files.pythonhosted.org/packages/4d/32/e6a430ab2e839f40559b77783fcd4c99974a0aab9be8bebc2f5e6d3291cf/cs.fstags-20211212.tar.gz","yanked":false,"yanked_reason":null}],"20220311":[{"comment_text":"","digests":{"blake2b_256":"8792560837eca9d7fc4a1a3843f28c3f608c05dd58ddc293309590f765e5d5f5","md5":"e16ed38f821eb4cd2f8720d11da517f2","sha256":"8cd24a23fac419a3ce58368bae788fa8a38c94744262a39873a2370c62bb0c47"},"downloads":-1,"filename":"cs.fstags-20220311.tar.gz","has_sig":false,"md5_digest":"e16ed38f821eb4cd2f8720d11da517f2","packagetype":"sdist","python_version":"source","requires_python":null,"size":60096,"upload_time":"2022-03-11T00:47:47","upload_time_iso_8601":"2022-03-11T00:47:47.482624Z","url":"https://files.pythonhosted.org/packages/87/92/560837eca9d7fc4a1a3843f28c3f608c05dd58ddc293309590f765e5d5f5/cs.fstags-20220311.tar.gz","yanked":false,"yanked_reason":null}],"20220430":[{"comment_text":"","digests":{"blake2b_256":"10964a9bcea6ea3d1ba01c24520fcad96ed3aefee1dba511c9e088bd1b7c7818","md5":"e33cb038c37f75fc30333cb3b563ade5","sha256":"8225b8c9c4b323c0a38a149d5357b4b2d242ed8b6e46ef65be0da71430f9907b"},"downloads":-1,"filename":"cs.fstags-20220430-py3-none-any.whl","has_sig":false,"md5_digest":"e33cb038c37f75fc30333cb3b563ade5","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":40894,"upload_time":"2022-04-30T03:24:19","upload_time_iso_8601":"2022-04-30T03:24:19.722427Z","url":"https://files.pythonhosted.org/packages/10/96/4a9bcea6ea3d1ba01c24520fcad96ed3aefee1dba511c9e088bd1b7c7818/cs.fstags-20220430-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"75e72e2018ee71381ccee98d7f198d5c97b62a31cac6eb7b969ec115cbd35c04","md5":"592ac5abc8e53dc8bd472cd3c8a54e71","sha256":"ccb9a801d480ad623d0189d5d8a1ec883b20d0ced5cafc19cbec880ca6fe4945"},"downloads":-1,"filename":"cs.fstags-20220430.tar.gz","has_sig":false,"md5_digest":"592ac5abc8e53dc8bd472cd3c8a54e71","packagetype":"sdist","python_version":"source","requires_python":null,"size":44792,"upload_time":"2022-04-30T03:24:22","upload_time_iso_8601":"2022-04-30T03:24:22.115416Z","url":"https://files.pythonhosted.org/packages/75/e7/2e2018ee71381ccee98d7f198d5c97b62a31cac6eb7b969ec115cbd35c04/cs.fstags-20220430.tar.gz","yanked":false,"yanked_reason":null}],"20220606":[{"comment_text":"","digests":{"blake2b_256":"f95b651a8d048f4e8180d8022340135e11ebdb75179d4d8361f55c3ac514e144","md5":"34540f0eff353da5095f8fe2bb304dfa","sha256":"812fa872e60f4685ecec8661f1ef5cbdf3dc9af5549bd96438cf61787cca76c1"},"downloads":-1,"filename":"cs.fstags-20220606-py3-none-any.whl","has_sig":false,"md5_digest":"34540f0eff353da5095f8fe2bb304dfa","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":40958,"upload_time":"2022-06-06T07:57:14","upload_time_iso_8601":"2022-06-06T07:57:14.011271Z","url":"https://files.pythonhosted.org/packages/f9/5b/651a8d048f4e8180d8022340135e11ebdb75179d4d8361f55c3ac514e144/cs.fstags-20220606-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a7c5a3ac7a2d5c229406dd4f88e15e471cdef30b702a9f4a284702cd381d6ee5","md5":"c257de75c028d98e9cd8f5f947f12520","sha256":"6a1f2068c7aea17bfcee4f8e727dec457586bb8f8d239142534f2fe49c223795"},"downloads":-1,"filename":"cs.fstags-20220606.tar.gz","has_sig":false,"md5_digest":"c257de75c028d98e9cd8f5f947f12520","packagetype":"sdist","python_version":"source","requires_python":null,"size":44889,"upload_time":"2022-06-06T07:57:16","upload_time_iso_8601":"2022-06-06T07:57:16.456265Z","url":"https://files.pythonhosted.org/packages/a7/c5/a3ac7a2d5c229406dd4f88e15e471cdef30b702a9f4a284702cd381d6ee5/cs.fstags-20220606.tar.gz","yanked":false,"yanked_reason":null}],"20220918":[{"comment_text":"","digests":{"blake2b_256":"6a8f27a6f4ff833c9f5f72c4372079d71b7ddae2181e2c04fec1163d6ac09c11","md5":"5b5b37411ecaee12b9b3201e68a7d2a2","sha256":"a46c0dce677f179065de7a2e273bf7a11eaacd4d75e16268ab2a54a612e17b28"},"downloads":-1,"filename":"cs.fstags-20220918-py3-none-any.whl","has_sig":false,"md5_digest":"5b5b37411ecaee12b9b3201e68a7d2a2","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":41596,"upload_time":"2022-09-18T00:25:54","upload_time_iso_8601":"2022-09-18T00:25:54.195492Z","url":"https://files.pythonhosted.org/packages/6a/8f/27a6f4ff833c9f5f72c4372079d71b7ddae2181e2c04fec1163d6ac09c11/cs.fstags-20220918-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0cd6d73fe7956df58caf464a7af3111f7e7d4658670ee622e30a8444292604d9","md5":"d87f262938423058da64063133ba42f7","sha256":"2465e15bf903d32888b98140c599a036ea0eab9436f0874d9a76c5e0f1810f6c"},"downloads":-1,"filename":"cs.fstags-20220918.tar.gz","has_sig":false,"md5_digest":"d87f262938423058da64063133ba42f7","packagetype":"sdist","python_version":"source","requires_python":null,"size":45864,"upload_time":"2022-09-18T00:25:56","upload_time_iso_8601":"2022-09-18T00:25:56.344434Z","url":"https://files.pythonhosted.org/packages/0c/d6/d73fe7956df58caf464a7af3111f7e7d4658670ee622e30a8444292604d9/cs.fstags-20220918.tar.gz","yanked":false,"yanked_reason":null}],"20221228":[{"comment_text":"","digests":{"blake2b_256":"76e6b599bb45eb18eb857ef345ae6ea55c5a3ec3d069717515ff9b14dabd6dd5","md5":"48bd9ef7bafb06ad7fcc33e2862dfb80","sha256":"1d189093d809bd4bec3115270194813e883fb9d07ccc6b1a79771607e6d0d0f3"},"downloads":-1,"filename":"cs.fstags-20221228-py3-none-any.whl","has_sig":false,"md5_digest":"48bd9ef7bafb06ad7fcc33e2862dfb80","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":41655,"upload_time":"2022-12-27T23:53:54","upload_time_iso_8601":"2022-12-27T23:53:54.733568Z","url":"https://files.pythonhosted.org/packages/76/e6/b599bb45eb18eb857ef345ae6ea55c5a3ec3d069717515ff9b14dabd6dd5/cs.fstags-20221228-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4148b781241eebe03e5ea391254221c2eb188f3dec850ecc038823b1d5ceb717","md5":"db07bedc19164ecebe3cd62e1ab37b3e","sha256":"c086d3f43f874772607f074f0f6fa6208d1cea25fa37e5e48b8cd87fac711b57"},"downloads":-1,"filename":"cs.fstags-20221228.tar.gz","has_sig":false,"md5_digest":"db07bedc19164ecebe3cd62e1ab37b3e","packagetype":"sdist","python_version":"source","requires_python":null,"size":46179,"upload_time":"2022-12-27T23:53:56","upload_time_iso_8601":"2022-12-27T23:53:56.654691Z","url":"https://files.pythonhosted.org/packages/41/48/b781241eebe03e5ea391254221c2eb188f3dec850ecc038823b1d5ceb717/cs.fstags-20221228.tar.gz","yanked":false,"yanked_reason":null}],"20230210":[{"comment_text":"","digests":{"blake2b_256":"ea26e12e6d9a7462dbc84bda57feb487b725d03bcbdfeadb1fda92c8d2abfa5f","md5":"d71376f1df5f11199a5715c2aa38c285","sha256":"02fec94f53c0b4647eeba3d8a16bc03e086132a370d73eb875107fa39034d96b"},"downloads":-1,"filename":"cs.fstags-20230210-py3-none-any.whl","has_sig":false,"md5_digest":"d71376f1df5f11199a5715c2aa38c285","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":42600,"upload_time":"2023-02-10T01:47:43","upload_time_iso_8601":"2023-02-10T01:47:43.900608Z","url":"https://files.pythonhosted.org/packages/ea/26/e12e6d9a7462dbc84bda57feb487b725d03bcbdfeadb1fda92c8d2abfa5f/cs.fstags-20230210-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"493858341261033acb7e96379555f2a898ad946be87691522534119a655563f3","md5":"125c11f7f6a0eced0f3075f5d6617615","sha256":"ca5948f150f6e87b9303e37d2c3d08c2808a0e45b8367cbd8d17b5fe42a88224"},"downloads":-1,"filename":"cs.fstags-20230210.tar.gz","has_sig":false,"md5_digest":"125c11f7f6a0eced0f3075f5d6617615","packagetype":"sdist","python_version":"source","requires_python":null,"size":48027,"upload_time":"2023-02-10T01:47:45","upload_time_iso_8601":"2023-02-10T01:47:45.849304Z","url":"https://files.pythonhosted.org/packages/49/38/58341261033acb7e96379555f2a898ad946be87691522534119a655563f3/cs.fstags-20230210.tar.gz","yanked":false,"yanked_reason":null}],"20230211":[{"comment_text":"","digests":{"blake2b_256":"130af1ab4137f100a5627502817b05dd4d8951125366344ab740fdb52c66a816","md5":"a0977c2974092e238afe05da5801319b","sha256":"34a5f79e7f9e9a1c4a549de95fae5c4800ee3ad0812cd852cf93a8506a9e20aa"},"downloads":-1,"filename":"cs.fstags-20230211-py3-none-any.whl","has_sig":false,"md5_digest":"a0977c2974092e238afe05da5801319b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":42633,"upload_time":"2023-02-11T09:19:46","upload_time_iso_8601":"2023-02-11T09:19:46.862364Z","url":"https://files.pythonhosted.org/packages/13/0a/f1ab4137f100a5627502817b05dd4d8951125366344ab740fdb52c66a816/cs.fstags-20230211-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ea71f7861147d2b2611bfa230fe40fddb4654c82bf75cd8769ea4ecca139baa1","md5":"370ceb909304a4c2d5d9eb0e25aefd78","sha256":"2399982f9a3b93c16a78d9c2c18a959a963f43e7c1cd533d570f2af7a5f862a9"},"downloads":-1,"filename":"cs.fstags-20230211.tar.gz","has_sig":false,"md5_digest":"370ceb909304a4c2d5d9eb0e25aefd78","packagetype":"sdist","python_version":"source","requires_python":null,"size":48138,"upload_time":"2023-02-11T09:19:49","upload_time_iso_8601":"2023-02-11T09:19:49.175467Z","url":"https://files.pythonhosted.org/packages/ea/71/f7861147d2b2611bfa230fe40fddb4654c82bf75cd8769ea4ecca139baa1/cs.fstags-20230211.tar.gz","yanked":false,"yanked_reason":null}],"20230212":[{"comment_text":"","digests":{"blake2b_256":"8389fadf1dbc6dc1bdcea759abe542069263fe2c99edbebd274fd0456f437526","md5":"9b9c0458859050d4386a31b2a87dfa3c","sha256":"d6f336bed9132ca1cd3e45697a34eef9592903d0ab66aae7f5ae06ab2eb98114"},"downloads":-1,"filename":"cs.fstags-20230212-py3-none-any.whl","has_sig":false,"md5_digest":"9b9c0458859050d4386a31b2a87dfa3c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":43189,"upload_time":"2023-02-12T04:07:28","upload_time_iso_8601":"2023-02-12T04:07:28.064099Z","url":"https://files.pythonhosted.org/packages/83/89/fadf1dbc6dc1bdcea759abe542069263fe2c99edbebd274fd0456f437526/cs.fstags-20230212-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"861aff5111678ef24037008f766c200e984b06be07959c2130a5f8e3f9579293","md5":"87a2604fc5cb20b1d6b3615f1fb113c7","sha256":"ebcae0edad8983ddbd6c6d2baa29510fd7a1a23ca10e50468d75a632837df586"},"downloads":-1,"filename":"cs.fstags-20230212.tar.gz","has_sig":false,"md5_digest":"87a2604fc5cb20b1d6b3615f1fb113c7","packagetype":"sdist","python_version":"source","requires_python":null,"size":53664,"upload_time":"2023-02-12T04:07:30","upload_time_iso_8601":"2023-02-12T04:07:30.103464Z","url":"https://files.pythonhosted.org/packages/86/1a/ff5111678ef24037008f766c200e984b06be07959c2130a5f8e3f9579293/cs.fstags-20230212.tar.gz","yanked":false,"yanked_reason":null}],"20230217":[{"comment_text":"","digests":{"blake2b_256":"e90a2babfbad3e23d69d635b0ad476b64cfbb42faac2015094b893acd67beac4","md5":"837b5d759e1aa81977a7b9128bc77a23","sha256":"e2e6ce02bbb53d9b02b42a7b417fba78fa8fa5dfa4736b537aeecb479a9cc3f4"},"downloads":-1,"filename":"cs.fstags-20230217-py3-none-any.whl","has_sig":false,"md5_digest":"837b5d759e1aa81977a7b9128bc77a23","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":43248,"upload_time":"2023-02-17T00:37:07","upload_time_iso_8601":"2023-02-17T00:37:07.126195Z","url":"https://files.pythonhosted.org/packages/e9/0a/2babfbad3e23d69d635b0ad476b64cfbb42faac2015094b893acd67beac4/cs.fstags-20230217-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d947fc5607de87ecb5c36c09aae90730a5638311f54f91da81334118c02d7fac","md5":"f702b5b2dfb20b5ddce257f1d9cedd93","sha256":"0b5de35e329c66ab72ecb8fbcda82a0768ee4f2201ff7cf52d51e5fbcfced7d6"},"downloads":-1,"filename":"cs.fstags-20230217.tar.gz","has_sig":false,"md5_digest":"f702b5b2dfb20b5ddce257f1d9cedd93","packagetype":"sdist","python_version":"source","requires_python":null,"size":53906,"upload_time":"2023-02-17T00:37:09","upload_time_iso_8601":"2023-02-17T00:37:09.039167Z","url":"https://files.pythonhosted.org/packages/d9/47/fc5607de87ecb5c36c09aae90730a5638311f54f91da81334118c02d7fac/cs.fstags-20230217.tar.gz","yanked":false,"yanked_reason":null}],"20230407":[{"comment_text":"","digests":{"blake2b_256":"d8315f89bc3284b03683e9a206a72a7a8e58aee7f2fcbf24dfa18f4939f86104","md5":"8cd35b7eb6754d684abc1f6cf6118f2e","sha256":"eb28032f177c05203d5686da86de8e50a4dc8ce94d5bcb7fc4faa0b45b1ba893"},"downloads":-1,"filename":"cs.fstags-20230407-py3-none-any.whl","has_sig":false,"md5_digest":"8cd35b7eb6754d684abc1f6cf6118f2e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":43414,"upload_time":"2023-04-07T00:08:38","upload_time_iso_8601":"2023-04-07T00:08:38.362529Z","url":"https://files.pythonhosted.org/packages/d8/31/5f89bc3284b03683e9a206a72a7a8e58aee7f2fcbf24dfa18f4939f86104/cs.fstags-20230407-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a00f0c680a26619713775b8934cb869c5668ff515ed7fd9ce2883b8930604bf7","md5":"9117859b188824f13ceee4a768565338","sha256":"4f56ce55f9ccd4eba10555974c7da0602a2c0c00b7a1ea084031dab4dd00372d"},"downloads":-1,"filename":"cs.fstags-20230407.tar.gz","has_sig":false,"md5_digest":"9117859b188824f13ceee4a768565338","packagetype":"sdist","python_version":"source","requires_python":null,"size":54631,"upload_time":"2023-04-07T00:08:40","upload_time_iso_8601":"2023-04-07T00:08:40.145313Z","url":"https://files.pythonhosted.org/packages/a0/0f/0c680a26619713775b8934cb869c5668ff515ed7fd9ce2883b8930604bf7/cs.fstags-20230407.tar.gz","yanked":false,"yanked_reason":null}],"20240201":[{"comment_text":"","digests":{"blake2b_256":"98ba03a00771ac67b560cbd90f94223ba5477c291313c5accfcd1c5ccd2f97fa","md5":"0911dede5afcd702dbabaf9c7c35d44f","sha256":"3929dfe03731f77bdae4e8b0c0968ac498d9b303c18a14448ea354603c804c4f"},"downloads":-1,"filename":"cs.fstags-20240201-py3-none-any.whl","has_sig":false,"md5_digest":"0911dede5afcd702dbabaf9c7c35d44f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":34375,"upload_time":"2024-02-01T00:17:07","upload_time_iso_8601":"2024-02-01T00:17:07.617848Z","url":"https://files.pythonhosted.org/packages/98/ba/03a00771ac67b560cbd90f94223ba5477c291313c5accfcd1c5ccd2f97fa/cs.fstags-20240201-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"518bdbf343f4ef2280edfbe9f1405ff3926c4b3190926742f32507927859d837","md5":"936038bec10c34753842638c7839a4ab","sha256":"6e51e8ff8452c9e9e2b5cf9061a481ee94348f3a9f46d51dc9333f2b69dba02d"},"downloads":-1,"filename":"cs.fstags-20240201.tar.gz","has_sig":false,"md5_digest":"936038bec10c34753842638c7839a4ab","packagetype":"sdist","python_version":"source","requires_python":null,"size":46710,"upload_time":"2024-02-01T00:17:10","upload_time_iso_8601":"2024-02-01T00:17:10.589198Z","url":"https://files.pythonhosted.org/packages/51/8b/dbf343f4ef2280edfbe9f1405ff3926c4b3190926742f32507927859d837/cs.fstags-20240201.tar.gz","yanked":false,"yanked_reason":null}],"20240201.1":[{"comment_text":"","digests":{"blake2b_256":"079bec33eab984f5dcd448c440e9f0608aac2bb7477469717918db2464872b7b","md5":"7f5909762b5f4335539e53102370382f","sha256":"a511ebfe719a534e17b65ba789150bf673a358ab55106417af4b8550d07b25d0"},"downloads":-1,"filename":"cs.fstags-20240201.1-py3-none-any.whl","has_sig":false,"md5_digest":"7f5909762b5f4335539e53102370382f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":34768,"upload_time":"2024-02-01T03:12:42","upload_time_iso_8601":"2024-02-01T03:12:42.772637Z","url":"https://files.pythonhosted.org/packages/07/9b/ec33eab984f5dcd448c440e9f0608aac2bb7477469717918db2464872b7b/cs.fstags-20240201.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f321d5c2afec484a5fd4f78e756d54f0ac1815fb8304798cf078a373950d018c","md5":"9523085049f4e3e3d063560c6f1706ec","sha256":"06da4ecbda8af33298ff3b44fb60a97fcd62319cabe3a3bb739dc33592eb823d"},"downloads":-1,"filename":"cs.fstags-20240201.1.tar.gz","has_sig":false,"md5_digest":"9523085049f4e3e3d063560c6f1706ec","packagetype":"sdist","python_version":"source","requires_python":null,"size":48382,"upload_time":"2024-02-01T03:12:44","upload_time_iso_8601":"2024-02-01T03:12:44.782459Z","url":"https://files.pythonhosted.org/packages/f3/21/d5c2afec484a5fd4f78e756d54f0ac1815fb8304798cf078a373950d018c/cs.fstags-20240201.1.tar.gz","yanked":false,"yanked_reason":null}],"20240211":[{"comment_text":"","digests":{"blake2b_256":"e8f844033cd951b89af62fcc72a69cbff64845d8f7fc4f9fb2070ccb162ce3d0","md5":"b95a62f046b44c40b92fc3d3569ba203","sha256":"8b5331ecf523b72f0bd2f4ea9a37731a642873fdbb54c2dccb9254767850bb2f"},"downloads":-1,"filename":"cs.fstags-20240211-py3-none-any.whl","has_sig":false,"md5_digest":"b95a62f046b44c40b92fc3d3569ba203","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":35092,"upload_time":"2024-02-11T04:48:53","upload_time_iso_8601":"2024-02-11T04:48:53.466747Z","url":"https://files.pythonhosted.org/packages/e8/f8/44033cd951b89af62fcc72a69cbff64845d8f7fc4f9fb2070ccb162ce3d0/cs.fstags-20240211-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0aa38cebc6096853967289cd6e6158ec67f42bb8cc0bc21ee39d8d206fb0b3f5","md5":"7d8c59425a94dc9459c4b09e48bfaa57","sha256":"38993b9d760ecea8ee90903d65ce4804c7d6e4a3758d43f2879d9312593643a1"},"downloads":-1,"filename":"cs.fstags-20240211.tar.gz","has_sig":false,"md5_digest":"7d8c59425a94dc9459c4b09e48bfaa57","packagetype":"sdist","python_version":"source","requires_python":null,"size":49022,"upload_time":"2024-02-11T04:48:55","upload_time_iso_8601":"2024-02-11T04:48:55.930979Z","url":"https://files.pythonhosted.org/packages/0a/a3/8cebc6096853967289cd6e6158ec67f42bb8cc0bc21ee39d8d206fb0b3f5/cs.fstags-20240211.tar.gz","yanked":false,"yanked_reason":null}],"20240316":[{"comment_text":"","digests":{"blake2b_256":"726021fe13bca374007b0cd23811958c97667bdd90557c187cb70f7d0355b1dc","md5":"2ce6c7ce72e80835b6ec237b4dea7409","sha256":"a62b6b80f6147c819e63e33cbae06aca01e01752d30c09922df658ada644b9c5"},"downloads":-1,"filename":"cs.fstags-20240316-py3-none-any.whl","has_sig":false,"md5_digest":"2ce6c7ce72e80835b6ec237b4dea7409","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":26088,"upload_time":"2024-03-16T06:49:21","upload_time_iso_8601":"2024-03-16T06:49:21.030358Z","url":"https://files.pythonhosted.org/packages/72/60/21fe13bca374007b0cd23811958c97667bdd90557c187cb70f7d0355b1dc/cs.fstags-20240316-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a3e6f0dcfeb965beaa59e4ed49b109e287a634f0abae4d9305f3ea79fb441f83","md5":"650161d333328ab0ee1a7a46bd5a49cb","sha256":"9a988b62075d4bee5794ff650935b39a28e98972da183b46a5e5b8957d40d21a"},"downloads":-1,"filename":"cs.fstags-20240316.tar.gz","has_sig":false,"md5_digest":"650161d333328ab0ee1a7a46bd5a49cb","packagetype":"sdist","python_version":"source","requires_python":null,"size":52879,"upload_time":"2024-03-16T06:49:23","upload_time_iso_8601":"2024-03-16T06:49:23.652202Z","url":"https://files.pythonhosted.org/packages/a3/e6/f0dcfeb965beaa59e4ed49b109e287a634f0abae4d9305f3ea79fb441f83/cs.fstags-20240316.tar.gz","yanked":false,"yanked_reason":null}],"20240412":[{"comment_text":"","digests":{"blake2b_256":"caf8cf919d59bba6ddaf0f333808c2790ce6f644b3e64a3c9f42d491ffef91d6","md5":"6d94283c275cd87ede39d063de96ad77","sha256":"98d08a52ac4af3a670a432dacdf83ddd67d507e05a5d33f70821742906fca83e"},"downloads":-1,"filename":"cs.fstags-20240412-py3-none-any.whl","has_sig":false,"md5_digest":"6d94283c275cd87ede39d063de96ad77","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":29459,"upload_time":"2024-04-12T05:44:57","upload_time_iso_8601":"2024-04-12T05:44:57.764717Z","url":"https://files.pythonhosted.org/packages/ca/f8/cf919d59bba6ddaf0f333808c2790ce6f644b3e64a3c9f42d491ffef91d6/cs.fstags-20240412-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d2da2cfc963c7b8cc1aaeaa80dab1f8432e2eab8fc684f0e18ba3500d5bd6d13","md5":"2276143ca03a0ad7dc21c638901980d4","sha256":"e2a924f735ac8da7abbebf064f8b9cd526f3bcd324eaa06afb5da06c8059d165"},"downloads":-1,"filename":"cs.fstags-20240412.tar.gz","has_sig":false,"md5_digest":"2276143ca03a0ad7dc21c638901980d4","packagetype":"sdist","python_version":"source","requires_python":null,"size":65030,"upload_time":"2024-04-12T05:45:01","upload_time_iso_8601":"2024-04-12T05:45:01.809659Z","url":"https://files.pythonhosted.org/packages/d2/da/2cfc963c7b8cc1aaeaa80dab1f8432e2eab8fc684f0e18ba3500d5bd6d13/cs.fstags-20240412.tar.gz","yanked":false,"yanked_reason":null}],"20240422":[{"comment_text":"","digests":{"blake2b_256":"56c2ab503c4b950e8533d2437bc7ec1df75d823809a0898527275a7c840c34d1","md5":"9a209032eadac91d039a503ce5583022","sha256":"f428e3b3dd18cb818ff0f71c2da729b66a3f6795983598c1f2cae43afcce3e91"},"downloads":-1,"filename":"cs.fstags-20240422-py3-none-any.whl","has_sig":false,"md5_digest":"9a209032eadac91d039a503ce5583022","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":29229,"upload_time":"2024-04-22T03:03:40","upload_time_iso_8601":"2024-04-22T03:03:40.718619Z","url":"https://files.pythonhosted.org/packages/56/c2/ab503c4b950e8533d2437bc7ec1df75d823809a0898527275a7c840c34d1/cs.fstags-20240422-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c2ce2d7791f172f5bcd4f4dd12821ba2cd84502e88f3f023ae249636b5aee0d0","md5":"1b82934e486331d4c01b4a5d48a6f086","sha256":"35e0399b07e75ecf0d0b5c38c7bfc387507c406cb674741e5dc0bf5226fa7a18"},"downloads":-1,"filename":"cs.fstags-20240422.tar.gz","has_sig":false,"md5_digest":"1b82934e486331d4c01b4a5d48a6f086","packagetype":"sdist","python_version":"source","requires_python":null,"size":65111,"upload_time":"2024-04-22T03:03:42","upload_time_iso_8601":"2024-04-22T03:03:42.896689Z","url":"https://files.pythonhosted.org/packages/c2/ce/2d7791f172f5bcd4f4dd12821ba2cd84502e88f3f023ae249636b5aee0d0/cs.fstags-20240422.tar.gz","yanked":false,"yanked_reason":null}],"20240709":[{"comment_text":"","digests":{"blake2b_256":"d55bc35a74b5b8f679eedf5c6943f8b34e28796244e42771fb2639ec735e7f9f","md5":"10dbe567a36556fadf6f508521b4b7b1","sha256":"fd015d84d0688c6063e5df93edac80bfe3d6427ba91cd26d5ce54ff4b4bfd3d2"},"downloads":-1,"filename":"cs.fstags-20240709-py3-none-any.whl","has_sig":false,"md5_digest":"10dbe567a36556fadf6f508521b4b7b1","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":30888,"upload_time":"2024-07-09T01:11:55","upload_time_iso_8601":"2024-07-09T01:11:55.268927Z","url":"https://files.pythonhosted.org/packages/d5/5b/c35a74b5b8f679eedf5c6943f8b34e28796244e42771fb2639ec735e7f9f/cs.fstags-20240709-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0ba63f2d18f219f85fff2e1562dfb1b3ac29040c4b7e53fbf7e75186f743ac61","md5":"f21fae6ec6b1554209d54da11e34d081","sha256":"3b8a5923b161e0c6b35688dfe303396d3a1dd0673587089ad1a5a499a00a6b71"},"downloads":-1,"filename":"cs_fstags-20240709.tar.gz","has_sig":false,"md5_digest":"f21fae6ec6b1554209d54da11e34d081","packagetype":"sdist","python_version":"source","requires_python":null,"size":68930,"upload_time":"2024-07-09T01:11:57","upload_time_iso_8601":"2024-07-09T01:11:57.770452Z","url":"https://files.pythonhosted.org/packages/0b/a6/3f2d18f219f85fff2e1562dfb1b3ac29040c4b7e53fbf7e75186f743ac61/cs_fstags-20240709.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"d55bc35a74b5b8f679eedf5c6943f8b34e28796244e42771fb2639ec735e7f9f","md5":"10dbe567a36556fadf6f508521b4b7b1","sha256":"fd015d84d0688c6063e5df93edac80bfe3d6427ba91cd26d5ce54ff4b4bfd3d2"},"downloads":-1,"filename":"cs.fstags-20240709-py3-none-any.whl","has_sig":false,"md5_digest":"10dbe567a36556fadf6f508521b4b7b1","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":30888,"upload_time":"2024-07-09T01:11:55","upload_time_iso_8601":"2024-07-09T01:11:55.268927Z","url":"https://files.pythonhosted.org/packages/d5/5b/c35a74b5b8f679eedf5c6943f8b34e28796244e42771fb2639ec735e7f9f/cs.fstags-20240709-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0ba63f2d18f219f85fff2e1562dfb1b3ac29040c4b7e53fbf7e75186f743ac61","md5":"f21fae6ec6b1554209d54da11e34d081","sha256":"3b8a5923b161e0c6b35688dfe303396d3a1dd0673587089ad1a5a499a00a6b71"},"downloads":-1,"filename":"cs_fstags-20240709.tar.gz","has_sig":false,"md5_digest":"f21fae6ec6b1554209d54da11e34d081","packagetype":"sdist","python_version":"source","requires_python":null,"size":68930,"upload_time":"2024-07-09T01:11:57","upload_time_iso_8601":"2024-07-09T01:11:57.770452Z","url":"https://files.pythonhosted.org/packages/0b/a6/3f2d18f219f85fff2e1562dfb1b3ac29040c4b7e53fbf7e75186f743ac61/cs_fstags-20240709.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
