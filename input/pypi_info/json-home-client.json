{"info":{"author":"Peter Linss","author_email":"pypi@linss.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python :: 3"],"description":"json_home_client\n================\n\nClient class for calling http+json APIs in Python. Requires Python 3.6+.\n\nSupports json home pages per:\nhttps://tools.ietf.org/html/draft-nottingham-json-home-06\n\n\nInstallation\n------------\nStandard python package installation:\n\n       pip install json-home-client\n\n\nUsage\n-----\nImport the json_home_client package and instantiate a client.\n\n       from json_home_client import Client\n\n       api = Client('http://api.example.com')\n\nCall APIs:\n\n       result = api.call('foo', var1=arg1, var2=arg2)\n       print result.data\n\n\nClient class\n---------------\n**class json_home_client.Client(base_url: str, version: str = None, username: str = None, password: str = None, user_agent: str = None,\n                                sni_hostname: str = None, client_cert_path: str = None, client_key_path: str = None, ca_cert_path: str = None)**\n\nThe Client constructor takes the base URL for the api, an optional request version identifier, username and password.\nIt also allows a custom sni_hostname (useful when the url uses an ip address), client certificate and key, \nand a custom CA file path.\n\n**Client.base_url: str**\n\nThe base URL set in the constructor, read-only.\n\n**Client.default_version: Optional[str]**\n\nThe default version information for accept headers.\n\n**Client.default_accept: MimeType**\n\nThe default accept types for API calls.\n\n**Client.username: Optional[str]**\n\nUsername to send in HTTP authentication header.\n\n**Client.password: Optional[str]**\n\nPassword to send in HTTP authentication header.\n\n**Client.user_agent: str**\n\nThe User-Agent string to send in requests.\n\n**Client.resource_names: Sequence[str]**\n\nA list of available API resource names.\n\n**Client.resource(name: str) -> Resource**\n\nGet a named Resource.\n\n**Client.add_resource(name: str, url: str) -> None**\n\nAdd a URL resource.\n\n**Client.set_version(name: str, version: str = None) -> None**\n\nSet the request version identifier for a specific resource. If not set, the default version identifer will be used.\n\n**Client.set_accept(name: str, content_type: Union[MimeType, Sequence[MimeType]]) -> None**\n\nSet the requested Content-Type(s) for a specific resource. If not set, 'application/json' will be used.\n\n**Client.get(name: str, [kwargs]) -> Optional[Response]**\n\nPerform an HTTP GET on the named resource. Any named arguments supplied may be used in computing the actual URL to call. Returns a Response or None if the resource name is not known.\n\n**Client.post(name: str, payload: bytes, content_type: MimeType = None, [kwargs]) -> Optional[Response]**\n\nPerform an HTTP POST on the named resource. Any named arguments supplied may be used in computing the actual URL to call. Returns a Response or None if the resource name is not known.\n\n**Client.post_form(name: str, payload: Mapping[str, Any] = None, [kwargs]) -> Optional[Response]**\n\nPerform an HTTP POST on the named resource. The payload, if present, will be URL form encoded. Any named arguments supplied may be used in computing the actual URL to call. Returns a Response or None if the resource name is not known.\n\n**Client.post_json(name: str, payload: Any = None, [kwargs]) -> Optional[Response]**\n\nPerform an HTTP POST on the named resource. The payload, if present, will be converted to JSON. Any named arguments supplied may be used in computing the actual URL to call. Returns a Response or None if the resource name is not known.\n\n**Client.put(name: str, payload = None, content_type: MimeType = None, [kwargs]) -> Optional[Response]**\n\nPerform an HTTP PUT on the named resource. The payload, if present, will be sent to the server using the provided Content-Type. The payload must be pre-encoded and will not be processed by the Client. Any named arguments supplied may be used in computing the actual URL to call. Returns a Response or None if the resource name is not known.\n\n**Client.patch(name: str, patch: Mapping[str, Any] = None, content_type: MimeType = MimeType.JSON_PATCH, [kwargs]) -> Optional[Response]**\n\nPerform an HTTP PATCH on the named resource. The patch, if present, will be encoded in JSON and sent to the server as a 'application/json-patch'. Any named arguments supplied may be used in computing the actual URL to call. Returns a Response or None if the resource name is not known.\n\n**Client.delete(name: str, [kwargs]) -> Optional[Response]**\n\nPerform an HTTP DELETE on the named resource. Any named arguments supplied may be used in computing the actual URL to call. Returns a Response or None if the resource name is not known.\n\n\nResponse class\n-----------------\n**Response.status_code: int**\n\nThe HTTP status code of the response.\n\n**Response.headers: Mapping[str, Any]**\n\nA dict of HTTP response headers.\n\n**Response.conten_type: MimeType**\n\nThe Content-Type of the response.\n\n**Response.encoding: str**\n\nThe encoding of the response.\n\n**Response.data: Any**\n\nThe body of the response. If the contentType is json, the data will be decoded into native objects.\n\n\nResource class\n-----------------\nDescribes the properties of an available API resource.\n\n**Resource.template**\n\nThe URITemplate used when calling the resource.\n\n**Resource.variables**\n\nA dict of variables that may be passed to the resource. Keys are variable names, values are the URL identifier of the variable, if available (see https://tools.ietf.org/html/draft-nottingham-json-home-06#section-4.1 ).\n\n**Resource.hints**\n\nAn Hints object describing any hints for the resource (see https://tools.ietf.org/html/draft-nottingham-json-home-06#section-5 ).\n\n\nHints class\n--------------\n**Hints.http_methods: Sequence[str]**\n\nA list of HTTP methods the resource may be called with.\n\n**Hints.formats: Mapping[str, Sequence[MimeType]]**\n\nA dict of formats available for each HTTP method. Keys are HTTP methods, values are a list of Content-Types available.\n\n**Hints.ranges: Optional[Sequence[str]]**\n\nA list of range specifiers.\n\n**Hints.preferences: Optional[Sequence[str]]**\n\nA list of preferences supported by the resource.\n\n**Hints.preconditions: Optional[Sequence[str]]**\n\nA list of preconditions required by the resource.\n\n**Hints.auth: Optional[Sequence[Mapping[str, str]]]**\n\nA list of authorization schemes accepted by the resource.\n\n**Hints.docs: Optional[str]**\n\nA URL for documentation for the resource.\n\n**Hints.status: Optional[str]**\n\nThe status of the resource.\n\n\nMimeType class\n--------------\n**MimeType(mime_type: str = None, type: str = None, structure: str = None, subtype: str = None)**\n\nConstructor, accepts a mime_type, which will be parsed, or individual components.\n\n**MimeType.type: str**\n\nThe primary type, e.g. \"application/json\" -> \"application\"\n\n**MimeType.structure: Optional[str]**\n\nThe structure, e.g. \"application/json\" -> \"json\", \"application/vnd.app.v1+json\" -> \"json\"\n\n**MimeType.subtype: Optional[str]**\n\nThe subtype, e.g. \"application/vnd.app.v1+json\" -> \"vnd.app.v1\"\n\n\nNotes\n-----\nResource names may be absolute URLs or relative to the base URL of the API.\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/plinss/json_home_client/","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"json-home-client","package_url":"https://pypi.org/project/json-home-client/","platform":"","project_url":"https://pypi.org/project/json-home-client/","project_urls":{"Homepage":"https://github.com/plinss/json_home_client/"},"provides_extra":null,"release_url":"https://pypi.org/project/json-home-client/1.1.1/","requires_dist":["uri-template","mypy ; extra == 'dev'","flake8 ; extra == 'dev'","flake8-import-order ; extra == 'dev'","flake8-annotations ; extra == 'dev'","flake8-type-annotations ; extra == 'dev'","flake8-docstrings ; extra == 'dev'","pep8-naming ; extra == 'dev'"],"requires_python":">=3.6","summary":"Client for REST APIs using JSON Home pages per https://tools.ietf.org/html/draft-nottingham-json-home-06","version":"1.1.1","yanked":false,"yanked_reason":null},"last_serial":7002758,"releases":{"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"933abaa7b5f58bd8d4aeb6219076cb0921011a7b6ae8dcb7b998c09bfba0f4de","md5":"2e901fb7b151597198c0460bbefa7fa3","sha256":"1f10f24b60d4f7fb84f2d13c25622ba85b5947decf551b970a8ffe9703884ca1"},"downloads":-1,"filename":"json_home_client-1.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"2e901fb7b151597198c0460bbefa7fa3","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":8703,"upload_time":"2020-02-16T23:24:54","upload_time_iso_8601":"2020-02-16T23:24:54.009527Z","url":"https://files.pythonhosted.org/packages/93/3a/baa7b5f58bd8d4aeb6219076cb0921011a7b6ae8dcb7b998c09bfba0f4de/json_home_client-1.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"5a56d6e85c75768f01eedea5a5da10dd483a7e8337375235295033119e57c20f","md5":"4a850d6cb9bb5d300d4062320ef98aa7","sha256":"d3ac269d462df2f4a47cd441390358c42a3d78d136418bdee9f1f4a4330fceb7"},"downloads":-1,"filename":"json_home_client-1.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"4a850d6cb9bb5d300d4062320ef98aa7","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":9534,"upload_time":"2020-04-11T17:01:33","upload_time_iso_8601":"2020-04-11T17:01:33.165643Z","url":"https://files.pythonhosted.org/packages/5a/56/d6e85c75768f01eedea5a5da10dd483a7e8337375235295033119e57c20f/json_home_client-1.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"fd92df18b7eee481d53f951adad8c308d680766e8636c0a1a06112f05fb574cf","md5":"8548106248590a5f637470f0e451e0f2","sha256":"fb65875711874a7c53f2d0c39b02629073127e4e33f102593bd7c00a55124ebe"},"downloads":-1,"filename":"json_home_client-1.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"8548106248590a5f637470f0e451e0f2","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":9657,"upload_time":"2020-04-12T03:33:44","upload_time_iso_8601":"2020-04-12T03:33:44.865851Z","url":"https://files.pythonhosted.org/packages/fd/92/df18b7eee481d53f951adad8c308d680766e8636c0a1a06112f05fb574cf/json_home_client-1.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"fd92df18b7eee481d53f951adad8c308d680766e8636c0a1a06112f05fb574cf","md5":"8548106248590a5f637470f0e451e0f2","sha256":"fb65875711874a7c53f2d0c39b02629073127e4e33f102593bd7c00a55124ebe"},"downloads":-1,"filename":"json_home_client-1.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"8548106248590a5f637470f0e451e0f2","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":9657,"upload_time":"2020-04-12T03:33:44","upload_time_iso_8601":"2020-04-12T03:33:44.865851Z","url":"https://files.pythonhosted.org/packages/fd/92/df18b7eee481d53f951adad8c308d680766e8636c0a1a06112f05fb574cf/json_home_client-1.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
