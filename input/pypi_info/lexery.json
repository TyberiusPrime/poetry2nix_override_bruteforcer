{"info":{"author":"Marko Ristin","author_email":"marko@ristin.ch","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description":"Lexery\n======\n\n.. image:: https://github.com/Parquery/lexery/actions/workflows/ci.yml/badge.svg\n    :target: https://github.com/Parquery/lexery/actions/workflows/ci.yml\n    :alt: Continuous integration\n\n.. image:: https://coveralls.io/repos/github/Parquery/lexery/badge.svg?branch=master\n    :target: https://coveralls.io/github/Parquery/lexery?branch=master\n    :alt: Coverage\n\n.. image:: https://badge.fury.io/py/lexery.svg\n    :target: https://pypi.org/project/lexery/\n    :alt: PyPI - version\n\n.. image:: https://img.shields.io/pypi/pyversions/lexery.svg\n    :target: https://pypi.org/project/lexery/\n    :alt: PyPI - Python Version\n\nA simple lexer based on regular expressions.\n\nInspired by https://eli.thegreenplace.net/2013/06/25/regex-based-lexical-analysis-in-python-and-javascript\n\nUsage\n=====\nYou define the lexing rules and lexery matches them iteratively as a look-up:\n\n.. code-block:: python\n\n    >>> import lexery\n    >>> import re\n    >>> text = 'crop \\t   ( 20, 30, 40, 10 ) ;'\n    >>>\n    >>> lexer = lexery.Lexer(\n    ...     rules=[\n    ...         lexery.Rule(identifier='identifier',\n    ...             pattern=re.compile(r'[a-zA-Z_][a-zA-Z_]*')),\n    ...         lexery.Rule(identifier='lpar', pattern=re.compile(r'\\(')),\n    ...         lexery.Rule(identifier='number', pattern=re.compile(r'[1-9][0-9]*')),\n    ...         lexery.Rule(identifier='rpar', pattern=re.compile(r'\\)')),\n    ...         lexery.Rule(identifier='comma', pattern=re.compile(r',')),\n    ...         lexery.Rule(identifier='semi', pattern=re.compile(r';'))\n    ...     ],\n    ...     skip_whitespace=True)\n    >>> tokens = lexer.lex(text=text)\n    >>> assert tokens == [[\n    ...     lexery.Token('identifier', 'crop', 0, 0), \n    ...     lexery.Token('lpar', '(', 9, 0),\n    ...     lexery.Token('number', '20', 11, 0),\n    ...     lexery.Token('comma', ',', 13, 0),\n    ...     lexery.Token('number', '30', 15, 0),\n    ...     lexery.Token('comma', ',', 17, 0),\n    ...     lexery.Token('number', '40', 19, 0),\n    ...     lexery.Token('comma', ',', 21, 0),\n    ...     lexery.Token('number', '10', 23, 0),\n    ...     lexery.Token('rpar', ')', 26, 0),\n    ...     lexery.Token('semi', ';', 28, 0)]]\n\nMind that if a part of the text can not be matched, a ``lexery.Error`` is raised:\n\n.. code-block:: python\n\n    >>> import lexery\n    >>> import re\n    >>> text = 'some-identifier ( 23 )'\n    >>>\n    >>> lexer = lexery.Lexer(\n    ...     rules=[\n    ...         lexery.Rule(identifier='identifier', pattern=re.compile(r'[a-zA-Z_][a-zA-Z_]*')),\n    ...         lexery.Rule(identifier='number', pattern=re.compile(r'[1-9][0-9]*')),\n    ...     ],\n    ...     skip_whitespace=True)\n    >>> tokens = lexer.lex(text=text)\n    Traceback (most recent call last):\n    ...\n    lexery.Error: Unmatched text at line 0 and position 4:\n    some-identifier ( 23 )\n        ^\n\nIf you specify an ``unmatched_identifier``, all the unmatched characters are accumulated in tokens with that identifier:\n\n.. code-block:: python\n\n    >>> import lexery\n    >>> import re\n    >>> text = 'some-identifier ( 23 )-'\n    >>>\n    >>> lexer = lexery.Lexer(\n    ...     rules=[\n    ...         lexery.Rule(identifier='identifier', pattern=re.compile(r'[a-zA-Z_][a-zA-Z_]*')),\n    ...         lexery.Rule(identifier='number', pattern=re.compile(r'[1-9][0-9]*')),\n    ...     ],\n    ...     skip_whitespace=True,\n    ...     unmatched_identifier='unmatched')\n    >>> tokens = lexer.lex(text=text)\n    >>> assert tokens == [[\n    ...     lexery.Token('identifier', 'some', 0, 0),\n    ...    lexery.Token('unmatched', '-', 4, 0),\n    ...    lexery.Token('identifier', 'identifier', 5, 0),\n    ...    lexery.Token('unmatched', '(', 16, 0),\n    ...    lexery.Token('number', '23', 18, 0),\n    ...    lexery.Token('unmatched', ')-', 21, 0)]]\n\n\nInstallation\n============\n\n* Install lexery with pip:\n\n.. code-block:: bash\n\n    pip3 install lexery\n\nDevelopment\n===========\n\n* Check out the repository.\n\n* In the repository root, create the virtual environment:\n\n.. code-block:: bash\n\n    python3 -m venv venv3\n\n* Activate the virtual environment:\n\n.. code-block:: bash\n\n    source venv3/bin/activate\n\n* Install the development dependencies:\n\n.. code-block:: bash\n\n    pip3 install -e .[dev]\n\nPre-commit Checks\n-----------------\nWe provide a set of pre-commit checks that run unit tests, lint and check code for formatting.\n\nNamely, we use:\n\n* `yapf <https://github.com/google/yapf>`_ to check the formatting.\n* The style of the docstrings is checked with `pydocstyle <https://github.com/PyCQA/pydocstyle>`_.\n* Static type analysis is performed with `mypy <http://mypy-lang.org/>`_.\n* Various linter checks are done with `pylint <https://www.pylint.org/>`_.\n\nRun the pre-commit checks locally from an activated virtual environment with development dependencies:\n\n.. code-block:: bash\n\n    ./precommit.py\n\n* The pre-commit script can also automatically format the code:\n\n.. code-block:: bash\n\n    ./precommit.py  --overwrite\n\n\nVersioning\n==========\nWe follow `Semantic Versioning <http://semver.org/spec/v1.0.0.html>`_. The version X.Y.Z indicates:\n\n* X is the major version (backward-incompatible),\n* Y is the minor version (backward-compatible), and\n* Z is the patch version (backward-compatible bug fix).\n","description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/Parquery/lexery","keywords":"lexer regexp regular expression","license":"License :: OSI Approved :: MIT License","maintainer":"","maintainer_email":"","name":"lexery","package_url":"https://pypi.org/project/lexery/","platform":null,"project_url":"https://pypi.org/project/lexery/","project_urls":{"Homepage":"https://github.com/Parquery/lexery"},"provides_extra":null,"release_url":"https://pypi.org/project/lexery/1.2.0/","requires_dist":null,"requires_python":"","summary":"A simple lexer based on regular expressions","version":"1.2.0","yanked":false,"yanked_reason":null},"last_serial":18220005,"releases":{"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"531ca31acff3cc94bc73b5da77b454bf5131a990e6267b3c7b1116608730cb64","md5":"7cd9f9aec65ebc89fcb6ad7d7b1b0b84","sha256":"a9fb9b03dbe27712cfa7edca6c5928ede11458e928ac75068aeec0f56c6b7173"},"downloads":-1,"filename":"lexery-1.0.0.tar.gz","has_sig":false,"md5_digest":"7cd9f9aec65ebc89fcb6ad7d7b1b0b84","packagetype":"sdist","python_version":"source","requires_python":null,"size":2396,"upload_time":"2018-02-22T05:53:55","upload_time_iso_8601":"2018-02-22T05:53:55.771561Z","url":"https://files.pythonhosted.org/packages/53/1c/a31acff3cc94bc73b5da77b454bf5131a990e6267b3c7b1116608730cb64/lexery-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"8169db6395a4b263d6e44095e50b3b8e3ba90cf6e9504e8baffb43a82d66d371","md5":"1ea31fb6d1a01598377d472a2603ce3b","sha256":"54ccddb3e706ed95d230c3bb8e80d9e104dc9ab7a4e103d76f2de83c4db06c59"},"downloads":-1,"filename":"lexery-1.0.1.tar.gz","has_sig":false,"md5_digest":"1ea31fb6d1a01598377d472a2603ce3b","packagetype":"sdist","python_version":"source","requires_python":null,"size":2777,"upload_time":"2018-03-24T04:38:39","upload_time_iso_8601":"2018-03-24T04:38:39.696315Z","url":"https://files.pythonhosted.org/packages/81/69/db6395a4b263d6e44095e50b3b8e3ba90cf6e9504e8baffb43a82d66d371/lexery-1.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.0.2":[{"comment_text":"","digests":{"blake2b_256":"b0371bb904586fd3077553abb08cbd4070cff510cc569243aeefeb564b9362dc","md5":"1e40ea991ca17f127e8a5f63b5ad8694","sha256":"1fa5373193e80d3c0839e46913b6f328310cef6eaf7c1c467579b24aeb18f7ae"},"downloads":-1,"filename":"lexery-1.0.2.tar.gz","has_sig":false,"md5_digest":"1e40ea991ca17f127e8a5f63b5ad8694","packagetype":"sdist","python_version":"source","requires_python":null,"size":2965,"upload_time":"2018-08-27T13:54:14","upload_time_iso_8601":"2018-08-27T13:54:14.423296Z","url":"https://files.pythonhosted.org/packages/b0/37/1bb904586fd3077553abb08cbd4070cff510cc569243aeefeb564b9362dc/lexery-1.0.2.tar.gz","yanked":false,"yanked_reason":null}],"1.0.3":[{"comment_text":"","digests":{"blake2b_256":"e7b4e74c6df8a0d2fa891873d63198cead3fa83bbf16ab493608105f85ad4746","md5":"b2e43c942983bd1ea37c16e991eff930","sha256":"a5b3cd7b55dafb30011adce0d3bf2deba6b9ab3bea0cf72882f1764bb0a0a6e1"},"downloads":-1,"filename":"lexery-1.0.3.tar.gz","has_sig":false,"md5_digest":"b2e43c942983bd1ea37c16e991eff930","packagetype":"sdist","python_version":"source","requires_python":null,"size":4348,"upload_time":"2018-08-27T15:31:03","upload_time_iso_8601":"2018-08-27T15:31:03.760302Z","url":"https://files.pythonhosted.org/packages/e7/b4/e74c6df8a0d2fa891873d63198cead3fa83bbf16ab493608105f85ad4746/lexery-1.0.3.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"96885bc1a8dfaa0bdcfdd3e3150f78f7f8384b0e65ac8a78c8d1f40d2fad6518","md5":"13e5caace775d7db092a6dc30da86c60","sha256":"361c7f2a44f79a884549bceb9f2190d587661d559e4c9bec37bc8678a61e7ec0"},"downloads":-1,"filename":"lexery-1.1.0.tar.gz","has_sig":false,"md5_digest":"13e5caace775d7db092a6dc30da86c60","packagetype":"sdist","python_version":"source","requires_python":null,"size":5000,"upload_time":"2018-08-27T16:17:29","upload_time_iso_8601":"2018-08-27T16:17:29.765109Z","url":"https://files.pythonhosted.org/packages/96/88/5bc1a8dfaa0bdcfdd3e3150f78f7f8384b0e65ac8a78c8d1f40d2fad6518/lexery-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"238b6e07516fe72766c8825c63c34532c56d4f6a0a199c52128657f3aec42611","md5":"51ab3d794aad70ce60b2ee846a7dc265","sha256":"fd5aea8e7d18798e2df2765e5a8dc7706652e09831f66cd3405c0ccc8fd17b6c"},"downloads":-1,"filename":"lexery-1.1.1.tar.gz","has_sig":false,"md5_digest":"51ab3d794aad70ce60b2ee846a7dc265","packagetype":"sdist","python_version":"source","requires_python":null,"size":5423,"upload_time":"2020-10-10T18:25:42","upload_time_iso_8601":"2020-10-10T18:25:42.658383Z","url":"https://files.pythonhosted.org/packages/23/8b/6e07516fe72766c8825c63c34532c56d4f6a0a199c52128657f3aec42611/lexery-1.1.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.2":[{"comment_text":"","digests":{"blake2b_256":"f31fba9b4c70d7d7cbfc636e8086f1ad9b4afdd019cdcd2b90694babc7590a76","md5":"d3ab42f61ae398fa8a5b9372ebdd0862","sha256":"43e903c911be7621bc42cdc958f7e98716b824f23e284c3147a69b09799085cc"},"downloads":-1,"filename":"lexery-1.1.2.tar.gz","has_sig":false,"md5_digest":"d3ab42f61ae398fa8a5b9372ebdd0862","packagetype":"sdist","python_version":"source","requires_python":null,"size":5094,"upload_time":"2022-04-03T08:13:31","upload_time_iso_8601":"2022-04-03T08:13:31.207100Z","url":"https://files.pythonhosted.org/packages/f3/1f/ba9b4c70d7d7cbfc636e8086f1ad9b4afdd019cdcd2b90694babc7590a76/lexery-1.1.2.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"959433271bf8cdd0de9fb8c210e95b472d2978f48f444bce795cf2e08db04b2c","md5":"0f10c9ba9f913cd7868118f4766496ae","sha256":"6acc7af2b33c788dffd461004e441c87fc3d5d2cc5b3f8dc031c522201910068"},"downloads":-1,"filename":"lexery-1.2.0.tar.gz","has_sig":false,"md5_digest":"0f10c9ba9f913cd7868118f4766496ae","packagetype":"sdist","python_version":"source","requires_python":null,"size":5254,"upload_time":"2023-05-23T21:27:43","upload_time_iso_8601":"2023-05-23T21:27:43.667157Z","url":"https://files.pythonhosted.org/packages/95/94/33271bf8cdd0de9fb8c210e95b472d2978f48f444bce795cf2e08db04b2c/lexery-1.2.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"959433271bf8cdd0de9fb8c210e95b472d2978f48f444bce795cf2e08db04b2c","md5":"0f10c9ba9f913cd7868118f4766496ae","sha256":"6acc7af2b33c788dffd461004e441c87fc3d5d2cc5b3f8dc031c522201910068"},"downloads":-1,"filename":"lexery-1.2.0.tar.gz","has_sig":false,"md5_digest":"0f10c9ba9f913cd7868118f4766496ae","packagetype":"sdist","python_version":"source","requires_python":null,"size":5254,"upload_time":"2023-05-23T21:27:43","upload_time_iso_8601":"2023-05-23T21:27:43.667157Z","url":"https://files.pythonhosted.org/packages/95/94/33271bf8cdd0de9fb8c210e95b472d2978f48f444bce795cf2e08db04b2c/lexery-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
