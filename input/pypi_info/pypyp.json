{"info":{"author":"Shantanu Jain","author_email":"hauntsaninja@gmail.com","bugtrack_url":null,"classifiers":["Environment :: Console","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python :: 3","Topic :: Software Development","Topic :: Utilities"],"description":"# pyp\n\n[![Build Status](https://github.com/hauntsaninja/pyp/actions/workflows/tests.yml/badge.svg?branch=master)](https://github.com/hauntsaninja/pyp/actions/workflows/tests.yml)\n[![Coverage Status](https://coveralls.io/repos/github/hauntsaninja/pyp/badge.svg?branch=master)](https://coveralls.io/github/hauntsaninja/pyp?branch=master)\n[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n\nEasily run Python at the shell! Magical, but never mysterious.\n\n## Installation\n\nRun `pip install pypyp` <sup>(note the extra \"yp\"!)</sup>\n\npyp requires Python 3.8 or above.\n\n## How it works\n\npyp will statically analyse the input code to detect undefined variables. Based on what it finds,\nit will proceed to transform the AST of the input code as needed. We then compile and execute the\nresult, or if using `--explain`, unparse the AST back to source code.\n\n## Examples\n\nThis section will walk you through the details of using pyp, and hopefully replace your needs\nfor many common shell utilities. For a cheatsheet / tldr, run `pyp --help`.\n\n#### pyp can easily be used to apply Python code to each line in the input.\nJust use one of the magic variables `x`, `l` or `line` to refer to the current line.\n\n```sh\n# pyp like cut\nls | pyp 'x[:3]'\nps x | pyp 'line.split()[4]'\n```\n\n#### pyp can be used to easily apply Python code to the entire input as well.\nUse the magic variable `lines` for a list of rstripped lines or `stdin` for `sys.stdin`.\n\n```sh\n# pyp like wc -c\ncat /usr/share/dict/words | pyp 'len(stdin.read())'\n\n# pyp like awk\nseq 1 5 | pyp 'sum(map(int, lines))'\n```\n\n#### pyp will automatically import modules you use.\n\n```sh\n# pyp like sh\necho echo echo | pyp 'subprocess.run(lines[0], shell=True); pass'\n\n# pyp like jq\ncurl -s 'https://api.github.com/repos/hauntsaninja/pyp/commits?per_page=1' | pyp 'json.load(stdin)[0][\"commit\"][\"author\"]'\n\n# pyp like egrep\ncat /usr/share/dict/words | pyp 'x if re.search(\"(p|m)yth\", x) else None'\n```\n\nFor `collections`, `math`, `itertools`, `pathlib.Path`, `pprint.pp`, pyp will figure it out even\nif you don't use the qualified name.\n```sh\n# pyp like bc\npyp 'sqrt(5)'\n\n# pyp like ${x##*.}\nls | pyp 'Path(x).suffix'\n```\n\n#### pyp can give you access to loop indices using the magic variables `i`, `idx` or `index`.\n\n```sh\n# pyp like line numbers\ncat setup.py | pyp 'f\"{idx+1: >3} {x}\"'\n```\n\n#### Note so far you haven't had to call `print`!\nBy default, pyp will print the last expression in your code â€” except if it evaluates to `None`\n(or the last statement is `pass`).\nAnd you can always explicitly call `print` yourself, in which case pyp will stay out of your way.\n\n```sh\n# pyp like grep\ncat /usr/share/dict/words | pyp 'x if \"python\" in x else None'\ncat /usr/share/dict/words | pyp 'if \"python\" in x: print(x); \"this will not be printed\"'\n```\n\n#### pyp will attempt to intelligently print dicts and iterables.\nThis makes the output of pyp easier to compose with shell tools.\nAgain, explicit printing will stop this magic, but pyp makes the function `pypprint` available if\nyou do want to explicitly opt back in.\n\n```sh\n# pyp like tail\nls | pyp 'lines[-10:]'\n\n# pyp like sort\nls | pyp 'sorted(lines)'\nls | pyp 'print(f\"Sorting {len(lines)} lines\"); pypprint(sorted(lines))'\n\n# pyp like sort | uniq\nls | pyp 'sorted(set(lines))'\n```\n\n#### pyp lets you run snippets of Python before and after processing input.\nNote if you run into trouble with semicolons and want a new line (without using a multiline string\nin your shell), you can just pass another string to pyp. You can also always pipe pyp to pyp!\n\n```sh\n# pyp like anything!\nps aux | pyp -b 'd = defaultdict(list)' 'user, pid, *_ = x.split()' 'd[user].append(pid)' -a 'del d[\"root\"]' -a 'd'\n```\n\n#### pyp can be magical, but it doesn't have to be mysterious!\nUse `--explain` or `--script` and pyp will output a script equivalent to what it would run. This can also serve as a\nuseful starting point for more complex scripts.\n```sh\npyp --explain -b 'd = defaultdict(list)' 'user, pid, *_ = x.split()' 'd[user].append(pid)' -a 'del d[\"root\"]' -a 'd'\n```\n```py\n#!/usr/bin/env python3\nfrom collections import defaultdict\nfrom pyp import pypprint\nimport sys\nd = defaultdict(list)\nfor x in sys.stdin:\n    x = x.rstrip('\\n')\n    (user, pid, *_) = x.split()\n    d[user].append(pid)\ndel d['root']\nif d is not None:\n    pypprint(d)\n```\nAnd if your command hits an exception, pyp will reconstruct a traceback into the generated code.\n\n#### pyp is configurable.\n\nPoint the environment variable `PYP_CONFIG_PATH` to a file containing, for example:\n```py\nimport numpy as np\nimport tensorflow as tf\nfrom pipetools import *\n\ndef p95(data):\n    return np.percentile(data, 95)\n\nclass PotentiallyUsefulClass: ...\n```\n\nWhen attempting to define undefined names, pyp will statically\\* analyse this file as a source of\npossible definitions. This means that if you don't use `tf`, we won't import `tensorflow`! And of\ncourse, `--explain` will show you exactly what gets run (and hence what doesn't!):\n\n```sh\npyp --explain 'print(p95(list(map(float, stdin))))'\n```\n```py\n#!/usr/bin/env python3\nimport sys\nimport numpy as np\n\ndef p95(data):\n    return np.percentile(data, 95)\nstdin = sys.stdin\nprint(p95(list(map(float, stdin))))\n```\n\nNote, importing things from libraries like [pipetools](https://0101.github.io/pipetools/doc/index.html)\nin your configuration can allow you to achieve high levels of syntax sugar:\n```sh\nseq 1 110 | pyp 'lines > foreach(int) | where(X > 100) | group_by(X % 3) | sort_by(X[0])'\n```\n\n<sub>\\*If you use wildcard imports, we will need to import those modules if there remain undefined\nnames, though we skip this in the happy path. If this matters to you, definitely don't\n`from tensorflow import *` in your config! </sub>\n\n#### pyp lets you configure your own magic!\n\nIf definitions in your config file depend on magic variables, pyp will substitute them in the\nway that makes sense. For example, put the following in your config...\n```py\nn = int(x)\nf = x.split()\nj = json.load(stdin)\n\nimport pandas as pd\ncsv = pd.read_csv(stdin)\n```\n\n...to make pyp easier than ever for your custom use cases:\n```sh\nps | pyp 'f[3]'\n\ncat commits.json | pyp 'j[0][\"commit\"][\"author\"]'\n\n< cities.csv pyp 'csv.to_string()'\n```\n\n#### I have questions!\n\nThere's additional documentation and examples at [FAQ](https://github.com/hauntsaninja/pyp/blob/master/FAQ.md).\nIf that doesn't answer your question, please open an issue!\n\n## Related projects\n\n### [Pyed Piper](https://github.com/thepyedpiper/pyp) aka  Python Power at the Prompt\n\npypyp takes inspiration (and the command name!) from here.\n\nPyed Piper [had been dead and Python 2 only](https://code.google.com/archive/p/pyp/) for a decade\nwhen pypyp was written; it appears it's recently been resurrected. Pyed Piper is further away\nfrom normal Python syntax and APIs than pypyp aims to be. In particular, Pyed Piper has an emphasis\non piping within Python similar to the way you can combine `pypyp` with `pipetools` in the\nconfiguration example above.\n\n### [Pyped](https://github.com/ksamuel/Pyped)\n\nPyped is very similar; enough so that I probably wouldn't have written pyp had I known\nabout it. But I'm glad I didn't, since Pyped doesn't do the AST introspection and manipulation\nthat we do. This means:\n- Pyped relies on you to pass in flags to tell it what to do, when pyp can unambiguously infer\n  intention from the input.\n- It doesn't provide easy automatic printing, or smart printing of iterables and dicts.\n- It hardcodes a list of imports and installs some libraries on your system. This project's\nautomatic import will work for any library you use.\n- It doesn't have anything like `--explain`/`--script`.\n\nHowever,\n- It has some conveniences, like regex splitting of input, that you'd have to do for yourself here.\n- It supports Python 2 and early versions of Python 3.\n- It's been around for much longer.\n\n### [piep](http://gfxmonk.net/dist/doc/piep/) / [spy](https://github.com/edk0/spy) / [pyfil](https://github.com/ninjaaron/pyfil) / [pythonpy](https://github.com/fish2000/pythonpy-fork) / [oneliner](https://python-oneliner.readthedocs.io/en/latest/)\n\nSince writing pyp, it turns out there are more alternatives out there than I thought :-) Some quick\nnotes:\n- Most of them rely on the user passing in flags, like Pyped.\n- Most of them have limitations around automatic printing, like only being able to automatically\nprint single expressions or not handling iterables and dicts well.\n- Some of them have custom syntax for in-process command chaining, which can be convenient.\n- Some of them have specialised support for things like JSON input or running shell commands.\n- Some of them expose the input in interesting ways with custom line / file / stream objects.\n- Some of them have more advanced options for error handling (although none of them have pyp's\n  great tracebacks).\n- None of them have powerful configuration like pyp.\n- None of them have anything like `--explain`.\n\nFor whatever it's worth, I've listed the projects above in approximate order of my\npersonal preference.\n\n### [mario](https://github.com/python-mario/mario)\n\n`mario` is a featureful take on shell processing with Python. It doesn't use undefined name\ndetection, instead relying on a pluggable subcommand system. While the subcommands can be more\nverbose than pyp, `mario` makes up some ground by automatic application of functions and a custom\ncommand chaining syntax. The result can feel a little DSL-like, while pyp tries to feel very close\nto writing Python.\n\nConsider using `mario` if:\n- You find yourself stringing together long sequences of pyp commands and want to be able to\ncommand chain within a single process out of the box.\n- You find yourself often needing to reuse complex pyp commands or doing a lot of domain specific\nshell processing that you wish you could reuse with a single command.\n- You want to easily be able to use async functions.\n\nConsider pyp if:\n- You want to minimise keystrokes for things that should be quick and easy.\n- You want something minimal and lightweight that feels very close to Python. You don't want to have\nto remember commands.\n- You're happy using Python libraries to do domain specific heavy lifting, for easy command chaining\nor syntax sugar. You don't mind (or want to be able to) fall back to a script via `--script` to deal\nwith complexity.\n\n### [xonsh](https://xon.sh/)\n\n`xonsh` is a shell whose language is a superset of Python; this is more ambitious and pretty\ndifferent from pyp. pyp is easier to use for the one-liner piping use case, but if you need\nmore Python in your shell, check out `xonsh`.\n\n### [awk](https://www.gnu.org/software/gawk/manual/gawk.html)\n\nIf `awk` works for you, how did you end up here?\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"pypyp","package_url":"https://pypi.org/project/pypyp/","platform":null,"project_url":"https://pypi.org/project/pypyp/","project_urls":{"changelog":"https://github.com/hauntsaninja/pyp/blob/master/CHANGELOG.md","homepage":"https://github.com/hauntsaninja/pyp","repository":"https://github.com/hauntsaninja/pyp"},"provides_extra":null,"release_url":"https://pypi.org/project/pypyp/1.2.0/","requires_dist":["astunparse; python_version<'3.9'"],"requires_python":">=3.8","summary":"Easily run Python at the shell! Magical, but never mysterious.","version":"1.2.0","yanked":false,"yanked_reason":null},"last_serial":22138969,"releases":{"0.1":[{"comment_text":"","digests":{"blake2b_256":"f152e602ac67e6c6b206b644cac1cfc4416f3d42ab582696164adb92486353dd","md5":"25aa7e7280b9495f6df2802c05f44d26","sha256":"2291e1ca647727e44e2b5d46e72f2eeebd803353262e57df45f6115b350b58ad"},"downloads":-1,"filename":"pypyp-0.1-py3-none-any.whl","has_sig":false,"md5_digest":"25aa7e7280b9495f6df2802c05f44d26","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":8910,"upload_time":"2020-04-14T21:57:23","upload_time_iso_8601":"2020-04-14T21:57:23.694999Z","url":"https://files.pythonhosted.org/packages/f1/52/e602ac67e6c6b206b644cac1cfc4416f3d42ab582696164adb92486353dd/pypyp-0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d74601908cdf51af4fb9fa2504999aebf6fd9d69d68a9b77461d6e486dff4251","md5":"f6e1d5463d163bb5826cb6336bf52f24","sha256":"87d59e66cd17dcf1ca7657b2d03d20ac84a3bff6aada906dc7e94dc89cde1fcf"},"downloads":-1,"filename":"pypyp-0.1.tar.gz","has_sig":false,"md5_digest":"f6e1d5463d163bb5826cb6336bf52f24","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":8097,"upload_time":"2020-04-14T21:57:25","upload_time_iso_8601":"2020-04-14T21:57:25.535183Z","url":"https://files.pythonhosted.org/packages/d7/46/01908cdf51af4fb9fa2504999aebf6fd9d69d68a9b77461d6e486dff4251/pypyp-0.1.tar.gz","yanked":false,"yanked_reason":null}],"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"411ea11277e4931bffa46588202860b4549fc41fcd2fca417511b58483166084","md5":"eb533ed17783d098995fe8cf9189349c","sha256":"c62469c87fc60f6f0b2edad92b3a10082e01131b5b01d7e5b66a03741a1854d8"},"downloads":-1,"filename":"pypyp-0.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"eb533ed17783d098995fe8cf9189349c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":8929,"upload_time":"2020-04-14T22:05:09","upload_time_iso_8601":"2020-04-14T22:05:09.821460Z","url":"https://files.pythonhosted.org/packages/41/1e/a11277e4931bffa46588202860b4549fc41fcd2fca417511b58483166084/pypyp-0.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e0305a2f5f19ae093eb9756baf60826814f8e7e031e9804896b0b32412315a03","md5":"18887b778cff6b7f881a49ca34ac5b27","sha256":"7579fd3627b1c6ae5afecc2f76ae19377474c6e57183843fbfd39e02b4b031e9"},"downloads":-1,"filename":"pypyp-0.1.1.tar.gz","has_sig":false,"md5_digest":"18887b778cff6b7f881a49ca34ac5b27","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":8088,"upload_time":"2020-04-14T22:05:10","upload_time_iso_8601":"2020-04-14T22:05:10.973935Z","url":"https://files.pythonhosted.org/packages/e0/30/5a2f5f19ae093eb9756baf60826814f8e7e031e9804896b0b32412315a03/pypyp-0.1.1.tar.gz","yanked":false,"yanked_reason":null}],"0.2":[{"comment_text":"","digests":{"blake2b_256":"1e0fd1e6c20dc2a41d07ba6c5430aadab67b4b1ae10ee500bb58a11e06b40642","md5":"3419b9bd48e390d2c35c256902b8cdc2","sha256":"837e3a9e7c679b2086ca306a79f24440b9dd48bb4e9f30a45ab3f6f5bd3deb29"},"downloads":-1,"filename":"pypyp-0.2-py3-none-any.whl","has_sig":false,"md5_digest":"3419b9bd48e390d2c35c256902b8cdc2","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":9384,"upload_time":"2020-05-08T01:41:11","upload_time_iso_8601":"2020-05-08T01:41:11.617722Z","url":"https://files.pythonhosted.org/packages/1e/0f/d1e6c20dc2a41d07ba6c5430aadab67b4b1ae10ee500bb58a11e06b40642/pypyp-0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5c2c29d67f8f68ab5fc45ffd5955ae224cf261cab6d672f92f2cf0d4a70c5b75","md5":"9e1649b16116d237adfeb9f84ce563bf","sha256":"cbf7e755bb41f7e1e9750cdab4ba388740fcf59d652e359cd99ba13f378411c3"},"downloads":-1,"filename":"pypyp-0.2.tar.gz","has_sig":false,"md5_digest":"9e1649b16116d237adfeb9f84ce563bf","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":8585,"upload_time":"2020-05-08T01:41:14","upload_time_iso_8601":"2020-05-08T01:41:14.549126Z","url":"https://files.pythonhosted.org/packages/5c/2c/29d67f8f68ab5fc45ffd5955ae224cf261cab6d672f92f2cf0d4a70c5b75/pypyp-0.2.tar.gz","yanked":false,"yanked_reason":null}],"0.2.1":[{"comment_text":"","digests":{"blake2b_256":"d93d993b827e64003a7def4471ee7c04164e0c892b8f629307c2ca98c0e69e26","md5":"f0e74a48da7c06d0018f524605eb7b29","sha256":"2b86f270a16fa498877f062366b3e21d8bbdc8a3d28aee871e2102dd809e7ca5"},"downloads":-1,"filename":"pypyp-0.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"f0e74a48da7c06d0018f524605eb7b29","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":9444,"upload_time":"2020-05-10T02:28:45","upload_time_iso_8601":"2020-05-10T02:28:45.810142Z","url":"https://files.pythonhosted.org/packages/d9/3d/993b827e64003a7def4471ee7c04164e0c892b8f629307c2ca98c0e69e26/pypyp-0.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a58306822ee1055d008a815a46d1429fdcd46ccb78a2ea460b86f173b6e3fff6","md5":"06e6f6675430124c4957278501d61e4b","sha256":"c460a9eac5351fca2e4919eab1c990d4f5a76ae3bf418d6a6e157b7590f0550a"},"downloads":-1,"filename":"pypyp-0.2.1.tar.gz","has_sig":false,"md5_digest":"06e6f6675430124c4957278501d61e4b","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":9719,"upload_time":"2020-05-10T02:28:47","upload_time_iso_8601":"2020-05-10T02:28:47.075327Z","url":"https://files.pythonhosted.org/packages/a5/83/06822ee1055d008a815a46d1429fdcd46ccb78a2ea460b86f173b6e3fff6/pypyp-0.2.1.tar.gz","yanked":false,"yanked_reason":null}],"0.3":[{"comment_text":"","digests":{"blake2b_256":"7633582a809cf79853402f4a110af4f1200127f6fee11e6070ad3ba0172409bb","md5":"1217a5867227158292c61715ce249a9e","sha256":"bd6428ab0f8c2e015e5a526abe730a8204ecaa1f821837fca56890a03fffb7c7"},"downloads":-1,"filename":"pypyp-0.3-py3-none-any.whl","has_sig":false,"md5_digest":"1217a5867227158292c61715ce249a9e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":13708,"upload_time":"2020-05-12T22:40:37","upload_time_iso_8601":"2020-05-12T22:40:37.146677Z","url":"https://files.pythonhosted.org/packages/76/33/582a809cf79853402f4a110af4f1200127f6fee11e6070ad3ba0172409bb/pypyp-0.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0a617c1a38deceabbb71ba03a12a2a17c384fc8b78ba2e756d095c643293c1e8","md5":"4459d8e197cd11305dc07001d3880d9a","sha256":"4e4152ed522bcbb99a077f2855e4d22bb7871e27a7bb771c4e05d933855a4440"},"downloads":-1,"filename":"pypyp-0.3.tar.gz","has_sig":false,"md5_digest":"4459d8e197cd11305dc07001d3880d9a","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":16945,"upload_time":"2020-05-12T22:40:38","upload_time_iso_8601":"2020-05-12T22:40:38.336843Z","url":"https://files.pythonhosted.org/packages/0a/61/7c1a38deceabbb71ba03a12a2a17c384fc8b78ba2e756d095c643293c1e8/pypyp-0.3.tar.gz","yanked":false,"yanked_reason":null}],"0.3.1":[{"comment_text":"","digests":{"blake2b_256":"4a82597246a8864a017207da994bc1dec261dcc11342717500b07f650f76cd9f","md5":"53c31e20913b362e1a4bc506da94a4ec","sha256":"6f5f89245835e5e5c87fc55a6f8135b82949a38bd99cf515d9a2122de8dd232b"},"downloads":-1,"filename":"pypyp-0.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"53c31e20913b362e1a4bc506da94a4ec","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":14244,"upload_time":"2020-05-18T23:40:30","upload_time_iso_8601":"2020-05-18T23:40:30.715178Z","url":"https://files.pythonhosted.org/packages/4a/82/597246a8864a017207da994bc1dec261dcc11342717500b07f650f76cd9f/pypyp-0.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"53d87dd4b841061a3a216321c57c9cf76c674db0436ef893936c962c03d82a3e","md5":"8f6c90d10da5770015e28e6d3d3fa01d","sha256":"3a2669887685cf65565f5b82111861ddfd87151601c1419dfe1d2644e543d72a"},"downloads":-1,"filename":"pypyp-0.3.1.tar.gz","has_sig":false,"md5_digest":"8f6c90d10da5770015e28e6d3d3fa01d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":17921,"upload_time":"2020-05-18T23:40:31","upload_time_iso_8601":"2020-05-18T23:40:31.907252Z","url":"https://files.pythonhosted.org/packages/53/d8/7dd4b841061a3a216321c57c9cf76c674db0436ef893936c962c03d82a3e/pypyp-0.3.1.tar.gz","yanked":false,"yanked_reason":null}],"0.3.2":[{"comment_text":"","digests":{"blake2b_256":"6b3cdb4f9141b33c21355e5ed9c28e66338e7125bdeea793ea0767c24c6509d2","md5":"91fac747fde064c78d8f9e627a5b367b","sha256":"5ceb30bd24be3384ee78f6fcc9328b8f313b6c5b14b93ad38fd0d1bcc256e345"},"downloads":-1,"filename":"pypyp-0.3.2-py3-none-any.whl","has_sig":false,"md5_digest":"91fac747fde064c78d8f9e627a5b367b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":14666,"upload_time":"2020-06-01T22:23:20","upload_time_iso_8601":"2020-06-01T22:23:20.994737Z","url":"https://files.pythonhosted.org/packages/6b/3c/db4f9141b33c21355e5ed9c28e66338e7125bdeea793ea0767c24c6509d2/pypyp-0.3.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9a4a1c7614dcde7e28d9a6f6b53faa84db73e355ab2208b100bec1bc95e592b4","md5":"988d06f51b6d5ada27396e28198832a0","sha256":"5e4d8eef36c123cb46ddd19bcdc279c606e8358f3ace5d611d000b3a6f6a4ed9"},"downloads":-1,"filename":"pypyp-0.3.2.tar.gz","has_sig":false,"md5_digest":"988d06f51b6d5ada27396e28198832a0","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":18455,"upload_time":"2020-06-01T22:23:22","upload_time_iso_8601":"2020-06-01T22:23:22.124669Z","url":"https://files.pythonhosted.org/packages/9a/4a/1c7614dcde7e28d9a6f6b53faa84db73e355ab2208b100bec1bc95e592b4/pypyp-0.3.2.tar.gz","yanked":false,"yanked_reason":null}],"0.3.3":[{"comment_text":"","digests":{"blake2b_256":"f76c0505180b87cc9839a12df936ab3908fa614ecf00ccd53bab08e34c1049f1","md5":"f849db02ef17caf671335186594f19ad","sha256":"9c6c397f27f99678b1797db6e9f3d7b85366de468cd3ba8ed7bcdec633968358"},"downloads":-1,"filename":"pypyp-0.3.3-py3-none-any.whl","has_sig":false,"md5_digest":"f849db02ef17caf671335186594f19ad","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":14699,"upload_time":"2020-06-26T23:11:41","upload_time_iso_8601":"2020-06-26T23:11:41.097606Z","url":"https://files.pythonhosted.org/packages/f7/6c/0505180b87cc9839a12df936ab3908fa614ecf00ccd53bab08e34c1049f1/pypyp-0.3.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c99e425e2559fb0f16bd7f90044e81b5482a39c17d879248ba0202cca796ffa9","md5":"693d31ccf707704fe410903e184f6797","sha256":"686d3a4f5c6b312cb2960d795fcb6c264bea7899b4a845de78fce8649f1a77bd"},"downloads":-1,"filename":"pypyp-0.3.3.tar.gz","has_sig":false,"md5_digest":"693d31ccf707704fe410903e184f6797","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":18180,"upload_time":"2020-06-26T23:11:42","upload_time_iso_8601":"2020-06-26T23:11:42.542074Z","url":"https://files.pythonhosted.org/packages/c9/9e/425e2559fb0f16bd7f90044e81b5482a39c17d879248ba0202cca796ffa9/pypyp-0.3.3.tar.gz","yanked":false,"yanked_reason":null}],"0.3.4":[{"comment_text":"","digests":{"blake2b_256":"cfa64d0fce0deeeb8d6a6893ddf552efca350bce4d71ee49d874a4054f56ad46","md5":"89ef0e405286007bfb99f0135d2de605","sha256":"a59472736bc3d7aab463e486cb2b7bc12bd0d9d3195e1f8eba3e5650877fb5f4"},"downloads":-1,"filename":"pypyp-0.3.4-py3-none-any.whl","has_sig":false,"md5_digest":"89ef0e405286007bfb99f0135d2de605","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":14685,"upload_time":"2021-09-09T04:04:47","upload_time_iso_8601":"2021-09-09T04:04:47.568871Z","url":"https://files.pythonhosted.org/packages/cf/a6/4d0fce0deeeb8d6a6893ddf552efca350bce4d71ee49d874a4054f56ad46/pypyp-0.3.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"60c746ab3c3b968fdebfa75b0f1bae0b45b7484bc0b77b79b86d641d91c7783f","md5":"ebda8dc60bbf7f053c0deece504b6fee","sha256":"7ed0cb978a9bf097fdd692af3d59112f24cea4ad8a9e2794bf413780351f9e9b"},"downloads":-1,"filename":"pypyp-0.3.4.tar.gz","has_sig":false,"md5_digest":"ebda8dc60bbf7f053c0deece504b6fee","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":18431,"upload_time":"2021-09-09T04:04:48","upload_time_iso_8601":"2021-09-09T04:04:48.824616Z","url":"https://files.pythonhosted.org/packages/60/c7/46ab3c3b968fdebfa75b0f1bae0b45b7484bc0b77b79b86d641d91c7783f/pypyp-0.3.4.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"adc292fa4ab416c7f697a2944d54c6e58ed5d043e296f6f671af32aaacb4b40e","md5":"4ef687c4285efef26aeefaf7725ec9f2","sha256":"da86834d72a772e311ca5a066ec1c2d85cbea0284417de8581fb49ccd0d9b883"},"downloads":-1,"filename":"pypyp-1.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"4ef687c4285efef26aeefaf7725ec9f2","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":15456,"upload_time":"2021-11-10T20:44:31","upload_time_iso_8601":"2021-11-10T20:44:31.164810Z","url":"https://files.pythonhosted.org/packages/ad/c2/92fa4ab416c7f697a2944d54c6e58ed5d043e296f6f671af32aaacb4b40e/pypyp-1.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e27b893c1003f52085b4eb3dbaebd5f15fcf72062e62bb142f1ea1f132c92d1d","md5":"5c99daf9125025c8c3b51c2beb30ee85","sha256":"10006dc8bbd9de0dbdd957a892f3232771b9030846f5c18af0a750743dd1f6ac"},"downloads":-1,"filename":"pypyp-1.0.0.tar.gz","has_sig":false,"md5_digest":"5c99daf9125025c8c3b51c2beb30ee85","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":19444,"upload_time":"2021-11-10T20:44:32","upload_time_iso_8601":"2021-11-10T20:44:32.591330Z","url":"https://files.pythonhosted.org/packages/e2/7b/893c1003f52085b4eb3dbaebd5f15fcf72062e62bb142f1ea1f132c92d1d/pypyp-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"f1661f65aeeffb447f89ef752f881bed76c47e9b0f2b4973433545ac7461ea95","md5":"373adc329693db09d92be73a69571ee8","sha256":"55821b36f580c9ae5f3d179935327b053d3bb720e31140e8e97073b55c86c117"},"downloads":-1,"filename":"pypyp-1.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"373adc329693db09d92be73a69571ee8","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":15399,"upload_time":"2023-01-12T09:48:48","upload_time_iso_8601":"2023-01-12T09:48:48.937179Z","url":"https://files.pythonhosted.org/packages/f1/66/1f65aeeffb447f89ef752f881bed76c47e9b0f2b4973433545ac7461ea95/pypyp-1.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e1a0128ad623855a6ff185f963c5a3a1331446cc89584db5f006458c3f4a9a48","md5":"35ee67b0d6fc1a8f6988244931aeefbf","sha256":"c0f05b0b8ebd0fa0704af7e5830eed67a75629211e1e882746432d8ae6860140"},"downloads":-1,"filename":"pypyp-1.1.0.tar.gz","has_sig":false,"md5_digest":"35ee67b0d6fc1a8f6988244931aeefbf","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":18637,"upload_time":"2023-01-12T09:48:50","upload_time_iso_8601":"2023-01-12T09:48:50.482008Z","url":"https://files.pythonhosted.org/packages/e1/a0/128ad623855a6ff185f963c5a3a1331446cc89584db5f006458c3f4a9a48/pypyp-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"e06c6a9eac381dd1f0d2e878ad6213fca24cfe5b3846db46b26d620301ac7624","md5":"5d5e6e42cf292167d130cd54a6894388","sha256":"45e2a0fbe5b7b5bb0be7e95bcb5b23d43ddae8c561410c9c336e6773005c70b1"},"downloads":-1,"filename":"pypyp-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"5d5e6e42cf292167d130cd54a6894388","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":15487,"upload_time":"2024-03-03T06:01:02","upload_time_iso_8601":"2024-03-03T06:01:02.142042Z","url":"https://files.pythonhosted.org/packages/e0/6c/6a9eac381dd1f0d2e878ad6213fca24cfe5b3846db46b26d620301ac7624/pypyp-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"88af8c8a089edfc8690fdc00e404386d090aea1a16acf0adfffdc361cd699de6","md5":"b615f787c6914e425c6c244fb9bb6354","sha256":"d1571ed626bd65686248be7f7332dd750f413b15de1ae80ac1ddb353bd34486d"},"downloads":-1,"filename":"pypyp-1.2.0.tar.gz","has_sig":false,"md5_digest":"b615f787c6914e425c6c244fb9bb6354","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":18775,"upload_time":"2024-03-03T06:01:04","upload_time_iso_8601":"2024-03-03T06:01:04.131187Z","url":"https://files.pythonhosted.org/packages/88/af/8c8a089edfc8690fdc00e404386d090aea1a16acf0adfffdc361cd699de6/pypyp-1.2.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"e06c6a9eac381dd1f0d2e878ad6213fca24cfe5b3846db46b26d620301ac7624","md5":"5d5e6e42cf292167d130cd54a6894388","sha256":"45e2a0fbe5b7b5bb0be7e95bcb5b23d43ddae8c561410c9c336e6773005c70b1"},"downloads":-1,"filename":"pypyp-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"5d5e6e42cf292167d130cd54a6894388","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":15487,"upload_time":"2024-03-03T06:01:02","upload_time_iso_8601":"2024-03-03T06:01:02.142042Z","url":"https://files.pythonhosted.org/packages/e0/6c/6a9eac381dd1f0d2e878ad6213fca24cfe5b3846db46b26d620301ac7624/pypyp-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"88af8c8a089edfc8690fdc00e404386d090aea1a16acf0adfffdc361cd699de6","md5":"b615f787c6914e425c6c244fb9bb6354","sha256":"d1571ed626bd65686248be7f7332dd750f413b15de1ae80ac1ddb353bd34486d"},"downloads":-1,"filename":"pypyp-1.2.0.tar.gz","has_sig":false,"md5_digest":"b615f787c6914e425c6c244fb9bb6354","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":18775,"upload_time":"2024-03-03T06:01:04","upload_time_iso_8601":"2024-03-03T06:01:04.131187Z","url":"https://files.pythonhosted.org/packages/88/af/8c8a089edfc8690fdc00e404386d090aea1a16acf0adfffdc361cd699de6/pypyp-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
