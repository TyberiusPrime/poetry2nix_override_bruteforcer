{"info":{"author":"Joshua Fehler","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 6 - Mature","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Operating System :: MacOS :: MacOS X","Operating System :: Microsoft :: Windows","Operating System :: POSIX","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Topic :: Software Development :: Libraries","Topic :: Software Development :: Testing","Topic :: Utilities"],"description":"pytest-splinter4\n================\n\nA `pytest <http://pytest.org>`_ plugin for `splinter <https://splinter.readthedocs.io>`_.\n\npytest-splinter4 is a fork of `pytest-splinter <https://github.com/pytest-dev/pytest-splinter>`_\nwith added features and fixes to support newer versions of\n``pytest``, ``pytest-xdist``, ``splinter >= 0.17.0``, and ``selenium >= 4.0``.\n\n.. image:: https://img.shields.io/pypi/v/pytest-splinter4.svg\n    :alt: PyPI\n    :target: https://pypi.python.org/pypi/pytest-splinter4\n\n.. image:: https://img.shields.io/pypi/pyversions/pytest-splinter4.svg\n    :alt: PyPI - Python Version\n    :target: https://pypi.python.org/pypi/pytest-splinter4\n\n.. image:: https://img.shields.io/github/license/jsfehler/pytest-splinter4.svg\n    :alt: GitHub\n    :target: https://github.com/jsfehler/pytest-splinter4/blob/master/LICENSE\n\n.. image:: https://github.com/jsfehler/pytest-splinter4/workflows/CI/badge.svg\n    :target: https://github.com/jsfehler/pytest-splinter4/actions/workflows/main.yml\n    :alt: Build status\n\n.. image:: https://codecov.io/gh/jsfehler/pytest-splinter4/branch/master/graph/badge.svg?token=C1vfu8YgWn\n   :target: https://codecov.io/gh/jsfehler/pytest-splinter4\n\n.. image:: https://readthedocs.org/projects/pytest-splinter4/badge/?version=latest\n    :target: https://readthedocs.org/projects/pytest-splinter4/?badge=latest\n    :alt: Documentation Status\n\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    python -m pip install pytest-splinter4\n\n\nFeatures\n--------\n\nSensible Defaults\n+++++++++++++++++\n\n\nDriver executable_path argument\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nWhen using chrome, firefox, or edge, the `executable_path` driver argument has\na default value set to also search for chrome/gecko/edgedriver in the current working directory.\n\n\nBrowser Fixtures\n++++++++++++++++\n\nThe following fixtures provide instances of ``splinter.Browser()``\n\n* browser\n    A new instance of splinter's Browser. Fixture is session scoped, so browser process is started\n    once per test session, but the state of the browser will be clean (current page is ``blank``, cookies clean).\n\n* session_browser\n    The same as ``browser`` except the lifetime. This fixture is session-scoped so will only be finalized at the\n    end of the whole test session. Useful if you want to speedup your test suite paying with reduced test isolation.\n\n* browser_instance_getter\n    Function to create an instance of the browser. This fixture is required only if you need to have\n    multiple instances of the Browser in a single test at the same time. Example:\n\n    .. code-block:: python\n\n        @pytest.fixture\n        def admin_browser(request, browser_instance_getter):\n            \"\"\"Admin browser fixture.\"\"\"\n            # browser_instance_getter function receives parent fixture -- our admin_browser\n            return browser_instance_getter(request, admin_browser)\n\n        def test_2_browsers(browser, admin_browser):\n            \"\"\"Test using 2 browsers at the same time.\"\"\"\n            browser.visit('http://google.com')\n            admin_browser.visit('http://admin.example.com')\n\nSelenium Fixtures\n+++++++++++++++++\n\nThe following fixtures provide support for selenium parameters.\nThey are only used when Selenium based drivers are used.\n\n* splinter_selenium_implicit_wait\n    Implicit wait timeout to be passed to Selenium webdriver.\n    Fixture gets the value from the command-line option splinter-implicit-wait (see below)\n\n* splinter_selenium_speed\n    Speed for Selenium, if not 0 then it will sleep between each selenium command.\n    Useful for debugging/demonstration.\n    Fixture gets the value from the command-line option splinter-speed (see below)\n\n* splinter_selenium_socket_timeout\n    Socket timeout for communication between the webdriver and the browser.\n    Fixture gets the value from the command-line option splinter-socket-timeout (see below)\n\nSplinter Fixtures\n+++++++++++++++++\n\nThe following fixtures provide support for splinter parameters.\n\n* splinter_wait_time\n    Explicit wait timeout (for waiting for explicit condition via `wait_for_condition`).\n    Default value is from the command-line option splinter-wait-time (see below)\n\n* splinter_webdriver\n    Splinter's webdriver name to use. Default value is from the command-line option\n    splinter-webdriver (see below).\n\n    To make pytest-splinter always use certain webdriver, override a fixture\n    in your `conftest.py` file. Example:\n\n    .. code-block:: python\n\n        import pytest\n\n        @pytest.fixture(scope='session')\n        def splinter_webdriver():\n            \"\"\"Override splinter webdriver name.\"\"\"\n            return 'chrome'\n\n* splinter_remote_url\n    Webdriver remote url to use. Default value is from the command-line option\n    splinter-remote-url (see below).\n\n    This will only be used if the selected webdriver name is 'remote'.\n\n* splinter_remote_name\n    Name of the browser to use when running Remote Webdriver.\n\n    This will be used only if the selected webdriver name is 'remote'.\n\n* splinter_session_scoped_browser\n    Use a single browser instance per test session.\n    Default value is from the command-line option splinter-session-scoped-browser (see below)\n\n* splinter_file_download_dir\n    Directory, to which browser will automatically download the files it\n    will experience during browsing. For example when you click on some download link.\n    By default it's a temporary directory. Automatic downloading of files is only supported for firefox driver\n    at the moment.\n\n* splinter_download_file_types\n    Comma-separated list of content types to automatically download.\n    By default it's the all known system mime types (via mimetypes standard library).\n\n* splinter_browser_load_condition\n    Browser load condition, a python function which should return True.\n    If function returns False, it will be run several times, until timeout below reached.\n\n* splinter_browser_load_timeout\n    Browser load condition timeout in seconds, after this timeout the exception\n    WaitUntilTimeout will be raised.\n\n* splinter_wait_time\n    Browser explicit wait timeout in seconds, after this timeout the exception\n    WaitUntilTimeout will be raised.\n\n* splinter_driver_kwargs\n    Webdriver keyword arguments, a dictionary which is passed to selenium\n    webdriver's constructor (after applying firefox preferences)\n\n    .. code-block:: python\n\n        import pytest\n        from pathlib import Path\n\n        @pytest.fixture\n        def splinter_driver_kwargs():\n            \"\"\"\n            Webdriver kwargs for Firefox.\n            https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.firefox.webdriver\n            \"\"\"\n            return {\"service_log_path\": Path(\"/log/directory/geckodriver.log\")}\n\n* splinter_window_size\n    Size of the browser window on browser initialization. Tuple in form (<width>, <height>). Default is (1366, 768)\n\n* splinter_logs_dir\n    Driver logs directory. Default is 'logs'.\n\n* splinter_screenshot_dir\n    Browser screenshot directory. Default is 'logs/{test_function_name}'.\n\n    This fixture gets the value from the command-line option\n    `splinter-screenshot-dir` (see below).\n\n* splinter_make_screenshot_on_failure\n    Should pytest-splinter take browser screenshots on test failure?\n    This fixture gets the value from the command-line option\n    `splinter-make-screenshot-on-failure` (see below).\n\n* splinter_screenshot_encoding\n    Encoding of the `html` `screenshot` on test failure. UTF-8 by default.\n\n* splinter_browser_class\n    Class to use for browser instance.\n    Defaults to `pytest_splinter.plugin.Browser`.\n\n* splinter_clean_cookies_urls\n    List of additional urls to clean cookies on. By default, during the preparation of the browser for the test,\n    pytest-splinter only cleans cookies for the last visited url from previous test, as it's not possible to clean\n    all cookies from all domains at once via webdriver protocol, by design. This limitation can be worked around if\n    you know the list of urls, the domains for which you need to clean cookies (for example https://facebook.com).\n    If so, you can override this fixture and put those urls there, and pytest-splinter will visit each of them and will\n    clean the cookies for each domain.\n\n* splinter_headless\n    Run Chrome in headless mode. Defaults to false. http://splinter.readthedocs.io/en/latest/drivers/chrome.html#using-headless-option-for-chrome\n\nFirefox Only\n~~~~~~~~~~~~\n\n* splinter_firefox_profile_preferences\n    Firefox profile preferences, a dictionary which is passed to selenium\n    webdriver's profile_preferences\n\n* splinter_firefox_profile_directory\n    Firefox profile directory to use as template for firefox profile created by selenium.\n    By default, it's an empty directly inside pytest_splinter/profiles/firefox\n\nCommand-line options\n--------------------\n\n* `--splinter-implicit-wait`\n    Selenium webdriver implicit wait. Seconds (default: 5).\n\n* `--splinter-speed`\n    selenium webdriver speed (from command to command). Seconds (default: 0).\n\n* `--splinter-socket-timeout`\n    Selenium webdriver socket timeout for for communication between the webdriver and the browser.\n    Seconds (default: 120).\n\n* `--splinter-webdriver`\n    Webdriver name to use. (default: firefox). Options:\n\n    *  firefox\n    *  remote\n    *  chrome\n\n    For more details refer to the documentation for splinter and selenium.\n\n* `--splinter-remote-url`\n    Webdriver remote url to use. (default: None). Will be used only if selected webdriver name is 'remote'.\n\n    For more details refer to the documentation for splinter and selenium.\n\n* `--splinter-remote-name`\n    Name of the browser to use when running Remote Webdriver.\n\n* `--splinter-session-scoped-browser`\n    pytest-splinter should use a single browser instance per test session.\n    Choices are 'true' or 'false' (default: 'true').\n\n* `--splinter-make-screenshot-on-failure`\n    pytest-splinter should take browser screenshots on test failure.\n    Choices are 'true' or 'false' (default: 'true').\n\n* `--splinter-screenshot-dir`\n    pytest-splinter browser screenshot directory. Defaults to the current\n    directory.\n\n* `--splinter-headless`\n    Override `splinter_headless` fixture. Choices are 'true' or 'false', default: 'true'.\n    http://splinter.readthedocs.io/en/latest/drivers/chrome.html#using-headless-option-for-chrome\n    https://splinter.readthedocs.io/en/latest/drivers/firefox.html#using-headless-option-for-firefox\n\nBrowser fixture\n---------------\n\nAs mentioned above, the ``browser`` fixture is an instance of splinter's Browser object,\nbut with some overrides.\n\n*  visit\n    Added possibility to wait for condition on each browser visit by having a fixture.\n\n*  wait_for_condition\n    Method copying selenium's wait_for_condition, with difference that condition is in python,\n    so there you can do whatever you want, and not only execute javascript via browser.evaluate_script.\n\n\nAutomatic screenshots on test failure\n-------------------------------------\n\nWhen a test fails, it's important to know the reason.\nThis becomes hard when tests are being run on the continuous integration server,\nwhere you cannot debug (using --pdb).\nTo simplify things, a special behaviour of the browser fixture is available,\nwhich takes a screenshot on test failure and puts it in a folder with the a\nnaming convention compatible to the\n`jenkins plugin <https://wiki.jenkins-ci.org/display/JENKINS/JUnit+Attachments+Plugin>`_.\nThe html content of the browser page is also stored, this can be useful for debugging the html source.\n\nCreating screenshots is fully compatible with `pytest-xdist plugin\n<https://pypi.python.org/pypi/pytest-xdist>`_ and will transfer the screenshots\nfrom the worker nodes through the communication channel automatically.\n\nIf a test (using the browser fixture) fails, you should get a screenshot files\nin the following path:\n\n::\n\n    <splinter-screenshot-dir>/my.dotted.name.test.package/test_name-browser.png\n    <splinter-screenshot-dir>/my.dotted.name.test.package/test_name-browser.html\n\nThe `splinter-screenshot-dir` for storing the screenshot is generated by a\nfixture and can be provided through a command line argument, as described above\nat the configuration options section.\n\nTaking screenshots on test failure is enabled by default. It can be controlled\nthrough the `splinter_make_screenshot_on_failure` fixture, where return `False`\nskips it. You can also disable it via a command line argument:\n\n::\n\n    pytest tests/functional --splinter-make-screenshot-on-failure=false\n\nIn case taking a screenshot fails, a pytest warning will be issued, which\ncan be viewed using the `-rw` argument for `pytest`.\n\n\nExample\n-------\n\n.. code-block:: python\n\n    def test_using_a_browser(browser):\n        \"\"\"Test using real browser.\"\"\"\n        url = \"http://www.google.com\"\n        browser.visit(url)\n\n        browser.fill('q', 'splinter - python acceptance testing for web applications')\n\n        # Find and click the 'search' button\n        button = browser.find_by_name('btnK')\n\n        # Interact with elements\n        button.click()\n\n        assert browser.is_text_present('splinter.cobrateam.info'), \"splinter.cobrateam.info wasn't found... We need to\"\n        ' improve our SEO techniques'\n\n\nContact\n-------\n\nIf you have questions, bug reports, suggestions, etc. please create an issue on\nthe `GitHub project page <http://github.com/jsfehler/pytest-splinter4>`_.\n\n\nLicense\n-------\n\nThis software is licensed under the `MIT license <http://en.wikipedia.org/wiki/MIT_License>`_\n\nSee `License file <https://github.com/jsfehler/pytest-splinter4/blob/master/LICENSE.txt>`_\n","description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/jsfehler/pytest-splinter4","keywords":"","license":"MIT license","maintainer":"","maintainer_email":"","name":"pytest-splinter4","package_url":"https://pypi.org/project/pytest-splinter4/","platform":null,"project_url":"https://pypi.org/project/pytest-splinter4/","project_urls":{"Homepage":"https://github.com/jsfehler/pytest-splinter4"},"provides_extra":null,"release_url":"https://pypi.org/project/pytest-splinter4/0.4.0/","requires_dist":["splinter >=0.21.0","pytest >=8.0.0"],"requires_python":"","summary":"Pytest plugin for the splinter automation library","version":"0.4.0","yanked":false,"yanked_reason":null},"last_serial":21693234,"releases":{"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"dc449355867cddcf23e448206a78259012c26c0ea3394685a480a2af31ef0be6","md5":"1020f1b17bde318a298cae13be771eb7","sha256":"6a7c354a8caa78f7dbcc706e3a42bcd8d3aab73b838efde2ea5af2db9fb83061"},"downloads":-1,"filename":"pytest_splinter4-0.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"1020f1b17bde318a298cae13be771eb7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17366,"upload_time":"2021-12-21T19:46:15","upload_time_iso_8601":"2021-12-21T19:46:15.333238Z","url":"https://files.pythonhosted.org/packages/dc/44/9355867cddcf23e448206a78259012c26c0ea3394685a480a2af31ef0be6/pytest_splinter4-0.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f5033f120c6a4caa05d1b95d08d356954cbeae13ef1937cb868276f17c872560","md5":"f15a6ab86a9cbf35ca4411ea701fe66d","sha256":"8496247a028210a49b89664d434640ce2e730c922d5ea9199f70bfbb1bddf5d5"},"downloads":-1,"filename":"pytest-splinter4-0.1.0.tar.gz","has_sig":false,"md5_digest":"f15a6ab86a9cbf35ca4411ea701fe66d","packagetype":"sdist","python_version":"source","requires_python":null,"size":20224,"upload_time":"2021-12-21T19:46:17","upload_time_iso_8601":"2021-12-21T19:46:17.677522Z","url":"https://files.pythonhosted.org/packages/f5/03/3f120c6a4caa05d1b95d08d356954cbeae13ef1937cb868276f17c872560/pytest-splinter4-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"b592c2f942dd4daaaff3de67ef5dd7453c040e43eb4c28d8ae4c98ec2d59c161","md5":"36dc20eb0cd28dc148dbdb17c3e01d20","sha256":"c94398256527f13a03714c3b1abf1ff639efe4896bf59ed88a347485945b1d34"},"downloads":-1,"filename":"pytest_splinter4-0.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"36dc20eb0cd28dc148dbdb17c3e01d20","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17401,"upload_time":"2021-12-22T16:46:53","upload_time_iso_8601":"2021-12-22T16:46:53.425818Z","url":"https://files.pythonhosted.org/packages/b5/92/c2f942dd4daaaff3de67ef5dd7453c040e43eb4c28d8ae4c98ec2d59c161/pytest_splinter4-0.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ba2240e208b07fc55a109b6fdbee9c622d8e0da0ca8b78656aa86448a1634e7f","md5":"a04211d814f11822f1bae95a9048c0d8","sha256":"8d0d03de94a0fdf04a76b39288d34f1e5cc90ec7cfc5d77c3d90b005b4dba015"},"downloads":-1,"filename":"pytest-splinter4-0.2.0.tar.gz","has_sig":false,"md5_digest":"a04211d814f11822f1bae95a9048c0d8","packagetype":"sdist","python_version":"source","requires_python":null,"size":20310,"upload_time":"2021-12-22T16:46:55","upload_time_iso_8601":"2021-12-22T16:46:55.468938Z","url":"https://files.pythonhosted.org/packages/ba/22/40e208b07fc55a109b6fdbee9c622d8e0da0ca8b78656aa86448a1634e7f/pytest-splinter4-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"7f64a79abe27191291d64882cf6672565ce048d22d27c62537e2a95cd7e42ec0","md5":"eb3ee36ec37692e2b84d3aac6a9e0b4d","sha256":"675167c2cc793264c1f7b1c4ddfc9460c69553077f54ca8c20a088bf3f7ba891"},"downloads":-1,"filename":"pytest_splinter4-0.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"eb3ee36ec37692e2b84d3aac6a9e0b4d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17074,"upload_time":"2022-06-11T21:43:14","upload_time_iso_8601":"2022-06-11T21:43:14.022083Z","url":"https://files.pythonhosted.org/packages/7f/64/a79abe27191291d64882cf6672565ce048d22d27c62537e2a95cd7e42ec0/pytest_splinter4-0.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8cb86bc717d6fcfb9757ee545d8259b5c669ec552690815f3f92e6db287f1419","md5":"6809f9661305eae857f69e38fb79a253","sha256":"6cce1bf1359a1937dd6f6fad87bc05414f0242720c74f1acdf18c995dc52661c"},"downloads":-1,"filename":"pytest-splinter4-0.3.0.tar.gz","has_sig":false,"md5_digest":"6809f9661305eae857f69e38fb79a253","packagetype":"sdist","python_version":"source","requires_python":null,"size":20403,"upload_time":"2022-06-11T21:43:16","upload_time_iso_8601":"2022-06-11T21:43:16.009258Z","url":"https://files.pythonhosted.org/packages/8c/b8/6bc717d6fcfb9757ee545d8259b5c669ec552690815f3f92e6db287f1419/pytest-splinter4-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"0.4.0":[{"comment_text":"","digests":{"blake2b_256":"2201e4ab89175daa262fb72fc4d79971b76ddb12ecbd9f3d7361507c3331ed82","md5":"2cbf1bdc359a088489e7d6059b505378","sha256":"799ef7cb8b652b12512615ed2e5a9bea517c9e0d230e3e980388d0096589756d"},"downloads":-1,"filename":"pytest_splinter4-0.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"2cbf1bdc359a088489e7d6059b505378","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":16972,"upload_time":"2024-02-01T16:58:42","upload_time_iso_8601":"2024-02-01T16:58:42.713756Z","url":"https://files.pythonhosted.org/packages/22/01/e4ab89175daa262fb72fc4d79971b76ddb12ecbd9f3d7361507c3331ed82/pytest_splinter4-0.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d1a25d0fb86b71e41d2ef664fc9845250c739dfe38d7a150c6d9d10b5b64dc89","md5":"c7ce02690d8c95a18f0f07709911ac1e","sha256":"23433e10602cd1dc3a566a639076ffead3034fec14bf3353f9a63226e11b98b9"},"downloads":-1,"filename":"pytest-splinter4-0.4.0.tar.gz","has_sig":false,"md5_digest":"c7ce02690d8c95a18f0f07709911ac1e","packagetype":"sdist","python_version":"source","requires_python":null,"size":21964,"upload_time":"2024-02-01T16:58:45","upload_time_iso_8601":"2024-02-01T16:58:45.731989Z","url":"https://files.pythonhosted.org/packages/d1/a2/5d0fb86b71e41d2ef664fc9845250c739dfe38d7a150c6d9d10b5b64dc89/pytest-splinter4-0.4.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"2201e4ab89175daa262fb72fc4d79971b76ddb12ecbd9f3d7361507c3331ed82","md5":"2cbf1bdc359a088489e7d6059b505378","sha256":"799ef7cb8b652b12512615ed2e5a9bea517c9e0d230e3e980388d0096589756d"},"downloads":-1,"filename":"pytest_splinter4-0.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"2cbf1bdc359a088489e7d6059b505378","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":16972,"upload_time":"2024-02-01T16:58:42","upload_time_iso_8601":"2024-02-01T16:58:42.713756Z","url":"https://files.pythonhosted.org/packages/22/01/e4ab89175daa262fb72fc4d79971b76ddb12ecbd9f3d7361507c3331ed82/pytest_splinter4-0.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d1a25d0fb86b71e41d2ef664fc9845250c739dfe38d7a150c6d9d10b5b64dc89","md5":"c7ce02690d8c95a18f0f07709911ac1e","sha256":"23433e10602cd1dc3a566a639076ffead3034fec14bf3353f9a63226e11b98b9"},"downloads":-1,"filename":"pytest-splinter4-0.4.0.tar.gz","has_sig":false,"md5_digest":"c7ce02690d8c95a18f0f07709911ac1e","packagetype":"sdist","python_version":"source","requires_python":null,"size":21964,"upload_time":"2024-02-01T16:58:45","upload_time_iso_8601":"2024-02-01T16:58:45.731989Z","url":"https://files.pythonhosted.org/packages/d1/a2/5d0fb86b71e41d2ef664fc9845250c739dfe38d7a150c6d9d10b5b64dc89/pytest-splinter4-0.4.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
