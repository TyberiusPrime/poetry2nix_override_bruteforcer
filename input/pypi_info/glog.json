{"info":{"author":"Benjamin Staffin","author_email":"benley@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Programming Language :: Python","Topic :: Software Development :: Libraries :: Python Modules","Topic :: System :: Logging"],"description":"glog for Python\n===============\n\n.. image:: https://travis-ci.org/benley/python-glog.svg?branch=master\n    :target: https://travis-ci.org/benley/python-glog\n\nA simple Google-style logging wrapper for Python.\n\nThis library attempts to greatly simplify logging in Python applications.\nNobody wants to spend hours pouring over the PEP 282 logger documentation, and\nalmost nobody actually needs things like loggers that can be reconfigured over\nthe network.  We just want to get on with writing our apps.\n\nStyled somewhat after the twitter.common.log_ interface, which in turn was\nmodeled after Google's internal python logger, which was `never actually\nreleased`_ to the wild, and which in turn was based on the `C++ glog library`_.\n\nCore benefits\n-------------\n\n- You and your code don't need to care about how logging works. Unless you\n  want to, of course.\n\n- No more complicated setup boilerplate!\n\n- Your apps and scripts will all have a consistent log format, and the same\n  predictable behaviours.\n\nThis library configures the root logger, so nearly everything you import that\nuses the standard Python logging module will play along nicely.\n\nBehaviours\n----------\n\n-  Messages are always written to stderr.\n\n-  Lines are prefixed with a google-style log prefix, of the form\n\n``E0924 22:19:15.123456 19552 filename.py:87] Log message blah blah``\n\nSplitting on spaces, the fields are:\n\n1. The first character is the log level, followed by MMDD (month, day)\n2. HH:MM:SS.microseconds\n3. Process ID\n4. basename\\_of\\_sourcefile.py:linenumber]\n5. The body of the log message.\n\nExample use\n-----------\n\n.. code:: python\n\n    import glog as log\n\n    log.setLevel(\"INFO\")  # Integer levels are also allowed.\n    log.info(\"It works.\")\n    log.warn(\"Something not ideal\")\n    log.error(\"Something went wrong\")\n    log.fatal(\"AAAAAAAAAAAAAAA!\")\n\nIf your app uses gflags_, it will automatically gain a ``--verbosity`` flag,\nand you can skip calling ``log.setLevel``.  Just import glog and start logging.\n\nCheck macros / assert helpers\n-----------------------------\n\n`Like the C++ version of glog`_, python-glog provides a set of check macros\n[1]_ that help document and enforce invariants.  These provide a detailed\nmessage indicating what values caused the assertion to fail, along with a stack\ntrace identifying the code-path that caused the failure, hopefully making it\neasier to reproduce the error.  Failed checks raise the FailedCheckException.\nYou may find these more convenient and/or more familiar than standard Python\nasserts, particularly if you are working in a mixed C++ and Python codebase.\n\n\n.. code:: python\n\n    import glog as log\n    import math\n\n    def compute_something(a):\n        log.check_eq(type(a), float) # require floating point types\n        log.check_ge(a, 0) # require non-negative values\n        value = math.sqrt(a)\n        return value\n\n    if __name__ == '__main__':\n        compute_something(10)\n\n\nProvided check functions:\n\n.. code:: python\n\n    check(condition)\n    check_eq(obj1, obj2)\n    check_ne(obj1, obj2)\n    check_le(obj1, obj2)\n    check_ge(obj1, obj2)\n    check_lt(obj1, obj2)\n    check_gt(obj1, obj2)\n    check_notnone(obj1, obj2)\n\n\nHappy logging!\n\n.. _twitter.common.log: https://github.com/twitter/commons/tree/master/src/python/twitter/common/log\n\n.. _never actually released: https://groups.google.com/d/msg/google-glog/a_JcyJ4p8MQ/Xu-vDPiuCCYJ\n\n.. _C++ glog library: https://github.com/google/glog\n\n.. _gflags: https://github.com/google/python-gflags\n\n.. _Like the C++ version of glog: https://htmlpreview.github.io/?https://github.com/google/glog/master/doc/glog.html#check\n\n.. [1] Technically these are functions, not macros.  Python does not have\n   syntactic macros in the sense that C++ and most lisp-like languages do.\n\n\n","description_content_type":null,"docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/benley/python-glog","keywords":"","license":"BSD","maintainer":"","maintainer_email":"","name":"glog","package_url":"https://pypi.org/project/glog/","platform":"any","project_url":"https://pypi.org/project/glog/","project_urls":{"Homepage":"https://github.com/benley/python-glog"},"provides_extra":null,"release_url":"https://pypi.org/project/glog/0.3.1/","requires_dist":["python-gflags (>=3.1)","six"],"requires_python":"","summary":"Simple Google-style logging wrapper for Python.","version":"0.3.1","yanked":false,"yanked_reason":null},"last_serial":2517738,"releases":{"0.1":[{"comment_text":"","digests":{"blake2b_256":"22dcbfecfdc70e8102f100b0260ef5171fc03df980a8cccc9bcc19dcdb897401","md5":"e849d6d6dd89194fe1977da1da49cd92","sha256":"953fd80122c48023d1148e6d1bda2763fcab59c8a81682bb298238a5935547b0"},"downloads":-1,"filename":"glog-0.1.tar.gz","has_sig":false,"md5_digest":"e849d6d6dd89194fe1977da1da49cd92","packagetype":"sdist","python_version":"source","requires_python":null,"size":3669,"upload_time":"2015-07-13T06:10:08","upload_time_iso_8601":"2015-07-13T06:10:08.691555Z","url":"https://files.pythonhosted.org/packages/22/dc/bfecfdc70e8102f100b0260ef5171fc03df980a8cccc9bcc19dcdb897401/glog-0.1.tar.gz","yanked":false,"yanked_reason":null}],"0.3":[{"comment_text":"","digests":{"blake2b_256":"4fdbfdcf8fe3215fbb35f1e12b4c2c3f41dceeb6ec50fe638ebe69d90379c989","md5":"ab2534df073a984837e9392313f040b4","sha256":"7ae782182340d91ec1dbff5c4c894a9c8a764513f75604a2e8c6b7332222751b"},"downloads":-1,"filename":"glog-0.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ab2534df073a984837e9392313f040b4","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":7454,"upload_time":"2016-10-03T00:38:10","upload_time_iso_8601":"2016-10-03T00:38:10.751101Z","url":"https://files.pythonhosted.org/packages/4f/db/fdcf8fe3215fbb35f1e12b4c2c3f41dceeb6ec50fe638ebe69d90379c989/glog-0.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"51f409d5b4d52c0d9d962aab55cdfbe3e0586812fe2a28f86602589122b3daf8","md5":"6ad048abe29092ed59acde92baa94fc4","sha256":"21b5070850aa59e393eb281eed91c433435aa261fae4b8dff1c8bdc8df44db62"},"downloads":-1,"filename":"glog-0.3.tar.gz","has_sig":false,"md5_digest":"6ad048abe29092ed59acde92baa94fc4","packagetype":"sdist","python_version":"source","requires_python":null,"size":5015,"upload_time":"2016-10-03T00:38:13","upload_time_iso_8601":"2016-10-03T00:38:13.446061Z","url":"https://files.pythonhosted.org/packages/51/f4/09d5b4d52c0d9d962aab55cdfbe3e0586812fe2a28f86602589122b3daf8/glog-0.3.tar.gz","yanked":false,"yanked_reason":null}],"0.3.1":[{"comment_text":"","digests":{"blake2b_256":"3942d2502683e9d9086cba5fb741c9b66c72ab1a852d046e1d54d2b80221b69f","md5":"717a5e3250ef4f6b39236f90bdf884f2","sha256":"88cee83dea8bddf73db7edbf5bd697237628389ef476c0a0ecad639c606189e5"},"downloads":-1,"filename":"glog-0.3.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"717a5e3250ef4f6b39236f90bdf884f2","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":7767,"upload_time":"2016-12-14T01:52:16","upload_time_iso_8601":"2016-12-14T01:52:16.671882Z","url":"https://files.pythonhosted.org/packages/39/42/d2502683e9d9086cba5fb741c9b66c72ab1a852d046e1d54d2b80221b69f/glog-0.3.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d77f082e2a23f8dff00bd98a7ff7db1b27a3cc66012f2db952a5fc00d8f66b13","md5":"00367eb69e7e20f4929725ca35f1a8a1","sha256":"b721edef6009eabc0b4d9f2619e153d2627a7b71a3657c8ed69f02ef7c78be97"},"downloads":-1,"filename":"glog-0.3.1.tar.gz","has_sig":false,"md5_digest":"00367eb69e7e20f4929725ca35f1a8a1","packagetype":"sdist","python_version":"source","requires_python":null,"size":5305,"upload_time":"2016-12-14T01:52:18","upload_time_iso_8601":"2016-12-14T01:52:18.216465Z","url":"https://files.pythonhosted.org/packages/d7/7f/082e2a23f8dff00bd98a7ff7db1b27a3cc66012f2db952a5fc00d8f66b13/glog-0.3.1.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"3942d2502683e9d9086cba5fb741c9b66c72ab1a852d046e1d54d2b80221b69f","md5":"717a5e3250ef4f6b39236f90bdf884f2","sha256":"88cee83dea8bddf73db7edbf5bd697237628389ef476c0a0ecad639c606189e5"},"downloads":-1,"filename":"glog-0.3.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"717a5e3250ef4f6b39236f90bdf884f2","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":7767,"upload_time":"2016-12-14T01:52:16","upload_time_iso_8601":"2016-12-14T01:52:16.671882Z","url":"https://files.pythonhosted.org/packages/39/42/d2502683e9d9086cba5fb741c9b66c72ab1a852d046e1d54d2b80221b69f/glog-0.3.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d77f082e2a23f8dff00bd98a7ff7db1b27a3cc66012f2db952a5fc00d8f66b13","md5":"00367eb69e7e20f4929725ca35f1a8a1","sha256":"b721edef6009eabc0b4d9f2619e153d2627a7b71a3657c8ed69f02ef7c78be97"},"downloads":-1,"filename":"glog-0.3.1.tar.gz","has_sig":false,"md5_digest":"00367eb69e7e20f4929725ca35f1a8a1","packagetype":"sdist","python_version":"source","requires_python":null,"size":5305,"upload_time":"2016-12-14T01:52:18","upload_time_iso_8601":"2016-12-14T01:52:18.216465Z","url":"https://files.pythonhosted.org/packages/d7/7f/082e2a23f8dff00bd98a7ff7db1b27a3cc66012f2db952a5fc00d8f66b13/glog-0.3.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
