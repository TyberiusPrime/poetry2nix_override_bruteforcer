{"info":{"author":"Jose Fonseca","author_email":"jose.r.fonseca@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 6 - Mature","Environment :: Console","Intended Audience :: Developers","License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)","Operating System :: OS Independent","Programming Language :: Python :: 3","Topic :: Software Development"],"description":"# About _gprof2dot_\n\nThis is a Python script to convert the output from many profilers into a [dot graph](https://www.graphviz.org/doc/info/lang.html).\n\nIt can:\n\n  * read output from:\n    * [Linux perf](https://perf.wiki.kernel.org/)\n    * [Valgrind's callgrind tool](https://valgrind.org/docs/manual/cl-manual.html)\n    * [OProfile](https://oprofile.sourceforge.net/)\n    * [Sysprof](http://www.sysprof.com/)\n    * [Xperf](https://learn.microsoft.com/en-us/windows-hardware/test/wpt/)\n    * [VTune](https://www.intel.com/content/www/us/en/developer/tools/oneapi/vtune-profiler.html)\n    * [Very Sleepy](https://www.codersnotes.com/sleepy/)\n    * [Python profilers](https://docs.python.org/3/library/profile.html#profile-stats)\n    * [Java's HPROF](https://docs.oracle.com/javase/7/docs/technotes/samples/hprof.html)\n    * prof, [gprof](https://sourceware.org/binutils/docs/gprof/)\n    * [DTrace](https://en.wikipedia.org/wiki/DTrace)\n    * stackcollapse from [FlameGraph](https://github.com/brendangregg/FlameGraph)\n  * prune nodes and edges below a certain threshold;\n  * use an heuristic to propagate time inside mutually recursive functions;\n  * use color efficiently to draw attention to hot-spots;\n  * work on any platform where Python and Graphviz is available, i.e, virtually anywhere.\n\n**If you want an interactive viewer for the graphs generated by _gprof2dot_, check [xdot.py](https://github.com/jrfonseca/xdot.py).**\n\n\n# Status\n\n_gprof2dot_ currently fulfills my needs, and I have little or no time for its\nmaintenance.  So I'm afraid that any requested features are unlikely to be\nimplemented, and I might be slow processing issue reports or pull requests.\n\n[![Build Status](https://github.com/jrfonseca/gprof2dot/actions/workflows/build.yml/badge.svg?branch=master)](https://github.com/jrfonseca/gprof2dot/actions/workflows/build.yml)\n[![codecov](https://codecov.io/gh/jrfonseca/gprof2dot/branch/master/graph/badge.svg?token=pBvnAuazx0)](https://codecov.io/gh/jrfonseca/gprof2dot)\n\n\n# Example\n\nThis is the result from the [example data](https://linuxgazette.net/100/misc/vinayak/overall-profile.txt) in the [Linux Gazette article](https://linuxgazette.net/100/vinayak.html) with the default settings:\n\n![Sample](./sample.svg)\n\n# Requirements\n\n  * [Python](https://www.python.org/download/): known to work with version >=3.8; it will most likely _not_ work with earlier releases.\n  * [Graphviz](https://www.graphviz.org/Download.php): tested with version 2.26.3, but should work fine with other versions.\n\n## Windows users\n\n  * Download and install [Python for Windows](https://www.python.org/download/)\n  * Download and install [Graphviz for Windows](https://www.graphviz.org/Download_windows.php)\n\n## Linux users\n\nOn Debian/Ubuntu run:\n\n    apt-get install python3 graphviz\n\nOn RedHat/Fedora run\n\n    yum install python3 graphviz\n\n\n# Download\n\n  * [PyPI](https://pypi.python.org/pypi/gprof2dot/)\n\n        pip install gprof2dot\n\n  * [Standalone script](https://raw.githubusercontent.com/jrfonseca/gprof2dot/master/gprof2dot.py)\n\n  * [Git repository](https://github.com/jrfonseca/gprof2dot)\n\n\n# Documentation\n\n## Usage\n\n```\nUsage: \n\tgprof2dot.py [options] [file] ...\n\nOptions:\n  -h, --help            show this help message and exit\n  -o FILE, --output=FILE\n                        output filename [stdout]\n  -n PERCENTAGE, --node-thres=PERCENTAGE\n                        eliminate nodes below this threshold [default: 0.5]\n  -e PERCENTAGE, --edge-thres=PERCENTAGE\n                        eliminate edges below this threshold [default: 0.1]\n  -f FORMAT, --format=FORMAT\n                        profile format: axe, callgrind, collapse, dtrace,\n                        hprof, json, oprofile, perf, prof, pstats, sleepy,\n                        sysprof or xperf [default: prof]\n  --total=TOTALMETHOD   preferred method of calculating total time: callratios\n                        or callstacks (currently affects only perf format)\n                        [default: callratios]\n  -c THEME, --colormap=THEME\n                        color map: bw, color, gray, pink or print [default:\n                        color]\n  -s, --strip           strip function parameters, template parameters, and\n                        const modifiers from demangled C++ function names\n  --color-nodes-by-selftime\n                        color nodes by self time, rather than by total time\n                        (sum of self and descendants)\n  -w, --wrap            wrap function names\n  --show-samples        show function samples\n  --node-label=MEASURE  measurements to on show the node (can be specified\n                        multiple times): self-time, self-time-percentage,\n                        total-time or total-time-percentage [default: total-\n                        time-percentage, self-time-percentage]\n  --list-functions=LIST_FUNCTIONS\n                        list functions available for selection in -z or -l,\n                        requires selector argument ( use '+' to select all).\n                        Recall that the selector argument is used with\n                        Unix/Bash globbing/pattern matching, and that entries\n                        are formatted '<pkg>:<linenum>:<function>'. When\n                        argument starts with '%', a dump of all available\n                        information is performed for selected entries,  after\n                        removal of leading '%'.\n  -z ROOT, --root=ROOT  prune call graph to show only descendants of specified\n                        root function\n  -l LEAF, --leaf=LEAF  prune call graph to show only ancestors of specified\n                        leaf function\n  --depth=DEPTH         prune call graph to show only descendants or ancestors\n                        until specified depth\n  --skew=THEME_SKEW     skew the colorization curve.  Values < 1.0 give more\n                        variety to lower percentages.  Values > 1.0 give less\n                        variety to lower percentages\n  -p FILTER_PATHS, --path=FILTER_PATHS\n                        Filter all modules not in a specified path\n```\n\n## Examples\n\n### Linux perf\n\n    perf record -g -- /path/to/your/executable\n    perf script | c++filt | gprof2dot.py -f perf | dot -Tpng -o output.png\n\n### oprofile\n\n    opcontrol --callgraph=16\n    opcontrol --start\n    /path/to/your/executable arg1 arg2\n    opcontrol --stop\n    opcontrol --dump\n    opreport -cgf | gprof2dot.py -f oprofile | dot -Tpng -o output.png\n\n### xperf\n\nIf you're not familiar with xperf then read [this excellent article](https://blogs.msdn.com/b/pigscanfly/archive/2009/08/06/stack-walking-in-xperf.aspx) first. Then do:\n\n  * Start xperf as\n\n        xperf -on Latency -stackwalk profile\n\n  * Run your application.\n\n  * Save the data.\n`\n        xperf -d output.etl\n\n  * Start the visualizer:\n\n        xperf output.etl\n\n  * In _Trace_ menu, select _Load Symbols_. _Configure Symbol Paths_ if necessary.\n\n  * Select an area of interest on the _CPU sampling graph_, right-click, and select _Summary Table_.\n\n  * In the _Columns_ menu, make sure the _Stack_ column is enabled and visible.\n\n  * Right click on a row, choose _Export Full Table_, and save to _output.csv_.\n\n  * Then invoke gprof2dot as\n\n        gprof2dot.py -f xperf output.csv | dot -Tpng -o output.png\n\n### VTune Amplifier XE\n\n  * Collect profile data as (also can be done from GUI):\n\n        amplxe-cl -collect hotspots -result-dir output -- your-app\n\n  * Visualize profile data as:\n\n        amplxe-cl -report gprof-cc -result-dir output -format text -report-output output.txt\n        gprof2dot.py -f axe output.txt | dot -Tpng -o output.png\n\nSee also [Kirill Rogozhin's blog post](http://web.archive.org/web/20130506045856/http://software.intel.com:80/en-us/blogs/2013/04/05/making-visualized-call-graph-from-intel-vtune-amplifier-xe-results).\n\n### gprof\n\n    /path/to/your/executable arg1 arg2\n    gprof path/to/your/executable | gprof2dot.py | dot -Tpng -o output.png\n\n### python profile\n\n    python -m profile -o output.pstats path/to/your/script arg1 arg2\n    gprof2dot.py -f pstats output.pstats | dot -Tpng -o output.png\n\n### python cProfile (formerly known as lsprof)\n\n    python -m cProfile -o output.pstats path/to/your/script arg1 arg2\n    gprof2dot.py -f pstats output.pstats | dot -Tpng -o output.png\n\n### Java HPROF\n\n    java -agentlib:hprof=cpu=samples ...\n    gprof2dot.py -f hprof java.hprof.txt | dot -Tpng -o output.png\n\nSee [Russell Power's blog post](http://web.archive.org/web/20220122110828/http://rjp.io/2012/07/03/java-profiling/) for details.\n\n### DTrace\n\n    dtrace -x ustackframes=100 -n 'profile-97 /pid == 12345/ { @[ustack()] = count(); } tick-60s { exit(0); }' -o out.user_stacks\n    gprof2dot.py -f dtrace out.user_stacks | dot -Tpng -o output.png\n\n    # Notice: sometimes, the dtrace outputs format may be latin-1, and gprof2dot will fail to parse it.\n    # To solve this problem, you should use iconv to convert to UTF-8 explicitly.\n    # TODO: add an encoding flag to tell gprof2dot how to decode the profile file.\n    iconv -f ISO-8859-1 -t UTF-8 out.user_stacks | gprof2dot.py -f dtrace\n\n### stackcollapse\n\nBrendan Gregg's FlameGraph tool takes as its input a text file containing one\nline per sample. This format can be generated from various other inputs using\nthe `stackcollapse` scripts in the [FlameGraph\nrepository](https://github.com/brendangregg/FlameGraph). It can also be\ngenerated by tools such as [py-spy](https://github.com/benfred/py-spy).\n\nExample usage:\n\n  * Perf\n\n        perf record -g -- /path/to/your/executable\n        perf script | FlameGraph/stackcollapse-perf.pl > out.collapse\n        gprof2dot.py -f collapse out.collapse | dot -Tpng -o output.png\n\n  * Py-spy\n\n        py-spy record -p <pidfile> -f raw -o out.collapse\n        gprof2dot.py -f collapse out.collapse | dot -Tpng -o output.png\n\n## Output\n\nA node in the output graph represents a function and has the following layout:\n\n    +------------------------------+\n    |        function name         |\n    | total time % ( self time % ) |\n    |         total calls          |\n    +------------------------------+\n\nwhere:\n\n  * _total time %_ is the percentage of the running time spent in this function and all its children;\n  * _self time %_ is the percentage of the running time spent in this function alone;\n  * _total calls_ is the total number of times this function was called (including recursive calls).\n\nAn edge represents the calls between two functions and has the following layout:\n\n               total time %\n                  calls\n    parent --------------------> children\n\nWhere:\n\n  * _total time %_ is the percentage of the running time transferred from the children to this parent (if available);\n  * _calls_ is the number of calls the parent function called the children.\n\nNote that in recursive cycles, the _total time %_ in the node is the same for the whole functions in the cycle, and there is no _total time %_ figure in the edges inside the cycle, since such figure would make no sense.\n\nThe color of the nodes and edges varies according to the _total time %_ value. In the default _temperature-like_ color-map, functions where most time is spent (hot-spots) are marked as saturated red, and functions where little time is spent are marked as dark blue. Note that functions where negligible or no time is spent do not appear in the graph by default.\n\n## Listing functions\n\nThe flag `--list-functions` permits listing the function entries found in the `gprof` input.\nThis is intended as a tool to prepare for utilisations with the `--leaf` (`-l`) \nor `--root` (`-z`) flags.\n\n  ~~~\n  prof2dot.py -f pstats /tmp/myLog.profile  --list-functions \"test_segments:*:*\" \n    \n  test_segments:5:<module>,\n  test_segments:206:TestSegments,\n  test_segments:46:<lambda>\n  ~~~\n\n  - The selector argument is used with Unix/Bash globbing/pattern matching, in the same\n    fashion as performed by the `-l` and `-z` flags.\n\t  \n  - Entries are formatted '\\<pkg\\>:\\<linenum\\>:\\<function\\>'. \n\t\n  - When selector argument starts with '%', a dump of all available information is \n\tperformed for selected entries,   after removal of selector's leading '%'. If \n\tselector is \"+\" or \"*\", the full list of functions is printed.\n\n\n## Frequently Asked Questions\n\n### How can I generate a complete call graph?\n\nBy default `gprof2dot.py` generates a _partial_ call graph, excluding nodes and edges with little or no impact in the total computation time. If you want the full call graph then set a zero threshold for nodes and edges via the `-n` / `--node-thres`  and `-e` / `--edge-thres` options, as:\n\n    gprof2dot.py -n0 -e0\n\n### The node labels are too wide. How can I narrow them?\n\nThe node labels can get very wide when profiling C++ code, due to inclusion of scope, function arguments, and template arguments in demangled C++ function names.\n\nIf you do not need function and template arguments information, then pass the `-s` / `--strip` option to strip them.\n\nIf you want to keep all that information, or if the labels are still too wide, then you can pass the `-w` / `--wrap`, to wrap the labels. Note that because `dot` does not wrap labels automatically the label margins will not be perfectly aligned.\n\n### Why there is no output, or it is all in the same color?\n\nLikely, the total execution time is too short, so there is not enough precision in the profile to determine where time is being spent.\n\nYou can still force displaying the whole graph by setting a zero threshold for nodes and edges via the `-n` / `--node-thres`  and `-e` / `--edge-thres` options, as:\n\n    gprof2dot.py -n0 -e0\n\nBut to get meaningful results you will need to find a way to run the program for a longer time period (aggregate results from multiple runs).\n\n### Why don't the percentages add up?\n\nYou likely have an execution time too short, causing the round-off errors to be large.\n\nSee question above for ways to increase execution time.\n\n### Which options should I pass to gcc when compiling for profiling?\n\nOptions which are _essential_ to produce suitable results are:\n\n  * **`-g`** : produce debugging information\n  * **`-fno-omit-frame-pointer`** : use the frame pointer (frame pointer usage is disabled by default in some architectures like x86\\_64 and for some optimization levels; it is impossible to walk the call stack without it)\n\n_If_ you're using gprof you will also need `-pg` option, but nowadays you can get much better results with other profiling tools, most of which require no special code instrumentation when compiling.\n\nYou want the code you are profiling to be as close as possible as the code that you will\nbe releasing. So you _should_ include all options that you use in your release code, typically:\n\n  * **`-O2`** : optimizations that do not involve a space-speed tradeoff\n  * **`-DNDEBUG`** : disable debugging code in the standard library (such as the assert macro)\n\nHowever many of the optimizations performed by gcc interfere with the accuracy/granularity of the profiling results.  You _should_ pass these options to disable those particular optimizations:\n\n  * **`-fno-inline-functions`** : do not inline functions into their parents (otherwise the time spent on these functions will be attributed to the caller)\n  * **`-fno-inline-functions-called-once`** : similar to above\n  * **`-fno-optimize-sibling-calls`** : do not optimize sibling and tail recursive calls (otherwise tail calls may be attributed to the parent function)\n\nIf the granularity is still too low, you _may_ pass these options to achieve finer granularity:\n\n  * **`-fno-default-inline`** : do not make member functions inline by default merely because they are defined inside the class scope\n  * **`-fno-inline`** : do not pay attention to the inline keyword\nNote however that with these last options the timings of functions called many times will be distorted due to the function call overhead. This is particularly true for typical C++ code which _expects_ that these optimizations to be done for decent performance.\n\nSee the [full list of gcc optimization options](https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html) for more information.\n\n# Links\n\nSee the [wiki](https://github.com/jrfonseca/gprof2dot/wiki) for external resources, including complementary/alternative tools.\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/jrfonseca/gprof2dot","keywords":null,"license":"LGPL","maintainer":null,"maintainer_email":null,"name":"gprof2dot","package_url":"https://pypi.org/project/gprof2dot/","platform":null,"project_url":"https://pypi.org/project/gprof2dot/","project_urls":{"Homepage":"https://github.com/jrfonseca/gprof2dot"},"provides_extra":null,"release_url":"https://pypi.org/project/gprof2dot/2024.6.6/","requires_dist":null,"requires_python":">=3.8","summary":"Generate a dot graph from the output of several profilers.","version":"2024.6.6","yanked":false,"yanked_reason":null},"last_serial":23551749,"releases":{"1.0":[{"comment_text":"","digests":{"blake2b_256":"ffc01b68866cb43f0a31e4e27f10714ee702792cc1c482e27fa1a87ff86a8d1e","md5":"519db08c9529c02479537cc5dc68fecb","sha256":"702a67e7b379001731e402d1a2e62e43430b5f76ae4cea657002dbc1aaa93ced"},"downloads":-1,"filename":"gprof2dot-1.0.zip","has_sig":false,"md5_digest":"519db08c9529c02479537cc5dc68fecb","packagetype":"sdist","python_version":"source","requires_python":null,"size":18405,"upload_time":"2009-08-31T22:29:34","upload_time_iso_8601":"2009-08-31T22:29:34.678637Z","url":"https://files.pythonhosted.org/packages/ff/c0/1b68866cb43f0a31e4e27f10714ee702792cc1c482e27fa1a87ff86a8d1e/gprof2dot-1.0.zip","yanked":false,"yanked_reason":null}],"2014.03.10":[{"comment_text":"","digests":{"blake2b_256":"911bb5e244bc9837659923232bd552b060a375f6f6ed29d103b58c63ec401d35","md5":"e3c12bae8cb7d3acb9088e1450accf18","sha256":"91db759ad0fc71dc4513d2760f9ae72d3f7fa4e9037874a5f19e58583e24b39a"},"downloads":-1,"filename":"gprof2dot-2014.03.10.tar.gz","has_sig":false,"md5_digest":"e3c12bae8cb7d3acb9088e1450accf18","packagetype":"sdist","python_version":"source","requires_python":null,"size":22414,"upload_time":"2014-03-10T13:55:13","upload_time_iso_8601":"2014-03-10T13:55:13.400480Z","url":"https://files.pythonhosted.org/packages/91/1b/b5e244bc9837659923232bd552b060a375f6f6ed29d103b58c63ec401d35/gprof2dot-2014.03.10.tar.gz","yanked":false,"yanked_reason":null}],"2014.03.12":[{"comment_text":"","digests":{"blake2b_256":"9ad3a786826cd93c8444d5b11fa6132fb882703e2cd635c8da3dad72e7c063d2","md5":"4e520475d52e7b95fd0c7e9d28c5bedd","sha256":"854f5b2759275482c58cbaff89d7e74b32a580b14f22c5f3970212377d110454"},"downloads":-1,"filename":"gprof2dot-2014.03.12.tar.gz","has_sig":false,"md5_digest":"4e520475d52e7b95fd0c7e9d28c5bedd","packagetype":"sdist","python_version":"source","requires_python":null,"size":22413,"upload_time":"2014-03-12T15:53:33","upload_time_iso_8601":"2014-03-12T15:53:33.557368Z","url":"https://files.pythonhosted.org/packages/9a/d3/a786826cd93c8444d5b11fa6132fb882703e2cd635c8da3dad72e7c063d2/gprof2dot-2014.03.12.tar.gz","yanked":false,"yanked_reason":null}],"2014.09.29":[{"comment_text":"","digests":{"blake2b_256":"7a3259580756117afd74c1ab0c6c6740018e5ca632004d3325d1ec0c0a7fbb5c","md5":"c8fed327aca813652b996589e21d8dd2","sha256":"8a7835344c731e39d9c5158ad5e3fab6b45ae30fc730b3dd3efe25ba28cf9c50"},"downloads":-1,"filename":"gprof2dot-2014.09.29.tar.gz","has_sig":false,"md5_digest":"c8fed327aca813652b996589e21d8dd2","packagetype":"sdist","python_version":"source","requires_python":null,"size":21828,"upload_time":"2014-09-29T11:09:42","upload_time_iso_8601":"2014-09-29T11:09:42.144124Z","url":"https://files.pythonhosted.org/packages/7a/32/59580756117afd74c1ab0c6c6740018e5ca632004d3325d1ec0c0a7fbb5c/gprof2dot-2014.09.29.tar.gz","yanked":false,"yanked_reason":null}],"2015.02.03":[{"comment_text":"","digests":{"blake2b_256":"238b4ef171715d82e1e0a8cc6f4a0a6209b1a9fd77c044b16fdd6778e242faef","md5":"b026772f1cc8f7f203143855e0316443","sha256":"9bdebb71a7c3daba1430de4486ef620e418a43bb051b30875d02f657f9c69d65"},"downloads":-1,"filename":"gprof2dot-2015.02.03.tar.gz","has_sig":false,"md5_digest":"b026772f1cc8f7f203143855e0316443","packagetype":"sdist","python_version":"source","requires_python":null,"size":21809,"upload_time":"2015-02-03T21:25:00","upload_time_iso_8601":"2015-02-03T21:25:00.024637Z","url":"https://files.pythonhosted.org/packages/23/8b/4ef171715d82e1e0a8cc6f4a0a6209b1a9fd77c044b16fdd6778e242faef/gprof2dot-2015.02.03.tar.gz","yanked":false,"yanked_reason":null}],"2015.12.1":[{"comment_text":"","digests":{"blake2b_256":"b9347bf93c1952d40fa5c95ad963f4d8344b61ef58558632402eca18e6c14127","md5":"e23bf4e2f94db032750c193384b4165b","sha256":"1c2c00870a4063786cc3040f780bc339fb9c0c4f91fd76b1dec2c9a40a62616d"},"downloads":-1,"filename":"gprof2dot-2015.12.1.tar.gz","has_sig":false,"md5_digest":"e23bf4e2f94db032750c193384b4165b","packagetype":"sdist","python_version":"source","requires_python":null,"size":22058,"upload_time":"2015-12-01T10:07:26","upload_time_iso_8601":"2015-12-01T10:07:26.936562Z","url":"https://files.pythonhosted.org/packages/b9/34/7bf93c1952d40fa5c95ad963f4d8344b61ef58558632402eca18e6c14127/gprof2dot-2015.12.1.tar.gz","yanked":false,"yanked_reason":null}],"2016.10.12":[{"comment_text":"","digests":{"blake2b_256":"44303180b70ddd51d210d59da1b23a4078090d01427d8692ed60a20480812929","md5":"bf35c3594b61d8d1196891c4fc8ee914","sha256":"5c54f15ef1881bfef33c6fded952b88f6ad9982df3baf6019d59aaa9b04fb335"},"downloads":-1,"filename":"gprof2dot-2016.10.12.tar.gz","has_sig":false,"md5_digest":"bf35c3594b61d8d1196891c4fc8ee914","packagetype":"sdist","python_version":"source","requires_python":null,"size":22675,"upload_time":"2016-10-12T18:57:52","upload_time_iso_8601":"2016-10-12T18:57:52.718758Z","url":"https://files.pythonhosted.org/packages/44/30/3180b70ddd51d210d59da1b23a4078090d01427d8692ed60a20480812929/gprof2dot-2016.10.12.tar.gz","yanked":false,"yanked_reason":null}],"2016.10.13":[{"comment_text":"","digests":{"blake2b_256":"a0e073c71baed306f0402a00a94ffc7b2be94ad1296dfcb8b46912655b93154c","md5":"0125401f15fd2afe1df686a76c64a4fd","sha256":"48c1e168c28b8a8eb23bf30fda78fe2ef218269a41505341ec27c27083e47cf4"},"downloads":-1,"filename":"gprof2dot-2016.10.13.tar.gz","has_sig":false,"md5_digest":"0125401f15fd2afe1df686a76c64a4fd","packagetype":"sdist","python_version":"source","requires_python":null,"size":22264,"upload_time":"2016-10-13T15:17:37","upload_time_iso_8601":"2016-10-13T15:17:37.370231Z","url":"https://files.pythonhosted.org/packages/a0/e0/73c71baed306f0402a00a94ffc7b2be94ad1296dfcb8b46912655b93154c/gprof2dot-2016.10.13.tar.gz","yanked":false,"yanked_reason":null}],"2017.9.19":[{"comment_text":"","digests":{"blake2b_256":"9d36f977122502979f3dfb50704979c9ed70e6b620787942b089bf1af15f5aba","md5":"cda2d552bb0d0b9f16e6824a9aabd225","sha256":"cebc7aa2782fd813ead415ea1fae3409524343485eadc7fb60ef5bd1e810309e"},"downloads":-1,"filename":"gprof2dot-2017.9.19.tar.gz","has_sig":false,"md5_digest":"cda2d552bb0d0b9f16e6824a9aabd225","packagetype":"sdist","python_version":"source","requires_python":null,"size":23558,"upload_time":"2017-09-19T09:04:44","upload_time_iso_8601":"2017-09-19T09:04:44.613906Z","url":"https://files.pythonhosted.org/packages/9d/36/f977122502979f3dfb50704979c9ed70e6b620787942b089bf1af15f5aba/gprof2dot-2017.9.19.tar.gz","yanked":false,"yanked_reason":null}],"2019.11.30":[{"comment_text":"","digests":{"blake2b_256":"fd773158821acc45cc26d5815d4250275d03c254572ff53c0388af8df168ce78","md5":"c5e1b00db530b3edef1e1443022d26e7","sha256":"b43fe04ebb3dfe181a612bbfc69e90555b8957022ad6a466f0308ed9c7f22e99"},"downloads":-1,"filename":"gprof2dot-2019.11.30.tar.gz","has_sig":false,"md5_digest":"c5e1b00db530b3edef1e1443022d26e7","packagetype":"sdist","python_version":"source","requires_python":null,"size":31388,"upload_time":"2019-11-30T20:47:20","upload_time_iso_8601":"2019-11-30T20:47:20.102447Z","url":"https://files.pythonhosted.org/packages/fd/77/3158821acc45cc26d5815d4250275d03c254572ff53c0388af8df168ce78/gprof2dot-2019.11.30.tar.gz","yanked":false,"yanked_reason":null}],"2021.2.21":[{"comment_text":"","digests":{"blake2b_256":"0f8011d3ec1703cc61606ddc68851747d1d1df3700d5e6c2b559af6dbeb398c5","md5":"bafd2e4b3d6f1cd62795c90cff5b3ad9","sha256":"1223189383b53dcc8ecfd45787ac48c0ed7b4dbc16ee8b88695d053eea1acabf"},"downloads":-1,"filename":"gprof2dot-2021.2.21.tar.gz","has_sig":false,"md5_digest":"bafd2e4b3d6f1cd62795c90cff5b3ad9","packagetype":"sdist","python_version":"source","requires_python":null,"size":31709,"upload_time":"2021-02-21T19:27:05","upload_time_iso_8601":"2021-02-21T19:27:05.589822Z","url":"https://files.pythonhosted.org/packages/0f/80/11d3ec1703cc61606ddc68851747d1d1df3700d5e6c2b559af6dbeb398c5/gprof2dot-2021.2.21.tar.gz","yanked":false,"yanked_reason":null}],"2022.7.29":[{"comment_text":"","digests":{"blake2b_256":"1e962735e0238be958d0a0b578fdfb46ff175869e462351805faab5ce4cae2d7","md5":"b4624a481738991d68e0926c9d31aa59","sha256":"f165b3851d3c52ee4915eb1bd6cca571e5759823c2cd0f71a79bda93c2dc85d6"},"downloads":-1,"filename":"gprof2dot-2022.7.29-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b4624a481738991d68e0926c9d31aa59","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":34080,"upload_time":"2022-07-29T14:39:54","upload_time_iso_8601":"2022-07-29T14:39:54.059277Z","url":"https://files.pythonhosted.org/packages/1e/96/2735e0238be958d0a0b578fdfb46ff175869e462351805faab5ce4cae2d7/gprof2dot-2022.7.29-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ab0bfc056b26a90c1836aa6c6e1332372dc13050d384f017e388131854ead8cf","md5":"e5cc9688e03be98748901fc513175573","sha256":"45b4d298bd36608fccf9511c3fd88a773f7a1abc04d6cd39445b11ba43133ec5"},"downloads":-1,"filename":"gprof2dot-2022.7.29.tar.gz","has_sig":false,"md5_digest":"e5cc9688e03be98748901fc513175573","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":33948,"upload_time":"2022-07-29T14:39:55","upload_time_iso_8601":"2022-07-29T14:39:55.905720Z","url":"https://files.pythonhosted.org/packages/ab/0b/fc056b26a90c1836aa6c6e1332372dc13050d384f017e388131854ead8cf/gprof2dot-2022.7.29.tar.gz","yanked":false,"yanked_reason":null}],"2024.6.5":[{"comment_text":"","digests":{"blake2b_256":"9ea40de1fb2a9baf2a70e4bc95e125a64da70a902273bfcff0a0b4aad0f78c72","md5":"863570fa71cc9a2e37c32e2e6ed62a6f","sha256":"0be69ac4f5e0d6f57e0c627fa8f6053bdca6a7a226ea6fd8a74b69c845c7d2df"},"downloads":-1,"filename":"gprof2dot-2024.6.5-py2.py3-none-any.whl","has_sig":false,"md5_digest":"863570fa71cc9a2e37c32e2e6ed62a6f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":34763,"upload_time":"2024-06-05T17:52:31","upload_time_iso_8601":"2024-06-05T17:52:31.418757Z","url":"https://files.pythonhosted.org/packages/9e/a4/0de1fb2a9baf2a70e4bc95e125a64da70a902273bfcff0a0b4aad0f78c72/gprof2dot-2024.6.5-py2.py3-none-any.whl","yanked":true,"yanked_reason":"Wrong dependencies"},{"comment_text":"","digests":{"blake2b_256":"fee88a8ea64ca67aaeea7b32ec6950d31d8751a07529db04e6053c4a8b2e8ca6","md5":"bc7e530398031fe98c7fd6eff8e1639b","sha256":"7564e4483f710d463bca1f27668aa595faaf0beee8ad0461df063a44305122a0"},"downloads":-1,"filename":"gprof2dot-2024.6.5.tar.gz","has_sig":false,"md5_digest":"bc7e530398031fe98c7fd6eff8e1639b","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":36539,"upload_time":"2024-06-05T17:52:33","upload_time_iso_8601":"2024-06-05T17:52:33.171896Z","url":"https://files.pythonhosted.org/packages/fe/e8/8a8ea64ca67aaeea7b32ec6950d31d8751a07529db04e6053c4a8b2e8ca6/gprof2dot-2024.6.5.tar.gz","yanked":true,"yanked_reason":"Wrong dependencies"}],"2024.6.6":[{"comment_text":"","digests":{"blake2b_256":"ae2715c4d20871a86281e2bacde9e9f634225d1c2ed0db072f98acf201022411","md5":"01334bff99279568e2c7a2bfc8017767","sha256":"45b14ad7ce64e299c8f526881007b9eb2c6b75505d5613e96e66ee4d5ab33696"},"downloads":-1,"filename":"gprof2dot-2024.6.6-py2.py3-none-any.whl","has_sig":false,"md5_digest":"01334bff99279568e2c7a2bfc8017767","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":34763,"upload_time":"2024-06-06T05:48:47","upload_time_iso_8601":"2024-06-06T05:48:47.774816Z","url":"https://files.pythonhosted.org/packages/ae/27/15c4d20871a86281e2bacde9e9f634225d1c2ed0db072f98acf201022411/gprof2dot-2024.6.6-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"321116fc5b985741378812223f2c6213b0a95cda333b797def622ac702d28e81","md5":"7a29a3c2c9515fc83a697c3a0847ebaf","sha256":"fa1420c60025a9eb7734f65225b4da02a10fc6dd741b37fa129bc6b41951e5ab"},"downloads":-1,"filename":"gprof2dot-2024.6.6.tar.gz","has_sig":false,"md5_digest":"7a29a3c2c9515fc83a697c3a0847ebaf","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":36536,"upload_time":"2024-06-06T05:48:49","upload_time_iso_8601":"2024-06-06T05:48:49.019512Z","url":"https://files.pythonhosted.org/packages/32/11/16fc5b985741378812223f2c6213b0a95cda333b797def622ac702d28e81/gprof2dot-2024.6.6.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"ae2715c4d20871a86281e2bacde9e9f634225d1c2ed0db072f98acf201022411","md5":"01334bff99279568e2c7a2bfc8017767","sha256":"45b14ad7ce64e299c8f526881007b9eb2c6b75505d5613e96e66ee4d5ab33696"},"downloads":-1,"filename":"gprof2dot-2024.6.6-py2.py3-none-any.whl","has_sig":false,"md5_digest":"01334bff99279568e2c7a2bfc8017767","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":34763,"upload_time":"2024-06-06T05:48:47","upload_time_iso_8601":"2024-06-06T05:48:47.774816Z","url":"https://files.pythonhosted.org/packages/ae/27/15c4d20871a86281e2bacde9e9f634225d1c2ed0db072f98acf201022411/gprof2dot-2024.6.6-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"321116fc5b985741378812223f2c6213b0a95cda333b797def622ac702d28e81","md5":"7a29a3c2c9515fc83a697c3a0847ebaf","sha256":"fa1420c60025a9eb7734f65225b4da02a10fc6dd741b37fa129bc6b41951e5ab"},"downloads":-1,"filename":"gprof2dot-2024.6.6.tar.gz","has_sig":false,"md5_digest":"7a29a3c2c9515fc83a697c3a0847ebaf","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":36536,"upload_time":"2024-06-06T05:48:49","upload_time_iso_8601":"2024-06-06T05:48:49.019512Z","url":"https://files.pythonhosted.org/packages/32/11/16fc5b985741378812223f2c6213b0a95cda333b797def622ac702d28e81/gprof2dot-2024.6.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
