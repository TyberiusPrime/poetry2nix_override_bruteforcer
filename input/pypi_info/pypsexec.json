{"info":{"author":"Jordan Borean","author_email":"jborean93@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","License :: OSI Approved :: MIT License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description":"# Python PsExec Library\n\n[![Test workflow](https://github.com/jborean93/pypsexec/actions/workflows/ci.yml/badge.svg)](https://github.com/jborean93/pypsexec/actions/workflows/ci.yml)\n[![codecov](https://codecov.io/gh/jborean93/pypsexec/branch/master/graph/badge.svg?token=Hi2Nk4RfMF)](https://codecov.io/gh/jborean93/pypsexec)\n[![PyPI version](https://badge.fury.io/py/pypsexec.svg)](https://badge.fury.io/py/pypsexec)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/jborean93/pypsexec/blob/master/LICENSE)\n\nThis library can run commands on a remote Windows host through Python. This\nmeans that it can be run on any host with Python and does not require any\nbinaries to be present or a specific OS. It uses SMB/RPC to executable commands\nin a similar fashion to the popular PsExec tool. More details on this tool\ncan be read on\n[this blog post](https://www.bloggingforlogging.com/2018/03/12/introducing-psexec-for-python/).\n\nThe executable wrapper that is sent to the service is based on the\n[PAExec](https://github.com/poweradminllc/PAExec) library. PAExec is an free,\nredistributable and open source equivalent to Microsoft's\n[PsExec](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec)\napplication. This program is stored as a binary in this package and is used\nto run the remote service and start the process execution.\n\nI would like to thank the developers of Power Admin for creating this library\nas it has made this library a lot less complex than what it would have been.\n\n\n## Features\n\nWith pypsexec you can run commands of a remote Windows host like you would with\nPsExec. Current you can use pypsexec to do the following;\n\n* Run as a specific local or domain user or the user\n* Run as the local SYSTEM account\n* Run as an interactive process\n* Specify the session the interactive process should run on\n* Specify the run level of the user token, `highest` or `limited`\n* Set the priority of the process\n* Set a timeout for the remote process\n* Send input through the stdin pipe to the running process\n* Set the processors the process can run on\n\n\n## Further Info\n\nWhile this info is not necessary for you to use this library it can help people\nunderstand what is happening under the hood. This library runs the following\nsteps when running a command;\n\n* Create an SMB connection to the host\n* Copies across the PAExec binary to the `ADMIN$` share of the remote host\n* Binds the Windows Service Manager to the opened `IPC$` tree using RPC\n* Creates and starts a Windows service as the `SYSTEM` account to run the binary copied\n* Connect to the PAExec named pipe the service creates\n* Sends the process details to the PAExec service through the pipe\n* Send a request to the PAExec service to start the process based on the settings sent\n* Connect to the newly spawned process's stdout, stderr, stdin pipe (if not interactive or async)\n* Read the stdout/stderr pipe until the process is complete\n* Get the return code of the new process\n* Stop and remove the PAExec service\n* Remove the PAExec binary from the `ADMIN$` share\n* Disconnects from the SMB connection\n\nIn the case of a failed process, the PAExec service and binary may not be\nremoved from the host and may need to be done manually. This is only the case\nfor a critical error or the cleanup functions not being called.\n\nBy default the data being sent to and from the server is encrypted to stop\npeople listening in on the network from snooping your data. Unfortunately this\nuses SMB encryption which was added in the SMB 3.x dialects so hosts running\nWindows 7, Server 2008, or Server 2008 R2 will not work with encryption.\n\nThis means that any data sent over the wire on these older versions of Windows\nis viewable by anyone reading those packets. Any input or output of the process\ncomes through these packets so any secrets sent over the network won't be\nencrypted. PAExec tries to reduce this risk by doing a simple XOR scramble of\nthe settings set in `run_executable` so it isn't plaintext but it can be\ndecoded by someone who knows the protocol.\n\n\n## Requirements\n\n* Python 3.6+\n* [smbprotocol](https://github.com/jborean93/smbprotocol)\n\nTo install pypsexec, simply run\n\n```bash\npip install pypsexec\n```\n\nThis will download the required packages that are required and get your\nPython environment ready to do.\n\nOut of the box, pypsexec supports authenticating to a Windows host with NTLM\nauthentication but users in a domain environment can take advantage of Kerberos\nauthentication as well for added security. The Kerberos libraries are an\noptional install which can be installed with;\n\n```bash\n# for Debian/Ubuntu/etc:\nsudo apt-get install gcc python-dev libkrb5-dev\npip install smbprotocol[kerberos]\n\n# for RHEL/CentOS/etc:\nsudo yum install gcc python-devel krb5-devel krb5-workstation python-devel\npip install smbprotocol[kerberos]\n```\n\n\n## Remote Host Requirements\n\nThe goal of this package to be able to run executables on a vanilla remote\nWindows host with as little setup as possible. Unfortunately there is still\nsome setup required to get working depending on the OS version and type\nthat is being used. What pypsexec requires on the host is;\n\n* SMB to be up and running on the Windows port and readable from the Python host\n* The `ADMIN$` share to be enabled with read/write access of the user configured\n* The above usually means the configured user is an administrator of the Windows host\n* At least SMB 2 on the host (Server 2008 and newer)\n* The connection user has a full logon token that is not filtered by UAC\n* If connecting to localhost and `pywin32` is installed, the script must be run as a user with Administrator privileges\n\n### Firewall Setup\n\nBy default, Windows blocks the SMB port 445 and it needs to be opened up before\npypsexec can connect to the host. To do this run either one of the following\ncommands;\n\n```powershell\n# PowerShell (Windows 8 and Server 2012 or Newer)\nSet-NetFirewallRule -Name FPS-SMB-In-TCP -Enabled True\n\n# CMD (All OS's)\nnetsh advfirewall firewall set rule name=\"File and Printer Sharing (SMB-In)\" dir=in new enable=Yes\n```\n\nThis will open up inbound traffic to port `445` which is used by SMB.\n\n\n### User Account Control\n\nIn some circumstances, UAC will filter any remote logon token and limit the\nrights that are available to it. This causes issues with pypsexec and it will\nfail with an `ACCESS_IS_DENIED` error message when trying to interact with the\nremote SCMR API. This restriction is enforced in various different scenarios\nand to get it working with pypsexec you can either;\n\n* In a domain environment, use any domain account that is a member of the local `Administrators` group\n* Use any local account that is a member of the local `Administrators` group if [LocalAccountTokenFilterPolicy](https://support.microsoft.com/en-us/help/951016/description-of-user-account-control-and-remote-restrictions-in-windows) is set to `1`\n    * This means any remote logon token will not be filtered and will have the full rights of that user\n    * By default this is not defined and needs to be created\n    * This only affects remote tokens, any local tokens/processes will still be limited as per usual\n* Use the builtin local Administrator account (SID `S-1-5-21-*-500`) that is created when Windows was installed\n    * The builtin Administrator account for English installs is typically called `Administrator` but it can be renamed\n    * This account is typically disabled by default on the desktop variants of Windows, e.g. Windows 7, 8.1, 10\n    * When [AdminApprovalMode](https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd835564(v=ws.10)#BKMK_BuiltInAdmin) is `Enabled` this will not work. `AdminApprovalMode` is not `Enabled` by default\n* Use any local account that is a member of the local `Administrators` group if [EnableLUA](https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/unattend/microsoft-windows-lua-settings-enablelua) is `Disabled`\n    * Unlike the `LocalAccountTokenFilterPolicy` option, this affects local tokens and processes spawned locally\n    * This effectively disables UAC for any Administrator accounts and should be avoided\n\nTo set `LocalAccountTokenFilterPolicy` to allow a full token on a remote logon,\nrun the following PowerShell commands;\n\n```powershell\n$reg_path = \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\"\n$reg_prop_name = \"LocalAccountTokenFilterPolicy\"\n\n$reg_key = Get-Item -Path $reg_path\n$reg_prop = $reg_key.GetValue($reg_prop_name)\nif ($null -ne $reg_prop) {\n    Remove-ItemProperty -Path $reg_path -Name $reg_prop_name\n}\n\nNew-ItemProperty -Path $reg_path -Name $reg_prop_name -Value 1 -PropertyType DWord\n```\n\nTo get the name of the builtin Administrator (SID `S-1-5-21-*-500`), you can\nrun the following PowerShell commands;\n\n```powershell\nAdd-Type -AssemblyName System.DirectoryServices.AccountManagement\n$principal_context = New-Object -TypeName System.DirectoryServices.AccountManagement.PrincipalContext([System.DirectoryServices.AccountManagement.ContextType]::Machine)\n$user_principal = New-Object -TypeName System.DirectoryServices.AccountManagement.UserPrincipal($principal_context)\n$searcher = New-Object -TypeName System.DirectoryServices.AccountManagement.PrincipalSearcher($user_principal)\n$users = $searcher.FindAll() | Where-Object { $_.Sid -like \"*-500\" }\n$users[0].Name\n```\n\nThe last resort would be to disable UAC for any local Administrator account.\nOnce again this should be avoided as there are other options available and this\nwill reduce the security of your Windows host, but to do so you can run the\nfollowing PowerShell commands;\n\n```powershell\n$reg_path = \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\"\n$reg_prop_name = \"EnableLUA\"\n\n$reg_key = Get-Item -Path $reg_path\n$reg_prop = $reg_key.GetValue($reg_prop_name)\nif ($null -ne $reg_prop) {\n    Remove-ItemProperty -Path $reg_path -Name $reg_prop_name\n}\n\nNew-ItemProperty -Path $reg_path -Name $reg_prop_name -Value 0 -PropertyType DWord\n```\n\nAfter changing the `EnableLUA` setting, the Windows host needs to be rebooted\nbefore the policies are enacted.\n\n\n## Examples\n\nHere is an example of how to run a command with this library\n\n```python\nfrom pypsexec.client import Client\n\n# creates an encrypted connection to the host with the username and password\nc = Client(\"hostname\", username=\"username\", password=\"password\")\n\n# set encrypt=False for Windows 7, Server 2008\nc = Client(\"hostname\", username=\"username\", password=\"password\", encrypt=False)\n\n# if Kerberos is available, this will use the default credentials in the\n# credential cache\nc = Client(\"hostname\")\n\n# you can also tell it to use a specific Kerberos principal in the cache\n# without a password\nc = Client(\"hostname\", username=\"username@DOMAIN.LOCAL\")\n\nc.connect()\ntry:\n    c.create_service()\n\n    # After creating the service, you can run multiple exe's without\n    # reconnecting\n\n    # run a simple cmd.exe program with arguments\n    stdout, stderr, rc = c.run_executable(\"cmd.exe\",\n                                          arguments=\"/c echo Hello World\")\n\n    # run whoami.exe as the SYSTEM account\n    stdout, stderr, rc = c.run_executable(\"whoami.exe\", use_system_account=True)\n\n    # run command asynchronously (in background), the rc is the PID of the spawned service\n    stdout, stderr, rc = c.run_executable(\"longrunning.exe\",\n                                          arguments=\"/s other args\",\n                                          asynchronous=True)\n\n    # run whoami.exe as a specific user\n    stdout, stderr, rc = c.run_executable(\"whoami\",\n                                          arguments=\"/all\",\n                                          username=\"local-user\",\n                                          password=\"password\",\n                                          run_elevated=True)\nfinally:\n    c.remove_service()\n    c.disconnect()\n```\n\nIn the case of a fatal failure, this project may leave behind some the PAExec\npayload in `C:\\Windows` or the service still installed. As these are uniquely\nnamed they can build up over time. They can be manually removed but you can\nalso use pypsexec to cleanup them all up at once. To do this run\n\n```python\nfrom pypsexec.client import Client\n\nc = Client(\"server\", username=\"username\", password=\"password\")\nc.connect()\nc.cleanup()  # this is where the magic happens\nc.disconnect()\n```\n\nThe script will delete any files that match `C:\\Windows\\PAExec-*` and any\nservices that match `PAExec-*`. For an individual run, the `remove_service()`\nfunction should still be used.\n\n### Client Options\n\nWhen creating the main pypsexec `Client` object there are some configuration\noptions that can be set to control the process. These args are;\n\n* `server`: This needs to be set and is the host or IP address of the server to connect to\n* `username`: The username to connect with. Can be `None` if `python-gssapi` is installed and a ticket has been granted in the local credential cache\n* `password`: The password for `username`. Can be `None` if `python-gssapi` is installed and a ticket has been granted for the user specified\n* `port`: Override the default port of `445` when connecting to the server\n* `encrypt`: Whether to encrypt the messages or not, default is `True`. Server 2008, 2008 R2 and Windows 7 hosts do not support SMB Encryption and need this to be set to `False`\n\n\n### Run Executable Options\n\nWhen calling `run_executable`, there are multiple kwargs that can define\nhow the remote process will work. These args are;\n\n* `executable`: (string) The path to the executable to be run\n* `arguments`: (string) Arguments for the executable\n* `processors`: (list<int>) A list of processor numbers that the process can run on\n* `asynchronous`: (bool) Doesn't wait until the process is complete before returning. The `rc` returned by the function is the `PID` of the async process, default is `False`\n* `load_profile`: (bool) Load the user's profile, default is `True`\n* `interactive_session`: (int) The session ID to display the interactive process when `interactive=True`, default is `0`\n* `interactive`: (bool) Runs the process as an interactive process. The stdout and stderr buffers will be `None` if `True`, default `False`\n* `run_elevated`: (bool) When `username` is defined, will elevated permissions, default `False`\n* `run_limited`: (bool) When `username` is defined, will run the process under limited permissions, default `False`\n* `username`: (string) Used to run the process under a different user than the one that authenticated the SMB session\n* `password`: (string) The password for `username`\n* `use_system_account`: (bool) Run the process as `NT AUTHORITY\\SYSTEM`\n* `working_dir`: (string) The working directory of the process, default `C:\\Windows\\System32`\n* `show_ui_on_win_logon`: (bool) Displays the UI on the Winlogon secure desktop when `use_system_account=True`, default `False`\n* `priority`: (pypsexec.ProcessPriority) The priority level of the process, default `NORMAL_PRIORITY_CLASS`\n* `remote_log_path`: (string) A path on the remote host to log the PAExec service details\n* `timeout_seconds`: (int) The maximum time the process can run for, default is `0` (no timeout)\n* `stdout`: (pipe.OutputPipe) A class that implements pipe.OutputPipe that controls how the stdout output is processed and returned, will default to returning the byte string of the stdout. Is ignored when `interactive=True` and `asynchronous=True`\n* `stderr`: (pipe.OutputPipe) A class that implements pipe.OutputPipe that controls how the stderr output is processed and returned, will default to returning the byte string of the stderr. Is ignored when `interactive=True` and `asynchronous=True`\n* `stdin`: (bytes/generator) A byte string or generator that yields a byte string to send over the stdin pipe, does not work with `interactive=True` and `asynchronous=True`\n* `wow64`: (bool) Set to `True` to run the executable in 32-bit mode on 64-bit systems. This does nothing on 32-bit systems, default `False`\n\n\n## Logging\n\nThis library uses the builtin Python logging library and can be used to find\nout what is happening in the pypsexec process. Log messages are logged to the\n`pypsexec` named logger as well as `pypsexec.*` where `*` is each python script\nin the `pypsexec` directory.\n\nA way to enable the logging in your scripts through code is to add the\nfollowing to the top of the script being used;\n\n```python\nimport logging\n\nlogger = logging.getLogger(\"pypsexec\")\nlogger.setLevel(logging.DEBUG)  # set to logging.INFO if you don't want DEBUG logs\nch = logging.StreamHandler()\nch.setLevel(logging.DEBUG)\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - '\n                              '%(message)s')\nch.setFormatter(formatter)\nlogger.addHandler(ch)\n```\n\nThese logs are generally useful when debugging issues as they give you a more\nstep by step snapshot of what it is doing and what may be going wrong. The\ndebug level will also print out a human readable string of each SMB packet that\nis sent out from the client but this level can get really verbose.\n\n\n## Testing\n\nTo this module, you need to install some pre-requisites first. This can be done\nby running;\n\n```bash\npip install -r requirements-test.txt\n\n# you can also run tox by installing tox\npip install tox\n```\n\nFrom there to run the basic tests run;\n\n```bash\npy.test -v --cov pypsexec --cov-report term-missing\n\n# or with tox\ntox\n```\n\nThere are extra tests that only run when certain environment variables are set.\nTo run these tests set the following variables;\n\n* `PYPSEXEC_SERVER`: The hostname or IP to a Windows host\n* `PYPSEXEC_USERNAME`: The username to use authenticate with\n* `PYPSEXEC_PASSWORD`: The password for `PYPSEXEC_USERNAME`\n\nFrom there, you can just run `tox` or `py.test` with these environment\nvariables to run the integration tests.\n\n\n## Future\n\nSome things I would be interested in looking at adding in the future would be\n\n* Add a Python script that can be called to run adhoc commands like `PsExec.exe`\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/jborean93/pypsexec","keywords":"windows psexec paexec remote python","license":"MIT","maintainer":"","maintainer_email":"","name":"pypsexec","package_url":"https://pypi.org/project/pypsexec/","platform":"","project_url":"https://pypi.org/project/pypsexec/","project_urls":{"Homepage":"https://github.com/jborean93/pypsexec"},"provides_extra":null,"release_url":"https://pypi.org/project/pypsexec/0.3.0/","requires_dist":["smbprotocol"],"requires_python":">=3.6","summary":"Run commands on a remote Windows host using SMB/RPC","version":"0.3.0","yanked":false,"yanked_reason":null},"last_serial":11796318,"releases":{"0.0.1.dev0":[{"comment_text":"","digests":{"blake2b_256":"82e15157ffa79fa3a9a960db963ca8a008563f979f8f1b849578da851c63adf5","md5":"9f29a5d74552e0919eb898527309aa0c","sha256":"c930ac53c689bd6ae0c966f919d5f0da528a6b53dc5ff8abcdb3778267c1f353"},"downloads":-1,"filename":"pypsexec-0.0.1.dev0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9f29a5d74552e0919eb898527309aa0c","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":151058,"upload_time":"2018-02-20T04:11:26","upload_time_iso_8601":"2018-02-20T04:11:26.176118Z","url":"https://files.pythonhosted.org/packages/82/e1/5157ffa79fa3a9a960db963ca8a008563f979f8f1b849578da851c63adf5/pypsexec-0.0.1.dev0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d9d416d94844d7a38eca838cb001b8b4382246e9a286e0c150614f4394738cea","md5":"ba31596bee3411e045bbce893136b215","sha256":"9d8b06699fff565792626372751b007b6e677f94d5c7685704f0a5a9d6f20330"},"downloads":-1,"filename":"pypsexec-0.0.1.dev0.tar.gz","has_sig":false,"md5_digest":"ba31596bee3411e045bbce893136b215","packagetype":"sdist","python_version":"source","requires_python":null,"size":149120,"upload_time":"2018-02-20T04:11:30","upload_time_iso_8601":"2018-02-20T04:11:30.984846Z","url":"https://files.pythonhosted.org/packages/d9/d4/16d94844d7a38eca838cb001b8b4382246e9a286e0c150614f4394738cea/pypsexec-0.0.1.dev0.tar.gz","yanked":false,"yanked_reason":null}],"0.0.1.dev1":[{"comment_text":"","digests":{"blake2b_256":"ed7924080b60d3aab7907fe2fb48c9396e7b0363f7124bfbc3998338d405286b","md5":"f1b60bd015847be705688968f01ed036","sha256":"0dbbd7e56117702ca1ae1e32542b40c15a89a754a772871cb9cd9c80182bea9a"},"downloads":-1,"filename":"pypsexec-0.0.1.dev1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f1b60bd015847be705688968f01ed036","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":152969,"upload_time":"2018-02-20T20:57:30","upload_time_iso_8601":"2018-02-20T20:57:30.317496Z","url":"https://files.pythonhosted.org/packages/ed/79/24080b60d3aab7907fe2fb48c9396e7b0363f7124bfbc3998338d405286b/pypsexec-0.0.1.dev1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4b5b331ad84b70c4a0c2a72bc5f58512c6a96806ebb9f669640dc73620bbdba3","md5":"54cd767027fc3e93d977f8babfac119c","sha256":"45c90c0da37c44584ee2d7a0c99642df433befd02651663a00eae6510993c9b2"},"downloads":-1,"filename":"pypsexec-0.0.1.dev1.tar.gz","has_sig":false,"md5_digest":"54cd767027fc3e93d977f8babfac119c","packagetype":"sdist","python_version":"source","requires_python":null,"size":150292,"upload_time":"2018-02-20T20:57:33","upload_time_iso_8601":"2018-02-20T20:57:33.743411Z","url":"https://files.pythonhosted.org/packages/4b/5b/331ad84b70c4a0c2a72bc5f58512c6a96806ebb9f669640dc73620bbdba3/pypsexec-0.0.1.dev1.tar.gz","yanked":false,"yanked_reason":null}],"0.0.1.dev2":[{"comment_text":"","digests":{"blake2b_256":"5d1ccc136f0658d420a99a0bf0f5ee0ad48c3d83f9effbe8bf9f179e14ab86e3","md5":"f11684239a4aa1ed97f7a2f45673ccd7","sha256":"3a5f9cd86104c296bc9d5515c5b53f02770000d896506f331e6423ff64ef9fbe"},"downloads":-1,"filename":"pypsexec-0.0.1.dev2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f11684239a4aa1ed97f7a2f45673ccd7","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":155581,"upload_time":"2018-02-22T10:18:26","upload_time_iso_8601":"2018-02-22T10:18:26.287705Z","url":"https://files.pythonhosted.org/packages/5d/1c/cc136f0658d420a99a0bf0f5ee0ad48c3d83f9effbe8bf9f179e14ab86e3/pypsexec-0.0.1.dev2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"34c2bc006427a53585593b6ca8186c21c2c3fdca44cbf44eee1925660f887f7c","md5":"fc58d79f525df920f318b5e4a1049154","sha256":"3047c700634a08696e2e626a434185952e7f8a9ce833ef7dbfb42dfab9816262"},"downloads":-1,"filename":"pypsexec-0.0.1.dev2.tar.gz","has_sig":false,"md5_digest":"fc58d79f525df920f318b5e4a1049154","packagetype":"sdist","python_version":"source","requires_python":null,"size":152752,"upload_time":"2018-02-22T10:18:28","upload_time_iso_8601":"2018-02-22T10:18:28.551082Z","url":"https://files.pythonhosted.org/packages/34/c2/bc006427a53585593b6ca8186c21c2c3fdca44cbf44eee1925660f887f7c/pypsexec-0.0.1.dev2.tar.gz","yanked":false,"yanked_reason":null}],"0.0.1.dev3":[{"comment_text":"","digests":{"blake2b_256":"8df77bdbd71776ac3056f22ce38db5615d1534468d2379f0e51ee6d4df617e21","md5":"2d26339a58e51a0b058dd631ecfa1849","sha256":"0a92fb9ad241901be311b6667a658cfbb6b90114c9bc2057f0d37d35a0484988"},"downloads":-1,"filename":"pypsexec-0.0.1.dev3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"2d26339a58e51a0b058dd631ecfa1849","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":158442,"upload_time":"2018-02-23T07:18:42","upload_time_iso_8601":"2018-02-23T07:18:42.707780Z","url":"https://files.pythonhosted.org/packages/8d/f7/7bdbd71776ac3056f22ce38db5615d1534468d2379f0e51ee6d4df617e21/pypsexec-0.0.1.dev3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4a01ee37147f578dbfbfd0eb5f7cd1e9741aa65753556d657510cc6f406714ae","md5":"457ab5b4cae497b3bfc6570da15fd565","sha256":"5396f6d13140451e62ef60f515d52de199886e33c8247f1d0072a8edeb34f8c5"},"downloads":-1,"filename":"pypsexec-0.0.1.dev3.tar.gz","has_sig":false,"md5_digest":"457ab5b4cae497b3bfc6570da15fd565","packagetype":"sdist","python_version":"source","requires_python":null,"size":156119,"upload_time":"2018-02-23T07:18:45","upload_time_iso_8601":"2018-02-23T07:18:45.737511Z","url":"https://files.pythonhosted.org/packages/4a/01/ee37147f578dbfbfd0eb5f7cd1e9741aa65753556d657510cc6f406714ae/pypsexec-0.0.1.dev3.tar.gz","yanked":false,"yanked_reason":null}],"0.0.1.dev4":[{"comment_text":"","digests":{"blake2b_256":"327f7687808d6b78c17c71d7974fe09de8452ee7019163598f212a7896482e60","md5":"4f8999bd004e5293b376bd34c2291cc7","sha256":"20e28dad48f1fecbf9cccb2b1897d156227222021195a27e6c15248a29b9992d"},"downloads":-1,"filename":"pypsexec-0.0.1.dev4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"4f8999bd004e5293b376bd34c2291cc7","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":158144,"upload_time":"2018-02-24T06:38:20","upload_time_iso_8601":"2018-02-24T06:38:20.777640Z","url":"https://files.pythonhosted.org/packages/32/7f/7687808d6b78c17c71d7974fe09de8452ee7019163598f212a7896482e60/pypsexec-0.0.1.dev4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7a2d2be160c6c104e157d42652f45cab1eb8689a1f029546dcc0d74981682aa4","md5":"44db2cd81dda1adb5dd41b6f69663fca","sha256":"2c13e7449cfe8a04b68e0f289ca008150ae550d5c73619502a947ad51204af56"},"downloads":-1,"filename":"pypsexec-0.0.1.dev4.tar.gz","has_sig":false,"md5_digest":"44db2cd81dda1adb5dd41b6f69663fca","packagetype":"sdist","python_version":"source","requires_python":null,"size":155819,"upload_time":"2018-02-24T06:38:23","upload_time_iso_8601":"2018-02-24T06:38:23.516906Z","url":"https://files.pythonhosted.org/packages/7a/2d/2be160c6c104e157d42652f45cab1eb8689a1f029546dcc0d74981682aa4/pypsexec-0.0.1.dev4.tar.gz","yanked":false,"yanked_reason":null}],"0.0.1.dev5":[{"comment_text":"","digests":{"blake2b_256":"cc65dd29b58f63757c08845d0217294c5e584ff0cb9f3a3cf3da7f340e5c0b90","md5":"9d06fe3fc27260eb24e4691a25b98f4f","sha256":"934128fde5d4cb787e25a63c4247d4f498249fbf2affa59865842f4e81ae14df"},"downloads":-1,"filename":"pypsexec-0.0.1.dev5-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9d06fe3fc27260eb24e4691a25b98f4f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":159170,"upload_time":"2018-02-26T05:57:59","upload_time_iso_8601":"2018-02-26T05:57:59.182856Z","url":"https://files.pythonhosted.org/packages/cc/65/dd29b58f63757c08845d0217294c5e584ff0cb9f3a3cf3da7f340e5c0b90/pypsexec-0.0.1.dev5-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fc5a9a384eebae127cd5c9899877200dadfe93c784e9f466fa34502cb0db62eb","md5":"6984444dd763e5547917d2af4daaa13a","sha256":"d8cad8837d5334946ae9075d0d13f66162a85e190c0f0ff320a800e4026a7425"},"downloads":-1,"filename":"pypsexec-0.0.1.dev5.tar.gz","has_sig":false,"md5_digest":"6984444dd763e5547917d2af4daaa13a","packagetype":"sdist","python_version":"source","requires_python":null,"size":156814,"upload_time":"2018-02-26T05:58:01","upload_time_iso_8601":"2018-02-26T05:58:01.174673Z","url":"https://files.pythonhosted.org/packages/fc/5a/9a384eebae127cd5c9899877200dadfe93c784e9f466fa34502cb0db62eb/pypsexec-0.0.1.dev5.tar.gz","yanked":false,"yanked_reason":null}],"0.0.1.dev6":[{"comment_text":"","digests":{"blake2b_256":"0f8cb2e229b1b62b03d425dd5a7620b1f9b8cd897548e68ec89a93f4ab528ebc","md5":"a5cc65c2c15f4d41fe9fcdfa16196b8f","sha256":"90a10ca209920dcdf6d8f5c08389d7735db88ca7e2afbd5e5b6a5ca671fe61ce"},"downloads":-1,"filename":"pypsexec-0.0.1.dev6-py2.py3-none-any.whl","has_sig":false,"md5_digest":"a5cc65c2c15f4d41fe9fcdfa16196b8f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":159050,"upload_time":"2018-02-26T21:52:25","upload_time_iso_8601":"2018-02-26T21:52:25.999441Z","url":"https://files.pythonhosted.org/packages/0f/8c/b2e229b1b62b03d425dd5a7620b1f9b8cd897548e68ec89a93f4ab528ebc/pypsexec-0.0.1.dev6-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"85c7487e773e32d7e46537f294aee3d6205a06205d6340574cd5928096b08a66","md5":"1c60eb20bcae56f2155949b61c3c6fce","sha256":"a437fc89755ea25fb8acacffc8b6dc0ab02a8bc40d44b1f3865dbec5fc995d3b"},"downloads":-1,"filename":"pypsexec-0.0.1.dev6.tar.gz","has_sig":false,"md5_digest":"1c60eb20bcae56f2155949b61c3c6fce","packagetype":"sdist","python_version":"source","requires_python":null,"size":156688,"upload_time":"2018-02-26T21:52:27","upload_time_iso_8601":"2018-02-26T21:52:27.804074Z","url":"https://files.pythonhosted.org/packages/85/c7/487e773e32d7e46537f294aee3d6205a06205d6340574cd5928096b08a66/pypsexec-0.0.1.dev6.tar.gz","yanked":false,"yanked_reason":null}],"0.0.1.dev7":[{"comment_text":"","digests":{"blake2b_256":"8194c55a0b6278fb67effff552b9b68a106a3ad066223629eed53ff9ef36db44","md5":"db508c8865ac2db7c8fda9a3b3dfaeda","sha256":"1b22f001ff367927ba4104df4be7eaea49aee77ec89ebad9f46f7ebc328f3457"},"downloads":-1,"filename":"pypsexec-0.0.1.dev7-py2.py3-none-any.whl","has_sig":false,"md5_digest":"db508c8865ac2db7c8fda9a3b3dfaeda","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":159423,"upload_time":"2018-03-06T23:28:56","upload_time_iso_8601":"2018-03-06T23:28:56.163001Z","url":"https://files.pythonhosted.org/packages/81/94/c55a0b6278fb67effff552b9b68a106a3ad066223629eed53ff9ef36db44/pypsexec-0.0.1.dev7-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9af70978b7927cbfa915bf3bd6cd3cdd2fe4eeb43c9f01cba159f76d5bbd9310","md5":"0bf6230983244458d77b2c62b986ed26","sha256":"a51298f2d4547f634ca773b60079431b357acfb7cb63362ba45e796ee31e6505"},"downloads":-1,"filename":"pypsexec-0.0.1.dev7.tar.gz","has_sig":false,"md5_digest":"0bf6230983244458d77b2c62b986ed26","packagetype":"sdist","python_version":"source","requires_python":null,"size":157031,"upload_time":"2018-03-06T23:28:58","upload_time_iso_8601":"2018-03-06T23:28:58.456401Z","url":"https://files.pythonhosted.org/packages/9a/f7/0978b7927cbfa915bf3bd6cd3cdd2fe4eeb43c9f01cba159f76d5bbd9310/pypsexec-0.0.1.dev7.tar.gz","yanked":false,"yanked_reason":null}],"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"0e10d697f6352984c96288497bcc4d64bfdafbab33660cb7adc6149194ee1059","md5":"e3a5e4d4346328a8e31b1fdff2b3d118","sha256":"1fe8c02e93a51428206528d6970ce9c6de48662ee2077bc05d1489e75a6cedd4"},"downloads":-1,"filename":"pypsexec-0.1.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"e3a5e4d4346328a8e31b1fdff2b3d118","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":159302,"upload_time":"2018-03-07T00:43:40","upload_time_iso_8601":"2018-03-07T00:43:40.319893Z","url":"https://files.pythonhosted.org/packages/0e/10/d697f6352984c96288497bcc4d64bfdafbab33660cb7adc6149194ee1059/pypsexec-0.1.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"521f05fb1a0cfaebc48d339be88d2c5bf312f59c90b661862cbd468047da4d90","md5":"ba41f21f7b49d2c518fe0a22629e82ee","sha256":"0d4c54dfba4082ccd2ebb56c7ea7368b2cd533e2722838af0bf7fc9d7afa785d"},"downloads":-1,"filename":"pypsexec-0.1.0.tar.gz","has_sig":false,"md5_digest":"ba41f21f7b49d2c518fe0a22629e82ee","packagetype":"sdist","python_version":"source","requires_python":null,"size":156994,"upload_time":"2018-03-07T00:43:42","upload_time_iso_8601":"2018-03-07T00:43:42.699271Z","url":"https://files.pythonhosted.org/packages/52/1f/05fb1a0cfaebc48d339be88d2c5bf312f59c90b661862cbd468047da4d90/pypsexec-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"5f85b685da5dfd49ddd03cfc299901c06312ac93e976535362ac426a36772817","md5":"0452cce34eda81588fd289496a14a173","sha256":"aaad08ae0a98eccf87f29dab6088141ded51611f63b48d804d90bebb41fa5f53"},"downloads":-1,"filename":"pypsexec-0.2.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"0452cce34eda81588fd289496a14a173","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*","size":129594,"upload_time":"2020-12-14T11:16:36","upload_time_iso_8601":"2020-12-14T11:16:36.064938Z","url":"https://files.pythonhosted.org/packages/5f/85/b685da5dfd49ddd03cfc299901c06312ac93e976535362ac426a36772817/pypsexec-0.2.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5f1bd8ec69a43dfe953fc8671c2b868747bc78e4afddb20a6826a3e332eaa385","md5":"119c158ed10fda7a08d00decea0ae2df","sha256":"f04635d698ee8bc274a545a3bd29adc3ee4126f527b436d0a770af5780dfb0bf"},"downloads":-1,"filename":"pypsexec-0.2.0.tar.gz","has_sig":false,"md5_digest":"119c158ed10fda7a08d00decea0ae2df","packagetype":"sdist","python_version":"source","requires_python":">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*","size":135972,"upload_time":"2020-12-14T11:16:37","upload_time_iso_8601":"2020-12-14T11:16:37.606326Z","url":"https://files.pythonhosted.org/packages/5f/1b/d8ec69a43dfe953fc8671c2b868747bc78e4afddb20a6826a3e332eaa385/pypsexec-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"5aaa50c3f31a2404244e6b707cc710f96cabce6d21761bb611b1dcd12824ca51","md5":"de8b1aee9ba41337aafbb3aeb08dbcfd","sha256":"d270e11114e008841d28816af642a88bbccd992a14c0da38d40658f7f4603f6c"},"downloads":-1,"filename":"pypsexec-0.3.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"de8b1aee9ba41337aafbb3aeb08dbcfd","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":151711,"upload_time":"2021-10-21T20:30:45","upload_time_iso_8601":"2021-10-21T20:30:45.180490Z","url":"https://files.pythonhosted.org/packages/5a/aa/50c3f31a2404244e6b707cc710f96cabce6d21761bb611b1dcd12824ca51/pypsexec-0.3.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d4cdda60adc8d022ec3c38248f36d444568143f18de3f588c1b155a82ccd62c5","md5":"8df0532154fe8503c6f7b6aed9cb96d9","sha256":"84a21aa8984847a1616cdb6b47c36d20c43b90996f8894996d4939db2e78ddc2"},"downloads":-1,"filename":"pypsexec-0.3.0.tar.gz","has_sig":false,"md5_digest":"8df0532154fe8503c6f7b6aed9cb96d9","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":157062,"upload_time":"2021-10-21T20:30:46","upload_time_iso_8601":"2021-10-21T20:30:46.996143Z","url":"https://files.pythonhosted.org/packages/d4/cd/da60adc8d022ec3c38248f36d444568143f18de3f588c1b155a82ccd62c5/pypsexec-0.3.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"5aaa50c3f31a2404244e6b707cc710f96cabce6d21761bb611b1dcd12824ca51","md5":"de8b1aee9ba41337aafbb3aeb08dbcfd","sha256":"d270e11114e008841d28816af642a88bbccd992a14c0da38d40658f7f4603f6c"},"downloads":-1,"filename":"pypsexec-0.3.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"de8b1aee9ba41337aafbb3aeb08dbcfd","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":151711,"upload_time":"2021-10-21T20:30:45","upload_time_iso_8601":"2021-10-21T20:30:45.180490Z","url":"https://files.pythonhosted.org/packages/5a/aa/50c3f31a2404244e6b707cc710f96cabce6d21761bb611b1dcd12824ca51/pypsexec-0.3.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d4cdda60adc8d022ec3c38248f36d444568143f18de3f588c1b155a82ccd62c5","md5":"8df0532154fe8503c6f7b6aed9cb96d9","sha256":"84a21aa8984847a1616cdb6b47c36d20c43b90996f8894996d4939db2e78ddc2"},"downloads":-1,"filename":"pypsexec-0.3.0.tar.gz","has_sig":false,"md5_digest":"8df0532154fe8503c6f7b6aed9cb96d9","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":157062,"upload_time":"2021-10-21T20:30:46","upload_time_iso_8601":"2021-10-21T20:30:46.996143Z","url":"https://files.pythonhosted.org/packages/d4/cd/da60adc8d022ec3c38248f36d444568143f18de3f588c1b155a82ccd62c5/pypsexec-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
