{"info":{"author":"Manuel Barkhau","author_email":"mbarkhau@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","Environment :: Other Environment","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Operating System :: MacOS :: MacOS X","Operating System :: POSIX","Operating System :: Unix","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 3","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Software Development :: Libraries","Topic :: Software Development :: Libraries :: Python Modules"],"description":"# [lexid][repo_ref]\n\n`lexid` is a micro library to increment lexically ordered numerical ids.\n\nThroughout the sequence of ids, this expression will always be true, whether you are dealing with integers or strings:\n\n    older_id < newer_id\n\nThe left most character/digit is only used to maintain lexical order, so that the position in the sequence is maintained in the remaining digits.\n\nSuch ids can be useful as build or version numbers, which are often displayed by tooling which does not understand their correct ordering.\n\nProject/Repo:\n\n[![MIT License][license_img]][license_ref]\n[![Supported Python Versions][pyversions_img]][pyversions_ref]\n[![CalVer 2021.1006][version_img]][version_ref]\n[![PyPI Version][pypi_img]][pypi_ref]\n[![PyPI Downloads][downloads_img]][downloads_ref]\n\nCode Quality/CI:\n\n[![GitHub CI Status][github_build_img]][github_build_ref]\n[![GitLab CI Status][gitlab_build_img]][gitlab_build_ref]\n[![Type Checked with mypy][mypy_img]][mypy_ref]\n[![Code Coverage][codecov_img]][codecov_ref]\n[![Code Style: sjfmt][style_img]][style_ref]\n\n\n|               Name               |    role           |      since       | until |\n|----------------------------------|-------------------|------------------|-------|\n| Manuel Barkhau (mbarkhau@gmail.com) | author/maintainer | 2020-09 | -     |\n\n\n## Usage\n\n```\n$ pip install lexid\n$ lexid_incr 1001\n1002\n$ lexid_incr 1999\n22000\n$ lexid_incr 1\n22\n$ lexid_incr 1 -n 100\n22\n..\n28\n29\n330\n331\n...\n398\n399\n4400\n4401\n...\n```\n\nIn Python.\n\n```\n>>> import lexid\n>>> lexid.incr(\"1\")\n'22'\n>>> lexid.incr(\"0001\")\n'0002'\n>>> lexid.incr(\"0999\")\n'11000'\n```\n\nTo avoid possible zero truncation issues (e.g. with \"0001\" -> \"1\") and to reduce rollovers, start at a higher number:\n\n```\n>>> lexid.incr(\"1001\")\n'1002'\n>>> lexid.incr(\"1002\")\n'1003'\n>>> lexid.incr(\"1999\")\n'22000'\n```\n\n\n## Lexical Ids\n\nThe key thing to look at is how padding may eventually be exhausted.\nIn order to preserve lexical ordering, build numbers are incremented\nin a special way. Examples will perhaps illustrate more clearly.\n\n```python\n\"0001\"\n\"0002\"\n\"0003\"\n...\n\"0999\"\n\"11000\"\n\"11001\"\n...\n\"19998\"\n\"19999\"\n\"220000\"\n\"220001\"\n```\n\nWhat is happening here is that the left-most digit is incremented\nearly/preemptively. Whenever the left-most digit would change, the padding\nof the id is expanded through a multiplication by 11.\n\n```python\n>>> prev_id  = \"0999\"\n>>> num_digits = len(prev_id)\n>>> num_digits\n4\n>>> prev_int = int(prev_id, 10)\n>>> prev_int\n999\n>>> maybe_next_int = prev_int + 1\n>>> maybe_next_int\n1000\n>>> maybe_next_id = f\"{maybe_next_int:0{num_digits}}\"\n>>> maybe_next_id\n\"1000\"\n>>> is_padding_ok = prev_id[0] == maybe_next_id[0]\n>>> is_padding_ok\nFalse\n>>> if is_padding_ok:\n...     # normal case\n...     next_id = maybe_next_id\n... else:\n...     # extra padding needed\n...     next_int = maybe_next_int * 11\n...     next_id  = str(next_int)\n>>> next_id\n\"11000\"\n```\n\nThis behaviour ensures that the following semantic is always preserved:\n`new_version > old_version`. This will be true, regardless of padding\nexpansion. To illustrate the issue this solves, consider what would happen\nif we did not expand the padding and instead just incremented numerically.\n\n```python\n\"0001\"\n\"0002\"\n\"0003\"\n...\n\"0999\"\n\"1000\"\n...\n\"9999\"\n\"10000\"\n```\n\nHere we eventually run into a build number where the lexical ordering is\nnot preserved, since `\"10000\" > \"9999\" == False` (because the string `\"1\"`\nis lexically smaller than `\"9\"`). With large enough padding this may be a\nnon issue, but it's better to not have to think about it.\n\nJust as an example of why lexical ordering is a nice property to have,\nthere are lots of software which read git tags, but which have no logic to\nparse version strings. This software can nonetheless order the version tags\ncorrectly using commonly used lexical ordering. At the most basic\nlevel it can allow you to use the UNIX `sort` command, for example to parse\nVCS tags.\n\n\n```shell\n$ printf \"v0.9.0\\nv0.10.0\\nv0.11.0\\n\" | sort\nv0.10.0\nv0.11.0\nv0.9.0\n\n$ printf \"v0.9.0\\nv0.10.0\\nv0.11.0\\n\" | sort -n\nv0.10.0\nv0.11.0\nv0.9.0\n\n$ lexid_incr 0997 -n 5 | sort\n0998\n0999\n11000\n11001\n11002\n```\n\nThis sorting even works correctly in JavaScript!\n\n```\n> var versions = [\"11002\", \"11001\", \"11000\", \"0999\", \"0998\"];\n> versions.sort();\n[\"0998\", \"0999\", \"11000\", \"11001\", \"11002\"]\n```\n\n[repo_ref]: https://github.com/mbarkhau/lexid\n\n[github_build_img]: https://github.com/mbarkhau/lexid/workflows/CI/badge.svg\n[github_build_ref]: https://github.com/mbarkhau/lexid/actions?query=workflow%3ACI\n\n[gitlab_build_img]: https://gitlab.com/mbarkhau/lexid/badges/master/pipeline.svg\n[gitlab_build_ref]: https://gitlab.com/mbarkhau/lexid/pipelines\n\n[codecov_img]: https://gitlab.com/mbarkhau/lexid/badges/master/coverage.svg\n[codecov_ref]: https://mbarkhau.gitlab.io/lexid/cov\n\n[license_img]: https://img.shields.io/badge/License-MIT-blue.svg\n[license_ref]: https://github.com/mbarkhau/lexid/blob/master/LICENSE\n\n[mypy_img]: https://img.shields.io/badge/mypy-checked-green.svg\n[mypy_ref]: https://mbarkhau.gitlab.io/lexid/mypycov\n\n[style_img]: https://img.shields.io/badge/code%20style-%20sjfmt-f71.svg\n[style_ref]: https://gitlab.com/mbarkhau/straitjacket/\n\n[pypi_img]: https://img.shields.io/badge/PyPI-wheels-green.svg\n[pypi_ref]: https://pypi.org/project/lexid/#files\n\n[downloads_img]: https://pepy.tech/badge/lexid/month\n[downloads_ref]: https://pepy.tech/project/lexid\n\n[version_img]: https://img.shields.io/static/v1.svg?label=CalVer&message=2021.1006&color=blue\n[version_ref]: https://pypi.org/project/pycalver/\n\n[pyversions_img]: https://img.shields.io/pypi/pyversions/lexid.svg\n[pyversions_ref]: https://pypi.python.org/pypi/lexid\n\n\n\n# Changelog for https://github.com/mbarkhau/lexid\n\n## 2021.1006\n\n - Minor packaging updates\n\n\n## 2020.1005\n\n - Initial release (extracted from pycalver)\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/mbarkhau/lexid","keywords":"lexical build number","license":"MIT","maintainer":"","maintainer_email":"","name":"lexid","package_url":"https://pypi.org/project/lexid/","platform":"","project_url":"https://pypi.org/project/lexid/","project_urls":{"Homepage":"https://github.com/mbarkhau/lexid"},"provides_extra":null,"release_url":"https://pypi.org/project/lexid/2021.1006/","requires_dist":["typing ; python_version < \"3.5\""],"requires_python":">=2.7","summary":"Variable width build numbers with lexical ordering.","version":"2021.1006","yanked":false,"yanked_reason":null},"last_serial":9960149,"releases":{"2020.1001":[{"comment_text":"","digests":{"blake2b_256":"794aad5b9ab6000283ad8fba9b4ee08b2f20aadb104d8a78ed4878349b49a3bd","md5":"2a1452c31d84cae4d0f0d9e2afb2e3fa","sha256":"e9cd84ab6aaf012b3fd47dd664b5aa86fa17bf53e0cac2ac0e470e2fbfcea3a3"},"downloads":-1,"filename":"lexid-2020.1001-py38.pypy27-none-any.whl","has_sig":false,"md5_digest":"2a1452c31d84cae4d0f0d9e2afb2e3fa","packagetype":"bdist_wheel","python_version":"py38.pypy27","requires_python":">=2.7","size":7562,"upload_time":"2020-09-03T22:26:36","upload_time_iso_8601":"2020-09-03T22:26:36.353040Z","url":"https://files.pythonhosted.org/packages/79/4a/ad5b9ab6000283ad8fba9b4ee08b2f20aadb104d8a78ed4878349b49a3bd/lexid-2020.1001-py38.pypy27-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f9ceca895a7e4b12ec8faaca8d30ab07e42d69113b7a4fd06c62d2b8590c89b4","md5":"4256534c59c184ee9db91266d4484472","sha256":"0b6cf3349ed9565e472171dcac3c475fb789272c9644b735a7e032c10504a10b"},"downloads":-1,"filename":"lexid-2020.1001.tar.gz","has_sig":false,"md5_digest":"4256534c59c184ee9db91266d4484472","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":11617,"upload_time":"2020-09-03T22:26:39","upload_time_iso_8601":"2020-09-03T22:26:39.090605Z","url":"https://files.pythonhosted.org/packages/f9/ce/ca895a7e4b12ec8faaca8d30ab07e42d69113b7a4fd06c62d2b8590c89b4/lexid-2020.1001.tar.gz","yanked":false,"yanked_reason":null}],"2020.1003":[{"comment_text":"","digests":{"blake2b_256":"d029c6ca27464a82787ffd9be6f19be6c2715cc660957a39ec689bc1654fd89d","md5":"42c12762e2341f5881a71de4743b40bc","sha256":"1c5e5cd6fe14ad2576669bb5e844b31dddfb33bb3dfcff6e359afd825db98339"},"downloads":-1,"filename":"lexid-2020.1003-py38.pypy27-none-any.whl","has_sig":false,"md5_digest":"42c12762e2341f5881a71de4743b40bc","packagetype":"bdist_wheel","python_version":"py38.pypy27","requires_python":">=2.7","size":7558,"upload_time":"2020-09-03T22:30:41","upload_time_iso_8601":"2020-09-03T22:30:41.058363Z","url":"https://files.pythonhosted.org/packages/d0/29/c6ca27464a82787ffd9be6f19be6c2715cc660957a39ec689bc1654fd89d/lexid-2020.1003-py38.pypy27-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"482add5489ccafb4952f0e3c159d27a521255fd18a6e905634ae89c1debdfde1","md5":"c6d7ac12d704011b0682723e259ca724","sha256":"0ec1a667f64faab87b31a6bc569ddda5bd12542704f7e0447dc7f6eae8f79979"},"downloads":-1,"filename":"lexid-2020.1003.tar.gz","has_sig":false,"md5_digest":"c6d7ac12d704011b0682723e259ca724","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":11647,"upload_time":"2020-09-03T22:30:42","upload_time_iso_8601":"2020-09-03T22:30:42.410776Z","url":"https://files.pythonhosted.org/packages/48/2a/dd5489ccafb4952f0e3c159d27a521255fd18a6e905634ae89c1debdfde1/lexid-2020.1003.tar.gz","yanked":false,"yanked_reason":null}],"2020.1004":[{"comment_text":"","digests":{"blake2b_256":"50b15653e521bfe002a30b90fabe9c65319823be52be4bdcea4e7f7c471f674e","md5":"5f478034fb9d120191fbec1b1f6ff321","sha256":"2989b9a60e64d893933b56348e6309d68903e448754f80659df16c58c53946e2"},"downloads":-1,"filename":"lexid-2020.1004-py38.py27-none-any.whl","has_sig":false,"md5_digest":"5f478034fb9d120191fbec1b1f6ff321","packagetype":"bdist_wheel","python_version":"py38.py27","requires_python":">=2.7","size":7555,"upload_time":"2020-09-03T22:49:25","upload_time_iso_8601":"2020-09-03T22:49:25.759758Z","url":"https://files.pythonhosted.org/packages/50/b1/5653e521bfe002a30b90fabe9c65319823be52be4bdcea4e7f7c471f674e/lexid-2020.1004-py38.py27-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6e22cbd0f1e458c66a8913f40c34f60fa43613413f08026bd734d0e0fced35cc","md5":"04795d8c3353655131f0b3cf3d58d9cd","sha256":"cb7dbeb1478d2cc02eccb1b1ff6b3cc74e72c346b5454a8667bc0695209fb864"},"downloads":-1,"filename":"lexid-2020.1004.tar.gz","has_sig":false,"md5_digest":"04795d8c3353655131f0b3cf3d58d9cd","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":11610,"upload_time":"2020-09-03T22:49:27","upload_time_iso_8601":"2020-09-03T22:49:27.384471Z","url":"https://files.pythonhosted.org/packages/6e/22/cbd0f1e458c66a8913f40c34f60fa43613413f08026bd734d0e0fced35cc/lexid-2020.1004.tar.gz","yanked":false,"yanked_reason":null}],"2020.1005":[{"comment_text":"","digests":{"blake2b_256":"b2a3d9e60e1044aa56e51ef9af0da801d6d9f51a774591f8b78fdcb27b669248","md5":"4353bf0a6469b41a1cc62421a748ba04","sha256":"53eb7182c9e9d9f84d72b06f7338b9cfad0fa14804cc60362a55a6f03f7bca33"},"downloads":-1,"filename":"lexid-2020.1005-py2.py3-none-any.whl","has_sig":false,"md5_digest":"4353bf0a6469b41a1cc62421a748ba04","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":7552,"upload_time":"2020-09-03T22:56:00","upload_time_iso_8601":"2020-09-03T22:56:00.610198Z","url":"https://files.pythonhosted.org/packages/b2/a3/d9e60e1044aa56e51ef9af0da801d6d9f51a774591f8b78fdcb27b669248/lexid-2020.1005-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cf8ee2f5326703081d3c4657b84d5814227fc35ffdde48c8b1ce91fe6da094c6","md5":"1758ebc3ab376e3a95f53ba7d21426c6","sha256":"52333a2b9ebd14aa0dfeb33de72bd159c2dc31adb9c59cddfc486e2b69bfdcd1"},"downloads":-1,"filename":"lexid-2020.1005.tar.gz","has_sig":false,"md5_digest":"1758ebc3ab376e3a95f53ba7d21426c6","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":11615,"upload_time":"2020-09-03T22:56:01","upload_time_iso_8601":"2020-09-03T22:56:01.744567Z","url":"https://files.pythonhosted.org/packages/cf/8e/e2f5326703081d3c4657b84d5814227fc35ffdde48c8b1ce91fe6da094c6/lexid-2020.1005.tar.gz","yanked":false,"yanked_reason":null}],"2021.1006":[{"comment_text":"","digests":{"blake2b_256":"cfe335764404a4b7e2021be1f88f42264c2e92e0c4720273559a62461ce64a47","md5":"d66956a88288bdd6c7b694f968ebe587","sha256":"5526bb5606fd74c7add23320da5f02805bddd7c77916f2dc1943e6bada8605ed"},"downloads":-1,"filename":"lexid-2021.1006-py2.py3-none-any.whl","has_sig":false,"md5_digest":"d66956a88288bdd6c7b694f968ebe587","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":7587,"upload_time":"2021-04-02T20:18:33","upload_time_iso_8601":"2021-04-02T20:18:33.129300Z","url":"https://files.pythonhosted.org/packages/cf/e3/35764404a4b7e2021be1f88f42264c2e92e0c4720273559a62461ce64a47/lexid-2021.1006-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"600b28a3f9abc75abbf1fa996eb2dd77e1e33a5d1aac62566e3f60a8ec8b8a22","md5":"acaceb7ce84ee319b69ae06d8e561172","sha256":"509a3a4cc926d3dbf22b203b18a4c66c25e6473fb7c0e0d30374533ac28bafe5"},"downloads":-1,"filename":"lexid-2021.1006.tar.gz","has_sig":false,"md5_digest":"acaceb7ce84ee319b69ae06d8e561172","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":11525,"upload_time":"2021-04-02T20:18:34","upload_time_iso_8601":"2021-04-02T20:18:34.668177Z","url":"https://files.pythonhosted.org/packages/60/0b/28a3f9abc75abbf1fa996eb2dd77e1e33a5d1aac62566e3f60a8ec8b8a22/lexid-2021.1006.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"cfe335764404a4b7e2021be1f88f42264c2e92e0c4720273559a62461ce64a47","md5":"d66956a88288bdd6c7b694f968ebe587","sha256":"5526bb5606fd74c7add23320da5f02805bddd7c77916f2dc1943e6bada8605ed"},"downloads":-1,"filename":"lexid-2021.1006-py2.py3-none-any.whl","has_sig":false,"md5_digest":"d66956a88288bdd6c7b694f968ebe587","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7","size":7587,"upload_time":"2021-04-02T20:18:33","upload_time_iso_8601":"2021-04-02T20:18:33.129300Z","url":"https://files.pythonhosted.org/packages/cf/e3/35764404a4b7e2021be1f88f42264c2e92e0c4720273559a62461ce64a47/lexid-2021.1006-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"600b28a3f9abc75abbf1fa996eb2dd77e1e33a5d1aac62566e3f60a8ec8b8a22","md5":"acaceb7ce84ee319b69ae06d8e561172","sha256":"509a3a4cc926d3dbf22b203b18a4c66c25e6473fb7c0e0d30374533ac28bafe5"},"downloads":-1,"filename":"lexid-2021.1006.tar.gz","has_sig":false,"md5_digest":"acaceb7ce84ee319b69ae06d8e561172","packagetype":"sdist","python_version":"source","requires_python":">=2.7","size":11525,"upload_time":"2021-04-02T20:18:34","upload_time_iso_8601":"2021-04-02T20:18:34.668177Z","url":"https://files.pythonhosted.org/packages/60/0b/28a3f9abc75abbf1fa996eb2dd77e1e33a5d1aac62566e3f60a8ec8b8a22/lexid-2021.1006.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
