{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Topic :: Database","Topic :: Software Development :: Libraries","Topic :: Software Development :: Libraries :: Python Modules"],"description":"# influxdb-client-python\n\n<!-- marker-index-start -->\n\n[![CircleCI](https://circleci.com/gh/influxdata/influxdb-client-python.svg?style=svg)](https://circleci.com/gh/influxdata/influxdb-client-python)\n[![codecov](https://codecov.io/gh/influxdata/influxdb-client-python/branch/master/graph/badge.svg)](https://codecov.io/gh/influxdata/influxdb-client-python)\n[![CI status](https://img.shields.io/circleci/project/github/influxdata/influxdb-client-python/master.svg)](https://circleci.com/gh/influxdata/influxdb-client-python)\n[![PyPI package](https://img.shields.io/pypi/v/influxdb-client.svg)](https://pypi.org/project/influxdb-client/)\n[![Anaconda.org package](https://anaconda.org/influxdata/influxdb_client/badges/version.svg)](https://anaconda.org/influxdata/influxdb_client)\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/influxdb-client.svg)](https://pypi.python.org/pypi/influxdb-client)\n[![Documentation status](https://readthedocs.org/projects/influxdb-client/badge/?version=stable)](https://influxdb-client.readthedocs.io/en/stable/)\n[![Slack Status](https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&style=social)](https://www.influxdata.com/slack)\n\nThis repository contains the Python client library for use with InfluxDB 2.x and Flux. InfluxDB 3.x users should instead use the lightweight [v3 client library](https://github.com/InfluxCommunity/influxdb3-python).\nInfluxDB 1.x users should use the [v1 client library](https://github.com/influxdata/influxdb-python).\n\nFor ease of migration and a consistent query and write experience, v2 users should consider using InfluxQL and the [v1 client library](https://github.com/influxdata/influxdb-python).\n\nThe API of the **influxdb-client-python** is not the backwards-compatible with the old one - **influxdb-python**.\n\n## Documentation\n\nThis section contains links to the client library documentation.\n\n-   [Product documentation](https://docs.influxdata.com/influxdb/v2.0/tools/client-libraries/), [Getting Started](#getting-started)\n-   [Examples](https://github.com/influxdata/influxdb-client-python/tree/master/examples)\n-   [API Reference](https://influxdb-client.readthedocs.io/en/stable/api.html)\n-   [Changelog](https://github.com/influxdata/influxdb-client-python/blob/master/CHANGELOG.md)\n\n## InfluxDB 2.0 client features\n\n- Querying data\n  - using the Flux language\n  - into csv, raw data, [flux_table](https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/flux_table.py#L33) structure, [Pandas DataFrame](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html)\n  - [How to query](#queries)\n-  Writing data using\n  - [Line Protocol](https://docs.influxdata.com/influxdb/latest/reference/syntax/line-protocol)\n  - [Data Point](https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/write/point.py#L47)\n  - [RxPY](https://rxpy.readthedocs.io/en/latest/) Observable\n  - [Pandas DataFrame](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html)\n  - [How to write](#writes)\n- [InfluxDB 2.0 API](https://github.com/influxdata/influxdb/blob/master/http/swagger.yml) client for management\n  - the client is generated from the [swagger](https://github.com/influxdata/influxdb/blob/master/http/swagger.yml) by using the [openapi-generator](https://github.com/OpenAPITools/openapi-generator)\n  - organizations & users management\n  - buckets management\n  - tasks management\n  - authorizations\n  - health check\n  -   ...\n- [InfluxDB 1.8 API compatibility](#influxdb-18-api-compatibility)\n- Examples\n  - [Connect to InfluxDB Cloud](#connect-to-influxdb-cloud)\n  - [How to efficiently import large dataset](#how-to-efficiently-import-large-dataset)\n  - [Efficiency write data from IOT sensor](#efficiency-write-data-from-iot-sensor)\n  - [How to use Jupyter + Pandas + InfluxDB 2](#how-to-use-jupyter--pandas--influxdb-2)\n- [Advanced Usage](#advanced-usage)\n  - [Gzip support](#gzip-support)\n  - [Proxy configuration](#proxy-configuration)\n  - [Nanosecond precision](#nanosecond-precision)\n  - [Delete data](#delete-data)\n  - [Handling Errors](#handling-errors)\n  - [Logging](#logging)\n\n## Installation\n\nInfluxDB python library uses [RxPY](https://github.com/ReactiveX/RxPY) - The Reactive Extensions for Python (RxPY).\n\n**Python 3.7** or later is required.\n\n:warning:\n> It is recommended to use `ciso8601` with client for parsing dates. `ciso8601` is much faster than built-in Python datetime. Since it's written as a `C` module the best way is build it from sources:\n\n**Windows**:\n\nYou have to install [Visual C++ Build Tools 2015](http://go.microsoft.com/fwlink/?LinkId=691126&fixForIE=.exe) to build `ciso8601` by `pip`.\n\n**conda**:\n\nInstall from sources: `conda install -c conda-forge/label/cf202003 ciso8601`.\n\n### pip install\n\nThe python package is hosted on [PyPI](https://pypi.org/project/influxdb-client/), you can install latest version directly:\n\n``` sh\npip install 'influxdb-client[ciso]'\n```\n\nThen import the package:\n\n``` python\nimport influxdb_client\n```\n\nIf your application uses async/await in Python you can install with the `async` extra:\n\n``` sh\n$ pip install influxdb-client[async]\n```\n\nFor more info see [How to use Asyncio](#how-to-use-asyncio).\n\n### Setuptools\n\nInstall via [Setuptools](http://pypi.python.org/pypi/setuptools).\n\n``` sh\npython setup.py install --user\n```\n\n(or `sudo python setup.py install` to install the package for all users)\n\n## Getting Started\n\nPlease follow the [Installation](#installation) and then run the following:\n\n<!-- marker-query-start -->\n\n``` python\nfrom influxdb_client import InfluxDBClient, Point\nfrom influxdb_client.client.write_api import SYNCHRONOUS\n\nbucket = \"my-bucket\"\n\nclient = InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\")\n\nwrite_api = client.write_api(write_options=SYNCHRONOUS)\nquery_api = client.query_api()\n\np = Point(\"my_measurement\").tag(\"location\", \"Prague\").field(\"temperature\", 25.3)\n\nwrite_api.write(bucket=bucket, record=p)\n\n## using Table structure\ntables = query_api.query('from(bucket:\"my-bucket\") |> range(start: -10m)')\n\nfor table in tables:\n    print(table)\n    for row in table.records:\n        print (row.values)\n\n\n## using csv library\ncsv_result = query_api.query_csv('from(bucket:\"my-bucket\") |> range(start: -10m)')\nval_count = 0\nfor row in csv_result:\n    for cell in row:\n        val_count += 1\n```\n\n<!-- marker-query-end -->\n\n## Client configuration\n\n### Via File\n\nA client can be configured via `*.ini` file in segment `influx2`.\n\nThe following options are supported:\n\n-   `url` - the url to connect to InfluxDB\n-   `org` - default destination organization for writes and queries\n-   `token` - the token to use for the authorization\n-   `timeout` - socket timeout in ms (default value is 10000)\n-   `verify_ssl` - set this to false to skip verifying SSL certificate when calling API from https server\n-   `ssl_ca_cert` - set this to customize the certificate file to verify the peer\n-   `cert_file` - path to the certificate that will be used for mTLS authentication\n-   `cert_key_file` - path to the file contains private key for mTLS certificate\n-   `cert_key_password` - string or function which returns password for decrypting the mTLS private key\n-   `connection_pool_maxsize` - set the number of connections to save that can be reused by urllib3\n-   `auth_basic` - enable http basic authentication when talking to a InfluxDB 1.8.x without authentication but is accessed via reverse proxy with basic authentication (defaults to false)\n-   `profilers` - set the list of enabled [Flux profilers](https://docs.influxdata.com/influxdb/v2.0/reference/flux/stdlib/profiler/)\n\n``` python\nself.client = InfluxDBClient.from_config_file(\"config.ini\")\n```\n\n``` ini\n[influx2]\nurl=http://localhost:8086\norg=my-org\ntoken=my-token\ntimeout=6000\nverify_ssl=False\n```\n\n### Via Environment Properties\n\nA client can be configured via environment properties.\n\nSupported properties are:\n\n-   `INFLUXDB_V2_URL` - the url to connect to InfluxDB\n-   `INFLUXDB_V2_ORG` - default destination organization for writes and queries\n-   `INFLUXDB_V2_TOKEN` - the token to use for the authorization\n-   `INFLUXDB_V2_TIMEOUT` - socket timeout in ms (default value is  10000)\n-   `INFLUXDB_V2_VERIFY_SSL` - set this to false to skip verifying SSL certificate when calling API from https server\n-   `INFLUXDB_V2_SSL_CA_CERT` - set this to customize the certificate file to verify the peer\n-   `INFLUXDB_V2_CERT_FILE` - path to the certificate that will be used for mTLS authentication\n-   `INFLUXDB_V2_CERT_KEY_FILE` - path to the file contains private key for mTLS certificate\n-   `INFLUXDB_V2_CERT_KEY_PASSWORD` - string or function which returns password for decrypting the mTLS private key\n-   `INFLUXDB_V2_CONNECTION_POOL_MAXSIZE` - set the number of connections to save that can be reused by urllib3\n-   `INFLUXDB_V2_AUTH_BASIC` - enable http basic authentication when talking to a InfluxDB 1.8.x without authentication but is accessed via reverse proxy with basic authentication (defaults to false)\n-   `INFLUXDB_V2_PROFILERS` - set the list of enabled [Flux profilers](https://docs.influxdata.com/influxdb/v2.0/reference/flux/stdlib/profiler/)\n\n``` python\nself.client = InfluxDBClient.from_env_properties()\n```\n\n### Profile query\n\nThe [Flux Profiler package](https://docs.influxdata.com/influxdb/v2.0/reference/flux/stdlib/profiler/) provides performance profiling tools for Flux queries and operations.\n\nYou can enable printing profiler information of the Flux query in client\nlibrary by:\n\n-   set QueryOptions.profilers in QueryApi,\n-   set `INFLUXDB_V2_PROFILERS` environment variable,\n-   set `profilers` option in configuration file.\n\nWhen the profiler is enabled, the result of flux query contains additional tables \"profiler/\". In order to have consistent behaviour with enabled/disabled profiler, `FluxCSVParser` excludes \"profiler/\" measurements from result.\n\nExample how to enable profilers using API:\n\n``` python\nq = '''\n    from(bucket: stringParam)\n      |> range(start: -5m, stop: now())\n      |> filter(fn: (r) => r._measurement == \"mem\")\n      |> filter(fn: (r) => r._field == \"available\" or r._field == \"free\" or r._field == \"used\")\n      |> aggregateWindow(every: 1m, fn: mean)\n      |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n'''\np = {\n    \"stringParam\": \"my-bucket\",\n}\n\nquery_api = client.query_api(query_options=QueryOptions(profilers=[\"query\", \"operator\"]))\ncsv_result = query_api.query(query=q, params=p)\n```\n\nExample of a profiler output:\n\n``` text\n===============\nProfiler: query\n===============\n\nfrom(bucket: stringParam)\n  |> range(start: -5m, stop: now())\n  |> filter(fn: (r) => r._measurement == \"mem\")\n  |> filter(fn: (r) => r._field == \"available\" or r._field == \"free\" or r._field == \"used\")\n  |> aggregateWindow(every: 1m, fn: mean)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n\n========================\nProfiler: profiler/query\n========================\nresult              : _profiler\ntable               : 0\n_measurement        : profiler/query\nTotalDuration       : 8924700\nCompileDuration     : 350900\nQueueDuration       : 33800\nPlanDuration        : 0\nRequeueDuration     : 0\nExecuteDuration     : 8486500\nConcurrency         : 0\nMaxAllocated        : 2072\nTotalAllocated      : 0\nflux/query-plan     :\n\ndigraph {\n  ReadWindowAggregateByTime11\n  // every = 1m, aggregates = [mean], createEmpty = true, timeColumn = \"_stop\"\n  pivot8\n  generated_yield\n\n  ReadWindowAggregateByTime11 -> pivot8\n  pivot8 -> generated_yield\n}\n\n\ninfluxdb/scanned-bytes: 0\ninfluxdb/scanned-values: 0\n\n===========================\nProfiler: profiler/operator\n===========================\nresult              : _profiler\ntable               : 1\n_measurement        : profiler/operator\nType                : *universe.pivotTransformation\nLabel               : pivot8\nCount               : 3\nMinDuration         : 32600\nMaxDuration         : 126200\nDurationSum         : 193400\nMeanDuration        : 64466.666666666664\n\n===========================\nProfiler: profiler/operator\n===========================\nresult              : _profiler\ntable               : 1\n_measurement        : profiler/operator\nType                : *influxdb.readWindowAggregateSource\nLabel               : ReadWindowAggregateByTime11\nCount               : 1\nMinDuration         : 940500\nMaxDuration         : 940500\nDurationSum         : 940500\nMeanDuration        : 940500.0\n```\n\nYou can also use callback function to get profilers output. Return value of this callback is type of FluxRecord.\n\nExample how to use profilers with callback:\n\n``` python\nclass ProfilersCallback(object):\n   def __init__(self):\n       self.records = []\n\n   def __call__(self, flux_record):\n       self.records.append(flux_record.values)\n\ncallback = ProfilersCallback()\n\nquery_api = client.query_api(query_options=QueryOptions(profilers=[\"query\", \"operator\"], profiler_callback=callback))\ntables = query_api.query('from(bucket:\"my-bucket\") |> range(start: -10m)')\n\nfor profiler in callback.records:\n   print(f'Custom processing of profiler result: {profiler}')\n```\n\nExample output of this callback:\n\n``` text\nCustom processing of profiler result: {'result': '_profiler', 'table': 0, '_measurement': 'profiler/query', 'TotalDuration': 18843792, 'CompileDuration': 1078666, 'QueueDuration': 93375, 'PlanDuration': 0, 'RequeueDuration': 0, 'ExecuteDuration': 17371000, 'Concurrency': 0, 'MaxAllocated': 448, 'TotalAllocated': 0, 'RuntimeErrors': None, 'flux/query-plan': 'digraph {\\r\\n  ReadRange2\\r\\n  generated_yield\\r\\n\\r\\n  ReadRange2 -> generated_yield\\r\\n}\\r\\n\\r\\n', 'influxdb/scanned-bytes': 0, 'influxdb/scanned-values': 0}\nCustom processing of profiler result: {'result': '_profiler', 'table': 1, '_measurement': 'profiler/operator', 'Type': '*influxdb.readFilterSource', 'Label': 'ReadRange2', 'Count': 1, 'MinDuration': 3274084, 'MaxDuration': 3274084, 'DurationSum': 3274084, 'MeanDuration': 3274084.0}\n```\n\n<!-- marker-index-end -->\n\n## How to use\n\n### Writes\n\n<!-- marker-writes-start -->\n\nThe [WriteApi](https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/write_api.py) supports synchronous, asynchronous and batching writes into InfluxDB 2.0. The data should be passed as a [InfluxDB Line Protocol](https://docs.influxdata.com/influxdb/latest/write_protocols/line_protocol_tutorial/), [Data Point](https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/write/point.py) or Observable stream.\n\n:warning:\n\n> The `WriteApi` in batching mode (default mode) is supposed to run as a\nsingleton. To flush all your data you should wrap the execution using\n`with client.write_api(...) as write_api:` statement or call\n`write_api.close()` at the end of your script.\n\n*The default instance of WriteApi use batching.*\n\n#### The data could be written as\n\n1.  `string` or `bytes` that is formatted as a InfluxDB's line protocol\n2.  [Data Point](https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/write/point.py#L16) structure\n3.  Dictionary style mapping with keys: `measurement`, `tags`, `fields` and `time` or custom structure\n4.  [NamedTuple](https://docs.python.org/3/library/collections.html#collections.namedtuple)\n5.  [Data Classes](https://docs.python.org/3/library/dataclasses.html)\n6.  [Pandas DataFrame](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html)\n7.  List of above items\n8.  A `batching` type of write also supports an `Observable` that produce one of an above item\n\nYou can find write examples at GitHub: [influxdb-client-python/examples](https://github.com/influxdata/influxdb-client-python/tree/master/examples#writes).\n\n#### Batching\n\nThe batching is configurable by `write_options`:\n\n\n\n| Property             | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | Default Value |\n|----------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------|\n| **batch_size**       | the number of data point to collect in a batch                                                                                                                                                                                                                                                                                                                                                                                                                                          | `1000`        |\n| **flush_interval**   | the number of milliseconds before the batch is written                                                                                                                                                                                                                                                                                                                                                                                                                                  | `1000`        |\n| **jitter_interval**  | the number of milliseconds to increase the batch flush interval by a random amount                                                                                                                                                                                                                                                                                                                                                                                                      | `0`           |\n| **retry_interval**   | the number of milliseconds to retry first unsuccessful write. The next retry delay is computed using exponential random backoff. The retry interval is used when the InfluxDB server does not specify \\\"Retry-After\\\" header.                                                                                                                                                                                                                                                           | `5000`        |\n| **max_retry_time**   | maximum total retry timeout in milliseconds.                                                                                                                                                                                                                                                                                                                                                                                                                                            | `180_000`     |\n| **max_retries**      | the number of max retries when write fails                                                                                                                                                                                                                                                                                                                                                                                                                                              | `5`           |\n| **max_retry_delay**  | the maximum delay between each retry attempt in milliseconds                                                                                                                                                                                                                                                                                                                                                                                                                            | `125_000`     |\n| **max_close_wait**   | the maximum amount of time to wait for batches to flush when `.close()` is called                                                                                                                                                                                                                                                                                                                                                                                                       | `300_000`     |\n| **exponential_base** | the base for the exponential retry delay, the next delay is computed using random exponential backoff as a random value within the interval `retry_interval * exponential_base^(attempts-1)` and `retry_interval * exponential_base^(attempts)`. Example for `retry_interval=5_000, exponential_base=2, max_retry_delay=125_000, total=5` Retry delays are random distributed values within the ranges of `[5_000-10_000, 10_000-20_000, 20_000-40_000, 40_000-80_000, 80_000-125_000]` | `2`           |\n\n``` python\nfrom datetime import datetime, timedelta\n\nimport pandas as pd\nimport reactivex as rx\nfrom reactivex import operators as ops\n\nfrom influxdb_client import InfluxDBClient, Point, WriteOptions\n\nwith InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\") as _client:\n\n    with _client.write_api(write_options=WriteOptions(batch_size=500,\n                                                      flush_interval=10_000,\n                                                      jitter_interval=2_000,\n                                                      retry_interval=5_000,\n                                                      max_retries=5,\n                                                      max_retry_delay=30_000,\n                                                      max_close_wait=300_000,\n                                                      exponential_base=2)) as _write_client:\n\n        \"\"\"\n        Write Line Protocol formatted as string\n        \"\"\"\n        _write_client.write(\"my-bucket\", \"my-org\", \"h2o_feet,location=coyote_creek water_level=1.0 1\")\n        _write_client.write(\"my-bucket\", \"my-org\", [\"h2o_feet,location=coyote_creek water_level=2.0 2\",\n                                                    \"h2o_feet,location=coyote_creek water_level=3.0 3\"])\n\n        \"\"\"\n        Write Line Protocol formatted as byte array\n        \"\"\"\n        _write_client.write(\"my-bucket\", \"my-org\", \"h2o_feet,location=coyote_creek water_level=1.0 1\".encode())\n        _write_client.write(\"my-bucket\", \"my-org\", [\"h2o_feet,location=coyote_creek water_level=2.0 2\".encode(),\n                                                    \"h2o_feet,location=coyote_creek water_level=3.0 3\".encode()])\n\n        \"\"\"\n        Write Dictionary-style object\n        \"\"\"\n        _write_client.write(\"my-bucket\", \"my-org\", {\"measurement\": \"h2o_feet\", \"tags\": {\"location\": \"coyote_creek\"},\n                                                    \"fields\": {\"water_level\": 1.0}, \"time\": 1})\n        _write_client.write(\"my-bucket\", \"my-org\", [{\"measurement\": \"h2o_feet\", \"tags\": {\"location\": \"coyote_creek\"},\n                                                     \"fields\": {\"water_level\": 2.0}, \"time\": 2},\n                                                    {\"measurement\": \"h2o_feet\", \"tags\": {\"location\": \"coyote_creek\"},\n                                                     \"fields\": {\"water_level\": 3.0}, \"time\": 3}])\n\n        \"\"\"\n        Write Data Point\n        \"\"\"\n        _write_client.write(\"my-bucket\", \"my-org\",\n                            Point(\"h2o_feet\").tag(\"location\", \"coyote_creek\").field(\"water_level\", 4.0).time(4))\n        _write_client.write(\"my-bucket\", \"my-org\",\n                            [Point(\"h2o_feet\").tag(\"location\", \"coyote_creek\").field(\"water_level\", 5.0).time(5),\n                             Point(\"h2o_feet\").tag(\"location\", \"coyote_creek\").field(\"water_level\", 6.0).time(6)])\n\n        \"\"\"\n        Write Observable stream\n        \"\"\"\n        _data = rx \\\n            .range(7, 11) \\\n            .pipe(ops.map(lambda i: \"h2o_feet,location=coyote_creek water_level={0}.0 {0}\".format(i)))\n\n        _write_client.write(\"my-bucket\", \"my-org\", _data)\n\n        \"\"\"\n        Write Pandas DataFrame\n        \"\"\"\n        _now = datetime.utcnow()\n        _data_frame = pd.DataFrame(data=[[\"coyote_creek\", 1.0], [\"coyote_creek\", 2.0]],\n                                   index=[_now, _now + timedelta(hours=1)],\n                                   columns=[\"location\", \"water_level\"])\n\n        _write_client.write(\"my-bucket\", \"my-org\", record=_data_frame, data_frame_measurement_name='h2o_feet',\n                            data_frame_tag_columns=['location'])\n```\n\n#### Default Tags\n\nSometimes is useful to store same information in every measurement e.g. `hostname`, `location`, `customer`. The client is able to use static value or env property as a tag value.\n\nThe expressions:\n\n-   `California Miner` - static value\n-   `${env.hostname}` - environment property\n\n##### Via API\n\n``` python\npoint_settings = PointSettings()\npoint_settings.add_default_tag(\"id\", \"132-987-655\")\npoint_settings.add_default_tag(\"customer\", \"California Miner\")\npoint_settings.add_default_tag(\"data_center\", \"${env.data_center}\")\n\nself.write_client = self.client.write_api(write_options=SYNCHRONOUS, point_settings=point_settings)\n```\n\n``` python\nself.write_client = self.client.write_api(write_options=SYNCHRONOUS,\n                                              point_settings=PointSettings(**{\"id\": \"132-987-655\",\n                                                                              \"customer\": \"California Miner\"}))\n```\n\n##### Via Configuration file\n\nIn an [init](https://docs.python.org/3/library/configparser.html) configuration file you are able to specify default tags by `tags` segment.\n\n``` python\nself.client = InfluxDBClient.from_config_file(\"config.ini\")\n```\n\n``` \n[influx2]\nurl=http://localhost:8086\norg=my-org\ntoken=my-token\ntimeout=6000\n\n[tags]\nid = 132-987-655\ncustomer = California Miner\ndata_center = ${env.data_center}\n```\n\nYou can also use a [TOML](https://toml.io/en/) or a[JSON](https://www.json.org/json-en.html) format for the configuration file.\n\n##### Via Environment Properties\n\nYou are able to specify default tags by environment properties with prefix `INFLUXDB_V2_TAG_`.\n\nExamples:\n\n-   `INFLUXDB_V2_TAG_ID`\n-   `INFLUXDB_V2_TAG_HOSTNAME`\n\n``` python\nself.client = InfluxDBClient.from_env_properties()\n```\n\n#### Synchronous client\n\nData are writes in a synchronous HTTP request.\n\n``` python\nfrom influxdb_client import InfluxDBClient, Point\nfrom influxdb_client .client.write_api import SYNCHRONOUS\n\nclient = InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\")\nwrite_api = client.write_api(write_options=SYNCHRONOUS)\n\n_point1 = Point(\"my_measurement\").tag(\"location\", \"Prague\").field(\"temperature\", 25.3)\n_point2 = Point(\"my_measurement\").tag(\"location\", \"New York\").field(\"temperature\", 24.3)\n\nwrite_api.write(bucket=\"my-bucket\", record=[_point1, _point2])\n\nclient.close()\n```\n<!-- marker-writes-end -->\n\n### Queries\n\nThe result retrieved by [QueryApi](https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/query_api.py) could be formatted as a:\n\n1.  Flux data structure: [FluxTable](https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/flux_table.py#L5), [FluxColumn](https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/flux_table.py#L22) and [FluxRecord](https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/flux_table.py#L31)\n2.  `influxdb_client.client.flux_table.CSVIterator` which will iterate over CSV lines\n3.  Raw unprocessed results as a `str` iterator\n4.  [Pandas DataFrame](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html)\n\nThe API also support streaming `FluxRecord` via [query_stream](https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/query_api.py#L77), see example below:\n\n``` python\nfrom influxdb_client import InfluxDBClient, Point, Dialect\nfrom influxdb_client.client.write_api import SYNCHRONOUS\n\nclient = InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\")\n\nwrite_api = client.write_api(write_options=SYNCHRONOUS)\nquery_api = client.query_api()\n\n\"\"\"\nPrepare data\n\"\"\"\n\n_point1 = Point(\"my_measurement\").tag(\"location\", \"Prague\").field(\"temperature\", 25.3)\n_point2 = Point(\"my_measurement\").tag(\"location\", \"New York\").field(\"temperature\", 24.3)\n\nwrite_api.write(bucket=\"my-bucket\", record=[_point1, _point2])\n\n\"\"\"\nQuery: using Table structure\n\"\"\"\ntables = query_api.query('from(bucket:\"my-bucket\") |> range(start: -10m)')\n\nfor table in tables:\n    print(table)\n    for record in table.records:\n        print(record.values)\n\nprint()\nprint()\n\n\"\"\"\nQuery: using Bind parameters\n\"\"\"\n\np = {\"_start\": datetime.timedelta(hours=-1),\n     \"_location\": \"Prague\",\n     \"_desc\": True,\n     \"_floatParam\": 25.1,\n     \"_every\": datetime.timedelta(minutes=5)\n     }\n\ntables = query_api.query('''\n    from(bucket:\"my-bucket\") |> range(start: _start)\n        |> filter(fn: (r) => r[\"_measurement\"] == \"my_measurement\")\n        |> filter(fn: (r) => r[\"_field\"] == \"temperature\")\n        |> filter(fn: (r) => r[\"location\"] == _location and r[\"_value\"] > _floatParam)\n        |> aggregateWindow(every: _every, fn: mean, createEmpty: true)\n        |> sort(columns: [\"_time\"], desc: _desc)\n''', params=p)\n\nfor table in tables:\n    print(table)\n    for record in table.records:\n        print(str(record[\"_time\"]) + \" - \" + record[\"location\"] + \": \" + str(record[\"_value\"]))\n\nprint()\nprint()\n\n\"\"\"\nQuery: using Stream\n\"\"\"\nrecords = query_api.query_stream('from(bucket:\"my-bucket\") |> range(start: -10m)')\n\nfor record in records:\n    print(f'Temperature in {record[\"location\"]} is {record[\"_value\"]}')\n\n\"\"\"\nInterrupt a stream after retrieve a required data\n\"\"\"\nlarge_stream = query_api.query_stream('from(bucket:\"my-bucket\") |> range(start: -100d)')\nfor record in large_stream:\n    if record[\"location\"] == \"New York\":\n        print(f'New York temperature: {record[\"_value\"]}')\n        break\n\nlarge_stream.close()\n\nprint()\nprint()\n\n\"\"\"\nQuery: using csv library\n\"\"\"\ncsv_result = query_api.query_csv('from(bucket:\"my-bucket\") |> range(start: -10m)',\n                                 dialect=Dialect(header=False, delimiter=\",\", comment_prefix=\"#\", annotations=[],\n                                                 date_time_format=\"RFC3339\"))\nfor csv_line in csv_result:\n    if not len(csv_line) == 0:\n        print(f'Temperature in {csv_line[9]} is {csv_line[6]}')\n\n\"\"\"\nClose client\n\"\"\"\nclient.close()\n```\n\n#### Pandas DataFrame\n\n<!-- marker-pandas-start -->\n\n:warning:\n\n> For DataFrame querying you should install Pandas dependency via `pip install 'influxdb-client[extra]'`.\n\n:warning:\n\n> Note that if a query returns more then one table than the client generates a `DataFrame` for each of them.\n\nThe `client` is able to retrieve data in [Pandas DataFrame](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html) format thought `query_data_frame`:\n\n``` python\nfrom influxdb_client import InfluxDBClient, Point, Dialect\nfrom influxdb_client.client.write_api import SYNCHRONOUS\n\nclient = InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\")\n\nwrite_api = client.write_api(write_options=SYNCHRONOUS)\nquery_api = client.query_api()\n\n\"\"\"\nPrepare data\n\"\"\"\n\n_point1 = Point(\"my_measurement\").tag(\"location\", \"Prague\").field(\"temperature\", 25.3)\n_point2 = Point(\"my_measurement\").tag(\"location\", \"New York\").field(\"temperature\", 24.3)\n\nwrite_api.write(bucket=\"my-bucket\", record=[_point1, _point2])\n\n\"\"\"\nQuery: using Pandas DataFrame\n\"\"\"\ndata_frame = query_api.query_data_frame('from(bucket:\"my-bucket\") '\n                                        '|> range(start: -10m) '\n                                        '|> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\") '\n                                        '|> keep(columns: [\"location\", \"temperature\"])')\nprint(data_frame.to_string())\n\n\"\"\"\nClose client\n\"\"\"\nclient.close()\n```\n\nOutput:\n\n``` text\nresult table  location  temperature\n0  _result     0  New York         24.3\n1  _result     1    Prague         25.3\n```\n\n<!-- marker-pandas-end -->\n\n### Examples\n\n<!-- marker-examples-start -->\n\n#### How to efficiently import large dataset\n\nThe following example shows how to import dataset with a dozen megabytes. If you would like to import gigabytes of data then \nuse our multiprocessing example: [import_data_set_multiprocessing.py](https://github.com/influxdata/influxdb-client-python/blob/master/examples/import_data_set_multiprocessing.py) for use a full capability of your hardware.\n\n-   sources -  [import_data_set.py](https://github.com/influxdata/influxdb-client-python/blob/master/examples/import_data_set.py)\n\n``` python\n\"\"\"\nImport VIX - CBOE Volatility Index - from \"vix-daily.csv\" file into InfluxDB 2.0\n\nhttps://datahub.io/core/finance-vix#data\n\"\"\"\n\nfrom collections import OrderedDict\nfrom csv import DictReader\n\nimport reactivex as rx\nfrom reactivex import operators as ops\n\nfrom influxdb_client import InfluxDBClient, Point, WriteOptions\n\ndef parse_row(row: OrderedDict):\n    \"\"\"Parse row of CSV file into Point with structure:\n\n        financial-analysis,type=ily close=18.47,high=19.82,low=18.28,open=19.82 1198195200000000000\n\n    CSV format:\n        Date,VIX Open,VIX High,VIX Low,VIX Close\\n\n        2004-01-02,17.96,18.68,17.54,18.22\\n\n        2004-01-05,18.45,18.49,17.44,17.49\\n\n        2004-01-06,17.66,17.67,16.19,16.73\\n\n        2004-01-07,16.72,16.75,15.5,15.5\\n\n        2004-01-08,15.42,15.68,15.32,15.61\\n\n        2004-01-09,16.15,16.88,15.57,16.75\\n\n        ...\n\n    :param row: the row of CSV file\n    :return: Parsed csv row to [Point]\n    \"\"\"\n\n    \"\"\"\n     For better performance is sometimes useful directly create a LineProtocol to avoid unnecessary escaping overhead:\n     \"\"\"\n     # from datetime import timezone\n     # import ciso8601\n     # from influxdb_client.client.write.point import EPOCH\n     #\n     # time = (ciso8601.parse_datetime(row[\"Date\"]).replace(tzinfo=timezone.utc) - EPOCH).total_seconds() * 1e9\n     # return f\"financial-analysis,type=vix-daily\" \\\n     #        f\" close={float(row['VIX Close'])},high={float(row['VIX High'])},low={float(row['VIX Low'])},open={float(row['VIX Open'])} \" \\\n     #        f\" {int(time)}\"\n\n    return Point(\"financial-analysis\") \\\n        .tag(\"type\", \"vix-daily\") \\\n        .field(\"open\", float(row['VIX Open'])) \\\n        .field(\"high\", float(row['VIX High'])) \\\n        .field(\"low\", float(row['VIX Low'])) \\\n        .field(\"close\", float(row['VIX Close'])) \\\n        .time(row['Date'])\n\n\n\"\"\"\nConverts vix-daily.csv into sequence of datad point\n\"\"\"\ndata = rx \\\n    .from_iterable(DictReader(open('vix-daily.csv', 'r'))) \\\n    .pipe(ops.map(lambda row: parse_row(row)))\n\nclient = InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\", debug=True)\n\n\"\"\"\nCreate client that writes data in batches with 50_000 items.\n\"\"\"\nwrite_api = client.write_api(write_options=WriteOptions(batch_size=50_000, flush_interval=10_000))\n\n\"\"\"\nWrite data into InfluxDB\n\"\"\"\nwrite_api.write(bucket=\"my-bucket\", record=data)\nwrite_api.close()\n\n\"\"\"\nQuerying max value of CBOE Volatility Index\n\"\"\"\nquery = 'from(bucket:\"my-bucket\")' \\\n        ' |> range(start: 0, stop: now())' \\\n        ' |> filter(fn: (r) => r._measurement == \"financial-analysis\")' \\\n        ' |> max()'\nresult = client.query_api().query(query=query)\n\n\"\"\"\nProcessing results\n\"\"\"\nprint()\nprint(\"=== results ===\")\nprint()\nfor table in result:\n    for record in table.records:\n        print('max {0:5} = {1}'.format(record.get_field(), record.get_value()))\n\n\"\"\"\nClose client\n\"\"\"\nclient.close()\n```\n\n#### Efficiency write data from IOT sensor\n\n-   sources - [iot_sensor.py](https://github.com/influxdata/influxdb-client-python/blob/master/examples/iot_sensor.py)\n\n``` python\n\"\"\"\nEfficiency write data from IOT sensor - write changed temperature every minute\n\"\"\"\nimport atexit\nimport platform\nfrom datetime import timedelta\n\nimport psutil as psutil\nimport reactivex as rx\nfrom reactivex import operators as ops\n\nfrom influxdb_client import InfluxDBClient, WriteApi, WriteOptions\n\ndef on_exit(db_client: InfluxDBClient, write_api: WriteApi):\n    \"\"\"Close clients after terminate a script.\n\n    :param db_client: InfluxDB client\n    :param write_api: WriteApi\n    :return: nothing\n    \"\"\"\n    write_api.close()\n    db_client.close()\n\n\ndef sensor_temperature():\n    \"\"\"Read a CPU temperature. The [psutil] doesn't support MacOS so we use [sysctl].\n\n    :return: actual CPU temperature\n    \"\"\"\n    os_name = platform.system()\n    if os_name == 'Darwin':\n        from subprocess import check_output\n        output = check_output([\"sysctl\", \"machdep.xcpm.cpu_thermal_level\"])\n        import re\n        return re.findall(r'\\d+', str(output))[0]\n    else:\n        return psutil.sensors_temperatures()[\"coretemp\"][0]\n\n\ndef line_protocol(temperature):\n    \"\"\"Create a InfluxDB line protocol with structure:\n\n        iot_sensor,hostname=mine_sensor_12,type=temperature value=68\n\n    :param temperature: the sensor temperature\n    :return: Line protocol to write into InfluxDB\n    \"\"\"\n\n    import socket\n    return 'iot_sensor,hostname={},type=temperature value={}'.format(socket.gethostname(), temperature)\n\n\n\"\"\"\nRead temperature every minute; distinct_until_changed - produce only if temperature change\n\"\"\"\ndata = rx\\\n    .interval(period=timedelta(seconds=60))\\\n    .pipe(ops.map(lambda t: sensor_temperature()),\n          ops.distinct_until_changed(),\n          ops.map(lambda temperature: line_protocol(temperature)))\n\n_db_client = InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\", debug=True)\n\n\"\"\"\nCreate client that writes data into InfluxDB\n\"\"\"\n_write_api = _db_client.write_api(write_options=WriteOptions(batch_size=1))\n_write_api.write(bucket=\"my-bucket\", record=data)\n\n\n\"\"\"\nCall after terminate a script\n\"\"\"\natexit.register(on_exit, _db_client, _write_api)\n\ninput()\n```\n\n#### Connect to InfluxDB Cloud\n\nThe following example demonstrate the simplest way how to write and query date with the InfluxDB Cloud.\n\nAt first point you should create an authentication token as is described [here](https://v2.docs.influxdata.com/v2.0/security/tokens/create-token/).\n\nAfter that you should configure properties: `influx_cloud_url`,`influx_cloud_token`, `bucket` and `org` in a `influx_cloud.py` example.\n\nThe last step is run a python script via: `python3 influx_cloud.py`.\n\n-   sources -     [influx_cloud.py](https://github.com/influxdata/influxdb-client-python/blob/master/examples/influx_cloud.py)\n\n``` python\n\"\"\"\nConnect to InfluxDB 2.0 - write data and query them\n\"\"\"\n\nfrom datetime import datetime\n\nfrom influxdb_client import Point, InfluxDBClient\nfrom influxdb_client.client.write_api import SYNCHRONOUS\n\n\"\"\"\nConfigure credentials\n\"\"\"\ninflux_cloud_url = 'https://us-west-2-1.aws.cloud2.influxdata.com'\ninflux_cloud_token = '...'\nbucket = '...'\norg = '...'\n\nclient = InfluxDBClient(url=influx_cloud_url, token=influx_cloud_token)\ntry:\n    kind = 'temperature'\n    host = 'host1'\n    device = 'opt-123'\n\n    \"\"\"\n    Write data by Point structure\n    \"\"\"\n    point = Point(kind).tag('host', host).tag('device', device).field('value', 25.3).time(time=datetime.utcnow())\n\n    print(f'Writing to InfluxDB cloud: {point.to_line_protocol()} ...')\n\n    write_api = client.write_api(write_options=SYNCHRONOUS)\n    write_api.write(bucket=bucket, org=org, record=point)\n\n    print()\n    print('success')\n    print()\n    print()\n\n    \"\"\"\n    Query written data\n    \"\"\"\n    query = f'from(bucket: \"{bucket}\") |> range(start: -1d) |> filter(fn: (r) => r._measurement == \"{kind}\")'\n    print(f'Querying from InfluxDB cloud: \"{query}\" ...')\n    print()\n\n    query_api = client.query_api()\n    tables = query_api.query(query=query, org=org)\n\n    for table in tables:\n        for row in table.records:\n            print(f'{row.values[\"_time\"]}: host={row.values[\"host\"]},device={row.values[\"device\"]} '\n                  f'{row.values[\"_value\"]} °C')\n\n    print()\n    print('success')\n\nexcept Exception as e:\n    print(e)\nfinally:\n    client.close()\n```\n\n#### How to use Jupyter + Pandas + InfluxDB 2\n\nThe first example shows how to use client capabilities to predict stock price via [Keras](https://keras.io), [TensorFlow](https://www.tensorflow.org), [sklearn](https://scikit-learn.org/stable/):\n\nThe example is taken from [Kaggle](https://www.kaggle.com/chaitanyacc4/predicting-stock-prices-of-apple-inc).\n\n-   sources -     [stock-predictions.ipynb](notebooks/stock-predictions.ipynb)\n\n![image](https://raw.githubusercontent.com/influxdata/influxdb-client-python/master/docs/images/stock-price-prediction.gif)\n\nResult:\n\n![image](https://raw.githubusercontent.com/influxdata/influxdb-client-python/master/docs/images/stock-price-prediction-results.png)\n\nThe second example shows how to use client capabilities to realtime visualization via [hvPlot](https://hvplot.pyviz.org), [Streamz](https://streamz.readthedocs.io/en/latest/), [RxPY](https://rxpy.readthedocs.io/en/latest/):\n\n-   sources - [realtime-stream.ipynb](notebooks/realtime-stream.ipynb)\n\n![image](https://raw.githubusercontent.com/influxdata/influxdb-client-python/master/docs/images/realtime-result.gif)\n\n#### Other examples\n\nYou can find all examples at GitHub: [influxdb-client-python/examples](https://github.com/influxdata/influxdb-client-python/tree/master/examples#examples).\n\n<!-- marker-examples-end -->\n\n## Advanced Usage\n\n### Gzip support\n\n<!-- marker-gzip-start -->\n\n`InfluxDBClient` does not enable gzip compression for http requests by default. If you want to enable gzip to reduce transfer data's size, you can call:\n\n``` python\nfrom influxdb_client import InfluxDBClient\n\n_db_client = InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\", enable_gzip=True)\n```\n<!-- marker-gzip-end -->\n\n### Authenticate to the InfluxDB\n\n<!-- marker-authenticate-start -->\n\n`InfluxDBClient` supports three options how to authorize a connection:\n\n-   _Token_\n-   _Username & Password_\n-   _HTTP Basic_\n\n#### Token\n\nUse the `token` to authenticate to the InfluxDB API. In your API requests, an _Authorization_ header will be sent. The header value, provide the word _Token_ followed by a space and an InfluxDB API token. The word _token_ is case-sensitive.\n\n``` python\nfrom influxdb_client import InfluxDBClient\n\nwith InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\") as client\n```\n\n:warning:\n\n> Note that this is a preferred way how to authenticate to InfluxDB API.\n\n\n#### Username & Password\n\nAuthenticates via username and password credentials. If successful,  creates a new session for the user.\n\n``` python\nfrom influxdb_client import InfluxDBClient\n\nwith InfluxDBClient(url=\"http://localhost:8086\", username=\"my-user\", password=\"my-password\") as client\n```\n\n:warning:\n\n> The `username/password` auth is based on the HTTP \"Basic\" authentication. The authorization expires when the [time-to-live (TTL)](https://docs.influxdata.com/influxdb/latest/reference/config-options/#session-length) (default 60 minutes) is reached and client produces `unauthorized exception`.\n\n#### HTTP Basic\n\nUse this to enable basic authentication when talking to a InfluxDB 1.8.x that does not use auth-enabled but is protected by a reverse proxy with basic authentication.\n\n``` python\nfrom influxdb_client import InfluxDBClient\n\nwith InfluxDBClient(url=\"http://localhost:8086\", auth_basic=True, token=\"my-proxy-secret\") as client\n```\n\n:warning:\n\n> Don't use this when directly talking to InfluxDB 2.\n\n<!-- marker-authenticate-end -->\n\n### Proxy configuration\n\n<!-- marker-proxy-start -->\n\nYou can configure the client to tunnel requests through an HTTP proxy. The following proxy options are supported:\n\n-   `proxy` - Set this to configure the http proxy to be used, ex. `http://localhost:3128`\n-   `proxy_headers` - A dictionary containing headers that will be sent to the proxy. Could be used for proxy authentication.\n\n``` python\nfrom influxdb_client import InfluxDBClient\n\nwith InfluxDBClient(url=\"http://localhost:8086\",\n                    token=\"my-token\",\n                    org=\"my-org\",\n                    proxy=\"http://localhost:3128\") as client:\n```\n\nIf your proxy notify the client with permanent redirect (`HTTP 301`) to **different host**. The client removes `Authorization` header, because otherwise the contents of `Authorization` is sent to third parties which is a security vulnerability.\n\nYou can change this behaviour by:\n\n``` python\nfrom urllib3 import Retry\nRetry.DEFAULT_REMOVE_HEADERS_ON_REDIRECT = frozenset()\nRetry.DEFAULT.remove_headers_on_redirect = Retry.DEFAULT_REMOVE_HEADERS_ON_REDIRECT\n```\n<!-- marker-proxy-end -->\n\n### Delete data\n\n<!-- marker-delete-start -->\n\nThe [delete_api.py](influxdb_client/client/delete_api.py) supports deletes [points](https://v2.docs.influxdata.com/v2.0/reference/glossary/#point) from an InfluxDB bucket.\n\n``` python\nfrom influxdb_client import InfluxDBClient\n\nclient = InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\")\n\ndelete_api = client.delete_api()\n\n\"\"\"\nDelete Data\n\"\"\"\nstart = \"1970-01-01T00:00:00Z\"\nstop = \"2021-02-01T00:00:00Z\"\ndelete_api.delete(start, stop, '_measurement=\"my_measurement\"', bucket='my-bucket', org='my-org')\n\n\"\"\"\nClose client\n\"\"\"\nclient.close()\n```\n<!-- marker-delete-end -->\n\n### InfluxDB 1.8 API compatibility\n\n[InfluxDB 1.8.0 introduced forward compatibility APIs](https://docs.influxdata.com/influxdb/v1.8/tools/api/#influxdb-2-0-api-compatibility-endpoints) for InfluxDB 2.0. This allows you to easily move from InfluxDB 1.x to InfluxDB 2.0 Cloud or open source.\n\nThe following forward compatible APIs are available:\n\n  | API                                                 | Endpoint                                                                                       | Description                                                                                                                                                                                                                                              |\n  |-----------------------------------------------------|------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n  | [query_api.py](influxdb_client/client/query_api.py) | [/api/v2/query](https://docs.influxdata.com/influxdb/v1.8/tools/api/#apiv2query-http-endpoint) | Query data in InfluxDB 1.8.0+ using the InfluxDB 2.0 API and [Flux](https://docs.influxdata.com/flux/latest/) (endpoint should be enabled by [flux-enabled option](https://docs.influxdata.com/influxdb/v1.8/administration/config/#flux-enabled-false)) |\n  | [write_api.py](influxdb_client/client/write_api.py) | [/api/v2/write](https://docs.influxdata.com/influxdb/v1.8/tools/api/#apiv2write-http-endpoint) | Write data to InfluxDB 1.8.0+ using the InfluxDB 2.0 API                                                                                                                                                                                                 |\n  | [ping()](influxdb_client/client/influxdb_client.py) | [/ping](https://docs.influxdata.com/influxdb/v1.8/tools/api/#ping-http-endpoint)               | Check the status of your InfluxDB instance                                                                                                                                                                                                               |\n\nFor detail info see [InfluxDB 1.8 example](examples/influxdb_18_example.py).\n\n### Handling Errors\n\n<!-- marker-handling-errors-start -->\n\nErrors happen, and it's important that your code is prepared for them. All client related exceptions are delivered from `InfluxDBError`. \nIf the exception cannot be recovered in the client it is returned to the application. These exceptions are left for the developer to handle.\n\nAlmost all APIs directly return unrecoverable exceptions to be handled this way:\n\n``` python\nfrom influxdb_client import InfluxDBClient\nfrom influxdb_client.client.exceptions import InfluxDBError\nfrom influxdb_client.client.write_api import SYNCHRONOUS\n\nwith InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\") as client:\n    try:\n        client.write_api(write_options=SYNCHRONOUS).write(\"my-bucket\", record=\"mem,tag=a value=86\")\n    except InfluxDBError as e:\n        if e.response.status == 401:\n            raise Exception(f\"Insufficient write permissions to 'my-bucket'.\") from e\n        raise\n```\n\nThe only exception is **batching** `WriteAPI` (for more info see [Batching](#batching)) where you need to register custom callbacks to handle batch events. \nThis is because this API runs in the `background` in a `separate` thread and isn't possible to directly return underlying exceptions.\n\n``` python\nfrom influxdb_client import InfluxDBClient\nfrom influxdb_client.client.exceptions import InfluxDBError\n\n\nclass BatchingCallback(object):\n\n    def success(self, conf: (str, str, str), data: str):\n        print(f\"Written batch: {conf}, data: {data}\")\n\n    def error(self, conf: (str, str, str), data: str, exception: InfluxDBError):\n        print(f\"Cannot write batch: {conf}, data: {data} due: {exception}\")\n\n    def retry(self, conf: (str, str, str), data: str, exception: InfluxDBError):\n        print(f\"Retryable error occurs for batch: {conf}, data: {data} retry: {exception}\")\n\n\nwith InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\") as client:\n    callback = BatchingCallback()\n    with client.write_api(success_callback=callback.success,\n                          error_callback=callback.error,\n                          retry_callback=callback.retry) as write_api:\n        pass\n```\n\n#### HTTP Retry Strategy\n\nBy default, the client uses a retry strategy only for batching writes (for more info see [Batching](#batching)). \nFor other HTTP requests there is no one retry strategy, but it could be configured by `retries` parameter of `InfluxDBClient`.\n\nFor more info about how configure HTTP retry see details in [urllib3 documentation](https://urllib3.readthedocs.io/en/latest/reference/index.html?highlight=retry#urllib3.Retry).\n\n``` python\nfrom urllib3 import Retry\n\nfrom influxdb_client import InfluxDBClient\n\nretries = Retry(connect=5, read=2, redirect=5)\nclient = InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\", retries=retries)\n```\n\n<!-- marker-handling-errors-end -->\n\n### Nanosecond precision\n\n<!-- marker-nanosecond-start -->\n\nThe Python's [datetime](https://docs.python.org/3/library/datetime.html) doesn't support precision with nanoseconds so the library during writes and queries ignores everything after microseconds.\n\nIf you would like to use `datetime` with nanosecond precision you should use [pandas.Timestamp](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Timestamp.html#pandas.Timestamp) that is replacement for python `datetime.datetime` object, and also you should set a proper `DateTimeHelper` to the client.\n\n-   sources -  [nanosecond_precision.py](https://github.com/influxdata/influxdb-client-python/blob/master/examples/nanosecond_precision.py)\n\n``` python\nfrom influxdb_client import Point, InfluxDBClient\nfrom influxdb_client.client.util.date_utils_pandas import PandasDateTimeHelper\nfrom influxdb_client.client.write_api import SYNCHRONOUS\n\n\"\"\"\nSet PandasDate helper which supports nanoseconds.\n\"\"\"\nimport influxdb_client.client.util.date_utils as date_utils\n\ndate_utils.date_helper = PandasDateTimeHelper()\n\n\"\"\"\nPrepare client.\n\"\"\"\nclient = InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\")\n\nwrite_api = client.write_api(write_options=SYNCHRONOUS)\nquery_api = client.query_api()\n\n\"\"\"\nPrepare data\n\"\"\"\n\npoint = Point(\"h2o_feet\") \\\n    .field(\"water_level\", 10) \\\n    .tag(\"location\", \"pacific\") \\\n    .time('1996-02-25T21:20:00.001001231Z')\n\nprint(f'Time serialized with nanosecond precision: {point.to_line_protocol()}')\nprint()\n\nwrite_api.write(bucket=\"my-bucket\", record=point)\n\n\"\"\"\nQuery: using Stream\n\"\"\"\nquery = '''\nfrom(bucket:\"my-bucket\")\n        |> range(start: 0, stop: now())\n        |> filter(fn: (r) => r._measurement == \"h2o_feet\")\n'''\nrecords = query_api.query_stream(query)\n\nfor record in records:\n    print(f'Temperature in {record[\"location\"]} is {record[\"_value\"]} at time: {record[\"_time\"]}')\n\n\"\"\"\nClose client\n\"\"\"\nclient.close()\n```\n<!-- marker-nanosecond-end -->\n\n### How to use Asyncio\n\n<!-- marker-asyncio-start -->\n\nStarting from version 1.27.0 for Python 3.7+ the `influxdb-client` package supports `async/await` based on [asyncio](https://docs.python.org/3/library/asyncio.html), [aiohttp](https://docs.aiohttp.org) and [aiocsv](https://pypi.org/project/aiocsv/). \nYou can install `aiohttp` and `aiocsv` directly:\n\n> ``` bash\n> $ python -m pip install influxdb-client aiohttp aiocsv\n> ```\n\nor use the `[async]` extra:\n\n> ``` bash\n> $ python -m pip install influxdb-client[async]\n> ```\n\n:warning:\n\n> The `InfluxDBClientAsync` should be initialised inside `async coroutine` otherwise there can be unexpected behaviour. For more info see: [Why is creating a ClientSession outside an event loop dangerous?](https://docs.aiohttp.org/en/stable/faq.html#why-is-creating-a-clientsession-outside-of-an-event-loop-dangerous).\n\n#### Async APIs\n\nAll async APIs are available via `influxdb_client.client.influxdb_client_async.InfluxDBClientAsync`. The `async` version of the client supports following asynchronous APIs:\n\n-   `influxdb_client.client.write_api_async.WriteApiAsync`\n-   `influxdb_client.client.query_api_async.QueryApiAsync`\n-   `influxdb_client.client.delete_api_async.DeleteApiAsync`\n-   Management services into `influxdb_client.service` supports async\n    operation\n\nand also check to readiness of the InfluxDB via `/ping` endpoint:\n\n> ``` python\n> import asyncio\n>\n> from influxdb_client.client.influxdb_client_async import InfluxDBClientAsync\n>\n>\n> async def main():\n>     async with InfluxDBClientAsync(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\") as client:\n>         ready = await client.ping()\n>         print(f\"InfluxDB: {ready}\")\n>\n>\n> if __name__ == \"__main__\":\n>     asyncio.run(main())\n> ```\n\n#### Async Write API\n\nThe `influxdb_client.client.write_api_async.WriteApiAsync` supports ingesting data as:\n\n-   `string` or `bytes` that is formatted as a InfluxDB\\'s line protocol\n-   [Data Point](https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/write/point.py#L16) structure\n-   Dictionary style mapping with keys: `measurement`, `tags`, `fields` and `time` or custom structure\n-   [NamedTuple](https://docs.python.org/3/library/collections.html#collections.namedtuple)\n-   [Data Classes](https://docs.python.org/3/library/dataclasses.html)\n-   [Pandas DataFrame](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html)\n-   List of above items\n\n> ``` python\n> import asyncio\n>\n> from influxdb_client import Point\n> from influxdb_client.client.influxdb_client_async import InfluxDBClientAsync\n>\n>\n> async def main():\n>     async with InfluxDBClientAsync(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\") as client:\n>\n>         write_api = client.write_api()\n>\n>         _point1 = Point(\"async_m\").tag(\"location\", \"Prague\").field(\"temperature\", 25.3)\n>         _point2 = Point(\"async_m\").tag(\"location\", \"New York\").field(\"temperature\", 24.3)\n>\n>         successfully = await write_api.write(bucket=\"my-bucket\", record=[_point1, _point2])\n>\n>         print(f\" > successfully: {successfully}\")\n>\n>\n> if __name__ == \"__main__\":\n>     asyncio.run(main())\n> ```\n\n#### Async Query API\n\nThe `influxdb_client.client.query_api_async.QueryApiAsync` supports retrieve data as:\n\n-   List of `influxdb_client.client.flux_table.FluxTable`\n-   Stream of `influxdb_client.client.flux_table.FluxRecord` via `typing.AsyncGenerator`\n-   [Pandas DataFrame](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html)\n-   Stream of [Pandas DataFrame](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html) via `typing.AsyncGenerator`\n-   Raw `str` output\n\n> ``` python\n> import asyncio\n>\n> from influxdb_client.client.influxdb_client_async import InfluxDBClientAsync\n>\n>\n> async def main():\n>     async with InfluxDBClientAsync(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\") as client:\n>         # Stream of FluxRecords\n>         query_api = client.query_api()\n>         records = await query_api.query_stream('from(bucket:\"my-bucket\") '\n>                                                '|> range(start: -10m) '\n>                                                '|> filter(fn: (r) => r[\"_measurement\"] == \"async_m\")')\n>         async for record in records:\n>             print(record)\n>\n>\n> if __name__ == \"__main__\":\n>     asyncio.run(main())\n> ```\n\n#### Async Delete API\n\n> ``` python\n> import asyncio\n> from datetime import datetime\n>\n> from influxdb_client.client.influxdb_client_async import InfluxDBClientAsync\n>\n>\n> async def main():\n>     async with InfluxDBClientAsync(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\") as client:\n>         start = datetime.utcfromtimestamp(0)\n>         stop = datetime.now()\n>         # Delete data with location = 'Prague'\n>         successfully = await client.delete_api().delete(start=start, stop=stop, bucket=\"my-bucket\",\n>                                                         predicate=\"location = \\\"Prague\\\"\")\n>         print(f\" > successfully: {successfully}\")\n>\n>\n> if __name__ == \"__main__\":\n>     asyncio.run(main())\n> ```\n\n#### Management API\n\n> ``` python\n> import asyncio\n>\n> from influxdb_client import OrganizationsService\n> from influxdb_client.client.influxdb_client_async import InfluxDBClientAsync\n>\n>\n> async def main():\n>     async with InfluxDBClientAsync(url='http://localhost:8086', token='my-token', org='my-org') as client:\n>         # Initialize async OrganizationsService\n>         organizations_service = OrganizationsService(api_client=client.api_client)\n>\n>         # Find organization with name 'my-org'\n>         organizations = await organizations_service.get_orgs(org='my-org')\n>         for organization in organizations.orgs:\n>             print(f'name: {organization.name}, id: {organization.id}')\n>\n>\n> if __name__ == \"__main__\":\n>     asyncio.run(main())\n> ```\n\n#### Proxy and redirects\n\nYou can configure the client to tunnel requests through an HTTP proxy.\nThe following proxy options are supported:\n\n-   `proxy` - Set this to configure the http proxy to be used, ex. `http://localhost:3128`\n-   `proxy_headers` - A dictionary containing headers that will be sent to the proxy. Could be used for proxy authentication.\n\n``` python\nfrom influxdb_client.client.influxdb_client_async import InfluxDBClientAsync\n\n\nasync with InfluxDBClientAsync(url=\"http://localhost:8086\",\n                               token=\"my-token\",\n                               org=\"my-org\",\n                               proxy=\"http://localhost:3128\") as client:\n```\n\nIf your proxy notify the client with permanent redirect (`HTTP 301`) to **different host**.\nThe client removes `Authorization` header, because otherwise the contents of `Authorization` is sent to third parties which is a security vulnerability.\n\nClient automatically follows HTTP redirects. The default redirect policy is to follow up to `10` consecutive requests. \nThe redirects can be configured via:\n\n-   `allow_redirects` - If set to `False`, do not follow HTTP redirects.\n    `True` by default.\n-   `max_redirects` - Maximum number of HTTP redirects to follow. `10`\n    by default.\n\n<!-- marker-asyncio-end -->\n\n### Logging\n\n<!-- marker-logging-start -->\n\nThe client uses Python's [logging](https://docs.python.org/3/library/logging.html) facility for logging the library activity. The following logger categories are\nexposed:\n\n-   `influxdb_client.client.influxdb_client`\n-   `influxdb_client.client.influxdb_client_async`\n-   `influxdb_client.client.write_api`\n-   `influxdb_client.client.write_api_async`\n-   `influxdb_client.client.write.retry`\n-   `influxdb_client.client.write.dataframe_serializer`\n-   `influxdb_client.client.util.multiprocessing_helper`\n-   `influxdb_client.client.http`\n-   `influxdb_client.client.exceptions`\n\nThe default logging level is `warning` without configured logger output. You can use the standard logger interface to change the log level and handler:\n\n``` python\nimport logging\nimport sys\n\nfrom influxdb_client import InfluxDBClient\n\nwith InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", org=\"my-org\") as client:\n    for _, logger in client.conf.loggers.items():\n        logger.setLevel(logging.DEBUG)\n        logger.addHandler(logging.StreamHandler(sys.stdout))\n```\n\n#### Debugging\n\nFor debug purpose you can enable verbose logging of HTTP requests and set the `debug` level to all client's logger categories by:\n\n``` python\nclient = InfluxDBClient(url=\"http://localhost:8086\", token=\"my-token\", debug=True)\n```\n\nBoth HTTP request headers and body will be logged to standard output.\n\n<!-- marker-logging-end -->\n\n## Local tests\n\n``` console\n# start/restart InfluxDB2 on local machine using docker\n./scripts/influxdb-restart.sh\n\n# install requirements\npip install -e . --user\npip install -e .\\[extra\\] --user\npip install -e .\\[test\\] --user\n\n# run unit & integration tests\npytest tests\n```\n\n## Contributing\n\nBug reports and pull requests are welcome on GitHub at <https://github.com/influxdata/influxdb-client-python>.\n\n## License\n\nThe gem is available as open source under the terms of the [MIT License](https://opensource.org/licenses/MIT).\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/influxdata/influxdb-client-python","keywords":"InfluxDB, InfluxDB Python Client","license":null,"maintainer":null,"maintainer_email":null,"name":"influxdb-client","package_url":"https://pypi.org/project/influxdb-client/","platform":null,"project_url":"https://pypi.org/project/influxdb-client/","project_urls":{"Homepage":"https://github.com/influxdata/influxdb-client-python"},"provides_extra":null,"release_url":"https://pypi.org/project/influxdb-client/1.44.0/","requires_dist":["reactivex>=4.0.4","certifi>=14.05.14","python-dateutil>=2.5.3","setuptools>=21.0.0","urllib3>=1.26.0","aiohttp>=3.8.1; extra == \"async\"","aiocsv>=1.2.2; extra == \"async\"","ciso8601>=2.1.1; extra == \"ciso\"","pandas>=1.0.0; extra == \"extra\"","numpy; extra == \"extra\"","flake8>=5.0.3; extra == \"test\"","coverage>=4.0.3; extra == \"test\"","nose>=1.3.7; extra == \"test\"","pluggy>=0.3.1; extra == \"test\"","py>=1.4.31; extra == \"test\"","randomize>=0.13; extra == \"test\"","pytest>=5.0.0; extra == \"test\"","pytest-cov>=3.0.0; extra == \"test\"","pytest-timeout>=2.1.0; extra == \"test\"","httpretty==1.0.5; extra == \"test\"","psutil>=5.6.3; extra == \"test\"","aioresponses>=0.7.3; extra == \"test\"","sphinx==1.8.5; extra == \"test\"","sphinx-rtd-theme; extra == \"test\"","jinja2>=3.1.4; extra == \"test\""],"requires_python":">=3.7","summary":"InfluxDB 2.0 Python client library","version":"1.44.0","yanked":false,"yanked_reason":null},"last_serial":23818333,"releases":{"0.0.1":[{"comment_text":"","digests":{"blake2b_256":"88d303b3c6094236b5b79f371046b63c2297c02a08e5f37f9b1eda3a02167b6e","md5":"90eea8dd4fa23c2afc0f5a6f1e7c30c1","sha256":"2c301eb8a836e680d7115f6f501ea94876f275965806b03154dc020216158930"},"downloads":-1,"filename":"influxdb_client-0.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"90eea8dd4fa23c2afc0f5a6f1e7c30c1","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":473351,"upload_time":"2019-09-26T16:04:14","upload_time_iso_8601":"2019-09-26T16:04:14.907316Z","url":"https://files.pythonhosted.org/packages/88/d3/03b3c6094236b5b79f371046b63c2297c02a08e5f37f9b1eda3a02167b6e/influxdb_client-0.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b47cc6aa47811805f8225b416805452c8de62ced20bb5848e680030641d159f4","md5":"bf8339c5753e3e9969add92ca38abc90","sha256":"db331e0e93159dddeb65635e56f676390ff1f4de4f1b87c3584d71cfc213af98"},"downloads":-1,"filename":"influxdb_client-0.0.1.tar.gz","has_sig":false,"md5_digest":"bf8339c5753e3e9969add92ca38abc90","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":173157,"upload_time":"2019-09-26T16:04:18","upload_time_iso_8601":"2019-09-26T16:04:18.194023Z","url":"https://files.pythonhosted.org/packages/b4/7c/c6aa47811805f8225b416805452c8de62ced20bb5848e680030641d159f4/influxdb_client-0.0.1.tar.gz","yanked":false,"yanked_reason":null}],"0.0.2":[{"comment_text":"","digests":{"blake2b_256":"55cef5c4ff5e7648ef3fdb12d0ec98ee1609078507e3098191c9948a54816d86","md5":"40f2bfc12f82dfc5aba45f404315134d","sha256":"c8fee37aa08b572a0deabcdb194e3e049518d2be16784b59428225e1822cff0f"},"downloads":-1,"filename":"influxdb_client-0.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"40f2bfc12f82dfc5aba45f404315134d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":473357,"upload_time":"2019-09-26T16:14:06","upload_time_iso_8601":"2019-09-26T16:14:06.936587Z","url":"https://files.pythonhosted.org/packages/55/ce/f5c4ff5e7648ef3fdb12d0ec98ee1609078507e3098191c9948a54816d86/influxdb_client-0.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c5b1eda3629299689ed27685ae4011476aa1e1703a4e26f6c9c9142f20488f82","md5":"a51bd941fef4ee16cb52f77cbc89fc69","sha256":"46d5b09fb2d8a3144cb955ff3c15a3269fd394392af61dceae136d8fd30cae16"},"downloads":-1,"filename":"influxdb_client-0.0.2.tar.gz","has_sig":false,"md5_digest":"a51bd941fef4ee16cb52f77cbc89fc69","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":173178,"upload_time":"2019-09-26T16:14:09","upload_time_iso_8601":"2019-09-26T16:14:09.467969Z","url":"https://files.pythonhosted.org/packages/c5/b1/eda3629299689ed27685ae4011476aa1e1703a4e26f6c9c9142f20488f82/influxdb_client-0.0.2.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"10213c3cc500ea0d0855671e0d6bb364e7d0a34e69fd02bcb96d9581c9ff11b9","md5":"3ea0fce7face07a35c0c97c2e3664985","sha256":"50a445ade982cb812ca5eb0726f2885a149e06665a60ce17e037874b9dc8a6b3"},"downloads":-1,"filename":"influxdb_client-1.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"3ea0fce7face07a35c0c97c2e3664985","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":483450,"upload_time":"2019-11-11T09:46:54","upload_time_iso_8601":"2019-11-11T09:46:54.470779Z","url":"https://files.pythonhosted.org/packages/10/21/3c3cc500ea0d0855671e0d6bb364e7d0a34e69fd02bcb96d9581c9ff11b9/influxdb_client-1.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b92d3047e0e305ea29b30186ca4615386cfd17135e35b8f5ce39dd0e4fe56840","md5":"380985c4bf3ff6a96a7a8241e24ab2ac","sha256":"3dd4e1eb6a04990830a8acd39296d8a35ee27a6e50fb53fa57277f5a335a9ea6"},"downloads":-1,"filename":"influxdb_client-1.0.0.tar.gz","has_sig":false,"md5_digest":"380985c4bf3ff6a96a7a8241e24ab2ac","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":180271,"upload_time":"2019-11-11T09:46:57","upload_time_iso_8601":"2019-11-11T09:46:57.145219Z","url":"https://files.pythonhosted.org/packages/b9/2d/3047e0e305ea29b30186ca4615386cfd17135e35b8f5ce39dd0e4fe56840/influxdb_client-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"5cb81658ee32e2761f1eb9ec58877d93ce8124cda6d137578e6ff81338120023","md5":"751e805189d71ed132bddc9c1d483601","sha256":"3e9ee9fb35ed6cb29ddff10f5b393326f71b8d5134335afaf137639178f0b345"},"downloads":-1,"filename":"influxdb_client-1.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"751e805189d71ed132bddc9c1d483601","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":486424,"upload_time":"2019-11-18T09:09:00","upload_time_iso_8601":"2019-11-18T09:09:00.101849Z","url":"https://files.pythonhosted.org/packages/5c/b8/1658ee32e2761f1eb9ec58877d93ce8124cda6d137578e6ff81338120023/influxdb_client-1.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d60570532f08944779818bdb21594265f01652eba1661b0fa7b6710bfcfafd12","md5":"c79c928397affa959d3dbc79754783d1","sha256":"43e68acd13a5daaa9a438825769b87e166443f02bc29b8cd1863bbce81cf3f87"},"downloads":-1,"filename":"influxdb_client-1.1.0.tar.gz","has_sig":false,"md5_digest":"c79c928397affa959d3dbc79754783d1","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":183632,"upload_time":"2019-11-18T09:09:02","upload_time_iso_8601":"2019-11-18T09:09:02.476304Z","url":"https://files.pythonhosted.org/packages/d6/05/70532f08944779818bdb21594265f01652eba1661b0fa7b6710bfcfafd12/influxdb_client-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.10.0":[{"comment_text":"","digests":{"blake2b_256":"cdf7518202ede35f6f97a8b4a0768030bf1387f6cff4401ada76d323b3188953","md5":"a60575bc1e91423834e72a960c763950","sha256":"6e213363ce1dc896c8d5418f1aa550a6f7ae114c2342c3e6cf7474856e3f20ce"},"downloads":-1,"filename":"influxdb_client-1.10.0-py3-none-any.whl","has_sig":false,"md5_digest":"a60575bc1e91423834e72a960c763950","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":506673,"upload_time":"2020-08-14T05:55:28","upload_time_iso_8601":"2020-08-14T05:55:28.789345Z","url":"https://files.pythonhosted.org/packages/cd/f7/518202ede35f6f97a8b4a0768030bf1387f6cff4401ada76d323b3188953/influxdb_client-1.10.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d7874c0a8f2cb02c69498ff2a9ec3244e0ec229ed559ac5d924f1de3dd56a36d","md5":"2b12d5970a4375f448c314dc90d529fd","sha256":"a3684a578c762c5874ae4a2243784d3de42ec6f5ea70ae3cfbde0835f1a39952"},"downloads":-1,"filename":"influxdb_client-1.10.0.tar.gz","has_sig":false,"md5_digest":"2b12d5970a4375f448c314dc90d529fd","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":215140,"upload_time":"2020-08-14T05:55:31","upload_time_iso_8601":"2020-08-14T05:55:31.258075Z","url":"https://files.pythonhosted.org/packages/d7/87/4c0a8f2cb02c69498ff2a9ec3244e0ec229ed559ac5d924f1de3dd56a36d/influxdb_client-1.10.0.tar.gz","yanked":false,"yanked_reason":null}],"1.11.0":[{"comment_text":"","digests":{"blake2b_256":"5034eac18226f9546424cb71758ce02cfc003e5ea38a477aff0dc8481d9161e3","md5":"d1a7cd8f0848c1cfcb4ea1c02132d857","sha256":"aff03a204ba78bfa0df2fd079b7e4549baf24e9f30345cc5552bce057e6c1766"},"downloads":-1,"filename":"influxdb_client-1.11.0-py3-none-any.whl","has_sig":false,"md5_digest":"d1a7cd8f0848c1cfcb4ea1c02132d857","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":478939,"upload_time":"2020-10-02T05:37:52","upload_time_iso_8601":"2020-10-02T05:37:52.351524Z","url":"https://files.pythonhosted.org/packages/50/34/eac18226f9546424cb71758ce02cfc003e5ea38a477aff0dc8481d9161e3/influxdb_client-1.11.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"52ec8f08ecd22c2541ddd83a66bd5a4371ff85cf9ccaf9a0bcd6167d70a9ad18","md5":"65518c55ec569ae340241560b4e16c5a","sha256":"68348df327328c100f93fa3fe38a3837879e73dd5a90bf5d408e601457b7a6ae"},"downloads":-1,"filename":"influxdb_client-1.11.0.tar.gz","has_sig":false,"md5_digest":"65518c55ec569ae340241560b4e16c5a","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":208589,"upload_time":"2020-10-02T05:37:54","upload_time_iso_8601":"2020-10-02T05:37:54.972725Z","url":"https://files.pythonhosted.org/packages/52/ec/8f08ecd22c2541ddd83a66bd5a4371ff85cf9ccaf9a0bcd6167d70a9ad18/influxdb_client-1.11.0.tar.gz","yanked":false,"yanked_reason":null}],"1.12.0":[{"comment_text":"","digests":{"blake2b_256":"f51fb2f7e446082cb2621ea2e1a0b27d9dbfcee01944cd29a4c915cd469ac0a4","md5":"84b14123ddc4a34ffec9cbfd873eaa83","sha256":"f233da171a2508274d4cebba3ec66d2cc4729229e66419aabeb20220e3b36c82"},"downloads":-1,"filename":"influxdb_client-1.12.0-py3-none-any.whl","has_sig":false,"md5_digest":"84b14123ddc4a34ffec9cbfd873eaa83","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":446581,"upload_time":"2020-10-30T07:09:23","upload_time_iso_8601":"2020-10-30T07:09:23.603135Z","url":"https://files.pythonhosted.org/packages/f5/1f/b2f7e446082cb2621ea2e1a0b27d9dbfcee01944cd29a4c915cd469ac0a4/influxdb_client-1.12.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ec4f45e29c7cc7eae88ee9a776ff9586c85c08faaf76e80362f514d9c0840c2c","md5":"ebeacbbfbc0059728e5ebb48d1e9dd5e","sha256":"213cece87fbb71411c6d387d65e0cbc3d529bc37c734635e6ee4449443757331"},"downloads":-1,"filename":"influxdb_client-1.12.0.tar.gz","has_sig":false,"md5_digest":"ebeacbbfbc0059728e5ebb48d1e9dd5e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":185140,"upload_time":"2020-10-30T07:09:26","upload_time_iso_8601":"2020-10-30T07:09:26.387506Z","url":"https://files.pythonhosted.org/packages/ec/4f/45e29c7cc7eae88ee9a776ff9586c85c08faaf76e80362f514d9c0840c2c/influxdb_client-1.12.0.tar.gz","yanked":false,"yanked_reason":null}],"1.13.0":[{"comment_text":"","digests":{"blake2b_256":"27ea9c287fe3d4dbcbb9f0f7cf257cf56254db6a2c2448cab1852cf1d69fafec","md5":"bee62b88f4dc9aa2be9977a01a30073e","sha256":"c9cd9374951dc857193ffbf4778f2059f23c64660f37355316c3e3b28cd995ad"},"downloads":-1,"filename":"influxdb_client-1.13.0-py3-none-any.whl","has_sig":false,"md5_digest":"bee62b88f4dc9aa2be9977a01a30073e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":446891,"upload_time":"2020-12-04T07:37:50","upload_time_iso_8601":"2020-12-04T07:37:50.883330Z","url":"https://files.pythonhosted.org/packages/27/ea/9c287fe3d4dbcbb9f0f7cf257cf56254db6a2c2448cab1852cf1d69fafec/influxdb_client-1.13.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"634da4caae351b51ca7ece32e527fbc798f54c366bdb675218c0c8c7543c8ae3","md5":"5cfcef71d7ab40b95faf09d6746c816e","sha256":"b8f5b3d222b919a71d28a324b0b444a6cce701b2aac141e6c93ac71796dbcb5e"},"downloads":-1,"filename":"influxdb_client-1.13.0.tar.gz","has_sig":false,"md5_digest":"5cfcef71d7ab40b95faf09d6746c816e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":191502,"upload_time":"2020-12-04T07:37:53","upload_time_iso_8601":"2020-12-04T07:37:53.268304Z","url":"https://files.pythonhosted.org/packages/63/4d/a4caae351b51ca7ece32e527fbc798f54c366bdb675218c0c8c7543c8ae3/influxdb_client-1.13.0.tar.gz","yanked":false,"yanked_reason":null}],"1.14.0":[{"comment_text":"","digests":{"blake2b_256":"5313f785d27562e1f09c6ba51345c00c4dcb5ef3dfccde67527f1c84fb35dc17","md5":"89392151ff0ec4fafeab08ea39223517","sha256":"63195bc5088798985a4dc3d1c0a7d06716d65db04a9b1e2b23e698e36c1a1567"},"downloads":-1,"filename":"influxdb_client-1.14.0-py3-none-any.whl","has_sig":false,"md5_digest":"89392151ff0ec4fafeab08ea39223517","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":448830,"upload_time":"2021-01-29T06:33:41","upload_time_iso_8601":"2021-01-29T06:33:41.347451Z","url":"https://files.pythonhosted.org/packages/53/13/f785d27562e1f09c6ba51345c00c4dcb5ef3dfccde67527f1c84fb35dc17/influxdb_client-1.14.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f9d80cd2eda1f2df931967d2841192b223c08bed70fa4e76176c5458e30db7e7","md5":"df3a0b10d9b1b79ba0cd12bd6f89503c","sha256":"c1dcea9bf4b085a635fd3dcc9037a3bff24f0799a45bc4773f07ec8930d576dc"},"downloads":-1,"filename":"influxdb_client-1.14.0.tar.gz","has_sig":false,"md5_digest":"df3a0b10d9b1b79ba0cd12bd6f89503c","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":193726,"upload_time":"2021-01-29T06:33:44","upload_time_iso_8601":"2021-01-29T06:33:44.032272Z","url":"https://files.pythonhosted.org/packages/f9/d8/0cd2eda1f2df931967d2841192b223c08bed70fa4e76176c5458e30db7e7/influxdb_client-1.14.0.tar.gz","yanked":false,"yanked_reason":null}],"1.15.0":[{"comment_text":"","digests":{"blake2b_256":"da38da3b283a85be77d9991285ae832cf310202d6fb9f5280c61322070bda377","md5":"55374f65691c2ab36eaf2f86aaab71e2","sha256":"fe37140e8e7140db6e4a05f406f03ed860dc17dc5f68b7c6e7f3848dcc1cbcb8"},"downloads":-1,"filename":"influxdb_client-1.15.0-py3-none-any.whl","has_sig":false,"md5_digest":"55374f65691c2ab36eaf2f86aaab71e2","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":448841,"upload_time":"2021-03-05T07:14:01","upload_time_iso_8601":"2021-03-05T07:14:01.111163Z","url":"https://files.pythonhosted.org/packages/da/38/da3b283a85be77d9991285ae832cf310202d6fb9f5280c61322070bda377/influxdb_client-1.15.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"abd5819b01a85865e582ae894c402c07d236b139c5a4f5152da9399f2b731b8a","md5":"5339b784d97c5fae4a07f950337c0285","sha256":"a736fcd0c189ef11a69d6a5a6a88385a2acf858c7229048325ba62d8fbcd779e"},"downloads":-1,"filename":"influxdb_client-1.15.0.tar.gz","has_sig":false,"md5_digest":"5339b784d97c5fae4a07f950337c0285","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":193838,"upload_time":"2021-03-05T07:14:03","upload_time_iso_8601":"2021-03-05T07:14:03.926547Z","url":"https://files.pythonhosted.org/packages/ab/d5/819b01a85865e582ae894c402c07d236b139c5a4f5152da9399f2b731b8a/influxdb_client-1.15.0.tar.gz","yanked":false,"yanked_reason":null}],"1.16.0":[{"comment_text":"","digests":{"blake2b_256":"c15fbfa7bf7601f3afc70aa07c206347c750da945097562e3201241882fd67c6","md5":"bf29ed4b1170bc54bbbbf09ebfb08d0a","sha256":"b53bf1e78f1a01a22c2c8b7527ea9203439e41cf880efa643468e4759f94b59b"},"downloads":-1,"filename":"influxdb_client-1.16.0-py3-none-any.whl","has_sig":false,"md5_digest":"bf29ed4b1170bc54bbbbf09ebfb08d0a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":449569,"upload_time":"2021-04-01T06:36:18","upload_time_iso_8601":"2021-04-01T06:36:18.681570Z","url":"https://files.pythonhosted.org/packages/c1/5f/bfa7bf7601f3afc70aa07c206347c750da945097562e3201241882fd67c6/influxdb_client-1.16.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"443d246efae1aa173851d919f23b4c6539d2658c6ad2eef628538b722a47e803","md5":"8d6894f8e199f8c9090721d04248bf85","sha256":"22c82fc35907a36231cc2646972f0ae004e99282a2d3c9f83e8dd503ec471a60"},"downloads":-1,"filename":"influxdb_client-1.16.0.tar.gz","has_sig":false,"md5_digest":"8d6894f8e199f8c9090721d04248bf85","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":194759,"upload_time":"2021-04-01T06:36:21","upload_time_iso_8601":"2021-04-01T06:36:21.002579Z","url":"https://files.pythonhosted.org/packages/44/3d/246efae1aa173851d919f23b4c6539d2658c6ad2eef628538b722a47e803/influxdb_client-1.16.0.tar.gz","yanked":false,"yanked_reason":null}],"1.17.0":[{"comment_text":"","digests":{"blake2b_256":"6b0e5c5a9a2da144fae80b23dd9741175493d8dbeabd17d23e5aff27c92dbfd5","md5":"f22c2c0ef99d82d3ad933311dea117c6","sha256":"08441f81603bb386396c6db5fe4ac8fe7fa88032d2dd8f644826c1a8727c6e0d"},"downloads":-1,"filename":"influxdb_client-1.17.0-py3-none-any.whl","has_sig":false,"md5_digest":"f22c2c0ef99d82d3ad933311dea117c6","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":450568,"upload_time":"2021-04-30T05:46:12","upload_time_iso_8601":"2021-04-30T05:46:12.686385Z","url":"https://files.pythonhosted.org/packages/6b/0e/5c5a9a2da144fae80b23dd9741175493d8dbeabd17d23e5aff27c92dbfd5/influxdb_client-1.17.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"793614bef7fc1b7d41e237e4f5c93261198aa17c4a5944da78b39df4aaeae1ba","md5":"2e6148088f5fe2a44cf5f2e207e04778","sha256":"a2b34fd69b2ab68fc46b2bc0240899e3b81e46650ccc454838110ff76ea5c3d8"},"downloads":-1,"filename":"influxdb_client-1.17.0.tar.gz","has_sig":false,"md5_digest":"2e6148088f5fe2a44cf5f2e207e04778","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":197448,"upload_time":"2021-04-30T05:46:15","upload_time_iso_8601":"2021-04-30T05:46:15.121812Z","url":"https://files.pythonhosted.org/packages/79/36/14bef7fc1b7d41e237e4f5c93261198aa17c4a5944da78b39df4aaeae1ba/influxdb_client-1.17.0.tar.gz","yanked":false,"yanked_reason":null}],"1.18.0":[{"comment_text":"","digests":{"blake2b_256":"97fb23367363de5990d58f00cc458594e4cbccbb1c0cd97526bed0b54489f659","md5":"4e5b9a075b005a60c1814371eeaa6394","sha256":"311307a1038ffb1eb63138d9d7699abce8bfc807e5e8dc62a0f437b492dcce49"},"downloads":-1,"filename":"influxdb_client-1.18.0-py3-none-any.whl","has_sig":false,"md5_digest":"4e5b9a075b005a60c1814371eeaa6394","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":501774,"upload_time":"2021-06-04T05:23:16","upload_time_iso_8601":"2021-06-04T05:23:16.207386Z","url":"https://files.pythonhosted.org/packages/97/fb/23367363de5990d58f00cc458594e4cbccbb1c0cd97526bed0b54489f659/influxdb_client-1.18.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"57a525bb44aec9c299b27bf5f68775e96ec3a513201c646b1404b833a922e33c","md5":"d9711cf1d9546be1aabb99b1a88d164f","sha256":"3a02190bdef32695c20273805ab92ca431d9172088ae1454c1cd94a9080e3828"},"downloads":-1,"filename":"influxdb_client-1.18.0.tar.gz","has_sig":false,"md5_digest":"d9711cf1d9546be1aabb99b1a88d164f","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":221431,"upload_time":"2021-06-04T05:23:18","upload_time_iso_8601":"2021-06-04T05:23:18.744696Z","url":"https://files.pythonhosted.org/packages/57/a5/25bb44aec9c299b27bf5f68775e96ec3a513201c646b1404b833a922e33c/influxdb_client-1.18.0.tar.gz","yanked":false,"yanked_reason":null}],"1.19.0":[{"comment_text":"","digests":{"blake2b_256":"25493378a53dd820b1251415800990588b3dabd486ce527157056c67152cf22b","md5":"3b921b32b69b773e9d768924021c3dd7","sha256":"8cb08f237dce02ef0d9ae5ffa4badd01357e06926c42bfe912b697fa60db054c"},"downloads":-1,"filename":"influxdb_client-1.19.0-py3-none-any.whl","has_sig":false,"md5_digest":"3b921b32b69b773e9d768924021c3dd7","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":503422,"upload_time":"2021-07-09T06:17:26","upload_time_iso_8601":"2021-07-09T06:17:26.447065Z","url":"https://files.pythonhosted.org/packages/25/49/3378a53dd820b1251415800990588b3dabd486ce527157056c67152cf22b/influxdb_client-1.19.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cf15de3520c62ffd120cfb8650e10c1b7a6110ce233fe50e55a71d47bcdb80dd","md5":"e0dc4e4153fa374b2a0515f0ddd4d9a1","sha256":"8954562259dd3770d89cd3db13cbe48e44c56e000f8af377b8c606f7c91c5f58"},"downloads":-1,"filename":"influxdb_client-1.19.0.tar.gz","has_sig":false,"md5_digest":"e0dc4e4153fa374b2a0515f0ddd4d9a1","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":223176,"upload_time":"2021-07-09T06:17:29","upload_time_iso_8601":"2021-07-09T06:17:29.186497Z","url":"https://files.pythonhosted.org/packages/cf/15/de3520c62ffd120cfb8650e10c1b7a6110ce233fe50e55a71d47bcdb80dd/influxdb_client-1.19.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"7aaf2f52275eba725eae97e39e503bb258ef2d588fccf9ee312b88b6e3f579af","md5":"bffcebf4ba4041e55d375ca704028866","sha256":"1105dd18e30438da19a76d73a1264638fd424b328349111f87c79a179d74c854"},"downloads":-1,"filename":"influxdb_client-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"bffcebf4ba4041e55d375ca704028866","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":523471,"upload_time":"2019-12-06T09:17:14","upload_time_iso_8601":"2019-12-06T09:17:14.187672Z","url":"https://files.pythonhosted.org/packages/7a/af/2f52275eba725eae97e39e503bb258ef2d588fccf9ee312b88b6e3f579af/influxdb_client-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9265011d8dc6a44ae8a8d1e4f27d72c578365197c6fe108557b451e5a51d7eef","md5":"738cac0f25c861317a3f1b98b6f8628c","sha256":"d08f7ab7baed81b8e2efdc3af359034276ba04771c154e867f49cc39747b7c3a"},"downloads":-1,"filename":"influxdb_client-1.2.0.tar.gz","has_sig":false,"md5_digest":"738cac0f25c861317a3f1b98b6f8628c","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":192689,"upload_time":"2019-12-06T09:17:16","upload_time_iso_8601":"2019-12-06T09:17:16.704752Z","url":"https://files.pythonhosted.org/packages/92/65/011d8dc6a44ae8a8d1e4f27d72c578365197c6fe108557b451e5a51d7eef/influxdb_client-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"1.20.0":[{"comment_text":"","digests":{"blake2b_256":"06e32c388a88511ba671e3d6afff5cfd83c5200858c062a121698108ec38b203","md5":"5941d14b13b7014ec646579dffdc0338","sha256":"8bf09f18c66f0554d4c003f4c9ef5e82e461f38f930cc53fed2abc1193130d30"},"downloads":-1,"filename":"influxdb_client-1.20.0-py3-none-any.whl","has_sig":false,"md5_digest":"5941d14b13b7014ec646579dffdc0338","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":505182,"upload_time":"2021-08-20T06:12:23","upload_time_iso_8601":"2021-08-20T06:12:23.625901Z","url":"https://files.pythonhosted.org/packages/06/e3/2c388a88511ba671e3d6afff5cfd83c5200858c062a121698108ec38b203/influxdb_client-1.20.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"41f93e79d94bf674a8e5ad1875e67dc259615903281e637c30be738c4ec7dcde","md5":"554982a42a8d6bda6c9fdeb638061854","sha256":"da734bb25e7064e03bf9699de502b4e02ef0304cddac7cb56cbd9d5d0c3a3bcd"},"downloads":-1,"filename":"influxdb_client-1.20.0.tar.gz","has_sig":false,"md5_digest":"554982a42a8d6bda6c9fdeb638061854","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":225666,"upload_time":"2021-08-20T06:12:26","upload_time_iso_8601":"2021-08-20T06:12:26.664869Z","url":"https://files.pythonhosted.org/packages/41/f9/3e79d94bf674a8e5ad1875e67dc259615903281e637c30be738c4ec7dcde/influxdb_client-1.20.0.tar.gz","yanked":false,"yanked_reason":null}],"1.21.0":[{"comment_text":"","digests":{"blake2b_256":"77faea3334893bf82d08561c1fc8b995db3538df065975bfccea6811cf4f9325","md5":"f7c556fa759a68bdc017dc63ad673e6e","sha256":"c708424a94f126cad195e1074002bc8c6781dbe2210ff3d6c8dcf64e6d7fb5c6"},"downloads":-1,"filename":"influxdb_client-1.21.0-py3-none-any.whl","has_sig":false,"md5_digest":"f7c556fa759a68bdc017dc63ad673e6e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":505591,"upload_time":"2021-09-17T06:44:39","upload_time_iso_8601":"2021-09-17T06:44:39.511188Z","url":"https://files.pythonhosted.org/packages/77/fa/ea3334893bf82d08561c1fc8b995db3538df065975bfccea6811cf4f9325/influxdb_client-1.21.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"114e56bb9316c41635988c5e98c30490c95895b5cea71e18ebd848e2224f77e6","md5":"c549e013c909b1758aae087deff77247","sha256":"f3c9b51858ee3f5d219f145b4f71518ae5a0284c85d03f88940c143a63e6b8ce"},"downloads":-1,"filename":"influxdb_client-1.21.0.tar.gz","has_sig":false,"md5_digest":"c549e013c909b1758aae087deff77247","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":225945,"upload_time":"2021-09-17T06:44:43","upload_time_iso_8601":"2021-09-17T06:44:43.324761Z","url":"https://files.pythonhosted.org/packages/11/4e/56bb9316c41635988c5e98c30490c95895b5cea71e18ebd848e2224f77e6/influxdb_client-1.21.0.tar.gz","yanked":false,"yanked_reason":null}],"1.22.0":[{"comment_text":"","digests":{"blake2b_256":"1a1266b9e30d7e7a2c8bf4d5c3df5c5fd91025fbd7aefe62258518d4c49e3a9b","md5":"8ea88ddd17d89190c5efcb3964218cba","sha256":"1fe24373bd017a0b703d2a643238e397242595a3a0bc9047b094eb3fe822924d"},"downloads":-1,"filename":"influxdb_client-1.22.0-py3-none-any.whl","has_sig":false,"md5_digest":"8ea88ddd17d89190c5efcb3964218cba","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":509191,"upload_time":"2021-10-22T07:12:51","upload_time_iso_8601":"2021-10-22T07:12:51.425142Z","url":"https://files.pythonhosted.org/packages/1a/12/66b9e30d7e7a2c8bf4d5c3df5c5fd91025fbd7aefe62258518d4c49e3a9b/influxdb_client-1.22.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1c90b36410aea476f923c4853629f19880671a83cef5e04f8f7c49c16206fb99","md5":"7b459b3e85f154b47916370a45ac6eae","sha256":"383744fc35bf87bf327b359d133e89992cafc468818084cddba81b496b04d789"},"downloads":-1,"filename":"influxdb_client-1.22.0.tar.gz","has_sig":false,"md5_digest":"7b459b3e85f154b47916370a45ac6eae","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":230700,"upload_time":"2021-10-22T07:12:54","upload_time_iso_8601":"2021-10-22T07:12:54.597853Z","url":"https://files.pythonhosted.org/packages/1c/90/b36410aea476f923c4853629f19880671a83cef5e04f8f7c49c16206fb99/influxdb_client-1.22.0.tar.gz","yanked":false,"yanked_reason":null}],"1.23.0":[{"comment_text":"","digests":{"blake2b_256":"baa8e11372b757599b59b71b9cd0841fa4778481ca553cedaef214139fc17304","md5":"4b0d3d04b56af049095fb4e346ecda3b","sha256":"485ea2a5e92906377d4dfe9798a5a004b2558717487defb3f08b24fb591d27b6"},"downloads":-1,"filename":"influxdb_client-1.23.0-py3-none-any.whl","has_sig":false,"md5_digest":"4b0d3d04b56af049095fb4e346ecda3b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":522000,"upload_time":"2021-10-26T12:15:51","upload_time_iso_8601":"2021-10-26T12:15:51.801136Z","url":"https://files.pythonhosted.org/packages/ba/a8/e11372b757599b59b71b9cd0841fa4778481ca553cedaef214139fc17304/influxdb_client-1.23.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"137c4d83d03b27d35973b35432435b0780675d2ae505f208f178de32effd9e07","md5":"4b597340ab0d1d1ada6d3ddb9f6213a5","sha256":"049476feb0dba1c8a6aa13cca19804295221a7460eeb4d9d6de99749c22821e1"},"downloads":-1,"filename":"influxdb_client-1.23.0.tar.gz","has_sig":false,"md5_digest":"4b597340ab0d1d1ada6d3ddb9f6213a5","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":233896,"upload_time":"2021-10-26T12:15:54","upload_time_iso_8601":"2021-10-26T12:15:54.996886Z","url":"https://files.pythonhosted.org/packages/13/7c/4d83d03b27d35973b35432435b0780675d2ae505f208f178de32effd9e07/influxdb_client-1.23.0.tar.gz","yanked":false,"yanked_reason":null}],"1.24.0":[{"comment_text":"","digests":{"blake2b_256":"f4302e128a5600aecae64ad5d64f78561e0d7285f1f8ca2a8261eafa906f0fc4","md5":"f90591a3d3b3e288c7b53442a3c83ef7","sha256":"52afc9068360aaceb152c37699d50e739da21744a57babd6813335f6baa24df2"},"downloads":-1,"filename":"influxdb_client-1.24.0-py3-none-any.whl","has_sig":false,"md5_digest":"f90591a3d3b3e288c7b53442a3c83ef7","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":524671,"upload_time":"2021-11-26T07:42:46","upload_time_iso_8601":"2021-11-26T07:42:46.947778Z","url":"https://files.pythonhosted.org/packages/f4/30/2e128a5600aecae64ad5d64f78561e0d7285f1f8ca2a8261eafa906f0fc4/influxdb_client-1.24.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5f98b1135262f5dd3bb7da68c0f8dee583345d3e2c57518a14e33679167dca51","md5":"08639665e7d7279725f2a5dc554a05b0","sha256":"0e4b6311145608759afca1ed4234ee20de8a2cb62560474d6a179a01f0571814"},"downloads":-1,"filename":"influxdb_client-1.24.0.tar.gz","has_sig":false,"md5_digest":"08639665e7d7279725f2a5dc554a05b0","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":236000,"upload_time":"2021-11-26T07:42:50","upload_time_iso_8601":"2021-11-26T07:42:50.167169Z","url":"https://files.pythonhosted.org/packages/5f/98/b1135262f5dd3bb7da68c0f8dee583345d3e2c57518a14e33679167dca51/influxdb_client-1.24.0.tar.gz","yanked":false,"yanked_reason":null}],"1.25.0":[{"comment_text":"","digests":{"blake2b_256":"a7057c7fe219b497a01b76452519ee2269f30dae410f4041f2fe61ff17713c19","md5":"e9ba5cc45a7d7e9bb68a71369bc66c41","sha256":"f03182a09966481b24bc0c3bd61cbb1ced92f7d4de57c30a9445d392f2cb3e59"},"downloads":-1,"filename":"influxdb_client-1.25.0-py3-none-any.whl","has_sig":false,"md5_digest":"e9ba5cc45a7d7e9bb68a71369bc66c41","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":525277,"upload_time":"2022-01-20T08:49:16","upload_time_iso_8601":"2022-01-20T08:49:16.678358Z","url":"https://files.pythonhosted.org/packages/a7/05/7c7fe219b497a01b76452519ee2269f30dae410f4041f2fe61ff17713c19/influxdb_client-1.25.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"aee423f7c626bf6a6e990a20e2ea0b1ecf2fbe3a0b584a3db97de88e42745f29","md5":"dd35486f72c6a2a16bc361c6f7baadfe","sha256":"e53874182d4c238faf2e5224286546d88c79faf3eb3f1c44e5c013ff278b3f48"},"downloads":-1,"filename":"influxdb_client-1.25.0.tar.gz","has_sig":false,"md5_digest":"dd35486f72c6a2a16bc361c6f7baadfe","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":237132,"upload_time":"2022-01-20T08:49:19","upload_time_iso_8601":"2022-01-20T08:49:19.610797Z","url":"https://files.pythonhosted.org/packages/ae/e4/23f7c626bf6a6e990a20e2ea0b1ecf2fbe3a0b584a3db97de88e42745f29/influxdb_client-1.25.0.tar.gz","yanked":false,"yanked_reason":null}],"1.26.0":[{"comment_text":"","digests":{"blake2b_256":"089d5b8695ae4d80babc9e1091ca59c13f5bd1bdf151b5d02625fad4249728bf","md5":"7c03d4dfd9aded0fffe5e6a312cfff8d","sha256":"e82577b90645288cc0683fd2efccebd29224dffcbb02762d652841ca44e13f42"},"downloads":-1,"filename":"influxdb_client-1.26.0-py3-none-any.whl","has_sig":false,"md5_digest":"7c03d4dfd9aded0fffe5e6a312cfff8d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":669816,"upload_time":"2022-02-18T07:27:05","upload_time_iso_8601":"2022-02-18T07:27:05.361335Z","url":"https://files.pythonhosted.org/packages/08/9d/5b8695ae4d80babc9e1091ca59c13f5bd1bdf151b5d02625fad4249728bf/influxdb_client-1.26.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"590d403a017a57a521ca9105c95b65e210a532f323c0704b6b107012d4674cde","md5":"e4be651762836682a93785557ba92d36","sha256":"f8a05b1ec5a8561d4a97991ae54716e5510c7ca7e982adb5e60a8237f022101b"},"downloads":-1,"filename":"influxdb_client-1.26.0.tar.gz","has_sig":false,"md5_digest":"e4be651762836682a93785557ba92d36","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":273943,"upload_time":"2022-02-18T07:27:08","upload_time_iso_8601":"2022-02-18T07:27:08.527548Z","url":"https://files.pythonhosted.org/packages/59/0d/403a017a57a521ca9105c95b65e210a532f323c0704b6b107012d4674cde/influxdb_client-1.26.0.tar.gz","yanked":false,"yanked_reason":null}],"1.27.0":[{"comment_text":"","digests":{"blake2b_256":"15c9a91dbcd1be603b262503b6af5a6d97bb3205453dc008bffe7db75f264e7c","md5":"4795fa3fdcbc7e32265373e24e6b3ce2","sha256":"27335723011610bb2104083475da616928771ebad92cca624884f5fa22249c94"},"downloads":-1,"filename":"influxdb_client-1.27.0-py3-none-any.whl","has_sig":false,"md5_digest":"4795fa3fdcbc7e32265373e24e6b3ce2","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":674003,"upload_time":"2022-03-18T07:21:36","upload_time_iso_8601":"2022-03-18T07:21:36.920913Z","url":"https://files.pythonhosted.org/packages/15/c9/a91dbcd1be603b262503b6af5a6d97bb3205453dc008bffe7db75f264e7c/influxdb_client-1.27.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"74401981acc25bb0ebedbb91c02b183eb8dd76ed5e3c7914135148d060b900ec","md5":"fe620e9140a35f6c7a73f502fef3c8ff","sha256":"ac3ff734a83dc542944de15c81001a5a410ae4ae4b2722efefc1bf722c960975"},"downloads":-1,"filename":"influxdb_client-1.27.0.tar.gz","has_sig":false,"md5_digest":"fe620e9140a35f6c7a73f502fef3c8ff","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":276678,"upload_time":"2022-03-18T07:21:40","upload_time_iso_8601":"2022-03-18T07:21:40.436928Z","url":"https://files.pythonhosted.org/packages/74/40/1981acc25bb0ebedbb91c02b183eb8dd76ed5e3c7914135148d060b900ec/influxdb_client-1.27.0.tar.gz","yanked":false,"yanked_reason":null}],"1.28.0":[{"comment_text":"","digests":{"blake2b_256":"0a54ce5088bea6aa92f15ea511e23ebc44c29d52c19acef2c4a35e41a192aaed","md5":"0212a81098ff9d3f83746eea7beaca30","sha256":"33a0d554420b03da1eff5437a07798341ac50aeae1db4dcb11cca032f607dd5f"},"downloads":-1,"filename":"influxdb_client-1.28.0-py3-none-any.whl","has_sig":false,"md5_digest":"0212a81098ff9d3f83746eea7beaca30","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":699052,"upload_time":"2022-04-19T06:03:58","upload_time_iso_8601":"2022-04-19T06:03:58.575437Z","url":"https://files.pythonhosted.org/packages/0a/54/ce5088bea6aa92f15ea511e23ebc44c29d52c19acef2c4a35e41a192aaed/influxdb_client-1.28.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7e23e880a28cf9c1d7ef095c9fdf424805b9531c79ac41574e2859272af9c332","md5":"eec3a185897be138ac1d40c2d66db36e","sha256":"3f1d742541fa0cdcd3b333c8f362b5ef707d186977d6d17dd85dba4cc5c0a790"},"downloads":-1,"filename":"influxdb_client-1.28.0.tar.gz","has_sig":false,"md5_digest":"eec3a185897be138ac1d40c2d66db36e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":302615,"upload_time":"2022-04-19T06:04:01","upload_time_iso_8601":"2022-04-19T06:04:01.608917Z","url":"https://files.pythonhosted.org/packages/7e/23/e880a28cf9c1d7ef095c9fdf424805b9531c79ac41574e2859272af9c332/influxdb_client-1.28.0.tar.gz","yanked":false,"yanked_reason":null}],"1.29.0":[{"comment_text":"","digests":{"blake2b_256":"db58f3ca5af586910799ed94aeb7698bec0794023f52e99eb34ce762c88e2a30","md5":"51b6b58bd95d7efd0c8cc9c2a7b395b6","sha256":"c118a129d1eed4d3eafad664c907303bd66109f6727098734074606e7084230c"},"downloads":-1,"filename":"influxdb_client-1.29.0-py3-none-any.whl","has_sig":false,"md5_digest":"51b6b58bd95d7efd0c8cc9c2a7b395b6","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":698464,"upload_time":"2022-05-20T06:17:02","upload_time_iso_8601":"2022-05-20T06:17:02.028900Z","url":"https://files.pythonhosted.org/packages/db/58/f3ca5af586910799ed94aeb7698bec0794023f52e99eb34ce762c88e2a30/influxdb_client-1.29.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"359165a16c8fcb2897007c5b130ed723c85e01841c8561004c30020476f34cac","md5":"3c896582f69b928b6c7407255a3b3426","sha256":"4f56622d9f63f3eea22859f3a53564f803f422a10fdd421d839abc13e3fe36f7"},"downloads":-1,"filename":"influxdb_client-1.29.0.tar.gz","has_sig":false,"md5_digest":"3c896582f69b928b6c7407255a3b3426","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":307554,"upload_time":"2022-05-20T06:17:06","upload_time_iso_8601":"2022-05-20T06:17:06.536885Z","url":"https://files.pythonhosted.org/packages/35/91/65a16c8fcb2897007c5b130ed723c85e01841c8561004c30020476f34cac/influxdb_client-1.29.0.tar.gz","yanked":false,"yanked_reason":null}],"1.29.1":[{"comment_text":"","digests":{"blake2b_256":"ea3f3c7b2446aeb0f9c4e5b2ffe8a5945904777b5b6cce8650439cafd28d4d8f","md5":"7c9e3deeb070989547359768215f9577","sha256":"2145a33cd80325c390832361a274975901a4f462c7e158dc24bb45a97a91deeb"},"downloads":-1,"filename":"influxdb_client-1.29.1-py3-none-any.whl","has_sig":false,"md5_digest":"7c9e3deeb070989547359768215f9577","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":698489,"upload_time":"2022-05-23T11:23:04","upload_time_iso_8601":"2022-05-23T11:23:04.937869Z","url":"https://files.pythonhosted.org/packages/ea/3f/3c7b2446aeb0f9c4e5b2ffe8a5945904777b5b6cce8650439cafd28d4d8f/influxdb_client-1.29.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"36c3cdca4217a983f79d2d287677cf5310f29a761b9e1a58eceb36d47dec1acb","md5":"856a9065182395f77eed50fb501276ff","sha256":"8e354aae9a7cce1e8125636228ecc7bd1df2a8cb0100399d2024f7fc1fdad73f"},"downloads":-1,"filename":"influxdb_client-1.29.1.tar.gz","has_sig":false,"md5_digest":"856a9065182395f77eed50fb501276ff","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":307624,"upload_time":"2022-05-23T11:23:08","upload_time_iso_8601":"2022-05-23T11:23:08.955104Z","url":"https://files.pythonhosted.org/packages/36/c3/cdca4217a983f79d2d287677cf5310f29a761b9e1a58eceb36d47dec1acb/influxdb_client-1.29.1.tar.gz","yanked":false,"yanked_reason":null}],"1.3.0":[{"comment_text":"","digests":{"blake2b_256":"cea2a268408c5ba18d7c71ef634cba7fe090da45215690ace6ea2b2e9c4f0f5c","md5":"629b01668fa615c90b545aec1c806689","sha256":"bb728c98276998cd8d66b957021f9e451ec3d0cc791ce0344fdf831096a98f97"},"downloads":-1,"filename":"influxdb_client-1.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"629b01668fa615c90b545aec1c806689","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":478857,"upload_time":"2020-01-17T09:24:15","upload_time_iso_8601":"2020-01-17T09:24:15.531315Z","url":"https://files.pythonhosted.org/packages/ce/a2/a268408c5ba18d7c71ef634cba7fe090da45215690ace6ea2b2e9c4f0f5c/influxdb_client-1.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"54e517963473c455cb3be4a7a7e85a65568007efb80834952d34dae957d8bfea","md5":"66debce75beabc2d4251be68d8e65da3","sha256":"ecf6213418f3099c45a4d761735e8c1c7e433cd6404282e298e70a7444cd8db8"},"downloads":-1,"filename":"influxdb_client-1.3.0.tar.gz","has_sig":false,"md5_digest":"66debce75beabc2d4251be68d8e65da3","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":188834,"upload_time":"2020-01-17T09:24:18","upload_time_iso_8601":"2020-01-17T09:24:18.386806Z","url":"https://files.pythonhosted.org/packages/54/e5/17963473c455cb3be4a7a7e85a65568007efb80834952d34dae957d8bfea/influxdb_client-1.3.0.tar.gz","yanked":false,"yanked_reason":null}],"1.30.0":[{"comment_text":"","digests":{"blake2b_256":"804d731ac649a9f43ff3f7c3a93d94abf0991b6ce9e20869783fe3db3c1d1709","md5":"be8aaf18d1d203dfe0c4554681b5d1de","sha256":"68d62795047d3189d1c5869ff9eaeb1af48ad317b74f3e9772e27bdaea27a543"},"downloads":-1,"filename":"influxdb_client-1.30.0-py3-none-any.whl","has_sig":false,"md5_digest":"be8aaf18d1d203dfe0c4554681b5d1de","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":699404,"upload_time":"2022-06-24T06:18:07","upload_time_iso_8601":"2022-06-24T06:18:07.644291Z","url":"https://files.pythonhosted.org/packages/80/4d/731ac649a9f43ff3f7c3a93d94abf0991b6ce9e20869783fe3db3c1d1709/influxdb_client-1.30.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c5c102a50d9c2bfa450f4ae807e8be83f72f0b79c447e9762dc8337c545fdf5e","md5":"0b7163dc9db5e25daea4e77eaf4154b4","sha256":"691acd05d3ca205c1c561991e1d7888d65706feb0a44076f2a22eb572aed9926"},"downloads":-1,"filename":"influxdb_client-1.30.0.tar.gz","has_sig":false,"md5_digest":"0b7163dc9db5e25daea4e77eaf4154b4","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":308257,"upload_time":"2022-06-24T06:18:11","upload_time_iso_8601":"2022-06-24T06:18:11.168254Z","url":"https://files.pythonhosted.org/packages/c5/c1/02a50d9c2bfa450f4ae807e8be83f72f0b79c447e9762dc8337c545fdf5e/influxdb_client-1.30.0.tar.gz","yanked":false,"yanked_reason":null}],"1.31.0":[{"comment_text":"","digests":{"blake2b_256":"58c0d7e5bad4ec145e8152d2cc8a0fd3e9c0000191086667c4d63015e0ca6545","md5":"e5a46d20bae59249dfd5b5b8dc7fd6ee","sha256":"c65e1efe2e361a65f54238d0630280c217ca7b0502a1942de1e5d541635b719f"},"downloads":-1,"filename":"influxdb_client-1.31.0-py3-none-any.whl","has_sig":false,"md5_digest":"e5a46d20bae59249dfd5b5b8dc7fd6ee","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":705210,"upload_time":"2022-07-29T14:11:39","upload_time_iso_8601":"2022-07-29T14:11:39.824807Z","url":"https://files.pythonhosted.org/packages/58/c0/d7e5bad4ec145e8152d2cc8a0fd3e9c0000191086667c4d63015e0ca6545/influxdb_client-1.31.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6679eabacb1f737216da92023a3137e4ebb8a6cbafc870efdde8af9b167e33ae","md5":"dc5743c46e76ca45532cf03ad6ac5c83","sha256":"adf6dfdf35f7c39cf543b243359d2c0ae79fc462f1ef57a09d0f1623f181796d"},"downloads":-1,"filename":"influxdb_client-1.31.0.tar.gz","has_sig":false,"md5_digest":"dc5743c46e76ca45532cf03ad6ac5c83","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":312058,"upload_time":"2022-07-29T14:11:44","upload_time_iso_8601":"2022-07-29T14:11:44.707570Z","url":"https://files.pythonhosted.org/packages/66/79/eabacb1f737216da92023a3137e4ebb8a6cbafc870efdde8af9b167e33ae/influxdb_client-1.31.0.tar.gz","yanked":false,"yanked_reason":null}],"1.32.0":[{"comment_text":"","digests":{"blake2b_256":"aa775c23c86b55a9832ee2acabb9fdce1030dd3d3a1c16992084929455a75a3a","md5":"7ba82611483e335675777149282483cc","sha256":"3c88127d3501a7101f4b798add611f1eefe3ebeca597f6a9db43339c75330879"},"downloads":-1,"filename":"influxdb_client-1.32.0-py3-none-any.whl","has_sig":false,"md5_digest":"7ba82611483e335675777149282483cc","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":705591,"upload_time":"2022-08-25T15:26:08","upload_time_iso_8601":"2022-08-25T15:26:08.794130Z","url":"https://files.pythonhosted.org/packages/aa/77/5c23c86b55a9832ee2acabb9fdce1030dd3d3a1c16992084929455a75a3a/influxdb_client-1.32.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f9e819d4336984b1326c9e93a8cf207d77ba751bcff35275fe950d39b4e53e3b","md5":"40ce725823f5aacc6b9469a84b504895","sha256":"29bd40934cbdcbc0e914886028bee06ac05051cff5bccaece0457eefb67ace6d"},"downloads":-1,"filename":"influxdb_client-1.32.0.tar.gz","has_sig":false,"md5_digest":"40ce725823f5aacc6b9469a84b504895","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":312154,"upload_time":"2022-08-25T15:26:12","upload_time_iso_8601":"2022-08-25T15:26:12.736134Z","url":"https://files.pythonhosted.org/packages/f9/e8/19d4336984b1326c9e93a8cf207d77ba751bcff35275fe950d39b4e53e3b/influxdb_client-1.32.0.tar.gz","yanked":false,"yanked_reason":null}],"1.33.0":[{"comment_text":"","digests":{"blake2b_256":"35a881c5a4fca6e14174ab664fe649ce146e4b1797283ff0848ca179057ad633","md5":"fff67ff93e776c350a2a53fa6ce2b9bf","sha256":"38a8bedce673ffd2211f60012b5848cb2418977c19f83a43454882b665acbc69"},"downloads":-1,"filename":"influxdb_client-1.33.0-py3-none-any.whl","has_sig":false,"md5_digest":"fff67ff93e776c350a2a53fa6ce2b9bf","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":706615,"upload_time":"2022-09-29T15:22:27","upload_time_iso_8601":"2022-09-29T15:22:27.732141Z","url":"https://files.pythonhosted.org/packages/35/a8/81c5a4fca6e14174ab664fe649ce146e4b1797283ff0848ca179057ad633/influxdb_client-1.33.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fd5130168a2c9266e479f8f64e85f91221b9be66ea85e0ff645fcb1d4175f8e0","md5":"9871f4ecd55c4c527420b2c6039cabe0","sha256":"45f6a1763804a19b972890daf4c5f0bd2d3ae2f202b86451c579e09dcadd30e6"},"downloads":-1,"filename":"influxdb_client-1.33.0.tar.gz","has_sig":false,"md5_digest":"9871f4ecd55c4c527420b2c6039cabe0","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":313249,"upload_time":"2022-09-29T15:22:32","upload_time_iso_8601":"2022-09-29T15:22:32.379229Z","url":"https://files.pythonhosted.org/packages/fd/51/30168a2c9266e479f8f64e85f91221b9be66ea85e0ff645fcb1d4175f8e0/influxdb_client-1.33.0.tar.gz","yanked":false,"yanked_reason":null}],"1.34.0":[{"comment_text":"","digests":{"blake2b_256":"aed42874e31329ca561122b6d5f19c667367cd2913a2cf3cd7141c67330e6d57","md5":"47b5483033163ac1be4b7557e7b16147","sha256":"ccba8630f0f19e9812f87831078164d0e2fa5ac49c6ea1c4c5dfbc1be6853d26"},"downloads":-1,"filename":"influxdb_client-1.34.0-py3-none-any.whl","has_sig":false,"md5_digest":"47b5483033163ac1be4b7557e7b16147","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":707821,"upload_time":"2022-10-27T20:32:26","upload_time_iso_8601":"2022-10-27T20:32:26.964864Z","url":"https://files.pythonhosted.org/packages/ae/d4/2874e31329ca561122b6d5f19c667367cd2913a2cf3cd7141c67330e6d57/influxdb_client-1.34.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c6c0d3d72e27c9b77da94344fd27b29fa1b8708be3f3b63805cb24c1ea63898c","md5":"b86ba108b77ffc7240f580be1803982a","sha256":"e5691e50367ffa7768e3ff74c857cb9c3df2eba7a82526f176394ae4ee1fbd48"},"downloads":-1,"filename":"influxdb_client-1.34.0.tar.gz","has_sig":false,"md5_digest":"b86ba108b77ffc7240f580be1803982a","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":314372,"upload_time":"2022-10-27T20:32:31","upload_time_iso_8601":"2022-10-27T20:32:31.934903Z","url":"https://files.pythonhosted.org/packages/c6/c0/d3d72e27c9b77da94344fd27b29fa1b8708be3f3b63805cb24c1ea63898c/influxdb_client-1.34.0.tar.gz","yanked":false,"yanked_reason":null}],"1.35.0":[{"comment_text":"","digests":{"blake2b_256":"7948677dc8eb5c652ce58758b71c84c2e993167ac460276a632a573cd75ce842","md5":"a65fe64852e360da4d69e91823d57bbd","sha256":"a4c1751337bbfc0b0b0b2fb0fb285e66127bca21ae47a6b86b0bcf4fca05ee70"},"downloads":-1,"filename":"influxdb_client-1.35.0-py3-none-any.whl","has_sig":false,"md5_digest":"a65fe64852e360da4d69e91823d57bbd","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":719976,"upload_time":"2022-12-01T17:57:45","upload_time_iso_8601":"2022-12-01T17:57:45.689655Z","url":"https://files.pythonhosted.org/packages/79/48/677dc8eb5c652ce58758b71c84c2e993167ac460276a632a573cd75ce842/influxdb_client-1.35.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"50e1b39818533faee47144c867b7d2342f5d81fc6055a13966baa9193eb191a9","md5":"e63b324489195520584ac7eca080408c","sha256":"eaef9fb9adcdc9868b50770602bf06c662e9cf4a390d09f14c8e888f3947adbb"},"downloads":-1,"filename":"influxdb_client-1.35.0.tar.gz","has_sig":false,"md5_digest":"e63b324489195520584ac7eca080408c","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":319206,"upload_time":"2022-12-01T17:57:49","upload_time_iso_8601":"2022-12-01T17:57:49.313013Z","url":"https://files.pythonhosted.org/packages/50/e1/b39818533faee47144c867b7d2342f5d81fc6055a13966baa9193eb191a9/influxdb_client-1.35.0.tar.gz","yanked":false,"yanked_reason":null}],"1.36.0":[{"comment_text":"","digests":{"blake2b_256":"c3c9c52fbb1bddb24ff25798567e871cd84d9b3d32cdb58fa6d9ed37cbb5e18b","md5":"607e5d2f3debf693389f632d4bd0e408","sha256":"2dfab11e5a0b88e09a9c4ce05cc1f15bac1fed493c31534e6d5be050dac469bb"},"downloads":-1,"filename":"influxdb_client-1.36.0-py3-none-any.whl","has_sig":false,"md5_digest":"607e5d2f3debf693389f632d4bd0e408","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":720643,"upload_time":"2023-01-26T18:23:48","upload_time_iso_8601":"2023-01-26T18:23:48.660303Z","url":"https://files.pythonhosted.org/packages/c3/c9/c52fbb1bddb24ff25798567e871cd84d9b3d32cdb58fa6d9ed37cbb5e18b/influxdb_client-1.36.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7d00cb21827d592e3e862faa5615aeda5c896947998ba06fdb3aebd71a3b8527","md5":"6ac00335a8cef40c5667c0eb17dcc107","sha256":"fdbedd1c72db4b928084cb04bea28b5433d214fb9b136e89a5ffa943de282af1"},"downloads":-1,"filename":"influxdb_client-1.36.0.tar.gz","has_sig":false,"md5_digest":"6ac00335a8cef40c5667c0eb17dcc107","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":319830,"upload_time":"2023-01-26T18:23:51","upload_time_iso_8601":"2023-01-26T18:23:51.531231Z","url":"https://files.pythonhosted.org/packages/7d/00/cb21827d592e3e862faa5615aeda5c896947998ba06fdb3aebd71a3b8527/influxdb_client-1.36.0.tar.gz","yanked":false,"yanked_reason":null}],"1.36.1":[{"comment_text":"","digests":{"blake2b_256":"994c4e5f105fbdf8ed1da94d60fb121cf3757682965bb74cf53d606e858c30f8","md5":"38cfb34f900e3e26cd8336d8b1065276","sha256":"a5a8d840139431356235f6c786cd49740ed545b6e99be62ae3fb6ba5df1d982b"},"downloads":-1,"filename":"influxdb_client-1.36.1-py3-none-any.whl","has_sig":false,"md5_digest":"38cfb34f900e3e26cd8336d8b1065276","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":721209,"upload_time":"2023-02-23T20:58:07","upload_time_iso_8601":"2023-02-23T20:58:07.063635Z","url":"https://files.pythonhosted.org/packages/99/4c/4e5f105fbdf8ed1da94d60fb121cf3757682965bb74cf53d606e858c30f8/influxdb_client-1.36.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"adc52a8c6be01233a523b0b585b343b00acc79e637f641e360c05aaaaa4a5c02","md5":"fc9cdebe2eefc43a460d61ab27052be0","sha256":"59654af4f7133f0ecf916411935b50f42e5c4bc125d218e193848f3615b57bfc"},"downloads":-1,"filename":"influxdb_client-1.36.1.tar.gz","has_sig":false,"md5_digest":"fc9cdebe2eefc43a460d61ab27052be0","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":365631,"upload_time":"2023-02-23T20:58:10","upload_time_iso_8601":"2023-02-23T20:58:10.939458Z","url":"https://files.pythonhosted.org/packages/ad/c5/2a8c6be01233a523b0b585b343b00acc79e637f641e360c05aaaaa4a5c02/influxdb_client-1.36.1.tar.gz","yanked":false,"yanked_reason":null}],"1.37.0":[{"comment_text":"","digests":{"blake2b_256":"97b4703f15f563fdd77435ecadcc8d931110710723690273d6a4894d11052318","md5":"a5b073799d9df86c611fe32366562831","sha256":"30b03888846fab6fb740936b1a08af24841b791cf1b99773e3894dd1d64edf2f"},"downloads":-1,"filename":"influxdb_client-1.37.0-py3-none-any.whl","has_sig":false,"md5_digest":"a5b073799d9df86c611fe32366562831","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":743504,"upload_time":"2023-07-28T05:26:30","upload_time_iso_8601":"2023-07-28T05:26:30.473844Z","url":"https://files.pythonhosted.org/packages/97/b4/703f15f563fdd77435ecadcc8d931110710723690273d6a4894d11052318/influxdb_client-1.37.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6d3dafc78200a27e3e64ee822296a1c8fe67a8fce40ea7b19b87a1af347a37b6","md5":"61b35fe96c5bd0d34e5426f553cbb074","sha256":"01ac44d6a16a965ae2e0fa3238e2edeb147c11935a89b61439c9a752458001da"},"downloads":-1,"filename":"influxdb_client-1.37.0.tar.gz","has_sig":false,"md5_digest":"61b35fe96c5bd0d34e5426f553cbb074","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":343895,"upload_time":"2023-07-28T05:26:33","upload_time_iso_8601":"2023-07-28T05:26:33.991089Z","url":"https://files.pythonhosted.org/packages/6d/3d/afc78200a27e3e64ee822296a1c8fe67a8fce40ea7b19b87a1af347a37b6/influxdb_client-1.37.0.tar.gz","yanked":false,"yanked_reason":null}],"1.38.0":[{"comment_text":"","digests":{"blake2b_256":"2fa895e9c0b652780146de50325c11aba92bc089a6213c311f1f0933f0cb1a08","md5":"d22dbd6a0a767f6a8201399d041d611a","sha256":"7d04c06b833800be3350c6cb8f19f01f3f4ab33a77a24969568a141e4e132358"},"downloads":-1,"filename":"influxdb_client-1.38.0-py3-none-any.whl","has_sig":false,"md5_digest":"d22dbd6a0a767f6a8201399d041d611a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":743490,"upload_time":"2023-10-02T09:23:19","upload_time_iso_8601":"2023-10-02T09:23:19.806465Z","url":"https://files.pythonhosted.org/packages/2f/a8/95e9c0b652780146de50325c11aba92bc089a6213c311f1f0933f0cb1a08/influxdb_client-1.38.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8bb503786e2e47f65c9d799e579dcef3cf325b92adda5c726beb3769b0bfdcbd","md5":"86e7323ad0b4db3b08b67005e36cfe42","sha256":"88ee8c1beb6b3b1359f4117d51704d5da5ac70e598b9fe786823e36ac86175a8"},"downloads":-1,"filename":"influxdb_client-1.38.0.tar.gz","has_sig":false,"md5_digest":"86e7323ad0b4db3b08b67005e36cfe42","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":390244,"upload_time":"2023-10-02T09:23:23","upload_time_iso_8601":"2023-10-02T09:23:23.264930Z","url":"https://files.pythonhosted.org/packages/8b/b5/03786e2e47f65c9d799e579dcef3cf325b92adda5c726beb3769b0bfdcbd/influxdb_client-1.38.0.tar.gz","yanked":false,"yanked_reason":null}],"1.39.0":[{"comment_text":"","digests":{"blake2b_256":"fac1b508d7044ce620c01ea7a29c195b80977fc8ae6c362751a019d7cd199b98","md5":"d87b43949f892f0ec85f7bf9363be46e","sha256":"35c4d73713b6b7d30ca5ebaf74b7d53217fb6c58cdec63484e529b43d26f061e"},"downloads":-1,"filename":"influxdb_client-1.39.0-py3-none-any.whl","has_sig":false,"md5_digest":"d87b43949f892f0ec85f7bf9363be46e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":743950,"upload_time":"2023-12-05T07:48:04","upload_time_iso_8601":"2023-12-05T07:48:04.780445Z","url":"https://files.pythonhosted.org/packages/fa/c1/b508d7044ce620c01ea7a29c195b80977fc8ae6c362751a019d7cd199b98/influxdb_client-1.39.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f10ed4da1d18316eab78b7041e60dbf4fe6062ae7e32dd55ed22bda316b1d217","md5":"2f6ec379671309c6c8e80c1525bc665d","sha256":"6a534913523bd262f1928e4ff80046bf95e313c1694ce13e45fd17eea90fe691"},"downloads":-1,"filename":"influxdb_client-1.39.0.tar.gz","has_sig":false,"md5_digest":"2f6ec379671309c6c8e80c1525bc665d","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":335811,"upload_time":"2023-12-05T07:48:07","upload_time_iso_8601":"2023-12-05T07:48:07.769643Z","url":"https://files.pythonhosted.org/packages/f1/0e/d4da1d18316eab78b7041e60dbf4fe6062ae7e32dd55ed22bda316b1d217/influxdb_client-1.39.0.tar.gz","yanked":false,"yanked_reason":null}],"1.4.0":[{"comment_text":"","digests":{"blake2b_256":"1c690c6c436485d2cf6b56f51ac3d027b9bd556db3e9ff3dec1346257a5a2353","md5":"3d60d602315dae2faffdade74442fb08","sha256":"365632e3e40460ae64693cb79bc9ff21981e53dc7c8ab2429a388f38a64c3ad9"},"downloads":-1,"filename":"influxdb_client-1.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"3d60d602315dae2faffdade74442fb08","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":481364,"upload_time":"2020-02-14T08:33:44","upload_time_iso_8601":"2020-02-14T08:33:44.741993Z","url":"https://files.pythonhosted.org/packages/1c/69/0c6c436485d2cf6b56f51ac3d027b9bd556db3e9ff3dec1346257a5a2353/influxdb_client-1.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c53d956d03ec9d689bea2b9515ebed590ecf9db0376d73ef705d34b139ce918a","md5":"2ef0571e4c43b10eac675d3c651327c2","sha256":"e5ee68e384eac8b0ae46ccb1fd375022429730e75b6e3017117f3b7ebe652388"},"downloads":-1,"filename":"influxdb_client-1.4.0.tar.gz","has_sig":false,"md5_digest":"2ef0571e4c43b10eac675d3c651327c2","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":192603,"upload_time":"2020-02-14T08:33:47","upload_time_iso_8601":"2020-02-14T08:33:47.665602Z","url":"https://files.pythonhosted.org/packages/c5/3d/956d03ec9d689bea2b9515ebed590ecf9db0376d73ef705d34b139ce918a/influxdb_client-1.4.0.tar.gz","yanked":false,"yanked_reason":null}],"1.40.0":[{"comment_text":"","digests":{"blake2b_256":"a2fc98bb6d792aa298b9df82b10c3bc035d4017b749a1102272aa4b1c39f9c7e","md5":"6de7722f87d85e9ceb5253279a93232f","sha256":"7aa115506a8ec89d10ff6e4d729cb0c78ca223a1f1b03412a7ad988da9011089"},"downloads":-1,"filename":"influxdb_client-1.40.0-py3-none-any.whl","has_sig":false,"md5_digest":"6de7722f87d85e9ceb5253279a93232f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":744115,"upload_time":"2024-01-30T07:47:13","upload_time_iso_8601":"2024-01-30T07:47:13.646658Z","url":"https://files.pythonhosted.org/packages/a2/fc/98bb6d792aa298b9df82b10c3bc035d4017b749a1102272aa4b1c39f9c7e/influxdb_client-1.40.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"631107ed82352a28e4e8b623a487337befec77d5bd18293dcc940d769e633f82","md5":"3e9a111d67e1cdac03f0cdc5920209f8","sha256":"027f970af1518479d8806f1cdf5ba20280f943e1b621c2acdbf9ca8dc9bdf1cb"},"downloads":-1,"filename":"influxdb_client-1.40.0.tar.gz","has_sig":false,"md5_digest":"3e9a111d67e1cdac03f0cdc5920209f8","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":335997,"upload_time":"2024-01-30T07:47:17","upload_time_iso_8601":"2024-01-30T07:47:17.045690Z","url":"https://files.pythonhosted.org/packages/63/11/07ed82352a28e4e8b623a487337befec77d5bd18293dcc940d769e633f82/influxdb_client-1.40.0.tar.gz","yanked":false,"yanked_reason":null}],"1.41.0":[{"comment_text":"","digests":{"blake2b_256":"7c84ec4b6c4393c1fe7c3c774d21f688b0e8c21f91710c61e3f24d31f1fda9c3","md5":"495c5c1f5992e1349ae1fa97369555ad","sha256":"420d7c5b7ed0f778de0eac923aded3ea3a4eb6b247e3fbb7a187e0a577a5a3be"},"downloads":-1,"filename":"influxdb_client-1.41.0-py3-none-any.whl","has_sig":false,"md5_digest":"495c5c1f5992e1349ae1fa97369555ad","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":744591,"upload_time":"2024-03-01T08:25:50","upload_time_iso_8601":"2024-03-01T08:25:50.733833Z","url":"https://files.pythonhosted.org/packages/7c/84/ec4b6c4393c1fe7c3c774d21f688b0e8c21f91710c61e3f24d31f1fda9c3/influxdb_client-1.41.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bf808f5dab7bfe55e65181cbc1e268806ae1ddc935a1b2ae612ed7f41d8bd0c1","md5":"2685e429b3f12b4a253284b6189be676","sha256":"4b85bad3991f3de24818366c87c8868a64917fea2d21bbcc2b579fbe5d904990"},"downloads":-1,"filename":"influxdb_client-1.41.0.tar.gz","has_sig":false,"md5_digest":"2685e429b3f12b4a253284b6189be676","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":382182,"upload_time":"2024-03-01T08:25:53","upload_time_iso_8601":"2024-03-01T08:25:53.299679Z","url":"https://files.pythonhosted.org/packages/bf/80/8f5dab7bfe55e65181cbc1e268806ae1ddc935a1b2ae612ed7f41d8bd0c1/influxdb_client-1.41.0.tar.gz","yanked":false,"yanked_reason":null}],"1.42.0":[{"comment_text":"","digests":{"blake2b_256":"def7eaa6664f12134e3b94c69ef070d26d2efbb7885dbe8f1b0e4ccfbec06d05","md5":"a03dd845e10d4caacb8bd4a0d2561a27","sha256":"0161b963f221d5c1769202f41ff55f5d79e00e6dc24e2a0729c82a1e131956ee"},"downloads":-1,"filename":"influxdb_client-1.42.0-py3-none-any.whl","has_sig":false,"md5_digest":"a03dd845e10d4caacb8bd4a0d2561a27","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":744598,"upload_time":"2024-04-17T06:05:26","upload_time_iso_8601":"2024-04-17T06:05:26.870363Z","url":"https://files.pythonhosted.org/packages/de/f7/eaa6664f12134e3b94c69ef070d26d2efbb7885dbe8f1b0e4ccfbec06d05/influxdb_client-1.42.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5884e8746501977f66fe7546d721971d2cc268a30762abab1f91ab73bd95163d","md5":"5fd8fb552459cdac0a3ab88cfcdfe464","sha256":"f5e877feb671eda41e2b5c98ed1dc8ec3327fd8991360dc614822119cda06491"},"downloads":-1,"filename":"influxdb_client-1.42.0.tar.gz","has_sig":false,"md5_digest":"5fd8fb552459cdac0a3ab88cfcdfe464","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":382354,"upload_time":"2024-04-17T06:05:29","upload_time_iso_8601":"2024-04-17T06:05:29.794224Z","url":"https://files.pythonhosted.org/packages/58/84/e8746501977f66fe7546d721971d2cc268a30762abab1f91ab73bd95163d/influxdb_client-1.42.0.tar.gz","yanked":false,"yanked_reason":null}],"1.43.0":[{"comment_text":"","digests":{"blake2b_256":"a267fd51294d176f5eb81c418c162c86ddf8dcfa7d39db56aca81c0be2464295","md5":"12ea69efbeb02c9080b2242e0535f5f6","sha256":"f079e63018f521024118bc0141b6403c65506711e2e6e93500f8e69f1675dc38"},"downloads":-1,"filename":"influxdb_client-1.43.0-py3-none-any.whl","has_sig":false,"md5_digest":"12ea69efbeb02c9080b2242e0535f5f6","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":744699,"upload_time":"2024-05-17T09:30:56","upload_time_iso_8601":"2024-05-17T09:30:56.185880Z","url":"https://files.pythonhosted.org/packages/a2/67/fd51294d176f5eb81c418c162c86ddf8dcfa7d39db56aca81c0be2464295/influxdb_client-1.43.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3a1fd610ac86af1204bb12698a4d9ac4bd743141e01c13dc44d2e5a8bcf9c556","md5":"7c84e9410ee9c352774013609bd8cb26","sha256":"ae2614d891baed52c0ae8f6194a04ee5b1c6422f6061318a3639fe63b7671b25"},"downloads":-1,"filename":"influxdb_client-1.43.0.tar.gz","has_sig":false,"md5_digest":"7c84e9410ee9c352774013609bd8cb26","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":382515,"upload_time":"2024-05-17T09:31:05","upload_time_iso_8601":"2024-05-17T09:31:05.762217Z","url":"https://files.pythonhosted.org/packages/3a/1f/d610ac86af1204bb12698a4d9ac4bd743141e01c13dc44d2e5a8bcf9c556/influxdb_client-1.43.0.tar.gz","yanked":false,"yanked_reason":null}],"1.44.0":[{"comment_text":"","digests":{"blake2b_256":"9fada529bf2a6f2a83a60c4bde28144f3dbc4feb8104adb168ea15c5ea7b3d4c","md5":"38d5a1844dbeda7cd0001ea6eec03c42","sha256":"e4c1ac9c9925c4693d63e988e22f65d2ddc1867f8910813b7f4721633175f2a0"},"downloads":-1,"filename":"influxdb_client-1.44.0-py3-none-any.whl","has_sig":false,"md5_digest":"38d5a1844dbeda7cd0001ea6eec03c42","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":745421,"upload_time":"2024-06-24T09:48:24","upload_time_iso_8601":"2024-06-24T09:48:24.880002Z","url":"https://files.pythonhosted.org/packages/9f/ad/a529bf2a6f2a83a60c4bde28144f3dbc4feb8104adb168ea15c5ea7b3d4c/influxdb_client-1.44.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9ea1ab4f2a3b90334c2e7cb795fbc85483a30134078b1bad0a165a34cb827aa7","md5":"2b684197a0015738d0afcf45547cafe7","sha256":"da9bc0cc49de4a0ac844d833c1efa65227ec5a2254e63cdbe07b5d532c0c37f8"},"downloads":-1,"filename":"influxdb_client-1.44.0.tar.gz","has_sig":false,"md5_digest":"2b684197a0015738d0afcf45547cafe7","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":383285,"upload_time":"2024-06-24T09:48:28","upload_time_iso_8601":"2024-06-24T09:48:28.669949Z","url":"https://files.pythonhosted.org/packages/9e/a1/ab4f2a3b90334c2e7cb795fbc85483a30134078b1bad0a165a34cb827aa7/influxdb_client-1.44.0.tar.gz","yanked":false,"yanked_reason":null}],"1.5.0":[{"comment_text":"","digests":{"blake2b_256":"cbbb06f064277ba3e8e5a09fa627947d338b7d1663f68a7650fbe5ff9e4a9585","md5":"e7a687f58d97c002f548180d9716a15d","sha256":"1a5ebe0f8d4835a123308fbc23459a9458c7f6a392aaac9fa99f6e1c7794e08b"},"downloads":-1,"filename":"influxdb_client-1.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"e7a687f58d97c002f548180d9716a15d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":484175,"upload_time":"2020-03-13T08:36:41","upload_time_iso_8601":"2020-03-13T08:36:41.279810Z","url":"https://files.pythonhosted.org/packages/cb/bb/06f064277ba3e8e5a09fa627947d338b7d1663f68a7650fbe5ff9e4a9585/influxdb_client-1.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8cec3fe6a73a636444e0813df0d2713b6a09ffe9ca913015aa95e7ebe364ed78","md5":"764d7db38121d0643f33133fa2cecb0e","sha256":"3f84400107dfce9e5ac044468b9bf2c4f185de81162813811f8c74453e4d62c2"},"downloads":-1,"filename":"influxdb_client-1.5.0.tar.gz","has_sig":false,"md5_digest":"764d7db38121d0643f33133fa2cecb0e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":196613,"upload_time":"2020-03-13T08:36:43","upload_time_iso_8601":"2020-03-13T08:36:43.649272Z","url":"https://files.pythonhosted.org/packages/8c/ec/3fe6a73a636444e0813df0d2713b6a09ffe9ca913015aa95e7ebe364ed78/influxdb_client-1.5.0.tar.gz","yanked":false,"yanked_reason":null}],"1.6.0":[{"comment_text":"","digests":{"blake2b_256":"e47a893f33f32e2984437e49a42e6b7e9a3e673a772ac1c1f5e8ea713a83ed25","md5":"7385ea5fdbc9406c1ac9b63fdc904c10","sha256":"41a737032b74e25ee211f0599fc008db5fe9668f13008b672eef9c0fa00625e2"},"downloads":-1,"filename":"influxdb_client-1.6.0-py3-none-any.whl","has_sig":false,"md5_digest":"7385ea5fdbc9406c1ac9b63fdc904c10","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":485629,"upload_time":"2020-04-17T06:13:45","upload_time_iso_8601":"2020-04-17T06:13:45.493329Z","url":"https://files.pythonhosted.org/packages/e4/7a/893f33f32e2984437e49a42e6b7e9a3e673a772ac1c1f5e8ea713a83ed25/influxdb_client-1.6.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4163257b04764f765cde8590fc865956f37438932989b54a4e7b0908cc070bb9","md5":"2e30e223e11c93fedbc3a1d8fa2decc6","sha256":"1ba837b941b7e1f3175f2751f1a7fd050106b57a577a76f87846457d25dd0a85"},"downloads":-1,"filename":"influxdb_client-1.6.0.tar.gz","has_sig":false,"md5_digest":"2e30e223e11c93fedbc3a1d8fa2decc6","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":200214,"upload_time":"2020-04-17T06:13:47","upload_time_iso_8601":"2020-04-17T06:13:47.894632Z","url":"https://files.pythonhosted.org/packages/41/63/257b04764f765cde8590fc865956f37438932989b54a4e7b0908cc070bb9/influxdb_client-1.6.0.tar.gz","yanked":false,"yanked_reason":null}],"1.7.0":[{"comment_text":"","digests":{"blake2b_256":"db12ccf0940e7081560a6d677bdb7488312dbda5d0b44ba8016a7a16248f3a10","md5":"aad62c964b795c8c7fb0d677b1da0312","sha256":"1cae3722c15bdded21674703b9f87e7488b655cd1cc2e0d17ad1e12c8e1fcafc"},"downloads":-1,"filename":"influxdb_client-1.7.0-py3-none-any.whl","has_sig":false,"md5_digest":"aad62c964b795c8c7fb0d677b1da0312","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":487579,"upload_time":"2020-05-15T06:13:38","upload_time_iso_8601":"2020-05-15T06:13:38.271960Z","url":"https://files.pythonhosted.org/packages/db/12/ccf0940e7081560a6d677bdb7488312dbda5d0b44ba8016a7a16248f3a10/influxdb_client-1.7.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c06916c075cd52bbeda55b39ef367fbc49daf2e3fbd1da82ebbf7d3c66046e61","md5":"3a38d8a57e416adae8459472c453ae9f","sha256":"1767e2befaee1dc70b7e88ccc2fda7f34d57508899a49c144f57f0a1cd79a036"},"downloads":-1,"filename":"influxdb_client-1.7.0.tar.gz","has_sig":false,"md5_digest":"3a38d8a57e416adae8459472c453ae9f","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":202365,"upload_time":"2020-05-15T06:13:40","upload_time_iso_8601":"2020-05-15T06:13:40.818777Z","url":"https://files.pythonhosted.org/packages/c0/69/16c075cd52bbeda55b39ef367fbc49daf2e3fbd1da82ebbf7d3c66046e61/influxdb_client-1.7.0.tar.gz","yanked":false,"yanked_reason":null}],"1.8.0":[{"comment_text":"","digests":{"blake2b_256":"b33a96af7cb87bc9b5494695e842c1f232d36a87c72fc2503af6094a6ab97dca","md5":"53d818fe459fea6db67d785f1dfa4735","sha256":"e5393a9caeeee6f9718aa3505eaf212199cab0567b693187823f8e3e97545e3a"},"downloads":-1,"filename":"influxdb_client-1.8.0-py3-none-any.whl","has_sig":false,"md5_digest":"53d818fe459fea6db67d785f1dfa4735","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":490280,"upload_time":"2020-06-19T07:23:12","upload_time_iso_8601":"2020-06-19T07:23:12.951249Z","url":"https://files.pythonhosted.org/packages/b3/3a/96af7cb87bc9b5494695e842c1f232d36a87c72fc2503af6094a6ab97dca/influxdb_client-1.8.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6bc7e041992533b8c8ad59bcdda740b5552b8c12b864a8478178e88e6191bfcf","md5":"db199290f9093449a176331e7992d097","sha256":"ec2dd4911ada30ba2c88a1e2b7f1b24ec0e70934497e4b99b3ede6e6a8ed7e97"},"downloads":-1,"filename":"influxdb_client-1.8.0.tar.gz","has_sig":false,"md5_digest":"db199290f9093449a176331e7992d097","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":204454,"upload_time":"2020-06-19T07:23:15","upload_time_iso_8601":"2020-06-19T07:23:15.257290Z","url":"https://files.pythonhosted.org/packages/6b/c7/e041992533b8c8ad59bcdda740b5552b8c12b864a8478178e88e6191bfcf/influxdb_client-1.8.0.tar.gz","yanked":false,"yanked_reason":null}],"1.9.0":[{"comment_text":"","digests":{"blake2b_256":"9b489559f04ee06a275ae03ad5a51cf127c3398e5bccfdb02e7b42ea27146bd5","md5":"686524720186a2c5cac005a980fb2c6c","sha256":"f4860579b0012c42610d18e564c1773368f8d64fb55e4d9bc717a8f9bf17f5cd"},"downloads":-1,"filename":"influxdb_client-1.9.0-py3-none-any.whl","has_sig":false,"md5_digest":"686524720186a2c5cac005a980fb2c6c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":497656,"upload_time":"2020-07-17T07:33:17","upload_time_iso_8601":"2020-07-17T07:33:17.320261Z","url":"https://files.pythonhosted.org/packages/9b/48/9559f04ee06a275ae03ad5a51cf127c3398e5bccfdb02e7b42ea27146bd5/influxdb_client-1.9.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"82d54b351cc68164b2ac6adb747709b285eb045866fce9afb69d45d367e0f482","md5":"0c1770f50861b47d0e48d486082ff1f4","sha256":"602c67eec6e5725d4ee2e3c6baf65076acf27ac1b7780141dc23433f3929303c"},"downloads":-1,"filename":"influxdb_client-1.9.0.tar.gz","has_sig":false,"md5_digest":"0c1770f50861b47d0e48d486082ff1f4","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":207646,"upload_time":"2020-07-17T07:33:20","upload_time_iso_8601":"2020-07-17T07:33:20.458803Z","url":"https://files.pythonhosted.org/packages/82/d5/4b351cc68164b2ac6adb747709b285eb045866fce9afb69d45d367e0f482/influxdb_client-1.9.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"9fada529bf2a6f2a83a60c4bde28144f3dbc4feb8104adb168ea15c5ea7b3d4c","md5":"38d5a1844dbeda7cd0001ea6eec03c42","sha256":"e4c1ac9c9925c4693d63e988e22f65d2ddc1867f8910813b7f4721633175f2a0"},"downloads":-1,"filename":"influxdb_client-1.44.0-py3-none-any.whl","has_sig":false,"md5_digest":"38d5a1844dbeda7cd0001ea6eec03c42","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":745421,"upload_time":"2024-06-24T09:48:24","upload_time_iso_8601":"2024-06-24T09:48:24.880002Z","url":"https://files.pythonhosted.org/packages/9f/ad/a529bf2a6f2a83a60c4bde28144f3dbc4feb8104adb168ea15c5ea7b3d4c/influxdb_client-1.44.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9ea1ab4f2a3b90334c2e7cb795fbc85483a30134078b1bad0a165a34cb827aa7","md5":"2b684197a0015738d0afcf45547cafe7","sha256":"da9bc0cc49de4a0ac844d833c1efa65227ec5a2254e63cdbe07b5d532c0c37f8"},"downloads":-1,"filename":"influxdb_client-1.44.0.tar.gz","has_sig":false,"md5_digest":"2b684197a0015738d0afcf45547cafe7","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":383285,"upload_time":"2024-06-24T09:48:28","upload_time_iso_8601":"2024-06-24T09:48:28.669949Z","url":"https://files.pythonhosted.org/packages/9e/a1/ab4f2a3b90334c2e7cb795fbc85483a30134078b1bad0a165a34cb827aa7/influxdb_client-1.44.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
