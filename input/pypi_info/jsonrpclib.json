{"info":{"author":"Josh Marshall","author_email":"catchjosh@gmail.com","bugtrack_url":null,"classifiers":[],"description":"[![Build Status](https://circleci.com/gh/joshmarshall/jsonrpclib.svg?style=svg)](https://circleci.com/gh/joshmarshall/jsonrpclib)\n\n\nJSONRPClib\n==========\nThis library is an implementation of the JSON-RPC specification.\nIt supports both the original 1.0 specification, as well as the \nnew (proposed) 2.0 spec, which includes batch submission, keyword\narguments, etc.\n\nIt is licensed under the Apache License, Version 2.0\n(http://www.apache.org/licenses/LICENSE-2.0.html).\n\nCommunication\n-------------\nFeel free to send any questions, comments, or patches to our Google Group \nmailing list (you'll need to join to send a message): \nhttp://groups.google.com/group/jsonrpclib\n\nSummary\n-------\nThis library implements the JSON-RPC 2.0 proposed specification in pure Python. \nIt is designed to be as compatible with the syntax of xmlrpclib as possible \n(it extends where possible), so that projects using xmlrpclib could easily be \nmodified to use JSON and experiment with the differences.\n\nIt is backwards-compatible with the 1.0 specification, and supports all of the \nnew proposed features of 2.0, including:\n\n* Batch submission (via MultiCall)\n* Keyword arguments\n* Notifications (both in a batch and 'normal')\n* Class translation using the 'jsonclass' key.\n\nI've added a \"SimpleJSONRPCServer\", which is intended to emulate the \n\"SimpleXMLRPCServer\" from the default Python distribution.\n\nRequirements\n------------\nIt supports cjson and simplejson, and looks for the parsers in that order \n(searching first for cjson, then for the \"built-in\" simplejson as json in 2.6+, \nand then the simplejson external library). One of these must be installed to \nuse this library, although if you have a standard distribution of 2.6+, you \nshould already have one. Keep in mind that cjson is supposed to be the \nquickest, I believe, so if you are going for full-on optimization you may \nwant to pick it up.\n\nInstallation\n------------\nYou can install this from PyPI with one of the following commands (sudo\nmay be required):\n\n\teasy_install jsonrpclib\n\tpip install jsonrpclib\n\nAlternatively, you can download the source from the github repository\nat http://github.com/joshmarshall/jsonrpclib and manually install it\nwith the following commands:\n\n\tgit clone git://github.com/joshmarshall/jsonrpclib.git\n\tcd jsonrpclib\n\tpython setup.py install\n\nClient Usage\n------------\n\nThis is (obviously) taken from a console session.\n\n\t>>> import jsonrpclib\n\t>>> server = jsonrpclib.Server('http://localhost:8080')\n\t>>> server.add(5,6)\n\t11\n\t>>> print jsonrpclib.history.request\n\t{\"jsonrpc\": \"2.0\", \"params\": [5, 6], \"id\": \"gb3c9g37\", \"method\": \"add\"}\n\t>>> print jsonrpclib.history.response\n\t{'jsonrpc': '2.0', 'result': 11, 'id': 'gb3c9g37'}\n\t>>> server.add(x=5, y=10)\n\t15\n\t>>> server._notify.add(5,6)\n\t# No result returned...\n\t>>> batch = jsonrpclib.MultiCall(server)\n\t>>> batch.add(5, 6)\n\t>>> batch.ping({'key':'value'})\n\t>>> batch._notify.add(4, 30)\n\t>>> results = batch()\n\t>>> for result in results:\n\t>>> ... print result\n\t11\n\t{'key': 'value'}\n\t# Note that there are only two responses -- this is according to spec.\n\nIf you need 1.0 functionality, there are a bunch of places you can pass that \nin, although the best is just to change the value on \njsonrpclib.config.version:\n\n\t>>> import jsonrpclib\n\t>>> jsonrpclib.config.version\n\t2.0\n\t>>> jsonrpclib.config.version = 1.0\n\t>>> server = jsonrpclib.Server('http://localhost:8080')\n\t>>> server.add(7, 10)\n\t17\n\t>>> print jsonrpclib..history.request\n\t{\"params\": [7, 10], \"id\": \"thes7tl2\", \"method\": \"add\"}\n\t>>> print jsonrpclib.history.response\n\t{'id': 'thes7tl2', 'result': 17, 'error': None}\n\t>>> \n\nThe equivalent loads and dumps functions also exist, although with minor \nmodifications. The dumps arguments are almost identical, but it adds three \narguments: rpcid for the 'id' key, version to specify the JSON-RPC \ncompatibility, and notify if it's a request that you want to be a \nnotification. \n\nAdditionally, the loads method does not return the params and method like \nxmlrpclib, but instead a.) parses for errors, raising ProtocolErrors, and \nb.) returns the entire structure of the request / response for manual parsing.\n\nSimpleJSONRPCServer\n-------------------\nThis is identical in usage (or should be) to the SimpleXMLRPCServer in the default Python install. Some of the differences in features are that it obviously supports notification, batch calls, class translation (if left on), etc. Note: The import line is slightly different from the regular SimpleXMLRPCServer, since the SimpleJSONRPCServer is distributed within the jsonrpclib library.\n\n\tfrom jsonrpclib.SimpleJSONRPCServer import SimpleJSONRPCServer\n\n\tserver = SimpleJSONRPCServer(('localhost', 8080))\n\tserver.register_function(pow)\n\tserver.register_function(lambda x,y: x+y, 'add')\n\tserver.register_function(lambda x: x, 'ping')\n\tserver.serve_forever()\n\nClass Translation\n-----------------\nI've recently added \"automatic\" class translation support, although it is \nturned off by default. This can be devastatingly slow if improperly used, so \nthe following is just a short list of things to keep in mind when using it.\n\n* Keep It (the object) Simple Stupid. (for exceptions, keep reading.)\n* Do not require init params (for exceptions, keep reading)\n* Getter properties without setters could be dangerous (read: not tested)\n\nIf any of the above are issues, use the _serialize method. (see usage below)\nThe server and client must BOTH have use_jsonclass configuration item on and \nthey must both have access to the same libraries used by the objects for \nthis to work.\n\nIf you have excessively nested arguments, it would be better to turn off the \ntranslation and manually invoke it on specific objects using \njsonrpclib.jsonclass.dump / jsonrpclib.jsonclass.load (since the default \nbehavior recursively goes through attributes and lists / dicts / tuples).\n\n[test_obj.py]\n\n\t# This object is /very/ simple, and the system will look through the \n\t# attributes and serialize what it can.\n\tclass TestObj(object):\n\t    foo = 'bar'\n\n\t# This object requires __init__ params, so it uses the _serialize method\n\t# and returns a tuple of init params and attribute values (the init params\n\t# can be a dict or a list, but the attribute values must be a dict.)\n\tclass TestSerial(object):\n\t    foo = 'bar'\n\t    def __init__(self, *args):\n\t        self.args = args\n\t    def _serialize(self):\n\t        return (self.args, {'foo':self.foo,})\n\n[usage]\n\n\timport jsonrpclib\n\timport test_obj\n\n\tjsonrpclib.config.use_jsonclass = True\n\n\ttestobj1 = test_obj.TestObj()\n\ttestobj2 = test_obj.TestSerial()\n\tserver = jsonrpclib.Server('http://localhost:8080')\n\t# The 'ping' just returns whatever is sent\n\tping1 = server.ping(testobj1)\n\tping2 = server.ping(testobj2)\n\tprint jsonrpclib.history.request\n\t# {\"jsonrpc\": \"2.0\", \"params\": [{\"__jsonclass__\": [\"test_obj.TestSerial\", [\"foo\"]]}], \"id\": \"a0l976iv\", \"method\": \"ping\"}\n\tprint jsonrpclib.history.result\n\t# {'jsonrpc': '2.0', 'result': <test_obj.TestSerial object at 0x2744590>, 'id': 'a0l976iv'}\n\nTo turn on this behaviour, just set jsonrpclib.config.use_jsonclass to True. \nIf you want to use a different method for serialization, just set \njsonrpclib.config.serialize_method to the method name. Finally, if you are \nusing classes that you have defined in the implementation (as in, not a \nseparate library), you'll need to add those (on BOTH the server and the \nclient) using the jsonrpclib.config.classes.add() method. \n(Examples forthcoming.)\n\nFeedback on this \"feature\" is very, VERY much appreciated.\n\nWhy JSON-RPC?\n-------------\nIn my opinion, there are several reasons to choose JSON over XML for RPC:\n\n* Much simpler to read (I suppose this is opinion, but I know I'm right. :)\n* Size / Bandwidth - Main reason, a JSON object representation is just much smaller.\n* Parsing - JSON should be much quicker to parse than XML.\n* Easy class passing with jsonclass (when enabled)\n\nIn the interest of being fair, there are also a few reasons to choose XML \nover JSON:\n\n* Your server doesn't do JSON (rather obvious)\n* Wider XML-RPC support across APIs (can we change this? :))\n* Libraries are more established, i.e. more stable (Let's change this too.)\n\nTESTS\n-----\nI've dropped almost-verbatim tests from the JSON-RPC spec 2.0 page.\nYou can run it with:\n\n    pip install -r dev-requirements.txt\n    nosetests tests.py\n\nTODO\n----\n* Use HTTP error codes on SimpleJSONRPCServer\n* Test, test, test and optimize\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/joshmarshall/jsonrpclib","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"jsonrpclib","package_url":"https://pypi.org/project/jsonrpclib/","platform":"","project_url":"https://pypi.org/project/jsonrpclib/","project_urls":{"Homepage":"https://github.com/joshmarshall/jsonrpclib"},"provides_extra":null,"release_url":"https://pypi.org/project/jsonrpclib/0.2.1/","requires_dist":null,"requires_python":">=3.5","summary":"Implementation of the JSON-RPC v2.0 specification (backwards-compatible) as a client library.","version":"0.2.1","yanked":false,"yanked_reason":null},"last_serial":9933787,"releases":{"0.1.3":[{"comment_text":"","digests":{"blake2b_256":"4f84d07e0a8e0ff14388e864a3e5fa1e0c03766c754d480d84f875604dc8c379","md5":"b2cc8b86695d5e7c395c9d6908331ecd","sha256":"a594e702c35408ae5540086ab5bdea284fb27d09520898c381c5bbdbfceffbba"},"downloads":-1,"filename":"jsonrpclib-0.1.3.tar.gz","has_sig":false,"md5_digest":"b2cc8b86695d5e7c395c9d6908331ecd","packagetype":"sdist","python_version":"source","requires_python":null,"size":12468,"upload_time":"2011-02-26T21:38:05","upload_time_iso_8601":"2011-02-26T21:38:05.622093Z","url":"https://files.pythonhosted.org/packages/4f/84/d07e0a8e0ff14388e864a3e5fa1e0c03766c754d480d84f875604dc8c379/jsonrpclib-0.1.3.tar.gz","yanked":false,"yanked_reason":null}],"0.1.4":[{"comment_text":"","digests":{"blake2b_256":"5f2b4e4e3f87c73b04e948e1c3eaeaac2284349361de5da866db3d07fa711b24","md5":"a80e95fd1f9437736e2ae894a877d7c8","sha256":"c8fcb11419451c0e4124529892382563c8ebe4565ea2e7a2eef28f8cee852a9c"},"downloads":-1,"filename":"jsonrpclib-0.1.4.tar.gz","has_sig":false,"md5_digest":"a80e95fd1f9437736e2ae894a877d7c8","packagetype":"sdist","python_version":"source","requires_python":null,"size":13073,"upload_time":"2015-10-08T21:01:56","upload_time_iso_8601":"2015-10-08T21:01:56.151830Z","url":"https://files.pythonhosted.org/packages/5f/2b/4e4e3f87c73b04e948e1c3eaeaac2284349361de5da866db3d07fa711b24/jsonrpclib-0.1.4.tar.gz","yanked":false,"yanked_reason":null}],"0.1.5":[],"0.1.6":[{"comment_text":"","digests":{"blake2b_256":"2fa7182c52f34b65d920ad9cd38db36ca8fa2bae44b1f3494e320fa3fdd5536b","md5":"93382cff21aca9074896c9dc1c4ec73d","sha256":"733dad5da783a6ff959927d8c77346273c3b377db43cbdae0bd833b64584cf3a"},"downloads":-1,"filename":"jsonrpclib-0.1.6.tar.gz","has_sig":false,"md5_digest":"93382cff21aca9074896c9dc1c4ec73d","packagetype":"sdist","python_version":"source","requires_python":null,"size":10004,"upload_time":"2015-10-09T02:09:27","upload_time_iso_8601":"2015-10-09T02:09:27.516019Z","url":"https://files.pythonhosted.org/packages/2f/a7/182c52f34b65d920ad9cd38db36ca8fa2bae44b1f3494e320fa3fdd5536b/jsonrpclib-0.1.6.tar.gz","yanked":false,"yanked_reason":null}],"0.1.7":[{"comment_text":"","digests":{"blake2b_256":"a90a69b6b794d7b086793683743df2f6d0a4fcf97613a95a39cfc74b78f2adb7","md5":"fb67bd327fbd8b53e62ecbc1c4c6b97d","sha256":"7f50239d53b5e95b94455d5e1adae70592b5b71f0e960d3bbbfbb125788e6f0b"},"downloads":-1,"filename":"jsonrpclib-0.1.7.tar.gz","has_sig":false,"md5_digest":"fb67bd327fbd8b53e62ecbc1c4c6b97d","packagetype":"sdist","python_version":"source","requires_python":null,"size":13979,"upload_time":"2015-12-07T06:58:11","upload_time_iso_8601":"2015-12-07T06:58:11.634883Z","url":"https://files.pythonhosted.org/packages/a9/0a/69b6b794d7b086793683743df2f6d0a4fcf97613a95a39cfc74b78f2adb7/jsonrpclib-0.1.7.tar.gz","yanked":false,"yanked_reason":null}],"0.2.1":[{"comment_text":"","digests":{"blake2b_256":"2a7fe303c32b29ff1ad93b0c106ba148a49006a624e7c8ce65b73f2ff14a4493","md5":"7693ef30b111b120eeefc130a7c917be","sha256":"5a571d3e46fe4f2fe7e607e1732b8a9ad6b7255f53bfbf465822fe1100baf538"},"downloads":-1,"filename":"jsonrpclib-0.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"7693ef30b111b120eeefc130a7c917be","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":15955,"upload_time":"2021-03-31T08:33:55","upload_time_iso_8601":"2021-03-31T08:33:55.617290Z","url":"https://files.pythonhosted.org/packages/2a/7f/e303c32b29ff1ad93b0c106ba148a49006a624e7c8ce65b73f2ff14a4493/jsonrpclib-0.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"55031b8b9f4514a7904c2511448cb04523f3123b31c6cd6ece968dacc8ea100d","md5":"827d1441ac8304647e7c758cc6253b7d","sha256":"8138078fd0f2a5b1df7925e4fa0b82a7c17a4be75bf5634af20463172f44f5c0"},"downloads":-1,"filename":"jsonrpclib-0.2.1.tar.gz","has_sig":false,"md5_digest":"827d1441ac8304647e7c758cc6253b7d","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":18096,"upload_time":"2021-03-31T08:33:57","upload_time_iso_8601":"2021-03-31T08:33:57.008128Z","url":"https://files.pythonhosted.org/packages/55/03/1b8b9f4514a7904c2511448cb04523f3123b31c6cd6ece968dacc8ea100d/jsonrpclib-0.2.1.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"2a7fe303c32b29ff1ad93b0c106ba148a49006a624e7c8ce65b73f2ff14a4493","md5":"7693ef30b111b120eeefc130a7c917be","sha256":"5a571d3e46fe4f2fe7e607e1732b8a9ad6b7255f53bfbf465822fe1100baf538"},"downloads":-1,"filename":"jsonrpclib-0.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"7693ef30b111b120eeefc130a7c917be","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":15955,"upload_time":"2021-03-31T08:33:55","upload_time_iso_8601":"2021-03-31T08:33:55.617290Z","url":"https://files.pythonhosted.org/packages/2a/7f/e303c32b29ff1ad93b0c106ba148a49006a624e7c8ce65b73f2ff14a4493/jsonrpclib-0.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"55031b8b9f4514a7904c2511448cb04523f3123b31c6cd6ece968dacc8ea100d","md5":"827d1441ac8304647e7c758cc6253b7d","sha256":"8138078fd0f2a5b1df7925e4fa0b82a7c17a4be75bf5634af20463172f44f5c0"},"downloads":-1,"filename":"jsonrpclib-0.2.1.tar.gz","has_sig":false,"md5_digest":"827d1441ac8304647e7c758cc6253b7d","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":18096,"upload_time":"2021-03-31T08:33:57","upload_time_iso_8601":"2021-03-31T08:33:57.008128Z","url":"https://files.pythonhosted.org/packages/55/03/1b8b9f4514a7904c2511448cb04523f3123b31c6cd6ece968dacc8ea100d/jsonrpclib-0.2.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
