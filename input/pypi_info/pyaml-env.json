{"info":{"author":"Maria Karanasou","author_email":"karanasou@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python :: 3"],"description":"[![Downloads](https://static.pepy.tech/personalized-badge/pyaml-env?period=total&units=none&left_color=black&right_color=green&left_text=Downloads)](https://pepy.tech/project/pyaml-env)\n[![Tests and linting](https://github.com/mkaranasou/pyaml_env/actions/workflows/python-app.yml/badge.svg)](https://github.com/mkaranasou/pyaml_env/actions/workflows/python-app.yml)\n[![CodeQL](https://github.com/mkaranasou/pyaml_env/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/mkaranasou/pyaml_env/actions/workflows/codeql-analysis.yml)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Upload Python Package](https://github.com/mkaranasou/pyaml_env/actions/workflows/python-publish.yml/badge.svg)](https://github.com/mkaranasou/pyaml_env/actions/workflows/python-publish.yml)\n\n# Python YAML configuration with environment variables parsing\n\n## TL;DR\nA very small library that parses a yaml configuration file and it resolves the environment variables, \nso that no secrets are kept in text.\n\n### Install\n```bash\npip install pyaml-env\n```\n### How to use:\n\n--- \n\n#### Basic Usage: Environment variable parsing\nThis yaml file:\n```yaml\ndatabase:\n  name: test_db\n  username: !ENV ${DB_USER}\n  password: !ENV ${DB_PASS}\n  url: !ENV 'http://${DB_BASE_URL}:${DB_PORT}'\n```\ngiven that we've set these:\n```bash\nexport $DB_USER=super_secret_user\nexport $DB_PASS=extra_super_secret_password\nexport $DB_BASE_URL=localhost\nexport $DB_PORT=5432\n```\n\nbecomes this:\n```python\nfrom pyaml_env import parse_config\nconfig = parse_config('path/to/config.yaml')\n\nprint(config)\n# outputs the following, with the environment variables resolved\n{\n    'database': {\n        'name': 'test_db',\n        'username': 'super_secret_user',\n        'password': 'extra_super_secret_password',\n        'url': 'http://localhost:5432',\n    }\n}\n\n```\n\n\n---\n\n#### Attribute Access using `BaseConfig`\nWhich can also become this:\n```python\nfrom pyaml_env import parse_config, BaseConfig\nconfig = BaseConfig(parse_config('path/to/config.yaml'))\n# you can then access the config properties as atrributes\n# I'll explain why this might be useful in a bit.\nprint(config.database.url)\n```\n---\n\n\n#### Default Values with `:`\nYou can also set default values for when the environment variables are not set for some reason,\nusing the `default_sep` kwarg (**which is `:` by default**) like this:\n```yaml\ndatabse:\n  name: test_db\n  username: !ENV ${DB_USER:paws}\n  password: !ENV ${DB_PASS:meaw2}\n  url: !ENV 'http://${DB_BASE_URL:straight_to_production}:${DB_PORT}'\n```\n\nAnd if no environment variables are found then we get:\n```python\nfrom pyaml_env import parse_config\nconfig = parse_config('path/to/config.yaml')\n\nprint(config)\n{\n    'database': {\n        'name': 'test_db',\n        'username': 'paws',\n        'password': 'meaw2',\n        'url': 'http://straight_to_production:N/A',\n    }\n}\n```\n**NOTE 0**: Special characters like `*`, `{` etc. are not currently supported as separators. Let me know if you'd like them handled also.\n\n**NOTE 1**: If you set `tag` to `None`, then, the current behavior is that environment variables in all places in the yaml will be resolved (if set).\n\n---\n#### Datatype parsing with yaml's tag:yaml.org,2002:<datatype>\n\n```python\n# because this is not allowed:\n# data1: !TAG !!float ${ENV_TAG2:27017}\n# use tag:yaml.org,2002:datatype to convert value:\ntest_data = '''\n        data0: !TAG ${ENV_TAG1}\n        data1: !TAG tag:yaml.org,2002:float ${ENV_TAG2:27017}\n        data2: !!float 1024\n        data3: !TAG ${ENV_TAG2:some_value}\n        data4: !TAG tag:yaml.org,2002:bool ${ENV_TAG2:false}\n        '''\n```\nWill become:\n```python\nos.environ['ENV_TAG1'] = \"1024\"\nconfig = parse_config(data=test_data, tag='!TAG')\nprint(config)\n{\n    'data0': '1024', \n    'data1': 27017.0, \n    'data2': 1024.0, \n    'data3': 'some_value', \n    'data4': False\n}\n```\n\n[reference in yaml code](https://github.com/yaml/pyyaml/blob/master/lib/yaml/parser.py#L78)\n\n---\n#### If nothing matches: `N/A` as `default_value`:\n\nIf no defaults are found and no environment variables, the `default_value` (**which is `N/A` by default**)  is used:\n```python\n{\n    'database': {\n        'name': 'test_db',\n        'username': 'N/A',\n        'password': 'N/A',\n        'url': 'http://N/A:N/A',\n    }\n}\n```\nWhich, of course, means something went wrong and we need to set the correct environment variables.\nIf you want this process to fail if a *default value* is not found, you can set the `raise_if_na` flag to `True`.\nFor example:\n\n```yaml\ntest1:\n    data0: !TEST ${ENV_TAG1:has_default}/somethingelse/${ENV_TAG2:also_has_default}\n    data1:  !TEST ${ENV_TAG2}\n```\nwill raise a `ValueError` because `data1:  !TEST ${ENV_TAG2}` there is no default value for `ENV_TAG2` in this line.\n\n--- \n\n\n#### Using a different loader:\n\nThe default yaml loader is `yaml.SafeLoader`. If you need to work with serialized Python objects, \nyou can specify a different loader.\n\nSo given a class:\n```python\nclass OtherLoadTest:\n    def __init__(self):\n        self.data0 = 'it works!'\n        self.data1 = 'this works too!'\n\n```\n\nWhich has become a yaml output like the following using `yaml.dump(OtherLoadTest())`:\n```yaml\n!!python/object:__main__.OtherLoadTest\ndata0: it works!\ndata1: this works too!\n```\n\nYou can use `parse_config` to load the object like this:\n```python\nimport yaml\nfrom pyaml_env import parse_config\n\nother_load_test = parse_config(path='path/to/config.yaml', loader=yaml.UnsafeLoader)\nprint(other_load_test)\n<__main__.OtherLoadTest object at 0x7fc38ccd5470>\n```\n---\n\n## Long story: Load a YAML configuration file and resolve any environment variables\n\n![](https://cdn-images-1.medium.com/max/11700/1*4s_GrxE5sn2p2PNd8fS-6A.jpeg)\n\nIf you’ve worked with Python projects, you’ve probably have stumbled across the many ways to provide configuration. I am not going to go through all the ways here, but a few of them are:\n\n* using .ini files\n\n* using a python class\n\n* using .env files\n\n* using JSON or XML files\n\n* using a yaml file\n\nAnd so on. I’ve put some useful links about the different ways below, in case you are interested in digging deeper.\n\nMy preference is working with yaml configuration because I usually find very handy and easy to use and I really like that yaml files are also used in e.g. docker-compose configuration so it is something most are familiar with.\n\nFor yaml parsing I use the [PyYAML](https://pyyaml.org/wiki/PyYAMLDocumentation) Python library.\n\nIn this article we’ll talk about the yaml file case and more specifically what you can do to **avoid keeping your secrets, e.g. passwords, hosts, usernames etc, directly on it**.\n\nLet’s say we have a very simple example of a yaml file configuration:\n\n    database:\n     name: database_name\n     user: me\n     password: very_secret_and_complex\n     host: localhost\n     port: 5432\n\n    ws:\n     user: username\n     password: very_secret_and_complex_too\n     host: localhost\n\nWhen you come to a point where you need to deploy your project, it is not really safe to have passwords and sensitive data in a plain text configuration file lying around on your production server. That’s where [**environment variables](https://medium.com/dataseries/hiding-secret-info-in-python-using-environment-variables-a2bab182eea) **come in handy. So the goal here is to be able to easily replace the very_secret_and_complex password with input from an environment variable, e.g. DB_PASS, so that this variable only exists when you set it and run your program instead of it being hardcoded somewhere.\n\nFor PyYAML to be able to resolve environment variables, we need three main things:\n\n* A regex pattern for the environment variable identification e.g. pattern = re.compile(‘.*?\\${(\\w+)}.*?’)\n\n* A tag that will signify that there’s an environment variable (or more) to be parsed, e.g. !ENV.\n\n* And a function that the loader will use to resolve the environment variables\n\n```python\ndef constructor_env_variables(loader, node):\n    \"\"\"\n    Extracts the environment variable from the node's value\n    :param yaml.Loader loader: the yaml loader\n    :param node: the current node in the yaml\n    :return: the parsed string that contains the value of the environment\n    variable\n    \"\"\"\n    value = loader.construct_scalar(node)\n    match = pattern.findall(value)\n    if match:\n        full_value = value\n        for g in match:\n            full_value = full_value.replace(\n                f'${{{g}}}', os.environ.get(g, g)\n            )\n        return full_value\n    return value\n```\n\nExample of a YAML configuration with environment variables:\n\n    database:\n     name: database_name\n     user: !ENV ${DB_USER}\n     password: !ENV ${DB_PASS}\n     host: !ENV ${DB_HOST}\n     port: 5432\n\n    ws:\n     user: !ENV ${WS_USER}\n     password: !ENV ${WS_PASS}\n     host: !ENV ‘[https://${CURR_ENV}.ws.com.local'](https://${CURR_ENV}.ws.com.local')\n\nThis can also work **with more than one environment variables** declared in the same line for the same configuration parameter like this:\n\n    ws:\n     user: !ENV ${WS_USER}\n     password: !ENV ${WS_PASS}\n     host: !ENV '[https://${CURR_ENV}.ws.com.](https://${CURR_ENV}.ws.com.local')[${MODE}](https://${CURR_ENV}.ws.com.local')'  # multiple env var\n\nAnd how to use this:\n\nFirst set the environment variables. For example, for the DB_PASS :\n\n    export DB_PASS=very_secret_and_complex\n\nOr even better, so that the password is not echoed in the terminal:\n\n    read -s ‘Database password: ‘ db_pass\n    export DB_PASS=$db_pass\n\n```python\n\n# To run this:\n# export DB_PASS=very_secret_and_complex \n# python use_env_variables_in_config_example.py -c /path/to/yaml\n# do stuff with conf, e.g. access the database password like this: conf['database']['DB_PASS']\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser(description='My awesome script')\n    parser.add_argument(\n        \"-c\", \"--conf\", action=\"store\", dest=\"conf_file\",\n        help=\"Path to config file\"\n    )\n    args = parser.parse_args()\n    conf = parse_config(path=args.conf_file)\n```\n\n\nThen you can run the above script:\n```bash\npython use_env_variables_in_config_example.py -c /path/to/yaml\n```\n\nAnd in your code, do stuff with conf, e.g. access the database password like this: `conf['database']['DB_PASS']`\n\nI hope this was helpful. Any thoughts, questions, corrections and suggestions are very welcome :)\n\n## Useful links\n[**The Many Faces and Files of Python Configs**\n*As we cling harder and harder to Dockerfiles, Kubernetes, or any modern preconfigured app environment, our dependency…*hackersandslackers.com](https://hackersandslackers.com/simplify-your-python-projects-configuration/)\n[**4 Ways to manage the configuration in Python**\n*I’m not a native speaker. Sorry for my english. Please understand.*hackernoon.com](https://hackernoon.com/4-ways-to-manage-the-configuration-in-python-4623049e841b)\n[**Python configuration files**\n*A common need when writing an application is loading and saving configuration values in a human-readable text format…*www.devdungeon.com](https://www.devdungeon.com/content/python-configuration-files)\n[**Configuration files in Python**\n*Most interesting programs need some kind of configuration: Content Management Systems like WordPress blogs, WikiMedia…*martin-thoma.com](https://martin-thoma.com/configuration-files-in-python/)\n\n\n\n<a href=\"https://www.buymeacoffee.com/mkaranasou\" target=\"_blank\" style=\"background: #40DCA5;\"><img src=\"https://cdn.buymeacoffee.com/buttons/default-orange.png\" alt=\"Buy Me A Coffee\" height=\"41\" width=\"174\"></a>\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/mkaranasou/pyaml_env","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"pyaml-env","package_url":"https://pypi.org/project/pyaml-env/","platform":null,"project_url":"https://pypi.org/project/pyaml-env/","project_urls":{"Bug Tracker":"https://github.com/mkaranasou/pyaml_env/issues","Homepage":"https://github.com/mkaranasou/pyaml_env"},"provides_extra":null,"release_url":"https://pypi.org/project/pyaml-env/1.2.1/","requires_dist":["PyYAML (<=7.0,>=5.0)","pytest ; extra == 'test'"],"requires_python":">=3.6","summary":"Provides yaml file parsing with environment variable resolution","version":"1.2.1","yanked":false,"yanked_reason":null},"last_serial":16006018,"releases":{"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"d013eb3a2ed9b340ffe61195d9105a58b237f36c8156aa442aa3a7b474d574ef","md5":"5df8350cdfc69dc4a2511471e6d066ae","sha256":"08612fa20c027e935586a20d3531e436d14190609ba19419df5acae40daddfd7"},"downloads":-1,"filename":"pyaml_env-1.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"5df8350cdfc69dc4a2511471e6d066ae","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":7293,"upload_time":"2021-04-27T12:39:28","upload_time_iso_8601":"2021-04-27T12:39:28.317933Z","url":"https://files.pythonhosted.org/packages/d0/13/eb3a2ed9b340ffe61195d9105a58b237f36c8156aa442aa3a7b474d574ef/pyaml_env-1.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"98fedb298ce64d2932ad2a4b07eb2703109067a57c82d20e613c32175b05ad9d","md5":"6c6808765f3e4d9077829a915b112378","sha256":"10090fd7f49735e16d360fb47642982d7aae786ea226fe161b529df5e6899d06"},"downloads":-1,"filename":"pyaml_env-1.0.0.tar.gz","has_sig":false,"md5_digest":"6c6808765f3e4d9077829a915b112378","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":7284,"upload_time":"2021-04-27T12:39:29","upload_time_iso_8601":"2021-04-27T12:39:29.789639Z","url":"https://files.pythonhosted.org/packages/98/fe/db298ce64d2932ad2a4b07eb2703109067a57c82d20e613c32175b05ad9d/pyaml_env-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"a811f4c7b8568c4f78b5a5ea0386f617f013ac4d46121e81edb657bdb0bdf340","md5":"d3363e615d49cbf656491c280823e006","sha256":"7c20614c9bbbc41b824500327d75aea218cf1a686a6cd6a183da7a61b683df52"},"downloads":-1,"filename":"pyaml_env-1.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"d3363e615d49cbf656491c280823e006","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":7359,"upload_time":"2021-04-28T15:03:00","upload_time_iso_8601":"2021-04-28T15:03:00.445083Z","url":"https://files.pythonhosted.org/packages/a8/11/f4c7b8568c4f78b5a5ea0386f617f013ac4d46121e81edb657bdb0bdf340/pyaml_env-1.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"39b81894adbd7b8c165180fba5b2d4734b12f57eae868a7421c8f495b39f6440","md5":"3308b390c2b302d9d1d3ab5f1dc0f5ec","sha256":"4a897f4cc8bfc42e0fcc0e8e91f71370637b626cb5ea9da2d9aeddcc91c8d7b4"},"downloads":-1,"filename":"pyaml_env-1.0.1.tar.gz","has_sig":false,"md5_digest":"3308b390c2b302d9d1d3ab5f1dc0f5ec","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":7633,"upload_time":"2021-04-28T15:03:01","upload_time_iso_8601":"2021-04-28T15:03:01.616179Z","url":"https://files.pythonhosted.org/packages/39/b8/1894adbd7b8c165180fba5b2d4734b12f57eae868a7421c8f495b39f6440/pyaml_env-1.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.0.2":[{"comment_text":"","digests":{"blake2b_256":"b43581c91957b1e03c6da464ed0d6681be89225588252d4c842c39e13995c7cd","md5":"6cc491872a917ea26f7fdf777189a1af","sha256":"73a29f00654ae021d213e34a65907a59201e277cb02e74df705ffe25cbe63c45"},"downloads":-1,"filename":"pyaml_env-1.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"6cc491872a917ea26f7fdf777189a1af","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":7376,"upload_time":"2021-04-29T07:15:18","upload_time_iso_8601":"2021-04-29T07:15:18.550428Z","url":"https://files.pythonhosted.org/packages/b4/35/81c91957b1e03c6da464ed0d6681be89225588252d4c842c39e13995c7cd/pyaml_env-1.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1d584e45182b0cf1048cf73f5a7ce50e30c7d83ab970215dff2e5b4a3774c629","md5":"e601a87b08a8157f47db463987898bd0","sha256":"8ba678de058823e46b4e6f6284cfda635bfc4e8a7f02a019001ecda253d10b04"},"downloads":-1,"filename":"pyaml_env-1.0.2.tar.gz","has_sig":false,"md5_digest":"e601a87b08a8157f47db463987898bd0","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":7668,"upload_time":"2021-04-29T07:15:19","upload_time_iso_8601":"2021-04-29T07:15:19.889343Z","url":"https://files.pythonhosted.org/packages/1d/58/4e45182b0cf1048cf73f5a7ce50e30c7d83ab970215dff2e5b4a3774c629/pyaml_env-1.0.2.tar.gz","yanked":false,"yanked_reason":null}],"1.0.3":[{"comment_text":"","digests":{"blake2b_256":"8166507228bf9292ddae9a4e6e795aad1637d83a2e20ed92a7f721ada01ef9f1","md5":"2a1272628f57f91e3593fd7c6a0afcdc","sha256":"4783215cf6608ec1f36e80196cbce0f36a237abba12448a384da3b35f6a31421"},"downloads":-1,"filename":"pyaml_env-1.0.3-py3-none-any.whl","has_sig":false,"md5_digest":"2a1272628f57f91e3593fd7c6a0afcdc","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":7612,"upload_time":"2021-05-01T08:45:42","upload_time_iso_8601":"2021-05-01T08:45:42.878517Z","url":"https://files.pythonhosted.org/packages/81/66/507228bf9292ddae9a4e6e795aad1637d83a2e20ed92a7f721ada01ef9f1/pyaml_env-1.0.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"34526a954d832bee5444ce870ffc46c976310e586cc46adb2dbddf18e7b60d47","md5":"0fd836bf0158deb3b53fd3019214969e","sha256":"01b28210520ffe615c871da4406475f92f7a8dd26dbd8d4a14bbdf95c03f33d7"},"downloads":-1,"filename":"pyaml_env-1.0.3.tar.gz","has_sig":false,"md5_digest":"0fd836bf0158deb3b53fd3019214969e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":7963,"upload_time":"2021-05-01T08:45:44","upload_time_iso_8601":"2021-05-01T08:45:44.227499Z","url":"https://files.pythonhosted.org/packages/34/52/6a954d832bee5444ce870ffc46c976310e586cc46adb2dbddf18e7b60d47/pyaml_env-1.0.3.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"158a55bd81b72b34294126e43f694aaf6d09ab3a3ded898055f496a02c12547c","md5":"9e712efebe25d3d93979cbf3ce0bffd4","sha256":"1397ef5a71eb2b3556079adce2b5254f66914cc3c4f60e7b103dc8ba441beb39"},"downloads":-1,"filename":"pyaml_env-1.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"9e712efebe25d3d93979cbf3ce0bffd4","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":7926,"upload_time":"2021-05-04T11:34:31","upload_time_iso_8601":"2021-05-04T11:34:31.956584Z","url":"https://files.pythonhosted.org/packages/15/8a/55bd81b72b34294126e43f694aaf6d09ab3a3ded898055f496a02c12547c/pyaml_env-1.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a8dfe6838d8282145eb4e23730664f01d431eb25f715b7e10269a46af85ade15","md5":"f60473edbcedc5dcff72c3cd81463f92","sha256":"e1e0add412272afa6472f6340e5d0032480edbc2e17ef15dc735aca5e5261f9c"},"downloads":-1,"filename":"pyaml_env-1.1.0.tar.gz","has_sig":false,"md5_digest":"f60473edbcedc5dcff72c3cd81463f92","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":10169,"upload_time":"2021-05-04T11:34:33","upload_time_iso_8601":"2021-05-04T11:34:33.619931Z","url":"https://files.pythonhosted.org/packages/a8/df/e6838d8282145eb4e23730664f01d431eb25f715b7e10269a46af85ade15/pyaml_env-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"5dc9ebc4c206889b378c79efa076f741235c3fc40f94560059e9f71fdb13a14b","md5":"02352ced45a2acff1c8b41f1a6b5296a","sha256":"d3fe37d7be2e28ca3cf5aa044a533552dd96b861b9b9d737f8f69e5df2fd6c71"},"downloads":-1,"filename":"pyaml_env-1.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"02352ced45a2acff1c8b41f1a6b5296a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":8016,"upload_time":"2021-07-25T07:46:48","upload_time_iso_8601":"2021-07-25T07:46:48.844117Z","url":"https://files.pythonhosted.org/packages/5d/c9/ebc4c206889b378c79efa076f741235c3fc40f94560059e9f71fdb13a14b/pyaml_env-1.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"02513145e80b0c601603ecc1516b5a04ef7b57de6b9593f5d129c49a6a5c09ab","md5":"d593b4e5864ab9951d1454eafaf7e2a9","sha256":"dea4f6c91178a180107a15b6475225d55c1fdd6649f53336a26736c502f61029"},"downloads":-1,"filename":"pyaml_env-1.1.1.tar.gz","has_sig":false,"md5_digest":"d593b4e5864ab9951d1454eafaf7e2a9","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":11910,"upload_time":"2021-07-25T07:46:50","upload_time_iso_8601":"2021-07-25T07:46:50.132220Z","url":"https://files.pythonhosted.org/packages/02/51/3145e80b0c601603ecc1516b5a04ef7b57de6b9593f5d129c49a6a5c09ab/pyaml_env-1.1.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.3":[{"comment_text":"","digests":{"blake2b_256":"1703b885f627a696bd44d094cd2de9323f105b23b81e3fc3c6f39a0687866b25","md5":"123fec74bdbc7eaa113c6c7e7691eea7","sha256":"6895fbfdca65d195c66e3cfc7495d3ff973cf8e5474fac38b31467461d2a9de3"},"downloads":-1,"filename":"pyaml_env-1.1.3-py3-none-any.whl","has_sig":false,"md5_digest":"123fec74bdbc7eaa113c6c7e7691eea7","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":8496,"upload_time":"2021-11-19T13:25:48","upload_time_iso_8601":"2021-11-19T13:25:48.351382Z","url":"https://files.pythonhosted.org/packages/17/03/b885f627a696bd44d094cd2de9323f105b23b81e3fc3c6f39a0687866b25/pyaml_env-1.1.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9840037a474c96911e0f10fce1637bc56a7deb8cbe9b17fc352b6475fb6ac36b","md5":"ea2a10f79997b81da85b4c24e3d8eb6e","sha256":"b22179a96be995ef776364d7a22e84aba597d91f13b0cb797150e9ba047ea584"},"downloads":-1,"filename":"pyaml_env-1.1.3.tar.gz","has_sig":false,"md5_digest":"ea2a10f79997b81da85b4c24e3d8eb6e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":11966,"upload_time":"2021-11-19T13:25:49","upload_time_iso_8601":"2021-11-19T13:25:49.617992Z","url":"https://files.pythonhosted.org/packages/98/40/037a474c96911e0f10fce1637bc56a7deb8cbe9b17fc352b6475fb6ac36b/pyaml_env-1.1.3.tar.gz","yanked":false,"yanked_reason":null}],"1.1.4":[{"comment_text":"","digests":{"blake2b_256":"9a504eefd28b8c09dbe607167c0809573e4e8b49e976a97dfe65405d29fe5075","md5":"dea2d15699512b22c37f8f0048e979f4","sha256":"c4503fa715e55c36901fbbb1297154f77b3b5fdf1bf924f3f96631b632eed06b"},"downloads":-1,"filename":"pyaml_env-1.1.4-py3-none-any.whl","has_sig":false,"md5_digest":"dea2d15699512b22c37f8f0048e979f4","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":8545,"upload_time":"2022-01-28T09:21:13","upload_time_iso_8601":"2022-01-28T09:21:13.338204Z","url":"https://files.pythonhosted.org/packages/9a/50/4eefd28b8c09dbe607167c0809573e4e8b49e976a97dfe65405d29fe5075/pyaml_env-1.1.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"671202a27a0aaf60f90eadae9f9a1e840e2f3ea6aa3df93f6d39f296433b88d2","md5":"f69a9d0e1b6b3864bf067be96a6449da","sha256":"c3e337fc5ddc6fa3dd6de4cd72515e4daff44760045c5a00ae9220d8205e100c"},"downloads":-1,"filename":"pyaml_env-1.1.4.tar.gz","has_sig":false,"md5_digest":"f69a9d0e1b6b3864bf067be96a6449da","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":12030,"upload_time":"2022-01-28T09:21:15","upload_time_iso_8601":"2022-01-28T09:21:15.135254Z","url":"https://files.pythonhosted.org/packages/67/12/02a27a0aaf60f90eadae9f9a1e840e2f3ea6aa3df93f6d39f296433b88d2/pyaml_env-1.1.4.tar.gz","yanked":false,"yanked_reason":null}],"1.1.5":[{"comment_text":"","digests":{"blake2b_256":"7dd0624f8fd8c77f3e9d3be48d60a9bc69097e0317d326ba5c5cdd5b5111418d","md5":"0f6affa378ea310d13396575b9bca849","sha256":"e0fa9693adb01dae0bb3423ffc1c35c6ab6c973c4e2b24b4dac891b909c2a763"},"downloads":-1,"filename":"pyaml_env-1.1.5-py3-none-any.whl","has_sig":false,"md5_digest":"0f6affa378ea310d13396575b9bca849","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":8552,"upload_time":"2022-02-21T09:29:04","upload_time_iso_8601":"2022-02-21T09:29:04.733893Z","url":"https://files.pythonhosted.org/packages/7d/d0/624f8fd8c77f3e9d3be48d60a9bc69097e0317d326ba5c5cdd5b5111418d/pyaml_env-1.1.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0555cfea2ad53ea822c85aa74242b7b1d2d4d0a6775ad0b2dc7dce52af684738","md5":"057aa8d20e141a9e7c96236df03ceb33","sha256":"84c6330e53e6ce675353b2b1815b3922184b40641ff8c3b5fe4a25770a97adf5"},"downloads":-1,"filename":"pyaml_env-1.1.5.tar.gz","has_sig":false,"md5_digest":"057aa8d20e141a9e7c96236df03ceb33","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":12060,"upload_time":"2022-02-21T09:29:06","upload_time_iso_8601":"2022-02-21T09:29:06.132901Z","url":"https://files.pythonhosted.org/packages/05/55/cfea2ad53ea822c85aa74242b7b1d2d4d0a6775ad0b2dc7dce52af684738/pyaml_env-1.1.5.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"d26cfb09236297c1934448966abed6aaa2b2bed9f78992ef0346343e326398f4","md5":"76088bcaef90055091fb134934f0f49a","sha256":"18bc64741ffe68f6adac4faaa2379db504d42f6912b09d4c87b59170e125ad2a"},"downloads":-1,"filename":"pyaml_env-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"76088bcaef90055091fb134934f0f49a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":9039,"upload_time":"2022-11-12T08:48:20","upload_time_iso_8601":"2022-11-12T08:48:20.183383Z","url":"https://files.pythonhosted.org/packages/d2/6c/fb09236297c1934448966abed6aaa2b2bed9f78992ef0346343e326398f4/pyaml_env-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"738df966a8018bd97554666ec4ac59e85d4ceb340b131071e52c9bd0c3c36d33","md5":"19eeaaa43b4487c41cba98000cd2a377","sha256":"1e3c27b7715cee8107dac64f90cb50a2680d988e472d795a9eefc7958fb4d5bf"},"downloads":-1,"filename":"pyaml_env-1.2.0.tar.gz","has_sig":false,"md5_digest":"19eeaaa43b4487c41cba98000cd2a377","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":12775,"upload_time":"2022-11-12T08:48:21","upload_time_iso_8601":"2022-11-12T08:48:21.982734Z","url":"https://files.pythonhosted.org/packages/73/8d/f966a8018bd97554666ec4ac59e85d4ceb340b131071e52c9bd0c3c36d33/pyaml_env-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.1":[{"comment_text":"","digests":{"blake2b_256":"d79beb5d41a8ec8891ca85bac75b409d83f116b852fd46520f19c24464cba032","md5":"c8ec74ab33001334b65468ade2a41065","sha256":"2e7da2d4bba0629711ade1a41864e5e200c84ded896a3d27e9f560fae7311c36"},"downloads":-1,"filename":"pyaml_env-1.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"c8ec74ab33001334b65468ade2a41065","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":9038,"upload_time":"2022-12-06T09:36:52","upload_time_iso_8601":"2022-12-06T09:36:52.974065Z","url":"https://files.pythonhosted.org/packages/d7/9b/eb5d41a8ec8891ca85bac75b409d83f116b852fd46520f19c24464cba032/pyaml_env-1.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"28727a65881cb83e8af22b36259436fb87507e9399e7251831dc9248303faaae","md5":"cd3e8a292708cc64dc8789f0c02c8d83","sha256":"6d5dc98c8c82df743a132c196e79963050c9feb05b0a6f25f3ad77771d3d95b0"},"downloads":-1,"filename":"pyaml_env-1.2.1.tar.gz","has_sig":false,"md5_digest":"cd3e8a292708cc64dc8789f0c02c8d83","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":12759,"upload_time":"2022-12-06T09:36:54","upload_time_iso_8601":"2022-12-06T09:36:54.704915Z","url":"https://files.pythonhosted.org/packages/28/72/7a65881cb83e8af22b36259436fb87507e9399e7251831dc9248303faaae/pyaml_env-1.2.1.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"d79beb5d41a8ec8891ca85bac75b409d83f116b852fd46520f19c24464cba032","md5":"c8ec74ab33001334b65468ade2a41065","sha256":"2e7da2d4bba0629711ade1a41864e5e200c84ded896a3d27e9f560fae7311c36"},"downloads":-1,"filename":"pyaml_env-1.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"c8ec74ab33001334b65468ade2a41065","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":9038,"upload_time":"2022-12-06T09:36:52","upload_time_iso_8601":"2022-12-06T09:36:52.974065Z","url":"https://files.pythonhosted.org/packages/d7/9b/eb5d41a8ec8891ca85bac75b409d83f116b852fd46520f19c24464cba032/pyaml_env-1.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"28727a65881cb83e8af22b36259436fb87507e9399e7251831dc9248303faaae","md5":"cd3e8a292708cc64dc8789f0c02c8d83","sha256":"6d5dc98c8c82df743a132c196e79963050c9feb05b0a6f25f3ad77771d3d95b0"},"downloads":-1,"filename":"pyaml_env-1.2.1.tar.gz","has_sig":false,"md5_digest":"cd3e8a292708cc64dc8789f0c02c8d83","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":12759,"upload_time":"2022-12-06T09:36:54","upload_time_iso_8601":"2022-12-06T09:36:54.704915Z","url":"https://files.pythonhosted.org/packages/28/72/7a65881cb83e8af22b36259436fb87507e9399e7251831dc9248303faaae/pyaml_env-1.2.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
