{"info":{"author":"Jose Tiago Macara Coutinho","author_email":"coutinhotiago@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 2 - Pre-Alpha","Intended Audience :: Developers","Natural Language :: English","Programming Language :: Python :: 3","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8"],"description":"# connio\n\n![Pypi version][pypi]\n\nA python concurrency agnostic communication library.\n\nPass a URL to the single point API function `connio.connection_for_url()`\nand it will return a communication object with a common generic API.\n\nHelpful when dealing with instrumentation which work over serial line or TCP\n(and in future USB) with simple REQ-REP communication protocols (example:\n[SCPI](https://en.m.wikipedia.org/wiki/Standard_Commands_for_Programmable_Instruments)).\n\nThe request for a communication object is forwarded to the corresponding\n[serialio][serialio] or [sockio][sockio] libraries depending on the\nURL you give.\n\nWritten in asyncio with support for different concurrency models:\n\n* asyncio\n* classic blocking API\n* future based API\n* python 2 compatible blocking API (for those pour souls stuck with python 2)\n\n\n\n## Installation\n\nFrom within your favorite python environment:\n\n```console\npip install connio\n```\n\n## Usage\n\n```python\nimport asyncio\nfrom connio import connection_for_url\n\nasync def main():\n\n    # A local async serial line\n    sl = connection_for_url(\"serial:///dev/ttyS0\", parity=\"E\")\n    print(await sl.write_readline(b\"*IDN?\\n\"))\n\n    # An async serial line over telnet server\n    sl = connection_for_url(\"rfc2217://moxa.acme.org:7890\", parity=\"E\")\n    print(await sl.write_readline(b\"*IDN?\\n\"))\n\n    # An async TCP connection\n    tcp = connection_for_url(\"tcp://gepace.acme.org:5025\")\n    print(await tcp.write_readline(b\"*IDN?\\n\"))\n\n    # An sync TCP connection\n    tcp = connection_for_url(\"tcp://gepace.acme.org:5025\", concurrency=\"sync\")\n    print(tcp.write_readline(b\"*IDN?\\n\"))\n\nasyncio.run(main())\n```\n\n[pypi]: https://img.shields.io/pypi/pyversions/connio.svg\n[serialio]: https://github.com/tiagocoutinho/serialio\n[sockio]: https://github.com/tiagocoutinho/sockio","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://tiagocoutinho.github.io/connio/","keywords":"socket,tcp,ser2net,serial,rs232,rfc2217,asyncio","license":"GPLv3+","maintainer":"","maintainer_email":"","name":"connio","package_url":"https://pypi.org/project/connio/","platform":"","project_url":"https://pypi.org/project/connio/","project_urls":{"Documentation":"https://tiagocoutinho.github.io/connio/","Homepage":"https://tiagocoutinho.github.io/connio/","Source":"https://github.com/tiagocoutinho/connio/"},"provides_extra":null,"release_url":"https://pypi.org/project/connio/0.2.0/","requires_dist":null,"requires_python":">=3.5","summary":"Concurrency agnostic socket API","version":"0.2.0","yanked":false,"yanked_reason":null},"last_serial":8616248,"releases":{"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"11342b320d323503870cc3686e1a96a7430048dff6fe82dc02479dc70054681c","md5":"4987111aafcbd961b4710426e5153fa3","sha256":"d3a65a2b44740ec91453bf556635c9b2a9c6e8ba7d45bfed62f3fa3e64e39ff5"},"downloads":-1,"filename":"connio-0.1.0.tar.gz","has_sig":false,"md5_digest":"4987111aafcbd961b4710426e5153fa3","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":2757,"upload_time":"2020-09-16T15:48:32","upload_time_iso_8601":"2020-09-16T15:48:32.914780Z","url":"https://files.pythonhosted.org/packages/11/34/2b320d323503870cc3686e1a96a7430048dff6fe82dc02479dc70054681c/connio-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"1994e7adc24adafd1230a122a259e5680cbddd73b5b0201aa92147f8431ba8f6","md5":"e2be5761caa9bb2e66024b3a3f4833ef","sha256":"a06a4965d1ce6a4621b511183a98f04a1e2c50ae59ca20f55537d5fea3501aaa"},"downloads":-1,"filename":"connio-0.2.0.tar.gz","has_sig":false,"md5_digest":"e2be5761caa9bb2e66024b3a3f4833ef","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":2821,"upload_time":"2020-11-09T18:34:02","upload_time_iso_8601":"2020-11-09T18:34:02.124794Z","url":"https://files.pythonhosted.org/packages/19/94/e7adc24adafd1230a122a259e5680cbddd73b5b0201aa92147f8431ba8f6/connio-0.2.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"1994e7adc24adafd1230a122a259e5680cbddd73b5b0201aa92147f8431ba8f6","md5":"e2be5761caa9bb2e66024b3a3f4833ef","sha256":"a06a4965d1ce6a4621b511183a98f04a1e2c50ae59ca20f55537d5fea3501aaa"},"downloads":-1,"filename":"connio-0.2.0.tar.gz","has_sig":false,"md5_digest":"e2be5761caa9bb2e66024b3a3f4833ef","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":2821,"upload_time":"2020-11-09T18:34:02","upload_time_iso_8601":"2020-11-09T18:34:02.124794Z","url":"https://files.pythonhosted.org/packages/19/94/e7adc24adafd1230a122a259e5680cbddd73b5b0201aa92147f8431ba8f6/connio-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
