{"info":{"author":"","author_email":"Guillaume Pujol <guill.p.linux@gmail.com>","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Topic :: Security"],"description":"# ![jwskate](docs/logo.png)\n\n[![PyPi](https://img.shields.io/pypi/v/jwskate.svg)](https://pypi.python.org/pypi/jwskate)\n[![PyPi - License](https://img.shields.io/pypi/l/jwskate)](https://pypi.python.org/pypi/jwskate)\n[![PyPI - Downloads](https://img.shields.io/pypi/dw/jwskate)](https://pypi.python.org/pypi/jwskate)\n[![Code style: ruff](https://img.shields.io/badge/code%20style-ruff-000000.svg)](https://github.com/astral-sh/ruff)\n\nA Pythonic implementation of the JOSE set of IETF specifications: [Json Web Signature][rfc7515], [Keys][rfc7517],\n[Algorithms][rfc7518], [Tokens][rfc7519] and [Encryption][rfc7516] (RFC7515 to 7519), hence the name **JWSKATE**, and\ntheir extensions [ECDH Signatures][rfc8037] (RFC8037), [JWK Thumbprints][rfc7638] (RFC7638), and\n[JWK Thumbprint URI][rfc9278] (RFC9278), with respects to [JWT Best Current Practices][rfc8725] (RFC8725).\n\n- Free software: MIT\n- Repository: https://github.com/guillp/jwskate/\n- Documentation: https://guillp.github.io/jwskate/\n\nHere is a quick usage example: generating a private RSA key, signing some data, then validating that signature with the\nmatching public key:\n\n```python\nfrom jwskate import Jwk\n\n# Let's generate a random private key, to use with alg 'RS256'.\n# Based on that alg, jwskate knows it must be an RSA key.\n# RSA keys can be of any size, so let's pass the requested key size as parameter\nrsa_private_jwk = Jwk.generate(alg=\"RS256\", key_size=2048)\n\ndata = b\"Signing is easy!\"  # we will sign this\nsignature = rsa_private_jwk.sign(data)  # done!\n\nprint(signature)\n# b'-\\xe89\\x81\\xc4\\xb9.G\\x11\\xa6\\x93/dm\\xf0\\xc8\\x0f\\xd....'\n\n# now extract the public key, and verify the signature with it\nrsa_public_jwk = rsa_private_jwk.public_jwk()\nassert rsa_public_jwk.verify(data, signature)\n\n# let's see what a `Jwk` looks like:\nfrom collections import UserDict\n\nassert isinstance(rsa_private_jwk, UserDict)  # Jwk are UserDicts\n\nprint(rsa_private_jwk.with_usage_parameters())\n```\n\nThe result of this print will look like this (with the random parts abbreviated to `...` for display purposes only):\n\n```\n{'kty': 'RSA',\n 'n': '...',\n 'e': 'AQAB',\n 'd': '...',\n 'p': '...',\n 'q': '...',\n 'dp': '...',\n 'dq': '...',\n 'qi': '...',\n 'alg': 'RS256',\n 'kid': '...',\n 'use': 'sig',\n 'key_ops': ['sign']}\n```\n\nNow let's sign a JWT containing arbitrary claims, this time using an Elliptic Curve (`EC`) key:\n\n```python\nfrom jwskate import Jwk, Jwt\n\n# This time let's try an EC key, based on `alg` parameter,\n# and let's specify an arbitrary Key ID (kid).\n# additional args are either options (like 'key_size' above for RSA keys)\n# or additional parameters to include in the JWK\nprivate_jwk = Jwk.generate(alg=\"ES256\", kid=\"my_key\")\n# note that based only on the `alg` value, the appropriate key type and curve\n# are automatically deduced and included in the JWK\nprint(private_jwk)\n# {'kty': 'EC', 'crv': 'P-256', 'x': 'Ppe...', 'y': '9Si...', 'd': 'g09...', 'alg': 'ES256'}\nassert private_jwk.kty == \"EC\"\nassert private_jwk.crv == \"P-256\"\nassert private_jwk.alg == \"ES256\"\n# this is a private key and 'ES256' is a signature alg, so 'use' and 'key_ops' can also be deduced:\nassert private_jwk.use == \"sig\"\nassert private_jwk.key_ops == (\"sign\",)\n\n# here are the claims to sign in a JWT:\nclaims = {\"sub\": \"some_sub\", \"claim1\": \"value1\"}\n\njwt = Jwt.sign(claims, private_jwk)\n# that's it! we have a signed JWT.\nprint(jwt)\n# eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJzb21lX3N1YiIsImNsYWltMSI6InZhbHVlMSJ9.SBQIlGlFdwoEMViWUFsBmCsXShtOq4lnp3Im5ZVh1PFCGJFdW-dTG9qJjlFSAA_BkM5PF9u38PL7Ai9cC2_DJw\nassert isinstance(jwt, Jwt)  # Jwt are objects\nassert jwt.claims == claims  # claims can be accessed as a dict\nassert jwt.headers == {\"typ\": \"JWT\", \"alg\": \"ES256\", \"kid\": \"my_key\"}  # headers too\nassert jwt.sub == \"some_sub\"  # individual claims can be accessed as attributes\nassert jwt[\"claim1\"] == \"value1\"  # or as dict items (with \"subscription\")\nassert jwt.alg == \"ES256\"  # alg and kid headers are also accessible as attributes\nassert jwt.kid == private_jwk.kid\n# notice that alg and kid are automatically set with appropriate values taken from our private jwk\nassert isinstance(jwt.signature, bytes)  # signature is accessible too\n# verifying the jwt signature is as easy as:\nassert jwt.verify_signature(private_jwk.public_jwk())\n# since our jwk contains an 'alg' parameter (here 'ES256'), the signature is automatically verified using that alg\n# you could also specify an alg manually, useful for keys with no \"alg\" hint:\nassert jwt.verify_signature(private_jwk.public_jwk(), alg=\"ES256\")\n# note that jwskate will only trust the alg(s) you provide as parameter, either part of the JWK\n# or with `alg` or `algs` params, and will ignore the 'alg' that is set in the JWT, for security reasons.\n```\n\nNow let's sign a JWT with the standardized lifetime, subject, audience and ID claims, plus arbitrary custom claims:\n\n```python\nfrom jwskate import Jwk, JwtSigner\n\nprivate_jwk = Jwk.generate(alg=\"ES256\")\nsigner = JwtSigner(issuer=\"https://myissuer.com\", key=private_jwk)\njwt = signer.sign(\n    subject=\"some_sub\",\n    audience=\"some_aud\",\n    extra_claims={\"custom_claim1\": \"value1\", \"custom_claim2\": \"value2\"},\n)\n\nprint(jwt.claims)\n```\n\nThe generated JWT will include the standardized claims (`iss`, `aud`, `sub`, `iat`, `exp` and `jti`), together with the\n`extra_claims` provided to `.sign()`:\n\n```\n{'custom_claim1': 'value1',\n 'custom_claim2': 'value2',\n 'iss': 'https://myissuer.com',\n 'aud': 'some_aud',\n 'sub': 'some_sub',\n 'iat': 1648823184,\n 'exp': 1648823244,\n 'jti': '3b400e27-c111-4013-84e0-714acd76bf3a'\n}\n```\n\n## Features\n\n- Simple, Clean, Pythonic interface\n- Convenience wrappers around `cryptography` for all algorithms described in JWA\n- Json Web Keys (JWK) loading, dumping and generation\n- Arbitrary data signature and verification using Json Web Keys\n- Json Web Signatures (JWS) signing and verification\n- Json Web Encryption (JWE) encryption and decryption\n- Json Web Tokens (JWT) signing, verification and validation\n- 100% type annotated, verified with `mypy --strict`\n- nearly 100% code coverage\n- Relies on [cryptography](https://cryptography.io) for all cryptographic operations\n- Relies on [BinaPy](https://guillp.github.io/binapy/) for binary data manipulations\n\n### Supported Token Types\n\n\n| Token Type                | Support                                                  |\n| ------------------------- | -------------------------------------------------------- |\n| Json Web Signature (JWS)  | ☑ Compact<br/> ☑ JSON Flat <br/> ☑ JSON General <br/> |\n| Json Web Encryption (JWE) | ☑ Compact<br/> ☐ JSON Flat <br/> ☐ JSON General <br/> |\n| Json Web Tokens (JWT)     | ☑ Signed<br/> ☑ Signed and Encrypted                   |\n\n### Supported Signature algorithms\n\n\n| Signature Alg   | Description                                      | Key Type | Reference                          | Note                           |\n|-----------------|--------------------------------------------------|----------| ---------------------------------- | ------------------------------ |\n| `HS256`         | HMAC using SHA-256                               | `oct`    | [RFC7518, Section 3.2]             |                                |\n| `HS384`         | HMAC using SHA-384                               | `oct`    | [RFC7518, Section 3.2]             |                                |\n| `HS512`         | HMAC using SHA-512                               | `oct`    | [RFC7518, Section 3.2]             |                                |\n| `RS256`         | RSASSA-PKCS1-v1_5 using SHA-256                  | `RSA`    | [RFC7518, Section 3.3]             |                                |\n| `RS384`         | RSASSA-PKCS1-v1_5 using SHA-384                  | `RSA`    | [RFC7518, Section 3.3]             |                                |\n| `RS512`         | RSASSA-PKCS1-v1_5 using SHA-512                  | `RSA`    | [RFC7518, Section 3.3]             |                                |\n| `PS256`         | RSASSA-PSS using SHA-256 and MGF1 with SHA-256   | `RSA`    | [RFC7518, Section 3.5]             |                                |\n| `PS384`         | RSASSA-PSS using SHA-384 and MGF1 with SHA-384   | `RSA`    | [RFC7518, Section 3.5]             |                                |\n| `PS512`         | RSASSA-PSS using SHA-512 and MGF1 with SHA-512   | `RSA`    | [RFC7518, Section 3.5]             |                                |\n| `ES256`         | ECDSA using P-256 and SHA-256                    | `EC`     | [RFC7518, Section 3.4]             |                                |\n| `ES384`         | ECDSA using P-384 and SHA-384                    | `EC`     | [RFC7518, Section 3.4]             |                                |\n| `ES512`         | ECDSA using P-521 and SHA-512                    | `EC`     | [RFC7518, Section 3.4]             |                                |\n| `ES256K`        | ECDSA using secp256k1 curve and SHA-256          | `EC`     | [RFC8812, Section 3.2]             |                                |\n| `EdDSA`         | EdDSA signature algorithms                       | `OKP`    | [RFC8037, Section 3.1]             | Ed2219 and Ed448 are supported |\n| `HS1`           | HMAC using SHA-1                                 | `oct`    | https://www.w3.org/TR/WebCryptoAPI | Validation Only                |\n| `RS1`           | RSASSA-PKCS1-v1_5 with SHA-1                     | `RSA`    | https://www.w3.org/TR/WebCryptoAPI | Validation Only                |\n| `none`          | No digital signature or MAC performed            |          | [RFC7518, Section 3.6]             | Not usable by mistake          |\n\n### Supported Encryption algorithms\n\n\n| Signature Alg   | Description                                                 | Reference                |\n|-----------------|-------------------------------------------------------------|--------------------------|\n| `A128CBC-HS256` | AES_128_CBC_HMAC_SHA_256 authenticated encryption algorithm | [RFC7518, Section 5.2.3] |\n| `A192CBC-HS384` | AES_192_CBC_HMAC_SHA_384 authenticated encryption algorithm | [RFC7518, Section 5.2.4] |\n| `A256CBC-HS512` | AES_256_CBC_HMAC_SHA_512 authenticated encryption algorithm | [RFC7518, Section 5.2.5] |\n| `A128GCM`       | AES GCM using 128-bit key                                   | [RFC7518, Section 5.3]   |\n| `A192GCM`       | AES GCM using 192-bit key                                   | [RFC7518, Section 5.3]   |\n| `A256GCM`       | AES GCM using 256-bit key                                   | [RFC7518, Section 5.3]   |\n\n### Supported Key Management algorithms\n\n\n| Signature Alg      | Description                                    | Key Type      | Reference                          | Note        |\n| ------------------ | ---------------------------------------------- |---------------| ---------------------------------- | ----------- |\n| `RSA1_5`             | RSAES-PKCS1-v1_5                               | `RSA`       | [RFC7518, Section 4.2]             | Unwrap Only |\n| `RSA-OAEP`           | RSAES OAEP using default parameters            | `RSA`       | [RFC7518, Section 4.3]             |             |\n| `RSA-OAEP-256`       | RSAES OAEP using SHA-256 and MGF1 with SHA-256 | `RSA`       | [RFC7518, Section 4.3]             |             |\n| `RSA-OAEP-384`       | RSA-OAEP using SHA-384 and MGF1 with SHA-384   | `RSA`       | https://www.w3.org/TR/WebCryptoAPI |             |\n| `RSA-OAEP-512`       | RSA-OAEP using SHA-512 and MGF1 with SHA-512   | `RSA`       | https://www.w3.org/TR/WebCryptoAPI |             |\n| `A128KW`             | AES Key Wrap using 128-bit key                 | `oct`       | [RFC7518, Section 4.4]             |             |\n| `A192KW`             | AES Key Wrap using 192-bit key                 | `oct`       | [RFC7518, Section 4.4]             |             |\n| `A256KW`             | AES Key Wrap using 256-bit key                 | `oct`       | [RFC7518, Section 4.4]             |             |\n| `A128GCMKW`          | Key wrapping with AES GCM using 128-bit key    | `oct`       | [RFC7518, Section 4.7]             |             |\n| `A192GCMKW`          | Key wrapping with AES GCM using 192-bit key    | `oct`       | [RFC7518, Section 4.7]             |             |\n| `A256GCMKW`          | Key wrapping with AES GCM using 256-bit key    | `oct`       | [RFC7518, Section 4.7]             |             |\n| `dir`                | Direct use of a shared symmetric key           | `oct`       | [RFC7518, Section 4.5]             |             |\n| `ECDH-ES`            | ECDH-ES using Concat KDF                       | `EC`        | [RFC7518, Section 4.6]             |             |\n| `ECDH-ES+A128KW`     | ECDH-ES using Concat KDF and \"A128KW\" wrapping | `EC`        | [RFC7518, Section 4.6]             |             |\n| `ECDH-ES+A192KW`     | ECDH-ES using Concat KDF and \"A192KW\" wrapping | `EC`        | [RFC7518, Section 4.6]             |             |\n| `ECDH-ES+A256KW`     | ECDH-ES using Concat KDF and \"A256KW\" wrapping | `EC`        | [RFC7518, Section 4.6]             |             |\n| `PBES2-HS256+A128KW` | PBES2 with HMAC SHA-256 and \"A128KW\" wrapping  | `password`  | [RFC7518, Section 4.8]             |             |\n| `PBES2-HS384+A192KW` | PBES2 with HMAC SHA-384 and \"A192KW\" wrapping  | `password`  | [RFC7518, Section 4.8]             |             |\n| `PBES2-HS512+A256KW` | PBES2 with HMAC SHA-512 and \"A256KW\" wrapping  | `password`  | [RFC7518, Section 4.8]             |             |\n\n\n\n### Supported Elliptic Curves\n\n\n| Curve       | Description                           | Key Type | Usage                 | Reference                  |\n|-------------|---------------------------------------|----------| --------------------- | -------------------------- |\n| `P-256`     | P-256 Curve                           | `EC`     | signature, encryption | [RFC7518, Section 6.2.1.1] |\n| `P-384`     | P-384 Curve                           | `EC`     | signature, encryption | [RFC7518, Section 6.2.1.1] |\n| `P-521`     | P-521 Curve                           | `EC`     | signature, encryption | [RFC7518, Section 6.2.1.1] |\n| `secp256k1` | SECG secp256k1 curve                  | `EC`     | signature, encryption | [RFC8812, Section 3.1]     |\n| `Ed25519`   | Ed25519 signature algorithm key pairs | `OKP`    | signature             | [RFC8037, Section 3.1]     |\n| `Ed448`     | Ed448 signature algorithm key pairs   | `OKP`    | signature             | [RFC8037, Section 3.1]     |\n| `X25519`    | X25519 function key pairs             | `OKP`    | encryption            | [RFC8037, Section 3.2]     |\n| `X448`      | X448 function key pairs               | `OKP`    | encryption            | [RFC8037, Section 3.2]     |\n\n## Why a new lib?\n\nThere are already multiple modules implementing JOSE and Json Web Crypto related specifications in Python. However, I\nhave been dissatisfied by all of them so far, so I decided to come up with my own module.\n\n- [PyJWT](https://pyjwt.readthedocs.io)\n- [JWCrypto](https://jwcrypto.readthedocs.io/)\n- [Python-JOSE](https://python-jose.readthedocs.io/)\n- [AuthLib](https://docs.authlib.org/en/latest/jose/)\n\nNot to say that those are _bad_ libs (I actually use `jwcrypto` myself for `jwskate` unit tests), but they either don't\nsupport some important features, lack documentation, or more generally have APIs that don't feel easy-enough,\nPythonic-enough to use. See [Design](#Design) below for some of the design decisions that lead to `jwskate`.\n\n## Design\n\n### Tokens are objects\n\nSince JSON Web Tokens (JWT) are more and more used, JWT generation and validation must be as easy to do as possible. The\n`Jwt` class wraps around a JWT value to allow easy access to its headers, claims and signature, and exposes methods to\neasily verify the signature.\n\n```python\nfrom jwskate import Jwt\n\njwt = Jwt(\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n)\nassert jwt.headers == {\"alg\": \"HS256\", \"typ\": \"JWT\"}\n\nassert jwt.claims == {\"sub\": \"1234567890\", \"name\": \"John Doe\", \"iat\": 1516239022}\n\nassert (\n    jwt.signature\n    == b\"I\\xf9J\\xc7\\x04IH\\xc7\\x8a(]\\x90O\\x87\\xf0\\xa4\\xc7\\x89\\x7f~\\x8f:N\\xb2%_\\xdau\\x0b,\\xc3\\x97\"\n)\n```\n\n`Jwt` instances always represent a syntactically valid JWT. If you try to initialize one with a malformed value, you\nwill get a `InvalidJwt` exception, with an helpful error message:\n\n```python\njwt = Jwt(\n    \"eyJhbGci-malformedheader.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n)\n# jwskate.jwt.base.InvalidJwt: Invalid JWT header: it must be a Base64URL-encoded JSON object\n```\n\n`Jwt` may be objects, but they are easy to serialize into their representation. Use either `str()` or `bytes()`\ndepending on what type of value you need, or the `value` attribute:\n\n```python\njwt = Jwt(\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n)\nstr(jwt)\n# 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'\nbytes(jwt)\n# b'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'\nassert jwt.value == bytes(jwt)\n```\n\nThe same is true for JWS and JWE tokens.\n\n### Headers are auto-generated\n\nWhen signing a JWS, JWE or JWT, the headers are autogenerated by default, based on the used key and algorithm.\n\nYou may add your own custom headers using the `extra_headers` parameter, and/or set a custom `typ` header with the parameter of the same name:\n\n```python\nfrom jwskate import SymmetricJwk, Jwt\n\njwk = SymmetricJwk.from_bytes(b\"T0t4llyR@nd0M\", kid=\"symmetric_key1\")\njwt = Jwt.sign(\n    claims={\"my\": \"claims\"},\n    key=jwk,\n    alg=\"HS256\",\n    typ=\"CustomJWT\",\n    extra_headers={\"custom_header\": \"custom_value\"},\n)\nprint(jwt)\n# eyJhbGciOiJIUzI1NiIsImN1c3RvbV9oZWFkZXIiOiJjdXN0b21fdmFsdWUiLCJ0eXAiOiJDdXN0b21KV1QiLCJraWQiOiJzeW1tZXRyaWNfa2V5MSJ9.eyJteSI6ImNsYWltcyJ9.ZqCp8Crq-mdCXLoy5NiEdPTSUlIFEjrzexA6mKHrMAc\nprint(jwt.headers)\n# {'alg': 'HS256', 'custom_header': 'custom_value', 'typ': 'CustomJWT', 'kid': 'symmetric_key1'}\n```\n\nIf, for testing purposes, you need to fully control which headers are included in the JWT, even if they are inconsistent,\nyou can use `Jwt.sign_arbitrary()`:\n\n```python\nfrom jwskate import SymmetricJwk, Jwt\n\njwk = SymmetricJwk.from_bytes(b\"T0t4llyR@nd0M\", kid=\"symmetric_key1\")\njwt = Jwt.sign_arbitrary(\n    headers={\n        \"custom_header\": \"custom_value\",\n        \"typ\": \"WeirdJWT\",\n        \"kid\": \"R@nd0m_KID\",\n        \"alg\": \"WeirdAlg\",\n    },\n    claims={\"my\": \"claims\"},\n    key=jwk,\n    alg=\"HS256\",\n)\nprint(jwt)\n# eyJjdXN0b21faGVhZGVyIjoiY3VzdG9tX3ZhbHVlIiwidHlwIjoiV2VpcmRKV1QiLCJraWQiOiJSQG5kMG1fS0lEIiwiYWxnIjoiV2VpcmRBbGcifQ.eyJteSI6ImNsYWltcyJ9.bcTFqCSiVIbyJhxClgsBDIyhbvLXTOXOV55QGqo2mhw\nprint(jwt.headers)  # you asked for inconsistent headers, you have them:\n# {'custom_header': 'custom_value', 'typ': 'WeirdJWT', 'kid': 'R@nd0m_KID', 'alg': 'WeirdAlg'}\n```\n\n### `Jwk` as thin wrapper around `cryptography` keys\n\n`Jwk` keys are just _thin_ wrappers around keys from the `cryptography` module, or, in the case of symmetric keys,\naround `bytes`. But, unlike `cryptography`keys, they present a consistent interface for signature creation/verification,\nkey management, and encryption/decryption, with all available algorithms.\n\nEverywhere a key is required as parameter, you may pass either a raw `cryptography` key instance, or a `Jwk` instance\n(which is actually a thin wrapper around a cryptography key), or a `Mapping` representing the JWK key.\n\n### `Jwk` are `UserDict` instances\n\nJWK are specified as JSON objects, which are parsed as `dict` in Python. The `Jwk` class in `jwskate` is actually a\n`UserDict` subclass, which is very similar to a standard `dict`. So you can use it exactly like you would use a `dict`:\nyou can access its members, dump it back as JSON, etc. The same is true for Signed or Encrypted Json Web tokens in JSON\nformat. However, you cannot change the key cryptographic materials, since that would lead to unusable keys.\n\nNote that the keys with a `JwkSet` are converted to instances of `Jwk` on initialization. This may introduce an issue\nif you try to serialize it to JSON with the standard `json` module, which does not handle `UserDict` by default. You may\neither use `JwkSet.to_json()` to get a JSON-serialized string, or `JwkSet.to_dict()` to get a standard `dict`, that is\nserializable by the standard `json` module.\n\n### JWA Wrappers\n\nYou can use `cryptography` to do the cryptographic operations that are described in\n[JWA](https://www.rfc-editor.org/info/rfc7518), but since `cryptography` is a general purpose library, its usage is not\nstraightforward and gives you plenty of options to carefully select and combine, leaving room for mistakes, errors and\nconfusion. It also has a quite inconsistent API to handle the different key types and algorithms. To work around this,\n`jwskate` comes with a set of consistent wrappers that implement the exact JWA specifications, with minimum risk of\nmistakes.\n\n### Safe Signature Verification\n\nAs advised in [JWT Best Practices][rfc8725] $3.1:\n\nFor every signature verification method in `jwskate`, the expected signature(s) algorithm(s) must be specified. That is\nto avoid a security flaw where your application accepts tokens with a weaker encryption scheme than what your security\npolicy mandates; or even worse, where it accepts unsigned tokens, or tokens that are symmetrically signed with an\nimproperly used public key, leaving your application exposed to exploitation by attackers.\n\nTo specify which signature algorithms are accepted, each signature verification method accepts, in order of preference:\n\n- an `alg` parameter which contains the expected algorithm, or an `algs` parameter which contains a list of acceptable\n  algorithms\n- the `alg` parameter from the signature verification `Jwk`, if present. This `alg` is the algorithm intended for use\n  with that key.\n\nNote that you cannot use `alg` and `algs` at the same time. If your `Jwk` contains an `alg` parameter, and you provide\nan `alg` or `algs` which does not match that value, a `Warning` will be emitted.\n\n## TODO\n\n- Complete/enhance/proof-read documentation\n- Better exceptions (create dedicated exception classes, better messages, etc.)\n- Support for JWE in JSON format\n- Better tests\n- Support for Selective-Disclosure JWT\n\n## Credits\n\nAll cryptographic operations are handled by [cryptography](https://cryptography.io).\n\n[rfc7515]: https://www.rfc-editor.org/rfc/rfc7515.html\n[rfc7516]: https://www.rfc-editor.org/rfc/rfc7516.html\n[rfc7517]: https://www.rfc-editor.org/rfc/rfc7517.html\n[rfc7518]: https://www.rfc-editor.org/rfc/rfc7518.html\n[rfc7518, section 3.2]: https://www.rfc-editor.org/rfc/rfc7518.html#section-3.2\n[rfc7518, section 3.3]: https://www.rfc-editor.org/rfc/rfc7518.html#section-3.3\n[rfc7518, section 3.4]: https://www.rfc-editor.org/rfc/rfc7518.html#section-3.4\n[rfc7518, section 3.5]: https://www.rfc-editor.org/rfc/rfc7518.html#section-3.5\n[rfc7518, section 3.6]: https://www.rfc-editor.org/rfc/rfc7518.html#section-3.6\n[rfc7518, section 4.2]: https://www.rfc-editor.org/rfc/rfc7518.html#section-4.2\n[rfc7518, section 4.3]: https://www.rfc-editor.org/rfc/rfc7518.html#section-4.3\n[rfc7518, section 4.4]: https://www.rfc-editor.org/rfc/rfc7518.html#section-4.4\n[rfc7518, section 4.5]: https://www.rfc-editor.org/rfc/rfc7518.html#section-4.5\n[rfc7518, section 4.6]: https://www.rfc-editor.org/rfc/rfc7518.html#section-4.6\n[rfc7518, section 4.7]: https://www.rfc-editor.org/rfc/rfc7518.html#section-4.7\n[rfc7518, section 4.8]: https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8\n[rfc7518, section 5.2.3]: https://www.rfc-editor.org/rfc/rfc7518.html#section-5.2.3\n[rfc7518, section 5.2.4]: https://www.rfc-editor.org/rfc/rfc7518.html#section-5.2.4\n[rfc7518, section 5.2.5]: https://www.rfc-editor.org/rfc/rfc7518.html#section-5.2.5\n[rfc7518, section 5.3]: https://www.rfc-editor.org/rfc/rfc7518.html#section-5.3\n[rfc7518, section 6.2.1.1]: https://www.rfc-editor.org/rfc/rfc7518.html#section-6.2.1.1\n[rfc7519]: https://www.rfc-editor.org/rfc/rfc7519.html\n[rfc7638]: https://www.rfc-editor.org/rfc/rfc7638.html\n[rfc8037]: https://www.rfc-editor.org/rfc/rfc8037.html\n[rfc8037, section 3.1]: https://www.rfc-editor.org/rfc/rfc8037.html#section-3.1\n[rfc8037, section 3.2]: https://www.rfc-editor.org/rfc/rfc8037.html#section-3.2\n[rfc8725]: https://www.rfc-editor.org/rfc/rfc8725\n[rfc8812, section 3.1]: https://www.rfc-editor.org/rfc/rfc8812.html#section-3.1\n[rfc8812, section 3.2]: https://www.rfc-editor.org/rfc/rfc8812.html#name-ecdsa-signature-with-secp25\n[rfc9278]: https://www.rfc-editor.org/rfc/rfc9278.html\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"jwskate","package_url":"https://pypi.org/project/jwskate/","platform":null,"project_url":"https://pypi.org/project/jwskate/","project_urls":{"documentation":"https://guillp.github.io/jwskate/","homepage":"https://github.com/guillp/jwskate","pypi":"https://pypi.org/project/jwskate/"},"provides_extra":null,"release_url":"https://pypi.org/project/jwskate/0.11.1/","requires_dist":["binapy>=0.8","cryptography>=3.4","typing-extensions>=4.3"],"requires_python":">=3.8","summary":"A Pythonic implementation of the JOSE / JSON Web Crypto related RFCs (JWS, JWK, JWA, JWT, JWE)","version":"0.11.1","yanked":false,"yanked_reason":null},"last_serial":21693741,"releases":{"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"2e7b137b8637dc9135ba6a94128380b08282cca01baaae7e2335ac91e9d40198","md5":"0ec16c4b5ac9cbcaeddf3fe71ba5648b","sha256":"f92042f2de911c1dfe143169adba00abe2eec898fc8dd8e103a9c6b663f32f70"},"downloads":-1,"filename":"jwskate-0.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"0ec16c4b5ac9cbcaeddf3fe71ba5648b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":63301,"upload_time":"2022-04-12T13:30:08","upload_time_iso_8601":"2022-04-12T13:30:08.428712Z","url":"https://files.pythonhosted.org/packages/2e/7b/137b8637dc9135ba6a94128380b08282cca01baaae7e2335ac91e9d40198/jwskate-0.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4e8d7b46dddd556fb4eccfedab2af662927878d77668ad65771b431b4c65da5f","md5":"fc89f79a2bd81d9965dfc5c826303d01","sha256":"a865c4e85d3505dec49f79b5d396cb19858d99b3fb367b43bfc70c30b2baef7f"},"downloads":-1,"filename":"jwskate-0.1.0.tar.gz","has_sig":false,"md5_digest":"fc89f79a2bd81d9965dfc5c826303d01","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":76563,"upload_time":"2022-04-12T13:30:09","upload_time_iso_8601":"2022-04-12T13:30:09.919462Z","url":"https://files.pythonhosted.org/packages/4e/8d/7b46dddd556fb4eccfedab2af662927878d77668ad65771b431b4c65da5f/jwskate-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"f7348256b470d826b70df9c53975ff21b088bafc0447c7bcc53fed071849a69f","md5":"39f7c5c28545b6580ebeb074643631fd","sha256":"14a18ea89fb3220e24d4e6f4197a72b2da773271de6b861b53000089210f1081"},"downloads":-1,"filename":"jwskate-0.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"39f7c5c28545b6580ebeb074643631fd","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":63457,"upload_time":"2022-04-15T11:31:38","upload_time_iso_8601":"2022-04-15T11:31:38.743670Z","url":"https://files.pythonhosted.org/packages/f7/34/8256b470d826b70df9c53975ff21b088bafc0447c7bcc53fed071849a69f/jwskate-0.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c9035020dd30768584274ae6002fedd865f087fe1947a3ed51a69a0df744fbac","md5":"797baf920a6703bde9f39616e4459008","sha256":"c3432ac21c796641c4ceacef4f3f8de25b24284dddb6109613e440ccdc185ac4"},"downloads":-1,"filename":"jwskate-0.1.1.tar.gz","has_sig":false,"md5_digest":"797baf920a6703bde9f39616e4459008","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":76688,"upload_time":"2022-04-15T11:31:40","upload_time_iso_8601":"2022-04-15T11:31:40.943491Z","url":"https://files.pythonhosted.org/packages/c9/03/5020dd30768584274ae6002fedd865f087fe1947a3ed51a69a0df744fbac/jwskate-0.1.1.tar.gz","yanked":false,"yanked_reason":null}],"0.10.0":[{"comment_text":"","digests":{"blake2b_256":"774c52cd70d24e81ec04d0f771ea8877fc2fa07ac5af7053109dce12a85d511f","md5":"04954ad8f813ad1586591e26e85fd83d","sha256":"c9ffcefe0e4bb04d2ef7251fbd26edbdf2bbe766e88447b35ed70abda7e0b319"},"downloads":-1,"filename":"jwskate-0.10.0-py3-none-any.whl","has_sig":false,"md5_digest":"04954ad8f813ad1586591e26e85fd83d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":80969,"upload_time":"2023-09-25T09:47:08","upload_time_iso_8601":"2023-09-25T09:47:08.399227Z","url":"https://files.pythonhosted.org/packages/77/4c/52cd70d24e81ec04d0f771ea8877fc2fa07ac5af7053109dce12a85d511f/jwskate-0.10.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"85018c90f327cf451ffcd5f2febf317448634b23e41bd9dd7a3b43d5e75abf74","md5":"c64c90304fa6763bebfb3df735859507","sha256":"9412043092786c6e029931427ec7dd01503802c4d4867846febdc4a704a12400"},"downloads":-1,"filename":"jwskate-0.10.0.tar.gz","has_sig":false,"md5_digest":"c64c90304fa6763bebfb3df735859507","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":112054,"upload_time":"2023-09-25T09:47:10","upload_time_iso_8601":"2023-09-25T09:47:10.130585Z","url":"https://files.pythonhosted.org/packages/85/01/8c90f327cf451ffcd5f2febf317448634b23e41bd9dd7a3b43d5e75abf74/jwskate-0.10.0.tar.gz","yanked":false,"yanked_reason":null}],"0.11.0":[{"comment_text":"","digests":{"blake2b_256":"8ef04b582d831f4204c4bfc65e1587f396a40592e498dc621403e43a35e368cf","md5":"a7c39b42cffe97967d84a5f207e9ea0e","sha256":"cac9da8d0682b5d62cf158d06eef67ac000867132bf86d4ab65c061e05d1bdb8"},"downloads":-1,"filename":"jwskate-0.11.0-py3-none-any.whl","has_sig":false,"md5_digest":"a7c39b42cffe97967d84a5f207e9ea0e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":82843,"upload_time":"2024-01-22T12:24:56","upload_time_iso_8601":"2024-01-22T12:24:56.052214Z","url":"https://files.pythonhosted.org/packages/8e/f0/4b582d831f4204c4bfc65e1587f396a40592e498dc621403e43a35e368cf/jwskate-0.11.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1cefe18feb741ba7b3fa64620885142c46d8446816f97ec370f19e351885dd71","md5":"2f7e7a086d80ae2e5d823fc8ca2d5f1b","sha256":"fa40ee29ca6c5977b7c5ca30918d0c7cfe2a2cecf958bf175a72de6a52251df1"},"downloads":-1,"filename":"jwskate-0.11.0.tar.gz","has_sig":false,"md5_digest":"2f7e7a086d80ae2e5d823fc8ca2d5f1b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":117201,"upload_time":"2024-01-22T12:24:57","upload_time_iso_8601":"2024-01-22T12:24:57.893142Z","url":"https://files.pythonhosted.org/packages/1c/ef/e18feb741ba7b3fa64620885142c46d8446816f97ec370f19e351885dd71/jwskate-0.11.0.tar.gz","yanked":false,"yanked_reason":null}],"0.11.1":[{"comment_text":"","digests":{"blake2b_256":"850bf28139ee145790494fbc05f6dd895f4e5c36051c46663ab8b04d095a590f","md5":"3b6ed0e7219d954aa22f3e39bcee6982","sha256":"cdfa04fac10366afab08c20d2f75d1c6b57dc7d099b407b8fb4318349272f933"},"downloads":-1,"filename":"jwskate-0.11.1-py3-none-any.whl","has_sig":false,"md5_digest":"3b6ed0e7219d954aa22f3e39bcee6982","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":84831,"upload_time":"2024-02-01T17:29:57","upload_time_iso_8601":"2024-02-01T17:29:57.585428Z","url":"https://files.pythonhosted.org/packages/85/0b/f28139ee145790494fbc05f6dd895f4e5c36051c46663ab8b04d095a590f/jwskate-0.11.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"efa3760eeb2da94ea4e0fd01064a15414a9e76fdaa435fd39cb07b2e4a065df9","md5":"3a3e89d563918e0073fa48bcd8a9aa5f","sha256":"35354b487c8e835fdd57befea5e93e9e52fe25869d884fc764511d22061e6685"},"downloads":-1,"filename":"jwskate-0.11.1.tar.gz","has_sig":false,"md5_digest":"3a3e89d563918e0073fa48bcd8a9aa5f","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":119523,"upload_time":"2024-02-01T17:30:00","upload_time_iso_8601":"2024-02-01T17:30:00.339655Z","url":"https://files.pythonhosted.org/packages/ef/a3/760eeb2da94ea4e0fd01064a15414a9e76fdaa435fd39cb07b2e4a065df9/jwskate-0.11.1.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"d4c595da32f40ba762341389b0905ac692f293d0e068ad21573157ce780ecc55","md5":"3255d921d7cd5f44244f73447651c846","sha256":"083a6a3d80ae38993a0f3e09e29dc6d3fdcd5466a213744df9539fe3cd6ec244"},"downloads":-1,"filename":"jwskate-0.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"3255d921d7cd5f44244f73447651c846","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":66174,"upload_time":"2022-05-16T19:46:57","upload_time_iso_8601":"2022-05-16T19:46:57.204511Z","url":"https://files.pythonhosted.org/packages/d4/c5/95da32f40ba762341389b0905ac692f293d0e068ad21573157ce780ecc55/jwskate-0.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a44ef8b877f61d1eaefacb7cecdf12b865683683e34a20c6c256d141f39ca965","md5":"e524484983ff716e7d0ed063b33bb213","sha256":"c9628031f74d8a09754b0fde931b0f3787c01fb152db1e9d227b1b0f136bd023"},"downloads":-1,"filename":"jwskate-0.2.0.tar.gz","has_sig":false,"md5_digest":"e524484983ff716e7d0ed063b33bb213","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":80900,"upload_time":"2022-05-16T19:46:58","upload_time_iso_8601":"2022-05-16T19:46:58.412635Z","url":"https://files.pythonhosted.org/packages/a4/4e/f8b877f61d1eaefacb7cecdf12b865683683e34a20c6c256d141f39ca965/jwskate-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.2.1":[{"comment_text":"","digests":{"blake2b_256":"e36ef8a8aefa82a97cad403abbc67269aed2620260fed5a2094b7a6fba6361a8","md5":"458cd04276687b9c7c545286c884ebe3","sha256":"d392ad7eb2de0f3a9db345e28082956d9a849b266fa1f4438f00d1e555b13740"},"downloads":-1,"filename":"jwskate-0.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"458cd04276687b9c7c545286c884ebe3","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":66150,"upload_time":"2022-05-17T09:09:46","upload_time_iso_8601":"2022-05-17T09:09:46.037727Z","url":"https://files.pythonhosted.org/packages/e3/6e/f8a8aefa82a97cad403abbc67269aed2620260fed5a2094b7a6fba6361a8/jwskate-0.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0bfbb2624be03e985f830edb36c4d5379d026cfb51b26d8c2265b3b9d75a7437","md5":"5a673cca50aaf2452edf8922d12fbd4e","sha256":"00c04af0a7ef2a079f0e22184433d5edf6ec84a0c1a427246f7948d7a6d9f611"},"downloads":-1,"filename":"jwskate-0.2.1.tar.gz","has_sig":false,"md5_digest":"5a673cca50aaf2452edf8922d12fbd4e","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":80901,"upload_time":"2022-05-17T09:09:47","upload_time_iso_8601":"2022-05-17T09:09:47.548758Z","url":"https://files.pythonhosted.org/packages/0b/fb/b2624be03e985f830edb36c4d5379d026cfb51b26d8c2265b3b9d75a7437/jwskate-0.2.1.tar.gz","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"105316d975440e66702eaf7873a2eaf2afa4f6c06abc79dcae7edbcc3ed74f16","md5":"afdd412ca1b17476b3bca733929f6600","sha256":"72ddd344311917790326455bc6e62651a2b0e3481d7a57b0a1788386db0505fd"},"downloads":-1,"filename":"jwskate-0.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"afdd412ca1b17476b3bca733929f6600","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":67438,"upload_time":"2022-08-02T08:18:11","upload_time_iso_8601":"2022-08-02T08:18:11.013231Z","url":"https://files.pythonhosted.org/packages/10/53/16d975440e66702eaf7873a2eaf2afa4f6c06abc79dcae7edbcc3ed74f16/jwskate-0.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"333610b6989b3b56cfa2003a8d19a7fc2521486d7a14651f4cfbfc9a081cdf16","md5":"4b2718b3779fd107175cd3a95a236722","sha256":"cbef863331a12e6f877b8ee1ea8bc5fd470c071d0ecf56f279e868e7a3beb928"},"downloads":-1,"filename":"jwskate-0.3.0.tar.gz","has_sig":false,"md5_digest":"4b2718b3779fd107175cd3a95a236722","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":84040,"upload_time":"2022-08-02T08:18:12","upload_time_iso_8601":"2022-08-02T08:18:12.199484Z","url":"https://files.pythonhosted.org/packages/33/36/10b6989b3b56cfa2003a8d19a7fc2521486d7a14651f4cfbfc9a081cdf16/jwskate-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"0.4.0":[{"comment_text":"","digests":{"blake2b_256":"f052a439faaccce27c8fba0c90aeac302a53bd966902ff0c614869af1e07ddac","md5":"4d68ac4625c120edf50f773b1ac8a717","sha256":"f7f4046e77a8c01331eccafe8bce21a67d5263ee51ac5631d578027d6cc0ad8f"},"downloads":-1,"filename":"jwskate-0.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"4d68ac4625c120edf50f773b1ac8a717","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":72502,"upload_time":"2022-09-30T12:33:18","upload_time_iso_8601":"2022-09-30T12:33:18.695786Z","url":"https://files.pythonhosted.org/packages/f0/52/a439faaccce27c8fba0c90aeac302a53bd966902ff0c614869af1e07ddac/jwskate-0.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dda71597be2cdc9bffa2d69f83f58e5a2f330e95dbb13e0016ed343fa9d6fdf0","md5":"30ee8e671d489f12d2a4c331fd3040db","sha256":"edec78575f1b8b1d94cc48a62223f6a58f9f7a59c5230a68cf4b3e74d36484f7"},"downloads":-1,"filename":"jwskate-0.4.0.tar.gz","has_sig":false,"md5_digest":"30ee8e671d489f12d2a4c331fd3040db","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":102881,"upload_time":"2022-09-30T12:33:20","upload_time_iso_8601":"2022-09-30T12:33:20.536189Z","url":"https://files.pythonhosted.org/packages/dd/a7/1597be2cdc9bffa2d69f83f58e5a2f330e95dbb13e0016ed343fa9d6fdf0/jwskate-0.4.0.tar.gz","yanked":false,"yanked_reason":null}],"0.4.1":[{"comment_text":"","digests":{"blake2b_256":"4a53fee86782b8b237d6b27e6a01fde8ab8348c6798bde5c2133e93a44ffc41f","md5":"dac2346eb7209785188689e619faa601","sha256":"664d78e5bea6bf1db3d18dc22f2eeb26991338b66cc6784f153206846a0de605"},"downloads":-1,"filename":"jwskate-0.4.1-py3-none-any.whl","has_sig":false,"md5_digest":"dac2346eb7209785188689e619faa601","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":72891,"upload_time":"2022-10-07T15:29:46","upload_time_iso_8601":"2022-10-07T15:29:46.145680Z","url":"https://files.pythonhosted.org/packages/4a/53/fee86782b8b237d6b27e6a01fde8ab8348c6798bde5c2133e93a44ffc41f/jwskate-0.4.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9a06c5e661c25fa92e7ac63108d415f2d8a5d11c8654a5c8fdc3f63c16ea1a56","md5":"fd350be063deef9209eebf333e5192d6","sha256":"7d77ce73d80c6a07cc25ac3e3cf8febb40a38f5679bc96d2e04f9350960ab8d1"},"downloads":-1,"filename":"jwskate-0.4.1.tar.gz","has_sig":false,"md5_digest":"fd350be063deef9209eebf333e5192d6","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":103356,"upload_time":"2022-10-07T15:29:47","upload_time_iso_8601":"2022-10-07T15:29:47.927825Z","url":"https://files.pythonhosted.org/packages/9a/06/c5e661c25fa92e7ac63108d415f2d8a5d11c8654a5c8fdc3f63c16ea1a56/jwskate-0.4.1.tar.gz","yanked":false,"yanked_reason":null}],"0.5.0":[{"comment_text":"","digests":{"blake2b_256":"ba8459913202cca3a40e5ca261583feb32a044985dad7eb5fc6679351ded09be","md5":"7ec5ada581eca1bd085821b07b4b3e29","sha256":"05623c7425a11073850237841d404f515413d8ed67cf6fca093f8a91a449e055"},"downloads":-1,"filename":"jwskate-0.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"7ec5ada581eca1bd085821b07b4b3e29","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":74764,"upload_time":"2022-11-21T10:23:56","upload_time_iso_8601":"2022-11-21T10:23:56.313767Z","url":"https://files.pythonhosted.org/packages/ba/84/59913202cca3a40e5ca261583feb32a044985dad7eb5fc6679351ded09be/jwskate-0.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8325ecbab5a4a5b80b8fd7cfc6635512a27bef87a2c3328de175d4f37bbb40c8","md5":"89701ac85218840fcad878a2cdf5844b","sha256":"b8708003dcfdfbc578893ffc27bd28522c5c3fe45725b624fdf4534b647cba76"},"downloads":-1,"filename":"jwskate-0.5.0.tar.gz","has_sig":false,"md5_digest":"89701ac85218840fcad878a2cdf5844b","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":108996,"upload_time":"2022-11-21T10:23:58","upload_time_iso_8601":"2022-11-21T10:23:58.110079Z","url":"https://files.pythonhosted.org/packages/83/25/ecbab5a4a5b80b8fd7cfc6635512a27bef87a2c3328de175d4f37bbb40c8/jwskate-0.5.0.tar.gz","yanked":false,"yanked_reason":null}],"0.6.0":[{"comment_text":"","digests":{"blake2b_256":"dfa72a1f414572d3bbdb8da3ef08b3e55727b8ea0c6e48e66f28795ea1d70f16","md5":"c7a50603119058347fa6c5dc00123e38","sha256":"3f80b74f60bcd2911a2c2c8c4b3851297881d26fdb4dfd9166faa7e932e8de08"},"downloads":-1,"filename":"jwskate-0.6.0-py3-none-any.whl","has_sig":false,"md5_digest":"c7a50603119058347fa6c5dc00123e38","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":75129,"upload_time":"2023-01-11T14:33:12","upload_time_iso_8601":"2023-01-11T14:33:12.057372Z","url":"https://files.pythonhosted.org/packages/df/a7/2a1f414572d3bbdb8da3ef08b3e55727b8ea0c6e48e66f28795ea1d70f16/jwskate-0.6.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2180d9ce9630913f6b679df4db8bf032d01e3378599ab6ddc24f27d098475b73","md5":"4322d8c94a132827c712b43885e4e6ae","sha256":"6fd88123f5353ccc25035fb7947fe3f258fb9eeef19f4981e3d27612c6525f40"},"downloads":-1,"filename":"jwskate-0.6.0.tar.gz","has_sig":false,"md5_digest":"4322d8c94a132827c712b43885e4e6ae","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":109830,"upload_time":"2023-01-11T14:33:13","upload_time_iso_8601":"2023-01-11T14:33:13.488205Z","url":"https://files.pythonhosted.org/packages/21/80/d9ce9630913f6b679df4db8bf032d01e3378599ab6ddc24f27d098475b73/jwskate-0.6.0.tar.gz","yanked":false,"yanked_reason":null}],"0.7.0":[{"comment_text":"","digests":{"blake2b_256":"03c8c79b117bf268586e95ea16ac3f3a22ae87aa41d829fa649448942386d199","md5":"4cc12a78d9fda3764f793c096f1e2f9c","sha256":"a70425367e8ee7c640ec2c33f82735f1e29cbbe95737f7543466c8d7b7203c56"},"downloads":-1,"filename":"jwskate-0.7.0-py3-none-any.whl","has_sig":false,"md5_digest":"4cc12a78d9fda3764f793c096f1e2f9c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<3.12","size":79502,"upload_time":"2023-04-19T10:03:15","upload_time_iso_8601":"2023-04-19T10:03:15.572493Z","url":"https://files.pythonhosted.org/packages/03/c8/c79b117bf268586e95ea16ac3f3a22ae87aa41d829fa649448942386d199/jwskate-0.7.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4ba4046f4b207115397f9d0505b5fbbf022a6aca09e32d18257c0dbe73dfdbff","md5":"55133816beeaa63f674473cc96d870e2","sha256":"44d160a04ad5bfbc2eb77cc80c26f9153dad7bcc7727c5bda625ad6667b9dff7"},"downloads":-1,"filename":"jwskate-0.7.0.tar.gz","has_sig":false,"md5_digest":"55133816beeaa63f674473cc96d870e2","packagetype":"sdist","python_version":"source","requires_python":">=3.8,<3.12","size":118199,"upload_time":"2023-04-19T10:03:17","upload_time_iso_8601":"2023-04-19T10:03:17.352943Z","url":"https://files.pythonhosted.org/packages/4b/a4/046f4b207115397f9d0505b5fbbf022a6aca09e32d18257c0dbe73dfdbff/jwskate-0.7.0.tar.gz","yanked":false,"yanked_reason":null}],"0.8.0":[{"comment_text":"","digests":{"blake2b_256":"eaed7305905ef49dd528cef3355fc3b34f68aeb68ec4988d69c9f58c4e0af310","md5":"e2c1783ff1737c3aee6de3072b9778c5","sha256":"d00fd16484d29f2a5af13f32f160ebc29250a7cbfafab4173574274f3b120946"},"downloads":-1,"filename":"jwskate-0.8.0-py3-none-any.whl","has_sig":false,"md5_digest":"e2c1783ff1737c3aee6de3072b9778c5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<3.12","size":80094,"upload_time":"2023-06-23T11:46:34","upload_time_iso_8601":"2023-06-23T11:46:34.508940Z","url":"https://files.pythonhosted.org/packages/ea/ed/7305905ef49dd528cef3355fc3b34f68aeb68ec4988d69c9f58c4e0af310/jwskate-0.8.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6af1d4602dbff4530c5da29856c27232a923fc9674a772a34cb96a00f9627fea","md5":"f2a84c2cdd12491a118b7b2d527efe7a","sha256":"e6062b060eb76ce65fe0cbe7936446442b017e011611e72197f8b09de6dcda34"},"downloads":-1,"filename":"jwskate-0.8.0.tar.gz","has_sig":false,"md5_digest":"f2a84c2cdd12491a118b7b2d527efe7a","packagetype":"sdist","python_version":"source","requires_python":">=3.8,<3.12","size":118665,"upload_time":"2023-06-23T11:46:37","upload_time_iso_8601":"2023-06-23T11:46:37.358692Z","url":"https://files.pythonhosted.org/packages/6a/f1/d4602dbff4530c5da29856c27232a923fc9674a772a34cb96a00f9627fea/jwskate-0.8.0.tar.gz","yanked":false,"yanked_reason":null}],"0.9.0":[{"comment_text":"","digests":{"blake2b_256":"6a5f27fc27e8831a534daf33b15f544f38d1ce76d2c1aa8cc0fbee92810a7a72","md5":"f85cc56386ca912d093969c44c1382bf","sha256":"5a201cf2c96b0ee2d4990c7e3c4a3576e29550d39d41cea6c57bf882b183fb80"},"downloads":-1,"filename":"jwskate-0.9.0-py3-none-any.whl","has_sig":false,"md5_digest":"f85cc56386ca912d093969c44c1382bf","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":80675,"upload_time":"2023-07-24T14:48:50","upload_time_iso_8601":"2023-07-24T14:48:50.428321Z","url":"https://files.pythonhosted.org/packages/6a/5f/27fc27e8831a534daf33b15f544f38d1ce76d2c1aa8cc0fbee92810a7a72/jwskate-0.9.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"43ca7fa3716bfd9d1d33b0dbdd941151e9be4af9bac8ddcec7e20a0d86c65408","md5":"7dc65ea336e6ad47a4dc9e96b8eecfe1","sha256":"69f2daacd16f0c9a7fb5218c042c3048d42a03372033be750db0cb2bb9ae3b3a"},"downloads":-1,"filename":"jwskate-0.9.0.tar.gz","has_sig":false,"md5_digest":"7dc65ea336e6ad47a4dc9e96b8eecfe1","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":119647,"upload_time":"2023-07-24T14:48:52","upload_time_iso_8601":"2023-07-24T14:48:52.121477Z","url":"https://files.pythonhosted.org/packages/43/ca/7fa3716bfd9d1d33b0dbdd941151e9be4af9bac8ddcec7e20a0d86c65408/jwskate-0.9.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"850bf28139ee145790494fbc05f6dd895f4e5c36051c46663ab8b04d095a590f","md5":"3b6ed0e7219d954aa22f3e39bcee6982","sha256":"cdfa04fac10366afab08c20d2f75d1c6b57dc7d099b407b8fb4318349272f933"},"downloads":-1,"filename":"jwskate-0.11.1-py3-none-any.whl","has_sig":false,"md5_digest":"3b6ed0e7219d954aa22f3e39bcee6982","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":84831,"upload_time":"2024-02-01T17:29:57","upload_time_iso_8601":"2024-02-01T17:29:57.585428Z","url":"https://files.pythonhosted.org/packages/85/0b/f28139ee145790494fbc05f6dd895f4e5c36051c46663ab8b04d095a590f/jwskate-0.11.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"efa3760eeb2da94ea4e0fd01064a15414a9e76fdaa435fd39cb07b2e4a065df9","md5":"3a3e89d563918e0073fa48bcd8a9aa5f","sha256":"35354b487c8e835fdd57befea5e93e9e52fe25869d884fc764511d22061e6685"},"downloads":-1,"filename":"jwskate-0.11.1.tar.gz","has_sig":false,"md5_digest":"3a3e89d563918e0073fa48bcd8a9aa5f","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":119523,"upload_time":"2024-02-01T17:30:00","upload_time_iso_8601":"2024-02-01T17:30:00.339655Z","url":"https://files.pythonhosted.org/packages/ef/a3/760eeb2da94ea4e0fd01064a15414a9e76fdaa435fd39cb07b2e4a065df9/jwskate-0.11.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
