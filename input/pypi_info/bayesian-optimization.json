{"info":{"author":"Fernando Nogueira","author_email":null,"bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.9"],"description":"<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/bayesian-optimization/BayesianOptimization/master/docsrc/static/func.png\"><br><br>\n</div>\n\n# Bayesian Optimization\n\n![tests](https://github.com/bayesian-optimization/BayesianOptimization/actions/workflows/run_tests.yml/badge.svg)\n[![Codecov](https://codecov.io/github/bayesian-optimization/BayesianOptimization/badge.svg?branch=master&service=github)](https://codecov.io/github/bayesian-optimization/BayesianOptimization?branch=master)\n[![Pypi](https://img.shields.io/pypi/v/bayesian-optimization.svg)](https://pypi.python.org/pypi/bayesian-optimization)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/bayesian-optimization)\n\nPure Python implementation of bayesian global optimization with gaussian\nprocesses.\n\n## Installation\n\n* PyPI (pip):\n\n```console\n$ pip install bayesian-optimization\n```\n\n* Conda from conda-forge channel:\n\n```console\n$ conda install -c conda-forge bayesian-optimization\n```\n\nThis is a constrained global optimization package built upon bayesian inference\nand gaussian process, that attempts to find the maximum value of an unknown\nfunction in as few iterations as possible. This technique is particularly\nsuited for optimization of high cost functions, situations where the balance\nbetween exploration and exploitation is important.\n\n## Quick Start\nSee below for a quick tour over the basics of the Bayesian Optimization package. More detailed information, other advanced features, and tips on usage/implementation can be found in the [examples](http://bayesian-optimization.github.io/BayesianOptimization/examples.html) folder. I suggest that you:\n- Follow the [basic tour notebook](http://bayesian-optimization.github.io/BayesianOptimization/basic-tour.html) to learn how to use the package's most important features.\n- Take a look at the [advanced tour notebook](http://bayesian-optimization.github.io/BayesianOptimization/advanced-tour.html) to learn how to make the package more flexible, how to deal with categorical parameters, how to use observers, and more.\n- Check out this [notebook](http://bayesian-optimization.github.io/BayesianOptimization/visualization.html) with a step by step visualization of how this method works.\n- To understand how to use bayesian optimization when additional constraints are present, see the [constrained optimization notebook](http://bayesian-optimization.github.io/BayesianOptimization/constraints.html).\n- Explore this [notebook](http://bayesian-optimization.github.io/BayesianOptimization/exploitation_vs_exploration.html)\nexemplifying the balance between exploration and exploitation and how to\ncontrol it.\n- Go over this [script](https://github.com/bayesian-optimization/BayesianOptimization/blob/master/examples/sklearn_example.py)\nfor examples of how to tune parameters of Machine Learning models using cross validation and bayesian optimization.\n- Explore the [domain reduction notebook](http://bayesian-optimization.github.io/BayesianOptimization/domain_reduction.html) to learn more about how search can be sped up by dynamically changing parameters' bounds.\n- Finally, take a look at this [script](https://github.com/bayesian-optimization/BayesianOptimization/blob/master/examples/async_optimization.py)\nfor ideas on how to implement bayesian optimization in a distributed fashion using this package.\n\n\n## How does it work?\n\nBayesian optimization works by constructing a posterior distribution of functions (gaussian process) that best describes the function you want to optimize. As the number of observations grows, the posterior distribution improves, and the algorithm becomes more certain of which regions in parameter space are worth exploring and which are not, as seen in the picture below.\n\n![BayesianOptimization in action](docsrc/static/bo_example.png)\n\nAs you iterate over and over, the algorithm balances its needs of exploration and exploitation taking into account what it knows about the target function. At each step a Gaussian Process is fitted to the known samples (points previously explored), and the posterior distribution, combined with a exploration strategy (such as UCB (Upper Confidence Bound), or EI (Expected Improvement)), are used to determine the next point that should be explored (see the gif below).\n\n![BayesianOptimization in action](docsrc/static/bayesian_optimization.gif)\n\nThis process is designed to minimize the number of steps required to find a combination of parameters that are close to the optimal combination. To do so, this method uses a proxy optimization problem (finding the maximum of the acquisition function) that, albeit still a hard problem, is cheaper (in the computational sense) and common tools can be employed. Therefore Bayesian Optimization is most adequate for situations where sampling the function to be optimized is a very expensive endeavor. See the references for a proper discussion of this method.\n\nThis project is under active development, if you find a bug, or anything that\nneeds correction, please let me know.\n\n\n## Basic tour of the Bayesian Optimization package\n\n### 1. Specifying the function to be optimized\n\nThis is a function optimization package, therefore the first and most important ingredient is, of course, the function to be optimized.\n\n**DISCLAIMER:** We know exactly how the output of the function below depends on its parameter. Obviously this is just an example, and you shouldn't expect to know it in a real scenario. However, it should be clear that you don't need to. All you need in order to use this package (and more generally, this technique) is a function `f` that takes a known set of parameters and outputs a real number.\n\n\n```python\ndef black_box_function(x, y):\n    \"\"\"Function with unknown internals we wish to maximize.\n\n    This is just serving as an example, for all intents and\n    purposes think of the internals of this function, i.e.: the process\n    which generates its output values, as unknown.\n    \"\"\"\n    return -x ** 2 - (y - 1) ** 2 + 1\n```\n\n### 2. Getting Started\n\nAll we need to get started is to instantiate a `BayesianOptimization` object specifying a function to be optimized `f`, and its parameters with their corresponding bounds, `pbounds`. This is a constrained optimization technique, so you must specify the minimum and maximum values that can be probed for each parameter in order for it to work\n\n\n```python\nfrom bayes_opt import BayesianOptimization\n\n# Bounded region of parameter space\npbounds = {'x': (2, 4), 'y': (-3, 3)}\n\noptimizer = BayesianOptimization(\n    f=black_box_function,\n    pbounds=pbounds,\n    random_state=1,\n)\n```\n\nThe BayesianOptimization object will work out of the box without much tuning needed. The main method you should be aware of is `maximize`, which does exactly what you think it does.\n\nThere are many parameters you can pass to maximize, nonetheless, the most important ones are:\n- `n_iter`: How many steps of bayesian optimization you want to perform. The more steps the more likely to find a good maximum you are.\n- `init_points`: How many steps of **random** exploration you want to perform. Random exploration can help by diversifying the exploration space.\n\n\n```python\noptimizer.maximize(\n    init_points=2,\n    n_iter=3,\n)\n```\n\n    |   iter    |  target   |     x     |     y     |\n    -------------------------------------------------\n    |  1        | -7.135    |  2.834    |  1.322    |\n    |  2        | -7.78     |  2.0      | -1.186    |\n    |  3        | -19.0     |  4.0      |  3.0      |\n    |  4        | -16.3     |  2.378    | -2.413    |\n    |  5        | -4.441    |  2.105    | -0.005822 |\n    =================================================\n\n\nThe best combination of parameters and target value found can be accessed via the property `optimizer.max`.\n\n\n```python\nprint(optimizer.max)\n>>> {'target': -4.441293113411222, 'params': {'y': -0.005822117636089974, 'x': 2.104665051994087}}\n```\n\n\nWhile the list of all parameters probed and their corresponding target values is available via the property `optimizer.res`.\n\n\n```python\nfor i, res in enumerate(optimizer.res):\n    print(\"Iteration {}: \\n\\t{}\".format(i, res))\n\n>>> Iteration 0:\n>>>     {'target': -7.135455292718879, 'params': {'y': 1.3219469606529488, 'x': 2.8340440094051482}}\n>>> Iteration 1:\n>>>     {'target': -7.779531005607566, 'params': {'y': -1.1860045642089614, 'x': 2.0002287496346898}}\n>>> Iteration 2:\n>>>     {'target': -19.0, 'params': {'y': 3.0, 'x': 4.0}}\n>>> Iteration 3:\n>>>     {'target': -16.29839645063864, 'params': {'y': -2.412527795983739, 'x': 2.3776144540856503}}\n>>> Iteration 4:\n>>>     {'target': -4.441293113411222, 'params': {'y': -0.005822117636089974, 'x': 2.104665051994087}}\n```\n\n\n#### 2.1 Changing bounds\n\nDuring the optimization process you may realize the bounds chosen for some parameters are not adequate. For these situations you can invoke the method `set_bounds` to alter them. You can pass any combination of **existing** parameters and their associated new bounds.\n\n\n```python\noptimizer.set_bounds(new_bounds={\"x\": (-2, 3)})\n\noptimizer.maximize(\n    init_points=0,\n    n_iter=5,\n)\n```\n\n    |   iter    |  target   |     x     |     y     |\n    -------------------------------------------------\n    |  6        | -5.145    |  2.115    | -0.2924   |\n    |  7        | -5.379    |  2.337    |  0.04124  |\n    |  8        | -3.581    |  1.874    | -0.03428  |\n    |  9        | -2.624    |  1.702    |  0.1472   |\n    |  10       | -1.762    |  1.442    |  0.1735   |\n    =================================================\n\n#### 2.2 Sequential Domain Reduction\n\nSometimes the initial boundaries specified for a problem are too wide, and adding points to improve the response surface in regions of the solution domain is extraneous. Other times the cost function is very expensive to compute, and minimizing the number of calls is extremely beneficial.\n\nWhen it's worthwhile to converge on an optimal point quickly rather than try to find the optimal point, contracting the domain around the current optimal value as the search progresses can speed up the search progress considerably. Using the `SequentialDomainReductionTransformer` the bounds of the problem can be panned and zoomed dynamically in an attempt to improve convergence.\n\n![sequential domain reduction](docsrc/static/sdr.png)\n\nAn example of using the `SequentialDomainReductionTransformer` is shown in the [domain reduction notebook](http://bayesian-optimization.github.io/BayesianOptimization/domain_reduction.html). More information about this method can be found in the paper [\"On the robustness of a simple domain reduction scheme for simulation‐based optimization\"](http://www.truegrid.com/srsm_revised.pdf).\n\n### 3. Guiding the optimization\n\nIt is often the case that we have an idea of regions of the parameter space where the maximum of our function might lie. For these situations the `BayesianOptimization` object allows the user to specify points to be probed. By default these will be explored lazily (`lazy=True`), meaning these points will be evaluated only the next time you call `maximize`. This probing process happens before the gaussian process takes over.\n\nParameters can be passed as dictionaries or as an iterable.\n\n```python\noptimizer.probe(\n    params={\"x\": 0.5, \"y\": 0.7},\n    lazy=True,\n)\n\noptimizer.probe(\n    params=[-0.3, 0.1],\n    lazy=True,\n)\n\n# Will probe only the two points specified above\noptimizer.maximize(init_points=0, n_iter=0)\n```\n\n    |   iter    |  target   |     x     |     y     |\n    -------------------------------------------------\n    |  11       |  0.66     |  0.5      |  0.7      |\n    |  12       |  0.1      | -0.3      |  0.1      |\n    =================================================\n\n\n### 4. Saving, loading and restarting\n\nBy default you can follow the progress of your optimization by setting `verbose>0` when instantiating the `BayesianOptimization` object. If you need more control over logging/alerting you will need to use an observer. For more information about observers checkout the advanced tour notebook. Here we will only see how to use the native `JSONLogger` object to save to and load progress from files.\n\n#### 4.1 Saving progress\n\n\n```python\nfrom bayes_opt.logger import JSONLogger\nfrom bayes_opt.event import Events\n```\n\nThe observer paradigm works by:\n1. Instantiating an observer object.\n2. Tying the observer object to a particular event fired by an optimizer.\n\nThe `BayesianOptimization` object fires a number of internal events during optimization, in particular, everytime it probes the function and obtains a new parameter-target combination it will fire an `Events.OPTIMIZATION_STEP` event, which our logger will listen to.\n\n**Caveat:** The logger will not look back at previously probed points.\n\n\n```python\nlogger = JSONLogger(path=\"./logs.log\")\noptimizer.subscribe(Events.OPTIMIZATION_STEP, logger)\n\n# Results will be saved in ./logs.log\noptimizer.maximize(\n    init_points=2,\n    n_iter=3,\n)\n```\n\nBy default the previous data in the json file is removed. If you want to keep working with the same logger, the `reset` parameter in `JSONLogger` should be set to False.\n\n#### 4.2 Loading progress\n\nNaturally, if you stored progress you will be able to load that onto a new instance of `BayesianOptimization`. The easiest way to do it is by invoking the `load_logs` function, from the `util` submodule.\n\n\n```python\nfrom bayes_opt.util import load_logs\n\n\nnew_optimizer = BayesianOptimization(\n    f=black_box_function,\n    pbounds={\"x\": (-2, 2), \"y\": (-2, 2)},\n    verbose=2,\n    random_state=7,\n)\n\n# New optimizer is loaded with previously seen points\nload_logs(new_optimizer, logs=[\"./logs.log\"]);\n```\n\n## Next Steps\n\nThis introduction covered the most basic functionality of the package. Checkout the [basic-tour](http://bayesian-optimization.github.io/BayesianOptimization/basic-tour.html) and [advanced-tour](http://bayesian-optimization.github.io/BayesianOptimization/advanced-tour.html), where you will find detailed explanations and other more advanced functionality. Also, browse the [examples](http://bayesian-optimization.github.io/BayesianOptimization/examples.html) for implementation tips and ideas.\n\n## Minutiae\n\n### Citation\n\nIf you used this package in your research, please cite it:\n\n```\n@Misc{,\n    author = {Fernando Nogueira},\n    title = {{Bayesian Optimization}: Open source constrained global optimization tool for {Python}},\n    year = {2014--},\n    url = \" https://github.com/bayesian-optimization/BayesianOptimization\"\n}\n```\nIf you used any of the advanced functionalities, please additionally cite the corresponding publication:\n\nFor the `SequentialDomainTransformer`:\n```\n@article{\n    author = {Stander, Nielen and Craig, Kenneth},\n    year = {2002},\n    month = {06},\n    pages = {},\n    title = {On the robustness of a simple domain reduction scheme for simulation-based optimization},\n    volume = {19},\n    journal = {International Journal for Computer-Aided Engineering and Software (Eng. Comput.)},\n    doi = {10.1108/02644400210430190}\n}\n```\n\nFor constrained optimization:\n```\n@inproceedings{gardner2014bayesian,\n    title={Bayesian optimization with inequality constraints.},\n    author={Gardner, Jacob R and Kusner, Matt J and Xu, Zhixiang Eddie and Weinberger, Kilian Q and Cunningham, John P},\n    booktitle={ICML},\n    volume={2014},\n    pages={937--945},\n    year={2014}\n}\n```\n\n### References:\n* http://papers.nips.cc/paper/4522-practical-bayesian-optimization-of-machine-learning-algorithms.pdf\n* http://arxiv.org/pdf/1012.2599v1.pdf\n* http://www.gaussianprocess.org/gpml/\n* https://www.youtube.com/watch?v=vz3D36VXefI&index=10&list=PLE6Wd9FR--EdyJ5lbFl8UuGjecvVw66F6\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":null,"license":"MIT","maintainer":null,"maintainer_email":null,"name":"bayesian-optimization","package_url":"https://pypi.org/project/bayesian-optimization/","platform":null,"project_url":"https://pypi.org/project/bayesian-optimization/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/bayesian-optimization/1.5.1/","requires_dist":["scikit-learn<2.0.0,>=1.0.0","numpy>=1.25","scipy<2.0.0,>=1.0.0","colorama<0.5.0,>=0.4.6"],"requires_python":"<4.0,>=3.9","summary":"Bayesian Optimization package","version":"1.5.1","yanked":false,"yanked_reason":null},"last_serial":24068904,"releases":{"0.4.0":[{"comment_text":"","digests":{"blake2b_256":"cee78ed25ca352e946dd79e7e41c46562a9eb37769c70f0bc24205f88e3db250","md5":"27379c844c51174a76de5c27fe2bb8e0","sha256":"cea90ac5f6ed06023ef7e7528b698bf813ff3d19a74c7d4565485a0be90f0d67"},"downloads":-1,"filename":"bayesian-optimization-0.4.0.tar.gz","has_sig":false,"md5_digest":"27379c844c51174a76de5c27fe2bb8e0","packagetype":"sdist","python_version":"source","requires_python":null,"size":6291,"upload_time":"2017-01-04T03:37:09","upload_time_iso_8601":"2017-01-04T03:37:09.119398Z","url":"https://files.pythonhosted.org/packages/ce/e7/8ed25ca352e946dd79e7e41c46562a9eb37769c70f0bc24205f88e3db250/bayesian-optimization-0.4.0.tar.gz","yanked":false,"yanked_reason":null}],"0.5.0":[{"comment_text":"","digests":{"blake2b_256":"ae58b2ca4519d4727185196e3a44b09ad7998ad82cacedee31181bd0de8eb834","md5":"6ecbf5c163708be835f326f4ba33163e","sha256":"6d0b4cc2378615118fecb71a1a2dc2d6d9e9cbc2494467c4e1dfc1cf4b3cc73d"},"downloads":-1,"filename":"bayesian-optimization-0.5.0.tar.gz","has_sig":false,"md5_digest":"6ecbf5c163708be835f326f4ba33163e","packagetype":"sdist","python_version":"source","requires_python":null,"size":6478,"upload_time":"2017-10-24T14:14:45","upload_time_iso_8601":"2017-10-24T14:14:45.696163Z","url":"https://files.pythonhosted.org/packages/ae/58/b2ca4519d4727185196e3a44b09ad7998ad82cacedee31181bd0de8eb834/bayesian-optimization-0.5.0.tar.gz","yanked":false,"yanked_reason":null}],"0.6.0":[{"comment_text":"","digests":{"blake2b_256":"833dd2dc2abaef016c597febfce67c6868ee4c3d1b81e9b9e4f0b3ad551a3625","md5":"d52fef0ddd0fa109f40543c5c2a7925f","sha256":"f3e515045450da0a56cd690eafebdff03294b8210a76d79530a90a7abe93346e"},"downloads":-1,"filename":"bayesian-optimization-0.6.0.tar.gz","has_sig":false,"md5_digest":"d52fef0ddd0fa109f40543c5c2a7925f","packagetype":"sdist","python_version":"source","requires_python":null,"size":10724,"upload_time":"2017-12-17T22:56:26","upload_time_iso_8601":"2017-12-17T22:56:26.795199Z","url":"https://files.pythonhosted.org/packages/83/3d/d2dc2abaef016c597febfce67c6868ee4c3d1b81e9b9e4f0b3ad551a3625/bayesian-optimization-0.6.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"adfda53b65d5cff76d1f2783ac8172eb0adb670ec86f4955e7f8f3ef21d71e3a","md5":"88232ca37ee29d9ed16232d51d561c88","sha256":"14a626073cd0c8de8bceb1f0c52f2d016b5ad976473905abb82a5c3e28467037"},"downloads":-1,"filename":"bayesian-optimization-1.0.0.tar.gz","has_sig":false,"md5_digest":"88232ca37ee29d9ed16232d51d561c88","packagetype":"sdist","python_version":"source","requires_python":null,"size":12739,"upload_time":"2018-11-25T16:50:57","upload_time_iso_8601":"2018-11-25T16:50:57.695081Z","url":"https://files.pythonhosted.org/packages/ad/fd/a53b65d5cff76d1f2783ac8172eb0adb670ec86f4955e7f8f3ef21d71e3a/bayesian-optimization-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"720c173ac467d0a53e33e41b521e4ceba74a8ac7c7873d7b857a8fbdca88302d","md5":"5f7a7546649fe87229d9a6691f212735","sha256":"b7ba390dbdc3fe431f996952c16bfb878c6d19f1ea5efe2e5c8b788359e40c48"},"downloads":-1,"filename":"bayesian-optimization-1.0.1.tar.gz","has_sig":false,"md5_digest":"5f7a7546649fe87229d9a6691f212735","packagetype":"sdist","python_version":"source","requires_python":null,"size":12535,"upload_time":"2019-02-12T18:54:46","upload_time_iso_8601":"2019-02-12T18:54:46.852560Z","url":"https://files.pythonhosted.org/packages/72/0c/173ac467d0a53e33e41b521e4ceba74a8ac7c7873d7b857a8fbdca88302d/bayesian-optimization-1.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.0.3":[{"comment_text":"","digests":{"blake2b_256":"8b24a66f5a355d0a3c7d3953542d0e586502d3c5cc893c245c89e8222187bc7d","md5":"3eb2b663a53be585394358277ee61be3","sha256":"b2b3517b423d86066de8d6f3887e660270a1d325720de9bb09d8148821affe21"},"downloads":-1,"filename":"bayesian_optimization-1.0.3-py3-none-any.whl","has_sig":false,"md5_digest":"3eb2b663a53be585394358277ee61be3","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":13939,"upload_time":"2020-02-17T17:03:15","upload_time_iso_8601":"2020-02-17T17:03:15.878677Z","url":"https://files.pythonhosted.org/packages/8b/24/a66f5a355d0a3c7d3953542d0e586502d3c5cc893c245c89e8222187bc7d/bayesian_optimization-1.0.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c3f077d83d9127a3176d978c452c8b2ed867d7a04be80a955b2c018957854b9e","md5":"2051d492d5159fefa872c2e2ccbb8f2d","sha256":"1ca3171a6a6b00991445431d29654fe76454f59e9ce3631296354a4f0262abce"},"downloads":-1,"filename":"bayesian-optimization-1.0.3.tar.gz","has_sig":false,"md5_digest":"2051d492d5159fefa872c2e2ccbb8f2d","packagetype":"sdist","python_version":"source","requires_python":null,"size":12682,"upload_time":"2020-02-17T17:03:16","upload_time_iso_8601":"2020-02-17T17:03:16.950085Z","url":"https://files.pythonhosted.org/packages/c3/f0/77d83d9127a3176d978c452c8b2ed867d7a04be80a955b2c018957854b9e/bayesian-optimization-1.0.3.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"b5269842333adbb8f17bcb3d699400a8b1ccde0af0b6de8d07224e183728acdf","md5":"c0f953456422979b600b31bc6da15bb2","sha256":"0c09445f817c14c5a11fcf9732c212c4ef641254b037b6c7326bb16bbb9b8e1f"},"downloads":-1,"filename":"bayesian_optimization-1.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"c0f953456422979b600b31bc6da15bb2","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":13939,"upload_time":"2020-02-17T17:18:20","upload_time_iso_8601":"2020-02-17T17:18:20.050385Z","url":"https://files.pythonhosted.org/packages/b5/26/9842333adbb8f17bcb3d699400a8b1ccde0af0b6de8d07224e183728acdf/bayesian_optimization-1.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8a4b8b947815159e2b73c469dd83f1618b355f2cb36559e4fa330fd67030b11c","md5":"76b0ddd38dfd977bfe885a39235d2273","sha256":"67a7abbad1213961a992b5fc9e1f659c13ce9db28dc0cd920d3398ddc11da9d4"},"downloads":-1,"filename":"bayesian-optimization-1.1.0.tar.gz","has_sig":false,"md5_digest":"76b0ddd38dfd977bfe885a39235d2273","packagetype":"sdist","python_version":"source","requires_python":null,"size":12680,"upload_time":"2020-02-17T17:18:21","upload_time_iso_8601":"2020-02-17T17:18:21.395597Z","url":"https://files.pythonhosted.org/packages/8a/4b/8b947815159e2b73c469dd83f1618b355f2cb36559e4fa330fd67030b11c/bayesian-optimization-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"bb7afd8059a3881d3ab37ac8f72f56b73937a14e8bb14a9733e68cc8b17dbe3c","md5":"4d0a736c7852aeb48118f85d28139529","sha256":"c2fd3af4b6cc24ee1c145295b2a900ffb9b455cad924e8185a8d5784712bc935"},"downloads":-1,"filename":"bayesian-optimization-1.2.0.tar.gz","has_sig":false,"md5_digest":"4d0a736c7852aeb48118f85d28139529","packagetype":"sdist","python_version":"source","requires_python":null,"size":14057,"upload_time":"2020-05-16T15:56:09","upload_time_iso_8601":"2020-05-16T15:56:09.198381Z","url":"https://files.pythonhosted.org/packages/bb/7a/fd8059a3881d3ab37ac8f72f56b73937a14e8bb14a9733e68cc8b17dbe3c/bayesian-optimization-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"1.3.0":[{"comment_text":"","digests":{"blake2b_256":"0a473b2294d09e4120e79abd42a7a10d83e0cf81aa2fd4ccf4ff24652f4c50c3","md5":"d825366a1de660172e136f1813800b9b","sha256":"a9bd1de713a23acee4b42dfbec242a27517694e96a4ca03da415580400f5e1e3"},"downloads":-1,"filename":"bayesian_optimization-1.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"d825366a1de660172e136f1813800b9b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":16868,"upload_time":"2022-10-24T09:18:17","upload_time_iso_8601":"2022-10-24T09:18:17.748641Z","url":"https://files.pythonhosted.org/packages/0a/47/3b2294d09e4120e79abd42a7a10d83e0cf81aa2fd4ccf4ff24652f4c50c3/bayesian_optimization-1.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"051659c7b6840c40b251218326d992edc952bc6eb61bbffdaeaec02152da1858","md5":"24361eb4aa5d5e33a57efbd306978029","sha256":"b91d5a6db89e9a9aadde6539eecf4c81a793a5705ad72680eebe9bd417fedc94"},"downloads":-1,"filename":"bayesian-optimization-1.3.0.tar.gz","has_sig":false,"md5_digest":"24361eb4aa5d5e33a57efbd306978029","packagetype":"sdist","python_version":"source","requires_python":null,"size":18490,"upload_time":"2022-10-24T09:18:19","upload_time_iso_8601":"2022-10-24T09:18:19.230132Z","url":"https://files.pythonhosted.org/packages/05/16/59c7b6840c40b251218326d992edc952bc6eb61bbffdaeaec02152da1858/bayesian-optimization-1.3.0.tar.gz","yanked":false,"yanked_reason":null}],"1.3.1":[{"comment_text":"","digests":{"blake2b_256":"f672688e132136c70d7a275aae3492608d778efc6f307cb5768fc059d511ff68","md5":"063f7e2688a1bb8f3882628f3260da8c","sha256":"5b529efac88453120cff7afccdbac63b4830f4540594b74c2c62ad5e3583eda0"},"downloads":-1,"filename":"bayesian_optimization-1.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"063f7e2688a1bb8f3882628f3260da8c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":16844,"upload_time":"2022-10-26T23:13:52","upload_time_iso_8601":"2022-10-26T23:13:52.088891Z","url":"https://files.pythonhosted.org/packages/f6/72/688e132136c70d7a275aae3492608d778efc6f307cb5768fc059d511ff68/bayesian_optimization-1.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7f1f92522760f6fc14c14710dbdd92cf0c0803e916e7d007e16a532b0e40ba76","md5":"ff0f79679c3c04da2c03b6ace5f8e9fc","sha256":"0c303e342ffa4f794902642fef08119929209152bd2b0de87f769b95f3da1870"},"downloads":-1,"filename":"bayesian-optimization-1.3.1.tar.gz","has_sig":false,"md5_digest":"ff0f79679c3c04da2c03b6ace5f8e9fc","packagetype":"sdist","python_version":"source","requires_python":null,"size":18822,"upload_time":"2022-10-26T23:13:54","upload_time_iso_8601":"2022-10-26T23:13:54.309164Z","url":"https://files.pythonhosted.org/packages/7f/1f/92522760f6fc14c14710dbdd92cf0c0803e916e7d007e16a532b0e40ba76/bayesian-optimization-1.3.1.tar.gz","yanked":false,"yanked_reason":null}],"1.4.0":[{"comment_text":"","digests":{"blake2b_256":"2caf478deae10abb1cc1034993064b41dbc6015734b4f8cafa2c3d1a05861f75","md5":"5209fbc92d15231a6400a1b799a55f3f","sha256":"0984cfcbc9472284778962416f0d4892286da3f54e1df2767ef89263b6e22263"},"downloads":-1,"filename":"bayesian_optimization-1.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"5209fbc92d15231a6400a1b799a55f3f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":17895,"upload_time":"2022-11-27T23:41:29","upload_time_iso_8601":"2022-11-27T23:41:29.669803Z","url":"https://files.pythonhosted.org/packages/2c/af/478deae10abb1cc1034993064b41dbc6015734b4f8cafa2c3d1a05861f75/bayesian_optimization-1.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8130c72190aa569dc274642a9a935ac32a9f6697a635d297705ad7c654503e68","md5":"07753b7d466d75d8e77849b805c65bd5","sha256":"5e7b5ada7826a8a342932d67f8ae5e638ade588a12b7f7df058fb7a2defe5866"},"downloads":-1,"filename":"bayesian-optimization-1.4.0.tar.gz","has_sig":false,"md5_digest":"07753b7d466d75d8e77849b805c65bd5","packagetype":"sdist","python_version":"source","requires_python":null,"size":19792,"upload_time":"2022-11-27T23:41:31","upload_time_iso_8601":"2022-11-27T23:41:31.870781Z","url":"https://files.pythonhosted.org/packages/81/30/c72190aa569dc274642a9a935ac32a9f6697a635d297705ad7c654503e68/bayesian-optimization-1.4.0.tar.gz","yanked":false,"yanked_reason":null}],"1.4.1":[{"comment_text":"","digests":{"blake2b_256":"867157ce5c1859e997b6a66fd368fcd940452032c7fb2208371117a693e5f70a","md5":"2c87820a821f6ffd68f44d23cd54f11b","sha256":"ab5f308dfeb9269567a7d75a1d9b996040550f87955dcc782e4c4f2e9ee88942"},"downloads":-1,"filename":"bayesian_optimization-1.4.1-py3-none-any.whl","has_sig":false,"md5_digest":"2c87820a821f6ffd68f44d23cd54f11b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18078,"upload_time":"2022-11-29T10:13:43","upload_time_iso_8601":"2022-11-29T10:13:43.196455Z","url":"https://files.pythonhosted.org/packages/86/71/57ce5c1859e997b6a66fd368fcd940452032c7fb2208371117a693e5f70a/bayesian_optimization-1.4.1-py3-none-any.whl","yanked":true,"yanked_reason":"https://github.com/fmfn/BayesianOptimization/pull/388"},{"comment_text":"","digests":{"blake2b_256":"a35a47e350715519d17c59000cdc53011f42ab6f6da6e74a90543b70ba6829b3","md5":"d6da89f42ea9a9ddda8d3ccd679ff9f9","sha256":"6e883b41d4544b245f0f912bebf6614d74c4039a38e581dd3fec24e532c22b57"},"downloads":-1,"filename":"bayesian-optimization-1.4.1.tar.gz","has_sig":false,"md5_digest":"d6da89f42ea9a9ddda8d3ccd679ff9f9","packagetype":"sdist","python_version":"source","requires_python":null,"size":19993,"upload_time":"2022-11-29T10:13:45","upload_time_iso_8601":"2022-11-29T10:13:45.127658Z","url":"https://files.pythonhosted.org/packages/a3/5a/47e350715519d17c59000cdc53011f42ab6f6da6e74a90543b70ba6829b3/bayesian-optimization-1.4.1.tar.gz","yanked":true,"yanked_reason":"https://github.com/fmfn/BayesianOptimization/pull/388"}],"1.4.2":[{"comment_text":"","digests":{"blake2b_256":"d88a4e20906c3e564c0412e2fc663b7188c49a243e45389b6df7daea87257557","md5":"7a7c5922646aac59fce680174731691b","sha256":"c42a490eff0eea9f80d32c18d18f0ee4f2896390724cec57945f94dc0a267697"},"downloads":-1,"filename":"bayesian_optimization-1.4.2-py3-none-any.whl","has_sig":false,"md5_digest":"7a7c5922646aac59fce680174731691b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">= 3.7","size":17945,"upload_time":"2022-12-04T06:02:14","upload_time_iso_8601":"2022-12-04T06:02:14.778627Z","url":"https://files.pythonhosted.org/packages/d8/8a/4e20906c3e564c0412e2fc663b7188c49a243e45389b6df7daea87257557/bayesian_optimization-1.4.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e0c2b44d5c8561e9a1e59df7b53cf8400b3ff13023bb6d4c3ba2a70bd557e3b7","md5":"493cdb146a293b9bb4ff73a40be01206","sha256":"4e4e98cd0f0fb716202ea4c3b9e7c4c530270e69aa26f0eaf6ef715328f89c04"},"downloads":-1,"filename":"bayesian-optimization-1.4.2.tar.gz","has_sig":false,"md5_digest":"493cdb146a293b9bb4ff73a40be01206","packagetype":"sdist","python_version":"source","requires_python":">= 3.7","size":19879,"upload_time":"2022-12-04T06:02:17","upload_time_iso_8601":"2022-12-04T06:02:17.121605Z","url":"https://files.pythonhosted.org/packages/e0/c2/b44d5c8561e9a1e59df7b53cf8400b3ff13023bb6d4c3ba2a70bd557e3b7/bayesian-optimization-1.4.2.tar.gz","yanked":false,"yanked_reason":null}],"1.4.3":[{"comment_text":"","digests":{"blake2b_256":"45cf3016b660afca02c6ecca3c1cc6d8df3b8f1a6ff4878103204d0aa6b4c769","md5":"cd1abebec17674492b1042e44da666f3","sha256":"2719272d5825f1ba7d7609f3b1c1fdca13eba1b7ad52a5ca2e62f34154ecae28"},"downloads":-1,"filename":"bayesian_optimization-1.4.3-py3-none-any.whl","has_sig":false,"md5_digest":"cd1abebec17674492b1042e44da666f3","packagetype":"bdist_wheel","python_version":"py3","requires_python":">= 3.7","size":18346,"upload_time":"2023-04-25T21:58:33","upload_time_iso_8601":"2023-04-25T21:58:33.498386Z","url":"https://files.pythonhosted.org/packages/45/cf/3016b660afca02c6ecca3c1cc6d8df3b8f1a6ff4878103204d0aa6b4c769/bayesian_optimization-1.4.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9a37e34b70e97b83393d98bb53cdfcf0213af29ac5932d6752bbf2abbda5b998","md5":"fea0ca482fac49a03a39e774e47cf0bd","sha256":"f9a448e1b52d961301cbc953ce4199709f6c26b1c88994c9b4dadb7752a64550"},"downloads":-1,"filename":"bayesian-optimization-1.4.3.tar.gz","has_sig":false,"md5_digest":"fea0ca482fac49a03a39e774e47cf0bd","packagetype":"sdist","python_version":"source","requires_python":">= 3.7","size":27803,"upload_time":"2023-04-25T21:58:35","upload_time_iso_8601":"2023-04-25T21:58:35.410197Z","url":"https://files.pythonhosted.org/packages/9a/37/e34b70e97b83393d98bb53cdfcf0213af29ac5932d6752bbf2abbda5b998/bayesian-optimization-1.4.3.tar.gz","yanked":false,"yanked_reason":null}],"1.5.0":[{"comment_text":"","digests":{"blake2b_256":"aff6adfa3c95b1d910f9102e6ed1babbe458497ff7707f540b091dbf66631df9","md5":"1d10809c28e0ac35f71ae1a7faf47729","sha256":"98554b722ae89709c5b26578209ff5f1425e5a6fd70187bca8db78259a07ae9d"},"downloads":-1,"filename":"bayesian_optimization-1.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"1d10809c28e0ac35f71ae1a7faf47729","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<4.0,>=3.9","size":28060,"upload_time":"2024-06-24T12:11:14","upload_time_iso_8601":"2024-06-24T12:11:14.965085Z","url":"https://files.pythonhosted.org/packages/af/f6/adfa3c95b1d910f9102e6ed1babbe458497ff7707f540b091dbf66631df9/bayesian_optimization-1.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9a3fa19b8525becb0c46d2b15280d5c69d1b712ad416f2fefcc4b77ab8bb164b","md5":"50efc6f239e2bf96bf79eda8efbfbe2d","sha256":"d93163709f1861d2343ff66182a4b0cf0ce2d3d2929818becdec7bf78a96acbf"},"downloads":-1,"filename":"bayesian_optimization-1.5.0.tar.gz","has_sig":false,"md5_digest":"50efc6f239e2bf96bf79eda8efbfbe2d","packagetype":"sdist","python_version":"source","requires_python":"<4.0,>=3.9","size":29160,"upload_time":"2024-06-24T12:11:16","upload_time_iso_8601":"2024-06-24T12:11:16.724195Z","url":"https://files.pythonhosted.org/packages/9a/3f/a19b8525becb0c46d2b15280d5c69d1b712ad416f2fefcc4b77ab8bb164b/bayesian_optimization-1.5.0.tar.gz","yanked":false,"yanked_reason":null}],"1.5.1":[{"comment_text":"","digests":{"blake2b_256":"c5fd5998d2f9d693b5ef2954e3d9ddb96ede395373faa5d9bcfbd7da4b945d47","md5":"8339f7919c51d06b619b2c6f554e5777","sha256":"098946c933d6039073b7ccb0c9f1b4c73ac6e39350043b02e5243b08583c4c5c"},"downloads":-1,"filename":"bayesian_optimization-1.5.1-py3-none-any.whl","has_sig":false,"md5_digest":"8339f7919c51d06b619b2c6f554e5777","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<4.0,>=3.9","size":28373,"upload_time":"2024-07-10T12:02:35","upload_time_iso_8601":"2024-07-10T12:02:35.595251Z","url":"https://files.pythonhosted.org/packages/c5/fd/5998d2f9d693b5ef2954e3d9ddb96ede395373faa5d9bcfbd7da4b945d47/bayesian_optimization-1.5.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"489d006cb952083689a487a7e93e44f504a59bb3361f300f8272f325f270820e","md5":"33477c7562b0f4e9ea067561f5135cf4","sha256":"a83590b64b57a8e4508424629c817b1c41f89b76c9254dc60aa313505df389b0"},"downloads":-1,"filename":"bayesian_optimization-1.5.1.tar.gz","has_sig":false,"md5_digest":"33477c7562b0f4e9ea067561f5135cf4","packagetype":"sdist","python_version":"source","requires_python":"<4.0,>=3.9","size":29501,"upload_time":"2024-07-10T12:02:37","upload_time_iso_8601":"2024-07-10T12:02:37.329684Z","url":"https://files.pythonhosted.org/packages/48/9d/006cb952083689a487a7e93e44f504a59bb3361f300f8272f325f270820e/bayesian_optimization-1.5.1.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"c5fd5998d2f9d693b5ef2954e3d9ddb96ede395373faa5d9bcfbd7da4b945d47","md5":"8339f7919c51d06b619b2c6f554e5777","sha256":"098946c933d6039073b7ccb0c9f1b4c73ac6e39350043b02e5243b08583c4c5c"},"downloads":-1,"filename":"bayesian_optimization-1.5.1-py3-none-any.whl","has_sig":false,"md5_digest":"8339f7919c51d06b619b2c6f554e5777","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<4.0,>=3.9","size":28373,"upload_time":"2024-07-10T12:02:35","upload_time_iso_8601":"2024-07-10T12:02:35.595251Z","url":"https://files.pythonhosted.org/packages/c5/fd/5998d2f9d693b5ef2954e3d9ddb96ede395373faa5d9bcfbd7da4b945d47/bayesian_optimization-1.5.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"489d006cb952083689a487a7e93e44f504a59bb3361f300f8272f325f270820e","md5":"33477c7562b0f4e9ea067561f5135cf4","sha256":"a83590b64b57a8e4508424629c817b1c41f89b76c9254dc60aa313505df389b0"},"downloads":-1,"filename":"bayesian_optimization-1.5.1.tar.gz","has_sig":false,"md5_digest":"33477c7562b0f4e9ea067561f5135cf4","packagetype":"sdist","python_version":"source","requires_python":"<4.0,>=3.9","size":29501,"upload_time":"2024-07-10T12:02:37","upload_time_iso_8601":"2024-07-10T12:02:37.329684Z","url":"https://files.pythonhosted.org/packages/48/9d/006cb952083689a487a7e93e44f504a59bb3361f300f8272f325f270820e/bayesian_optimization-1.5.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
