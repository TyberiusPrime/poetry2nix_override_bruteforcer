{"info":{"author":"Chaim Leib Halbert, Konstantin Tretyakov","author_email":"chaim.leib.halbert@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","Intended Audience :: Information Technology","Intended Audience :: Science/Research","License :: OSI Approved :: Apache Software License","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: Implementation :: PyPy","Topic :: Scientific/Engineering :: Artificial Intelligence","Topic :: Scientific/Engineering :: Bio-Informatics","Topic :: Scientific/Engineering :: Information Analysis","Topic :: Software Development :: Libraries","Topic :: Text Processing :: General","Topic :: Text Processing :: Linguistic","Topic :: Text Processing :: Markup"],"description":"[![Build status badge][]][build status]\n\nintervaltree\n============\n\nA mutable, self-balancing interval tree for Python 2 and 3. Queries may be by point, by range overlap, or by range envelopment.\n\nThis library was designed to allow tagging text and time intervals, where the intervals include the lower bound but not the upper bound.\n\n**Version 3 changes!**\n\n* The `search(begin, end, strict)` method no longer exists. Instead, use one of these:\n    * `at(point)`\n    * `overlap(begin, end)`\n    * `envelop(begin, end)`\n* The `extend(items)` method no longer exists. Instead, use `update(items)`.\n* Methods like `merge_overlaps()` which took a `strict` argument consistently default to `strict=True`. Before, some methods defaulted to `True` and others to `False`.\n\nInstalling\n----------\n\n```sh\npip install intervaltree\n```\n\nFeatures\n--------\n\n* Supports Python 2.7 and Python 3.5+ (Tested under 2.7, and 3.5 thru 3.8)\n* Initializing\n    * blank `tree = IntervalTree()`\n    * from an iterable of `Interval` objects (`tree = IntervalTree(intervals)`)\n    * from an iterable of tuples (`tree = IntervalTree.from_tuples(interval_tuples)`)\n\n* Insertions\n    * `tree[begin:end] = data`\n    * `tree.add(interval)`\n    * `tree.addi(begin, end, data)`\n\n* Deletions\n    * `tree.remove(interval)`             (raises `ValueError` if not present)\n    * `tree.discard(interval)`            (quiet if not present)\n    * `tree.removei(begin, end, data)`    (short for `tree.remove(Interval(begin, end, data))`)\n    * `tree.discardi(begin, end, data)`   (short for `tree.discard(Interval(begin, end, data))`)\n    * `tree.remove_overlap(point)`\n    * `tree.remove_overlap(begin, end)`   (removes all overlapping the range)\n    * `tree.remove_envelop(begin, end)`   (removes all enveloped in the range)\n\n* Point queries\n    * `tree[point]`\n    * `tree.at(point)`                    (same as previous)\n\n* Overlap queries\n    * `tree[begin:end]`\n    * `tree.overlap(begin, end)`          (same as previous)\n\n* Envelop queries\n    * `tree.envelop(begin, end)`\n\n* Membership queries\n    * `interval_obj in tree`              (this is fastest, O(1))\n    * `tree.containsi(begin, end, data)`\n    * `tree.overlaps(point)`\n    * `tree.overlaps(begin, end)`\n\n* Iterable\n    * `for interval_obj in tree:`\n    * `tree.items()`\n\n* Sizing\n    * `len(tree)`\n    * `tree.is_empty()`\n    * `not tree`\n    * `tree.begin()`          (the `begin` coordinate of the leftmost interval)\n    * `tree.end()`            (the `end` coordinate of the rightmost interval)\n\n* Set-like operations\n    * union\n        * `result_tree = tree.union(iterable)`\n        * `result_tree = tree1 | tree2`\n        * `tree.update(iterable)`\n        * `tree |= other_tree`\n\n    * difference\n        * `result_tree = tree.difference(iterable)`\n        * `result_tree = tree1 - tree2`\n        * `tree.difference_update(iterable)`\n        * `tree -= other_tree`\n\n    * intersection\n        * `result_tree = tree.intersection(iterable)`\n        * `result_tree = tree1 & tree2`\n        * `tree.intersection_update(iterable)`\n        * `tree &= other_tree`\n\n    * symmetric difference\n        * `result_tree = tree.symmetric_difference(iterable)`\n        * `result_tree = tree1 ^ tree2`\n        * `tree.symmetric_difference_update(iterable)`\n        * `tree ^= other_tree`\n\n    * comparison\n        * `tree1.issubset(tree2)` or `tree1 <= tree2`\n        * `tree1 <= tree2`\n        * `tree1.issuperset(tree2)` or `tree1 > tree2`\n        * `tree1 >= tree2`\n        * `tree1 == tree2`\n\n* Restructuring\n    * `chop(begin, end)`      (slice intervals and remove everything between `begin` and `end`, optionally modifying the data fields of the chopped-up intervals)\n    * `slice(point)`          (slice intervals at `point`)\n    * `split_overlaps()`      (slice at all interval boundaries, optionally modifying the data field)\n    * `merge_overlaps()` (joins overlapping intervals into a single interval, optionally merging the data fields)\n    * `merge_equals()` (joins intervals with matching ranges into a single interval, optionally merging the data fields)\n\n* Copying and typecasting\n    * `IntervalTree(tree)`    (`Interval` objects are same as those in tree)\n    * `tree.copy()`           (`Interval` objects are shallow copies of those in tree)\n    * `set(tree)`             (can later be fed into `IntervalTree()`)\n    * `list(tree)`            (ditto)\n\n* Pickle-friendly\n* Automatic AVL balancing\n\nExamples\n--------\n\n* Getting started\n\n    ``` python\n    >>> from intervaltree import Interval, IntervalTree\n    >>> t = IntervalTree()\n    >>> t\n    IntervalTree()\n\n    ```\n\n* Adding intervals - any object works!\n\n    ``` python\n    >>> t[1:2] = \"1-2\"\n    >>> t[4:7] = (4, 7)\n    >>> t[5:9] = {5: 9}\n\n    ```\n\n* Query by point\n\n    The result of a query is a `set` object, so if ordering is important,\n    you must sort it first.\n\n    ``` python\n    >>> sorted(t[6])\n    [Interval(4, 7, (4, 7)), Interval(5, 9, {5: 9})]\n    >>> sorted(t[6])[0]\n    Interval(4, 7, (4, 7))\n\n    ```\n\n* Query by range\n\n    Note that ranges are inclusive of the lower limit, but non-inclusive of the upper limit. So:\n\n    ``` python\n    >>> sorted(t[2:4])\n    []\n\n    ```\n\n    Since our search was over `2 ≤ x < 4`, neither `Interval(1, 2)` nor `Interval(4, 7)`\n    was included. The first interval, `1 ≤ x < 2` does not include `x = 2`. The second\n    interval, `4 ≤ x < 7`, does include `x = 4`, but our search interval excludes it. So,\n    there were no overlapping intervals. However:\n\n    ``` python\n    >>> sorted(t[1:5])\n    [Interval(1, 2, '1-2'), Interval(4, 7, (4, 7))]\n\n    ```\n\n    To only return intervals that are completely enveloped by the search range:\n\n    ``` python\n    >>> sorted(t.envelop(1, 5))\n    [Interval(1, 2, '1-2')]\n\n    ```\n\n* Accessing an `Interval` object\n\n    ``` python\n    >>> iv = Interval(4, 7, (4, 7))\n    >>> iv.begin\n    4\n    >>> iv.end\n    7\n    >>> iv.data\n    (4, 7)\n\n    >>> begin, end, data = iv\n    >>> begin\n    4\n    >>> end\n    7\n    >>> data\n    (4, 7)\n\n    ```\n\n* Constructing from lists of intervals\n\n    We could have made a similar tree this way:\n\n    ``` python\n    >>> ivs = [(1, 2), (4, 7), (5, 9)]\n    >>> t = IntervalTree(\n    ...    Interval(begin, end, \"%d-%d\" % (begin, end)) for begin, end in ivs\n    ... )\n\n    ```\n\n    Or, if we don't need the data fields:\n\n    ``` python\n    >>> t2 = IntervalTree(Interval(*iv) for iv in ivs)\n\n    ```\n\n    Or even:\n\n    ``` python\n    >>> t2 = IntervalTree.from_tuples(ivs)\n\n    ```\n\n* Removing intervals\n\n    ``` python\n    >>> t.remove(Interval(1, 2, \"1-2\"))\n    >>> sorted(t)\n    [Interval(4, 7, '4-7'), Interval(5, 9, '5-9')]\n\n    >>> t.remove(Interval(500, 1000, \"Doesn't exist\"))  # raises ValueError\n    Traceback (most recent call last):\n    ValueError\n\n    >>> t.discard(Interval(500, 1000, \"Doesn't exist\"))  # quietly does nothing\n\n    >>> del t[5]  # same as t.remove_overlap(5)\n    >>> t\n    IntervalTree()\n\n    ```\n\n    We could also empty a tree entirely:\n\n    ``` python\n    >>> t2.clear()\n    >>> t2\n    IntervalTree()\n\n    ```\n\n    Or remove intervals that overlap a range:\n\n    ``` python\n    >>> t = IntervalTree([\n    ...     Interval(0, 10),\n    ...     Interval(10, 20),\n    ...     Interval(20, 30),\n    ...     Interval(30, 40)])\n    >>> t.remove_overlap(25, 35)\n    >>> sorted(t)\n    [Interval(0, 10), Interval(10, 20)]\n\n    ```\n\n    We can also remove only those intervals completely enveloped in a range:\n\n    ``` python\n    >>> t.remove_envelop(5, 20)\n    >>> sorted(t)\n    [Interval(0, 10)]\n\n    ```\n\n* Chopping\n\n    We could also chop out parts of the tree:\n\n    ``` python\n    >>> t = IntervalTree([Interval(0, 10)])\n    >>> t.chop(3, 7)\n    >>> sorted(t)\n    [Interval(0, 3), Interval(7, 10)]\n\n    ```\n\n    To modify the new intervals' data fields based on which side of the interval is being chopped:\n\n    ``` python\n    >>> def datafunc(iv, islower):\n    ...     oldlimit = iv[islower]\n    ...     return \"oldlimit: {0}, islower: {1}\".format(oldlimit, islower)\n    >>> t = IntervalTree([Interval(0, 10)])\n    >>> t.chop(3, 7, datafunc)\n    >>> sorted(t)[0]\n    Interval(0, 3, 'oldlimit: 10, islower: True')\n    >>> sorted(t)[1]\n    Interval(7, 10, 'oldlimit: 0, islower: False')\n\n    ```\n\n* Slicing\n\n    You can also slice intervals in the tree without removing them:\n\n    ``` python\n    >>> t = IntervalTree([Interval(0, 10), Interval(5, 15)])\n    >>> t.slice(3)\n    >>> sorted(t)\n    [Interval(0, 3), Interval(3, 10), Interval(5, 15)]\n\n    ```\n\n    You can also set the data fields, for example, re-using `datafunc()` from above:\n\n    ``` python\n    >>> t = IntervalTree([Interval(5, 15)])\n    >>> t.slice(10, datafunc)\n    >>> sorted(t)[0]\n    Interval(5, 10, 'oldlimit: 15, islower: True')\n    >>> sorted(t)[1]\n    Interval(10, 15, 'oldlimit: 5, islower: False')\n\n    ```\n\nFuture improvements\n-------------------\n\nSee the [issue tracker][] on GitHub.\n\nBased on\n--------\n\n* Eternally Confuzzled's [AVL tree][Confuzzled AVL tree]\n* Wikipedia's [Interval Tree][Wiki intervaltree]\n* Heavily modified from Tyler Kahn's [Interval Tree implementation in Python][Kahn intervaltree] ([GitHub project][Kahn intervaltree GH])\n* Incorporates contributions from:\n    * [konstantint/Konstantin Tretyakov][Konstantin intervaltree] of the University of Tartu (Estonia)\n    * [siniG/Avi Gabay][siniG intervaltree]\n    * [lmcarril/Luis M. Carril][lmcarril intervaltree] of the Karlsruhe Institute for Technology (Germany)\n    * [depristo/MarkDePristo][depristo intervaltree]\n\nCopyright\n---------\n\n* [Chaim Leib Halbert][GH], 2013-2020\n* Modifications, [Konstantin Tretyakov][Konstantin intervaltree], 2014\n\nLicensed under the [Apache License, version 2.0][Apache].\n\nThe source code for this project is at https://github.com/chaimleib/intervaltree\n\n\n[build status badge]: https://travis-ci.org/chaimleib/intervaltree.svg?branch=master\n[build status]: https://travis-ci.org/chaimleib/intervaltree\n[GH]: https://github.com/chaimleib/intervaltree\n[issue tracker]: https://github.com/chaimleib/intervaltree/issues\n[Konstantin intervaltree]: https://github.com/konstantint/PyIntervalTree\n[siniG intervaltree]: https://github.com/siniG/intervaltree\n[lmcarril intervaltree]: https://github.com/lmcarril/intervaltree\n[depristo intervaltree]: https://github.com/depristo/intervaltree\n[Confuzzled AVL tree]: http://www.eternallyconfuzzled.com/tuts/datastructures/jsw_tut_avl.aspx\n[Wiki intervaltree]: http://en.wikipedia.org/wiki/Interval_tree\n[Kahn intervaltree]: http://zurb.com/forrst/posts/Interval_Tree_implementation_in_python-e0K\n[Kahn intervaltree GH]: https://github.com/tylerkahn/intervaltree-python\n[Apache]: http://www.apache.org/licenses/LICENSE-2.0","description_content_type":"text/markdown","docs_url":null,"download_url":"https://github.com/chaimleib/intervaltree/tarball/3.1.0","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/chaimleib/intervaltree","keywords":"interval-tree data-structure intervals tree","license":"Apache License, Version 2.0","maintainer":"","maintainer_email":"","name":"intervaltree","package_url":"https://pypi.org/project/intervaltree/","platform":"","project_url":"https://pypi.org/project/intervaltree/","project_urls":{"Download":"https://github.com/chaimleib/intervaltree/tarball/3.1.0","Homepage":"https://github.com/chaimleib/intervaltree"},"provides_extra":null,"release_url":"https://pypi.org/project/intervaltree/3.1.0/","requires_dist":null,"requires_python":"","summary":"Editable interval tree data structure for Python 2 and 3","version":"3.1.0","yanked":false,"yanked_reason":null},"last_serial":7870227,"releases":{"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"89ba0fa4b50ad13915280e036ab6493194848d55ccb954716310882948c5f279","md5":"a5a5867755cc73ff01e2a366ba822ef1","sha256":"dd94427d37bccbb30c865d72c6294b58b0cf89563a6e272634d449c330cfd23e"},"downloads":-1,"filename":"intervaltree-1.0.0.tar.gz","has_sig":false,"md5_digest":"a5a5867755cc73ff01e2a366ba822ef1","packagetype":"sdist","python_version":"source","requires_python":null,"size":21789,"upload_time":"2014-12-09T18:04:44","upload_time_iso_8601":"2014-12-09T18:04:44.250511Z","url":"https://files.pythonhosted.org/packages/89/ba/0fa4b50ad13915280e036ab6493194848d55ccb954716310882948c5f279/intervaltree-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"4eacf5492dd5a132325356d3381163b69679c2ef773f2f1bddb4ffa62b8ddbc8","md5":"09d78482364b7be2d14f9b84a76a02d7","sha256":"92eceee3c9ed636330531ab22390cb8838220081f30d3bf7b4bfef9db23c0e50"},"downloads":-1,"filename":"intervaltree-1.0.1.tar.gz","has_sig":false,"md5_digest":"09d78482364b7be2d14f9b84a76a02d7","packagetype":"sdist","python_version":"source","requires_python":null,"size":22021,"upload_time":"2014-12-09T23:55:54","upload_time_iso_8601":"2014-12-09T23:55:54.357523Z","url":"https://files.pythonhosted.org/packages/4e/ac/f5492dd5a132325356d3381163b69679c2ef773f2f1bddb4ffa62b8ddbc8/intervaltree-1.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.0.2":[{"comment_text":"","digests":{"blake2b_256":"487fdda2b63ea3e0824e7c98d1f0c923d582ed2b14c2f55db7b5fa436d551ce2","md5":"46b4bca79f69232d8417a7b830044625","sha256":"323c318ea9c62accc18e51e099cbb5ddadd409c6fda6ced55941ed68de0bdc53"},"downloads":-1,"filename":"intervaltree-1.0.2.tar.gz","has_sig":false,"md5_digest":"46b4bca79f69232d8417a7b830044625","packagetype":"sdist","python_version":"source","requires_python":null,"size":22304,"upload_time":"2014-12-10T12:48:33","upload_time_iso_8601":"2014-12-10T12:48:33.459074Z","url":"https://files.pythonhosted.org/packages/48/7f/dda2b63ea3e0824e7c98d1f0c923d582ed2b14c2f55db7b5fa436d551ce2/intervaltree-1.0.2.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"0298d0ee7d50ba2905c255a39d90b69c104ab8b11cadb78b39fc9e16ea44247d","md5":"cddc4125f4c6c4e9c8e57fb7299f04ec","sha256":"85e35cdf4a79446f3922b44ed6ca02a968b0d74abc48cf551b9e2ecebb2964a5"},"downloads":-1,"filename":"intervaltree-1.1.0.tar.gz","has_sig":false,"md5_digest":"cddc4125f4c6c4e9c8e57fb7299f04ec","packagetype":"sdist","python_version":"source","requires_python":null,"size":24674,"upload_time":"2014-12-10T22:57:12","upload_time_iso_8601":"2014-12-10T22:57:12.714133Z","url":"https://files.pythonhosted.org/packages/02/98/d0ee7d50ba2905c255a39d90b69c104ab8b11cadb78b39fc9e16ea44247d/intervaltree-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"f1f9aa84a4a63ef87b9baa2aad5dafee79056c395a63400d8c870dd2f0629a31","md5":"e1e61658207276956e039b8dc77b7066","sha256":"9b2393eed6bd8db986b21f0d41247ad7020fe966864356a45d5c131fdfb53cd6"},"downloads":-1,"filename":"intervaltree-1.1.1.tar.gz","has_sig":false,"md5_digest":"e1e61658207276956e039b8dc77b7066","packagetype":"sdist","python_version":"source","requires_python":null,"size":24736,"upload_time":"2014-12-18T06:30:42","upload_time_iso_8601":"2014-12-18T06:30:42.945000Z","url":"https://files.pythonhosted.org/packages/f1/f9/aa84a4a63ef87b9baa2aad5dafee79056c395a63400d8c870dd2f0629a31/intervaltree-1.1.1.tar.gz","yanked":false,"yanked_reason":null}],"2.0.0":[{"comment_text":"","digests":{"blake2b_256":"f7710e52390f999103f73e5b5a3a843fbb74b06932e47810c133c82316b12a2f","md5":"a18fd8142c58662dca4d7775a381e43f","sha256":"b89f2ce2b0b2f9a7dcb7e7286842e8d98f875a1bbef3c426cd1c715e56bb1db8"},"downloads":-1,"filename":"intervaltree-2.0.0.tar.gz","has_sig":false,"md5_digest":"a18fd8142c58662dca4d7775a381e43f","packagetype":"sdist","python_version":"source","requires_python":null,"size":1209656,"upload_time":"2014-12-31T12:35:09","upload_time_iso_8601":"2014-12-31T12:35:09.779890Z","url":"https://files.pythonhosted.org/packages/f7/71/0e52390f999103f73e5b5a3a843fbb74b06932e47810c133c82316b12a2f/intervaltree-2.0.0.tar.gz","yanked":false,"yanked_reason":null}],"2.0.1":[{"comment_text":"","digests":{"blake2b_256":"6cfb2b0ca30b20f8b7685d591c1b1f3c9fb89dd6173c96db42fc3a008950418f","md5":"a9e2be17e1868d09f2bb69f57200181b","sha256":"c002f3dbb19385c6c138d9e6a9cfd7b620f4e6688284c20e35b8d7aa9bc1aa50"},"downloads":-1,"filename":"intervaltree-2.0.1.tar.gz","has_sig":false,"md5_digest":"a9e2be17e1868d09f2bb69f57200181b","packagetype":"sdist","python_version":"source","requires_python":null,"size":1209821,"upload_time":"2015-01-01T06:58:51","upload_time_iso_8601":"2015-01-01T06:58:51.766339Z","url":"https://files.pythonhosted.org/packages/6c/fb/2b0ca30b20f8b7685d591c1b1f3c9fb89dd6173c96db42fc3a008950418f/intervaltree-2.0.1.tar.gz","yanked":false,"yanked_reason":null}],"2.0.2":[{"comment_text":"","digests":{"blake2b_256":"828a4b4fe24c0371cbda0bb9654414ebc3d3261edc5c1e397998b4c93f2cc9f8","md5":"8f2549a3fd16516af9462639d7b60a6b","sha256":"ff6446339450085d54c196f38f04d85e09ae2239d68d1e917c22b7668eb2ad56"},"downloads":-1,"filename":"intervaltree-2.0.2.tar.gz","has_sig":false,"md5_digest":"8f2549a3fd16516af9462639d7b60a6b","packagetype":"sdist","python_version":"source","requires_python":null,"size":1210250,"upload_time":"2015-01-02T14:09:21","upload_time_iso_8601":"2015-01-02T14:09:21.100880Z","url":"https://files.pythonhosted.org/packages/82/8a/4b4fe24c0371cbda0bb9654414ebc3d3261edc5c1e397998b4c93f2cc9f8/intervaltree-2.0.2.tar.gz","yanked":false,"yanked_reason":null}],"2.0.3":[{"comment_text":"","digests":{"blake2b_256":"a74bc4a2c835585465696e151078d9c0cee8a53df8c3fdf5a41799a0656e31e8","md5":"1ec8b93aa94bdc1af9ec7e39765b28d8","sha256":"514ede1145f74a36b216663620bfaa60f359e602f50d0f562c39e1c6ec5a49e0"},"downloads":-1,"filename":"intervaltree-2.0.3.tar.gz","has_sig":false,"md5_digest":"1ec8b93aa94bdc1af9ec7e39765b28d8","packagetype":"sdist","python_version":"source","requires_python":null,"size":35318,"upload_time":"2015-01-18T06:42:47","upload_time_iso_8601":"2015-01-18T06:42:47.494277Z","url":"https://files.pythonhosted.org/packages/a7/4b/c4a2c835585465696e151078d9c0cee8a53df8c3fdf5a41799a0656e31e8/intervaltree-2.0.3.tar.gz","yanked":false,"yanked_reason":null}],"2.0.4":[{"comment_text":"","digests":{"blake2b_256":"031b1a96859cb09bd2c13efd0c06e46297cdb8d8b7a1b32cf15c296a6ae2d193","md5":"20503e888d75f7c8d12362fb14e72e45","sha256":"d5c45ce8874ef04303c02b66327793320aa2027cf25c89188f74be69beaa3c5f"},"downloads":-1,"filename":"intervaltree-2.0.4.tar.gz","has_sig":false,"md5_digest":"20503e888d75f7c8d12362fb14e72e45","packagetype":"sdist","python_version":"source","requires_python":null,"size":35476,"upload_time":"2015-01-21T18:37:57","upload_time_iso_8601":"2015-01-21T18:37:57.101202Z","url":"https://files.pythonhosted.org/packages/03/1b/1a96859cb09bd2c13efd0c06e46297cdb8d8b7a1b32cf15c296a6ae2d193/intervaltree-2.0.4.tar.gz","yanked":false,"yanked_reason":null}],"2.1.0":[{"comment_text":"","digests":{"blake2b_256":"cac1450d109b70fa58ca9d77972b02f69222412f9175ccf99fdeaf167be9583c","md5":"33bef3448aaf30b78aa093dc7c315c2c","sha256":"aca5804b88f70cb49050c37b6de59090570f77a75aec1932966cf69f6a48810b"},"downloads":-1,"filename":"intervaltree-2.1.0.tar.gz","has_sig":false,"md5_digest":"33bef3448aaf30b78aa093dc7c315c2c","packagetype":"sdist","python_version":"source","requires_python":null,"size":38404,"upload_time":"2015-05-07T18:09:13","upload_time_iso_8601":"2015-05-07T18:09:13.710256Z","url":"https://files.pythonhosted.org/packages/ca/c1/450d109b70fa58ca9d77972b02f69222412f9175ccf99fdeaf167be9583c/intervaltree-2.1.0.tar.gz","yanked":false,"yanked_reason":null}],"3.0.0":[{"comment_text":"","digests":{"blake2b_256":"dd955846507fc374e6892b48c4905a5bba159e01cadd7dc86d4c175b79ed8c78","md5":"38fcf247efdc4a352f979bb756a76373","sha256":"3eaeeef3b4486bce204a35e805411c9c21ab23ffd3704b0ba4ee5b49c3fcd420"},"downloads":-1,"filename":"intervaltree-3.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"38fcf247efdc4a352f979bb756a76373","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":25643,"upload_time":"2018-12-17T07:50:47","upload_time_iso_8601":"2018-12-17T07:50:47.742073Z","url":"https://files.pythonhosted.org/packages/dd/95/5846507fc374e6892b48c4905a5bba159e01cadd7dc86d4c175b79ed8c78/intervaltree-3.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7c1c20e098774a83f8eb8b9e90781d7570c00339f14acc412c91845f86842519","md5":"fb86ac0e524d3af19461fce74c296299","sha256":"54860d217e257b5d6342ad38a25190ea9da9b9eb9c5444aeca48e46a6e355cb6"},"downloads":-1,"filename":"intervaltree-3.0.0.tar.gz","has_sig":false,"md5_digest":"fb86ac0e524d3af19461fce74c296299","packagetype":"sdist","python_version":"source","requires_python":null,"size":30907,"upload_time":"2018-12-17T07:50:49","upload_time_iso_8601":"2018-12-17T07:50:49.266851Z","url":"https://files.pythonhosted.org/packages/7c/1c/20e098774a83f8eb8b9e90781d7570c00339f14acc412c91845f86842519/intervaltree-3.0.0.tar.gz","yanked":false,"yanked_reason":null}],"3.0.1":[{"comment_text":"","digests":{"blake2b_256":"6b6342329a3e503366be2be68384336db308a795516b362437368ddd82d3368f","md5":"c82e3c85237f99fce7079e8d1c966782","sha256":"80204a17c1bd7388f402459bf1528d7dc8f03db42afbde58f265081d25eea62b"},"downloads":-1,"filename":"intervaltree-3.0.1.tar.gz","has_sig":false,"md5_digest":"c82e3c85237f99fce7079e8d1c966782","packagetype":"sdist","python_version":"source","requires_python":null,"size":30487,"upload_time":"2018-12-17T20:58:22","upload_time_iso_8601":"2018-12-17T20:58:22.700104Z","url":"https://files.pythonhosted.org/packages/6b/63/42329a3e503366be2be68384336db308a795516b362437368ddd82d3368f/intervaltree-3.0.1.tar.gz","yanked":false,"yanked_reason":null}],"3.0.2":[{"comment_text":"","digests":{"blake2b_256":"e8f976237755b2020cd74549e98667210b2dd54d3fb17c6f4a62631e61d31225","md5":"4159801f23d2d9eb98db6c60f9c3b665","sha256":"cb4f61c81dcb4fea6c09903f3599015a83c9bdad1f0bbd232495e6681e19e273"},"downloads":-1,"filename":"intervaltree-3.0.2.tar.gz","has_sig":false,"md5_digest":"4159801f23d2d9eb98db6c60f9c3b665","packagetype":"sdist","python_version":"source","requires_python":null,"size":30663,"upload_time":"2018-12-18T03:57:14","upload_time_iso_8601":"2018-12-18T03:57:14.326785Z","url":"https://files.pythonhosted.org/packages/e8/f9/76237755b2020cd74549e98667210b2dd54d3fb17c6f4a62631e61d31225/intervaltree-3.0.2.tar.gz","yanked":false,"yanked_reason":null}],"3.1.0":[{"comment_text":"","digests":{"blake2b_256":"50fb396d568039d21344639db96d940d40eb62befe704ef849b27949ded5c3bb","md5":"9883ac54b1ce2a572b27ac4508cd6194","sha256":"902b1b88936918f9b2a19e0e5eb7ccb430ae45cde4f39ea4b36932920d33952d"},"downloads":-1,"filename":"intervaltree-3.1.0.tar.gz","has_sig":false,"md5_digest":"9883ac54b1ce2a572b27ac4508cd6194","packagetype":"sdist","python_version":"source","requires_python":null,"size":32861,"upload_time":"2020-08-03T08:01:11","upload_time_iso_8601":"2020-08-03T08:01:11.392173Z","url":"https://files.pythonhosted.org/packages/50/fb/396d568039d21344639db96d940d40eb62befe704ef849b27949ded5c3bb/intervaltree-3.1.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"50fb396d568039d21344639db96d940d40eb62befe704ef849b27949ded5c3bb","md5":"9883ac54b1ce2a572b27ac4508cd6194","sha256":"902b1b88936918f9b2a19e0e5eb7ccb430ae45cde4f39ea4b36932920d33952d"},"downloads":-1,"filename":"intervaltree-3.1.0.tar.gz","has_sig":false,"md5_digest":"9883ac54b1ce2a572b27ac4508cd6194","packagetype":"sdist","python_version":"source","requires_python":null,"size":32861,"upload_time":"2020-08-03T08:01:11","upload_time_iso_8601":"2020-08-03T08:01:11.392173Z","url":"https://files.pythonhosted.org/packages/50/fb/396d568039d21344639db96d940d40eb62befe704ef849b27949ded5c3bb/intervaltree-3.1.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
