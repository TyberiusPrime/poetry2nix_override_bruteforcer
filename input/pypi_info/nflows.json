{"info":{"author":"Conor Durkan, Artur Bekasov, George Papamakarios, Iain Murray","author_email":"","bugtrack_url":null,"classifiers":[],"description":"# nflows\n\n<a href=\"https://doi.org/10.5281/zenodo.4296287\"><img src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.4296287.svg\" alt=\"DOI\"></a>\n\n`nflows` is a comprehensive collection of [normalizing flows](https://arxiv.org/abs/1912.02762) using [PyTorch](https://pytorch.org).\n\n## Installation\n\nTo install from PyPI:\n```\npip install nflows\n```\n\n## Usage\n\nTo define a flow:\n\n```python\nfrom nflows import transforms, distributions, flows\n\n# Define an invertible transformation.\ntransform = transforms.CompositeTransform([\n    transforms.MaskedAffineAutoregressiveTransform(features=2, hidden_features=4),\n    transforms.RandomPermutation(features=2)\n])\n\n# Define a base distribution.\nbase_distribution = distributions.StandardNormal(shape=[2])\n\n\n# Combine into a flow.\nflow = flows.Flow(transform=transform, distribution=base_distribution)\n```\n\nTo evaluate log probabilities of inputs:\n```python\nlog_prob = flow.log_prob(inputs)\n```\n\nTo sample from the flow:\n```python\nsamples = flow.sample(num_samples)\n```\n\nAdditional examples of the workflow are provided in [examples folder](examples/).\n\n## Development\n\nYou can install all the dependencies using the `environment.yml` file to create a conda environment: \n```\nconda env create -f environment.yml\n```\n\nAlternatively, you can install via `setup.py` (the `dev` flag installs development and testing dependencies):\n```\npip install -e \".[dev]\"\n```\n\n## Citing nflows\n\nTo cite the package:\n```bibtex\n@software{nflows,\n  author       = {Conor Durkan and\n                  Artur Bekasov and\n                  Iain Murray and\n                  George Papamakarios},\n  title        = {{nflows}: normalizing flows in {PyTorch}},\n  month        = nov,\n  year         = 2020,\n  publisher    = {Zenodo},\n  version      = {v0.14},\n  doi          = {10.5281/zenodo.4296287},\n  url          = {https://doi.org/10.5281/zenodo.4296287}\n}\n```\n\nThe version number is intended to be the one from `nflows/version.py`. The year/month correspond to the date of the release. BibTeX entries for other versions could be found on [Zenodo](https://doi.org/10.5281/zenodo.4296286).\n\nIf you're using spline-based flows in particular, consider citing the _Neural Spline Flows_ paper: [[bibtex]](https://gpapamak.github.io/bibtex/neural_spline_flows.bib).\n\n## References\n`nflows` is derived from [bayesiains/nsf](https://github.com/bayesiains/nsf) originally published with\n> C. Durkan, A. Bekasov, I. Murray, G. Papamakarios, _Neural Spline Flows_, NeurIPS 2019.\n> [[arXiv]](https://arxiv.org/abs/1906.04032) [[bibtex]](https://gpapamak.github.io/bibtex/neural_spline_flows.bib)\n\n\n`nflows` has been used in \n> Conor Durkan, Iain Murray, George Papamakarios, _On Contrastive Learning for Likelihood-free Inference_, ICML 2020.\n> [[arXiv]](https://arxiv.org/abs/2002.03712).\n\n> Artur Bekasov, Iain Murray, _Ordering Dimensions with Nested Dropout Normalizing Flows_.\n> [[arXiv]](https://arxiv.org/abs/2006.08777).\n\n> Tim Dockhorn, James A. Ritchie, Yaoliang Yu, Iain Murray, _Density Deconvolution with Normalizing Flows_.\n> [[arXiv]](https://arxiv.org/abs/2006.09396).\n\n`nflows` is used by the conditional density estimation package [pyknos](https://github.com/mackelab/pyknos), and in turn the likelihood-free inference framework [sbi](https://github.com/mackelab/sbi).","description_content_type":"text/markdown","docs_url":null,"download_url":"https://github.com/bayesiains/nflows/archive/v0.14.tar.gz","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/bayesiains/nflows","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"nflows","package_url":"https://pypi.org/project/nflows/","platform":"","project_url":"https://pypi.org/project/nflows/","project_urls":{"Download":"https://github.com/bayesiains/nflows/archive/v0.14.tar.gz","Homepage":"https://github.com/bayesiains/nflows"},"provides_extra":null,"release_url":"https://pypi.org/project/nflows/0.14/","requires_dist":null,"requires_python":"","summary":"Normalizing flows in PyTorch.","version":"0.14","yanked":false,"yanked_reason":null},"last_serial":8800294,"releases":{"0.11":[{"comment_text":"","digests":{"blake2b_256":"a3f49d2db75c9c38ab4c580182ca3d9c2f066f5910cf097bbbbfe0f7dc5c971a","md5":"67ebadcb3d2f9bd8c192f3ccdf52b69b","sha256":"3422712aab25cc4d113e2e318984ed72251f6460f09b36110f6eaba883d2de0e"},"downloads":-1,"filename":"nflows-0.11.tar.gz","has_sig":false,"md5_digest":"67ebadcb3d2f9bd8c192f3ccdf52b69b","packagetype":"sdist","python_version":"source","requires_python":null,"size":42676,"upload_time":"2020-06-09T17:47:22","upload_time_iso_8601":"2020-06-09T17:47:22.582489Z","url":"https://files.pythonhosted.org/packages/a3/f4/9d2db75c9c38ab4c580182ca3d9c2f066f5910cf097bbbbfe0f7dc5c971a/nflows-0.11.tar.gz","yanked":false,"yanked_reason":null}],"0.12":[{"comment_text":"","digests":{"blake2b_256":"d84b32c501801a41a63c3b671ac60ef512e7b25d41f909322db520f5a97ff186","md5":"302b83d51b89ce80af211f118af65970","sha256":"18770fd36bb03a88ed72738d37c602a6348f6068356cbaff5bc59d36205f227f"},"downloads":-1,"filename":"nflows-0.12.tar.gz","has_sig":false,"md5_digest":"302b83d51b89ce80af211f118af65970","packagetype":"sdist","python_version":"source","requires_python":null,"size":43685,"upload_time":"2020-07-26T17:16:32","upload_time_iso_8601":"2020-07-26T17:16:32.269870Z","url":"https://files.pythonhosted.org/packages/d8/4b/32c501801a41a63c3b671ac60ef512e7b25d41f909322db520f5a97ff186/nflows-0.12.tar.gz","yanked":false,"yanked_reason":null}],"0.13":[{"comment_text":"","digests":{"blake2b_256":"c638974c653a0c04ef68553742fcf7a3c7ca25176a912aba2a6448aea33de96f","md5":"d912d741e42a874a4465f3e9d550d8bd","sha256":"cc35b18ba91915e60ba9d5cb3c539adec1bfe835fc634372d846c102baf4d6fc"},"downloads":-1,"filename":"nflows-0.13.tar.gz","has_sig":false,"md5_digest":"d912d741e42a874a4465f3e9d550d8bd","packagetype":"sdist","python_version":"source","requires_python":null,"size":44822,"upload_time":"2020-10-19T20:26:14","upload_time_iso_8601":"2020-10-19T20:26:14.667117Z","url":"https://files.pythonhosted.org/packages/c6/38/974c653a0c04ef68553742fcf7a3c7ca25176a912aba2a6448aea33de96f/nflows-0.13.tar.gz","yanked":false,"yanked_reason":null}],"0.14":[{"comment_text":"","digests":{"blake2b_256":"bd16a484db41aab28332f42080435c9342fa87cfc9a4fce5495521ea1e80ca27","md5":"f06b37d8dbe9735f1d90a3b565e12dc3","sha256":"6299844a62f9999fcdf2d95cb2d01c091a50136bd17826e303aba646b2d11b55"},"downloads":-1,"filename":"nflows-0.14.tar.gz","has_sig":false,"md5_digest":"f06b37d8dbe9735f1d90a3b565e12dc3","packagetype":"sdist","python_version":"source","requires_python":null,"size":45784,"upload_time":"2020-12-02T11:55:56","upload_time_iso_8601":"2020-12-02T11:55:56.545223Z","url":"https://files.pythonhosted.org/packages/bd/16/a484db41aab28332f42080435c9342fa87cfc9a4fce5495521ea1e80ca27/nflows-0.14.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"bd16a484db41aab28332f42080435c9342fa87cfc9a4fce5495521ea1e80ca27","md5":"f06b37d8dbe9735f1d90a3b565e12dc3","sha256":"6299844a62f9999fcdf2d95cb2d01c091a50136bd17826e303aba646b2d11b55"},"downloads":-1,"filename":"nflows-0.14.tar.gz","has_sig":false,"md5_digest":"f06b37d8dbe9735f1d90a3b565e12dc3","packagetype":"sdist","python_version":"source","requires_python":null,"size":45784,"upload_time":"2020-12-02T11:55:56","upload_time_iso_8601":"2020-12-02T11:55:56.545223Z","url":"https://files.pythonhosted.org/packages/bd/16/a484db41aab28332f42080435c9342fa87cfc9a4fce5495521ea1e80ca27/nflows-0.14.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
