{"info":{"author":null,"author_email":"Cameron Simpson <cs@cskk.id.au>","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Topic :: Software Development :: Libraries :: Python Modules"],"description":"A progress tracker with methods for throughput, ETA and update notification;\nalso a compound progress meter composed from other progress meters.\n\n*Latest release 20240412*:\n* BaseProgress.status: fixes for the arrow_width computation.\n* BaseProgress.bar: drop existing UpdProxy support, drop deferred, implement update_period using a ticker Thread.\n* BaseProgress.bar: set update_period=DEFAULT_UPDATE_PERIOD by default.\n* Progress.iterbar: drop preexisting UpdProxy support, update_frequency and update_min_size support.\n* Progress: new advance_total(delta) method so that we have a callable for this.\n* BaseProgress.bar: new optional poll parameter accepting a callable accepting a BaseProgress to update the state before updating the bar display.\n* BaseProgress.bar: new stalled='stalled' parameter to specify the term for no recent throughput, workers might prefer 'idle'.\n* progressbar() updated to match.\n\n## Function `auto_progressbar(*da, **dkw)`\n\nDecorator for a function accepting an optional `progress`\nkeyword parameter.\nIf `progress` is `None` and the default `Upd` is not disabled,\nrun the function with a progress bar.\n\n## Class `BaseProgress`\n\nThe base class for `Progress` and `OverProcess`\nwith various common methods.\n\nNote that durations are in seconds\nand that absolute time is in seconds since the UNIX epoch\n(the basis of `time.time()`).\n\n*Method `BaseProgress.__init__(self, name=None, start_time=None, units_scale=None)`*:\nInitialise a progress instance.\n\nParameters:\n* `name`: optional name\n* `start_time`: optional UNIX epoch start time, default from `time.time()`\n* `units_scale`: a scale for use with `cs.units.transcribe`,\n  default `BINARY_BYTES_SCALE`\n\n*Method `BaseProgress.__eq__(self, other)`*:\nA Progress is equal to another object `other`\nif its position equals `int(other)`.\n\n*Method `BaseProgress.__ge__(self, other, NotImplemented=NotImplemented)`*:\nReturn a >= b.  Computed by @total_ordering from (not a < b).\n\n*Method `BaseProgress.__gt__(self, other, NotImplemented=NotImplemented)`*:\nReturn a > b.  Computed by @total_ordering from (not a < b) and (a != b).\n\n*Method `BaseProgress.__int__(self)`*:\n`int(Progress)` returns the current position.\n\n*Method `BaseProgress.__le__(self, other, NotImplemented=NotImplemented)`*:\nReturn a <= b.  Computed by @total_ordering from (a < b) or (a == b).\n\n*Method `BaseProgress.__lt__(self, other)`*:\nA Progress is less then another object `other`\nif its position is less than `int(other)`.\n\n*Method `BaseProgress.arrow(self, width, no_padding=False)`*:\nConstruct a progress arrow representing completion\nto fit in the specified `width`.\n\n*Method `BaseProgress.bar(*a, upd: Optional[cs.upd.Upd] = <function uses_upd.<locals>.<lambda> at 0x110fbd6c0>, **kw)`*:\nA context manager to create and withdraw a progress bar.\nIt returns the `UpdProxy` which displays the progress bar.\n\nParameters:\n* `label`: a label for the progress bar,\n  default from `self.name`.\n* `statusfunc`: an optional function to compute the progress bar text\n  accepting `(self,label,width)`.\n* `width`: an optional width expressing how wide the progress bar\n  text may be.\n  The default comes from the `proxy.width` property.\n* `recent_window`: optional timeframe to define \"recent\" in seconds;\n  if the default `statusfunc` (`Progress.status`) is used\n  this is passed to it\n* `report_print`: optional `print` compatible function\n  with which to write a report on completion;\n  this may also be a `bool`, which if true will use `Upd.print`\n  in order to interoperate with `Upd`.\n* `stalled`: optional string to replace the word `'stalled'`\n  in the status line; for a worked this might be betteer as `'idle'`\n* `insert_pos`: where to insert the progress bar, default `1`\n* `poll`: an optional callable accepting a `BaseProgress`\n  which can be used to update the progress state before\n  updating the progress bar display\n\nExample use:\n\n    # display progress reporting during upload_filename()\n    # which updates the supplied Progress instance\n    # during its operation\n    P = Progress(name=label)\n    with P.bar(report_print=True):\n        upload_filename(src, progress=P)\n\n*Property `BaseProgress.elapsed_time`*:\nTime elapsed since `start_time`.\n\n*Property `BaseProgress.eta`*:\nThe projected time of completion: now + `remaining_time`.\n\nIf `remaining_time` is `None`, this is also `None`.\n\n*Method `BaseProgress.format_counter(self, value, scale=None, max_parts=2, sep=',', **kw)`*:\nFormat `value` accoridng to `scale` and `max_parts`\nusing `cs.units.transcribe`.\n\n*Method `BaseProgress.iterbar(self, it, label=None, *, itemlenfunc=None, incfirst=False, update_period=0.3, **bar_kw)`*:\nAn iterable progress bar: a generator yielding values\nfrom the iterable `it` while updating a progress bar.\n\nParameters:\n* `it`: the iterable to consume and yield.\n* `label`: a label for the progress bar,\n  default from `self.name`.\n* `itemlenfunc`: an optional function returning the \"size\" of each item\n  from `it`, used to advance `self.position`.\n  The default is to assume a size of `1`.\n  A convenient alternative choice may be the builtin function `len`.\n* `incfirst`: whether to advance `self.position` before we\n  `yield` an item from `it` or afterwards.\n  This reflects whether it is considered that progress is\n  made as items are obtained or only after items are processed\n  by whatever is consuming this generator.\n  The default is `False`, advancing after processing.\n* `update_period`: default `DEFAULT_UPDATE_PERIOD`; if `0`\n  then update on every iteration, otherwise every `update_period`\n  seconds\nOther parameters are passed to `Progress.bar`.\n\nExample use:\n\n    from cs.units import DECIMAL_SCALE\n    rows = [some list of data]\n    P = Progress(total=len(rows), units_scale=DECIMAL_SCALE)\n    for row in P.iterbar(rows, incfirst=True):\n        ... do something with each row ...\n\n    f = open(data_filename, 'rb')\n    datalen = os.stat(f).st_size\n    def readfrom(f):\n        while True:\n            bs = f.read(65536)\n            if not bs:\n                break\n            yield bs\n    P = Progress(total=datalen)\n    for bs in P.iterbar(readfrom(f), itemlenfunc=len):\n        ... process the file data in bs ...\n\n*Property `BaseProgress.ratio`*:\nThe fraction of progress completed: `(position-start)/(total-start)`.\nReturns `None` if `total` is `None` or `total<=start`.\n\nExample:\n\n    >>> P = Progress()\n     P.ratio\n    >>> P.total = 16\n    >>> P.ratio\n    0.0\n    >>> P.update(4)\n    >>> P.ratio\n    0.25\n\n*Property `BaseProgress.remaining_time`*:\nThe projected time remaining to end\nbased on the `throughput` and `total`.\n\nIf `total` is `None`, this is `None`.\n\n*Method `BaseProgress.status(self, label, width, recent_window=None, stalled=None)`*:\nA progress string of the form:\n*label*`: `*pos*`/`*total*` ==>  ETA '*time*\n\nParameters:\n* `label`: the label for the status line;\n  if `None` use `self.name`\n* `width`: the available width for the status line;\n  if not an `int` use `width.width`\n* `recent_window`: optional timeframe to define \"recent\" in seconds,\n  default : `5`\n* `stalled`: the label to indicate no throughput, default `'stalled'`;\n  for a worker this might often b better as `'idle'`\n\n*Method `BaseProgress.text_pos_of_total(self, fmt=None, fmt_pos=None, fmt_total=None, pos_first=False)`*:\nReturn a \"total:position\" or \"position/total\" style progress string.\n\nParameters:\n* `fmt`: format string interpolating `pos_text` and `total_text`.\n  Default: `\"{pos_text}/{total_text}\"` if `pos_first`,\n  otherwise `\"{total_text}:{pos_text}\"`\n* `fmt_pos`: formatting function for `self.position`,\n  default `self.format_counter`\n* `fmt_total`: formatting function for `self.total`,\n  default from `fmt_pos`\n* `pos_first`: put the position first if true (default `False`),\n  only consulted if `fmt` is `None`\n\n*Property `BaseProgress.throughput`*:\nThe overall throughput: `self.throughput_overall()`.\n\nBy comparison,\nthe `Progress.throughput` property is `self.throughput_recent`\nif the `throughput_window` is not `None`,\notherwise it falls back to `throughput_overall`.\n\n*Method `BaseProgress.throughput_overall(self)`*:\nThe overall throughput from `start` to `position`\nduring `elapsed_time`.\n\n*Method `BaseProgress.throughput_recent(self, time_window)`*:\nThe recent throughput. Implemented by subclasses.\n\n## Class `CheckPoint(builtins.tuple)`\n\nCheckPoint(time, position)\n\n*Property `CheckPoint.position`*:\nAlias for field number 1\n\n*Property `CheckPoint.time`*:\nAlias for field number 0\n\n## Class `OverProgress(BaseProgress)`\n\nA `Progress`-like class computed from a set of subsidiary `Progress`es.\n\nAN OverProgress instance has an attribute ``notify_update`` which\nis a set of callables.\nWhenever the position of a subsidiary `Progress` is updated,\neach of these will be called with the `Progress` instance and `None`.\n\nExample:\n\n    >>> P = OverProgress(name=\"over\")\n    >>> P1 = Progress(name=\"progress1\", position=12)\n    >>> P1.total = 100\n    >>> P1.advance(7)\n    >>> P2 = Progress(name=\"progress2\", position=20)\n    >>> P2.total = 50\n    >>> P2.advance(9)\n    >>> P.add(P1)\n    >>> P.add(P2)\n    >>> P1.total\n    100\n    >>> P2.total\n    50\n    >>> P.total\n    150\n    >>> P1.start\n    12\n    >>> P2.start\n    20\n    >>> P.start\n    0\n    >>> P1.position\n    19\n    >>> P2.position\n    29\n    >>> P.position\n    16\n\n*Method `OverProgress.add(self, subprogress)`*:\nAdd a subsidairy `Progress` to the contributing set.\n\n*Property `OverProgress.eta`*:\nThe `eta` is the maximum of the subsidiary etas.\n\n*Property `OverProgress.position`*:\nThe `position` is the sum off the subsidiary position offsets\nfrom their respective starts.\n\n*Method `OverProgress.remove(self, subprogress, accrue=False)`*:\nRemove a subsidairy `Progress` from the contributing set.\n\n*Property `OverProgress.start`*:\nWe always return a starting value of 0.\n\n*Property `OverProgress.throughput`*:\nThe `throughput` is the sum of the subsidiary throughputs.\n\n*Method `OverProgress.throughput_recent(self, time_window)`*:\nThe `throughput_recent` is the sum of the subsidiary throughput_recentss.\n\n*Property `OverProgress.total`*:\nThe `total` is the sum of the subsidiary totals.\n\n## Class `Progress(BaseProgress)`\n\nA progress counter to track task completion with various utility methods.\n\nExample:\n\n    >>> P = Progress(name=\"example\")\n    >>> P                         #doctest: +ELLIPSIS\n    Progress(name='example',start=0,position=0,start_time=...,throughput_window=None,total=None):[CheckPoint(time=..., position=0)]\n    >>> P.advance(5)\n    >>> P                         #doctest: +ELLIPSIS\n    Progress(name='example',start=0,position=5,start_time=...,throughput_window=None,total=None):[CheckPoint(time=..., position=0), CheckPoint(time=..., position=5)]\n    >>> P.total = 100\n    >>> P                         #doctest: +ELLIPSIS\n    Progress(name='example',start=0,position=5,start_time=...,throughput_window=None,total=100):[CheckPoint(time=..., position=0), CheckPoint(time=..., position=5)]\n\nA Progress instance has an attribute ``notify_update`` which\nis a set of callables. Whenever the position is updated, each\nof these will be called with the `Progress` instance and the\nlatest `CheckPoint`.\n\n`Progress` objects also make a small pretense of being an integer.\nThe expression `int(progress)` returns the current position,\nand `+=` and `-=` adjust the position.\n\nThis is convenient for coding, but importantly it is also\nuseful for discretionary use of a Progress with some other\nobject.\nIf you want to make a lightweight `Progress` capable class\nyou can set a position attribute to an `int`\nand manipulate it carefully using `+=` and `-=` entirely.\nIf you decide to incur the cost of maintaining a `Progress` object\nyou can slot it in:\n\n    # initial setup with just an int\n    my_thing.amount = 0\n\n    # later, or on some option, use a Progress instance\n    my_thing.amount = Progress(my_thing.amount)\n\n*Method `Progress.__init__(self, name: Optional[str] = None, *, position: Optional[float] = None, start: Optional[float] = None, start_time: Optional[float] = None, throughput_window: Optional[int] = None, total: Optional[float] = None, units_scale=None)`*:\nInitialise the Progesss object.\n\nParameters:\n* `position`: initial position, default `0`.\n* `name`: optional name for this instance.\n* `start`: starting position of progress range,\n  default from `position`.\n* `start_time`: start time of the process, default now.\n* `throughput_window`: length of throughput time window in seconds,\n  default None.\n* `total`: expected completion value, default None.\n\n*Method `Progress.__iadd__(self, delta)`*:\nOperator += form of advance().\n\n>>> P = Progress()\n>>> P.position\n0\n>>> P += 4\n>>> P.position\n4\n>>> P += 4\n>>> P.position\n8\n\n*Method `Progress.__isub__(self, delta)`*:\nOperator -= form of advance().\n\n>>> P = Progress()\n>>> P.position\n0\n>>> P += 4\n>>> P.position\n4\n>>> P -= 4\n>>> P.position\n0\n\n*Method `Progress.advance(self, delta, update_time=None)`*:\nRecord more progress, return the advanced position.\n\n>>> P = Progress()\n>>> P.position\n0\n>>> P.advance(4)\n>>> P.position\n4\n>>> P.advance(4)\n>>> P.position\n8\n\n*Method `Progress.advance_total(self, delta)`*:\nFunction form of addition to the total.\n\n*Property `Progress.latest`*:\nLatest datum.\n\n*Property `Progress.position`*:\nLatest position.\n\n*Property `Progress.throughput`*:\nCurrent throughput per second.\n\nIf `self.throughput_window` is not `None`,\ncalls `self.throughput_recent(throughput_window)`.\nOtherwise call `self.throughput_overall()`.\n\n*Method `Progress.throughput_recent(self, time_window)`*:\nRecent throughput per second within a time window in seconds.\n\nThe time span overlapping the start of the window is included\non a flat pro rata basis.\n\n*Property `Progress.total`*:\nReturn the current total.\n\n*Method `Progress.update(self, new_position, update_time=None)`*:\nRecord more progress.\n\n>>> P = Progress()\n>>> P.position\n0\n>>> P.update(12)\n>>> P.position\n12\n\n## Function `progressbar(*a, upd: Optional[cs.upd.Upd] = <function uses_upd.<locals>.<lambda> at 0x110fbedd0>, **kw)`\n\nConvenience function to construct and run a `Progress.iterbar`\nwrapping the iterable `it`,\nissuing and withdrawning a progress bar during the iteration.\n\nParameters:\n* `it`: the iterable to consume\n* `label`: optional label, doubles as the `Progress.name`\n* `position`: optional starting position\n* `total`: optional value for `Progress.total`,\n  default from `len(it)` if supported.\n* `units_scale`: optional units scale for `Progress`,\n  default `UNSCALED_SCALE`\n\nIf `total` is `None` and `it` supports `len()`\nthen the `Progress.total` is set from it.\n\nAll arguments are passed through to `Progress.iterbar`.\n\nExample use:\n\n    for row in progressbar(rows):\n        ... do something with row ...\n\n## Function `selftest(argv)`\n\nExercise some of the functionality.\n\n# Release Log\n\n\n\n*Release 20240412*:\n* BaseProgress.status: fixes for the arrow_width computation.\n* BaseProgress.bar: drop existing UpdProxy support, drop deferred, implement update_period using a ticker Thread.\n* BaseProgress.bar: set update_period=DEFAULT_UPDATE_PERIOD by default.\n* Progress.iterbar: drop preexisting UpdProxy support, update_frequency and update_min_size support.\n* Progress: new advance_total(delta) method so that we have a callable for this.\n* BaseProgress.bar: new optional poll parameter accepting a callable accepting a BaseProgress to update the state before updating the bar display.\n* BaseProgress.bar: new stalled='stalled' parameter to specify the term for no recent throughput, workers might prefer 'idle'.\n* progressbar() updated to match.\n\n*Release 20230401*:\nprogressbar, BaseProgress.iterbar: use @uses_upd to provide a context Upd instance.\n\n*Release 20230212*:\nBaseProgress: new update_period=0.2 parameter to constraint updates by elapsed time.\n\n*Release 20221207*:\n* BaseProgress.format_counter: accept arbitrary keyword arguments to pass to cs.units.transcribe.\n* Progress.__init__: accept floats instead of just ints.\n\n*Release 20220918*:\nProgress.iterbar: wrap the iteration in a try/finally for cleanup.\n\n*Release 20211208*:\n* Progress.__init__: make the first optional positional parameter be \"name\", make other parameters keyword only.\n* Progress.bar: make \"label\" the first optional positional parameter, make others keyword only.\n\n*Release 20210803*:\n* progressbar,iterbar: accept optional RunState to cancel iteration.\n* BaseProgress.iterbar: make update_min_size properly optional, was making update_frequency ineffective.\n\n*Release 20210730*:\nWhen there is no total just report position and no ETA.\n\n*Release 20210717*:\nMinor tweaks.\n\n*Release 20210316*:\n* Progress.iterbar: only update the status line once per iteration, either before or after the yield according to incfirst.\n* Progress.iterbar: fix the meaning of update_frequency to count iterations, add update_min_size to count progress advance.\n\n*Release 20210306*:\nprogressbar: accept new optional `position` parameter, used to initialise the Progress.\n\n*Release 20201102.1*:\nDISTINFO: fix module dependencies.\n\n*Release 20201102*:\n* Format/layout changes for the default status line.\n* Progress.throughtput_recent: return None if no new positions beyond the starting position.\n* BaseProgress.status: accept label=None (default to self.name) and width=UpdProxy (uses width.width).\n* BaseProgress.status: new optional window parameter, default 5, defining the recent throughput window size in seconds.\n* A few bugfixes.\n\n*Release 20201025*:\n* Some formatting improvements.\n* BaseProgress.bar: new insert_pos parameter to position the progress bar, default still 1.\n* BaseProgress.bar: new deferred parameter putting off the status bar until the first update.\n* BaseProgress.bar: accept new optional `proxy` parameter to use (and not delete) an existing UpdProxy for display.\n* Progress.text_pos_of_total: new `pos_first=False` parameter, rendering the total before the position by default (less progress bar noise).\n* New @auto_progressbar decorator to provide a progress bar and initialise progress= parameter to functions which can use a Progress for reporting.\n* Assorted fixes.\n\n*Release 20200718.3*:\nBaseProgress.bar, progressbar: new optional report_print parameter for reporting on completion.\n\n*Release 20200718.2*:\nBugfix: BaseProgress.status: handle throughput=0 when total=None.\n\n*Release 20200718.1*:\nBaseProgress.bar, progressbar: new optional update_frequency parameter for less frequent updates.\n\n*Release 20200718*:\n* Readability improvement for default status line.\n* progressbar: default units_scale=UNSCALED_SCALE.\n\n*Release 20200716.1*:\nBaseProgress.status: round throughput to an int if >=10.\n\n*Release 20200716*:\n* BaseProgress.status: distinguish \"idle\" (position >= total) from \"stalled\" (position < total).\n* BaseProgress.status: make the status very short if the progress is idle.\n\n*Release 20200627*:\n* BaseProgress.status: handle throughput=None (before any activity).\n* BaseProgress: drop count_of_total_bytes_text, superceded by format_counter (which honours the units_scale).\n\n*Release 20200626*:\n* New Progress.bar generator method iterating over an iterable while displaying a progress bar.\n* New convenience function progressbar(it,...) which rolls its own Progress instance.\n* Progress: always support a throughput window, default to DEFAULT_THROUGHPUT_WINDOW = 5s.\n* Improve the default progress bar render returned by Progress.status().\n\n*Release 20200613*:\n* BaseProgress, Progress and OverProgress now accept an optional units_scale, such as cs.units.UNSCALED_SCALE, to use when expressing progress - the default remains BINARY_SCALE.\n* New arrow(), format_counter() and text_pos_of_total() methods to produce components of the status string for tuning or external reuse.\n\n*Release 20200520*:\nOverProgress: throughput and eta implementations.\n\n*Release 20200129.3*:\nTest __version__ machinery again.\n\n*Release 20200129.2*:\nset __version__ to '20200129.2'\n\n*Release 20200129.1*:\nDummy release to test new __version__.\n\n*Release 20200129*:\nNew Progress.count_of_total_bytes_text property presenting \"3kB/40MB\" style text.\n\n*Release 20190812*:\n* New OverProgress class which is a composite of a set of subsidiary Progress instances.\n* Assorted other small updates.\n\n*Release 20190220*:\n* Progress: be somewhat like an int.\n* New status() method returning a convenient one line progress status report.\n\n*Release 20180703.2*:\nProgress: make .total into a property in order to fire the update notifications.\n\n*Release 20180703.1*:\nProgress: additions and changes to API: new .ratio, .elapsed_time, rename .projected to .remaining_time.\n\n*Release 20180703*:\nInitial release of cs.progress.\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"python2, python3","license":"GNU General Public License v3 or later (GPLv3+)","maintainer":null,"maintainer_email":null,"name":"cs.progress","package_url":"https://pypi.org/project/cs.progress/","platform":null,"project_url":"https://pypi.org/project/cs.progress/","project_urls":{"URL":"https://bitbucket.org/cameron_simpson/css/commits/all"},"provides_extra":null,"release_url":"https://pypi.org/project/cs.progress/20240412/","requires_dist":["cs.deco>=20240412","cs.logutils>=20230212","cs.py.func>=20230331","cs.seq>=20221118","cs.threads>=20240412","cs.units","cs.upd>=20240412","icontract","typeguard"],"requires_python":null,"summary":"A progress tracker with methods for throughput, ETA and update notification; also a compound progress meter composed from other progress meters.","version":"20240412","yanked":false,"yanked_reason":null},"last_serial":22732854,"releases":{"20180703":[{"comment_text":"","digests":{"blake2b_256":"885ea2cd2cabf0f009897a2684f1276f2f98563a2036dc5b1c56d89ebc6e5553","md5":"db6761949e841eab36de68be92616871","sha256":"f72d2bcd8cdf40f636b91a1dddeafc88a5cff9c980bf95d5341d5a3999d641c0"},"downloads":-1,"filename":"cs.progress-20180703.tar.gz","has_sig":false,"md5_digest":"db6761949e841eab36de68be92616871","packagetype":"sdist","python_version":"source","requires_python":null,"size":3624,"upload_time":"2018-07-02T23:58:51","upload_time_iso_8601":"2018-07-02T23:58:51.218399Z","url":"https://files.pythonhosted.org/packages/88/5e/a2cd2cabf0f009897a2684f1276f2f98563a2036dc5b1c56d89ebc6e5553/cs.progress-20180703.tar.gz","yanked":false,"yanked_reason":null}],"20180703.1":[{"comment_text":"","digests":{"blake2b_256":"47b6c121f08c3658ca7110449c404fde0f50215f1fdc0da88989dae2885e8281","md5":"1b0dd0e20efd057e703703a100df5df0","sha256":"b2f27cb6e3e95dab56dc7a661aa3461e5af0839b094a323ed9abb65cc851d0e9"},"downloads":-1,"filename":"cs.progress-20180703.1.tar.gz","has_sig":false,"md5_digest":"1b0dd0e20efd057e703703a100df5df0","packagetype":"sdist","python_version":"source","requires_python":null,"size":3801,"upload_time":"2018-07-03T02:09:38","upload_time_iso_8601":"2018-07-03T02:09:38.956838Z","url":"https://files.pythonhosted.org/packages/47/b6/c121f08c3658ca7110449c404fde0f50215f1fdc0da88989dae2885e8281/cs.progress-20180703.1.tar.gz","yanked":false,"yanked_reason":null}],"20180703.2":[{"comment_text":"","digests":{"blake2b_256":"98c6ecb2d58f4fe51aa3475f9ab3dc62bf664490a2c07483d00ddb9e1078b490","md5":"5426766fc1bd90695c8ceb22d004c7cb","sha256":"3ff59951146b0ad70f534b7967bba296694b11db7be632b42384b24b1f34c3e7"},"downloads":-1,"filename":"cs.progress-20180703.2.tar.gz","has_sig":false,"md5_digest":"5426766fc1bd90695c8ceb22d004c7cb","packagetype":"sdist","python_version":"source","requires_python":null,"size":3863,"upload_time":"2018-07-03T09:16:10","upload_time_iso_8601":"2018-07-03T09:16:10.111922Z","url":"https://files.pythonhosted.org/packages/98/c6/ecb2d58f4fe51aa3475f9ab3dc62bf664490a2c07483d00ddb9e1078b490/cs.progress-20180703.2.tar.gz","yanked":false,"yanked_reason":null}],"20190220":[{"comment_text":"","digests":{"blake2b_256":"dc36504b8c5fb4d46e2511ef0819146dd2da0542e6696c190fe3fd362f679565","md5":"a06942e295e39b5557dd0c71efa50766","sha256":"ec91497cd32c8804f59d6f4f51f5bb1dd57821fd8d4e859f91a24ad3056dabe5"},"downloads":-1,"filename":"cs.progress-20190220.tar.gz","has_sig":false,"md5_digest":"a06942e295e39b5557dd0c71efa50766","packagetype":"sdist","python_version":"source","requires_python":null,"size":5157,"upload_time":"2019-02-20T09:25:09","upload_time_iso_8601":"2019-02-20T09:25:09.370263Z","url":"https://files.pythonhosted.org/packages/dc/36/504b8c5fb4d46e2511ef0819146dd2da0542e6696c190fe3fd362f679565/cs.progress-20190220.tar.gz","yanked":false,"yanked_reason":null}],"20190812":[{"comment_text":"","digests":{"blake2b_256":"9c7fac13cf9f3d60b709b640abcda6d6d96c5908c2c30e26e7637ca5d7578809","md5":"2f2fa8634b00122a1d48aef6ba2ba140","sha256":"7a4f762a99f8311d3ef98b64d042d42ebd9b341fb691140f72331736f810ae35"},"downloads":-1,"filename":"cs.progress-20190812.tar.gz","has_sig":false,"md5_digest":"2f2fa8634b00122a1d48aef6ba2ba140","packagetype":"sdist","python_version":"source","requires_python":null,"size":6960,"upload_time":"2019-08-12T00:07:13","upload_time_iso_8601":"2019-08-12T00:07:13.247731Z","url":"https://files.pythonhosted.org/packages/9c/7f/ac13cf9f3d60b709b640abcda6d6d96c5908c2c30e26e7637ca5d7578809/cs.progress-20190812.tar.gz","yanked":false,"yanked_reason":null}],"20200129":[{"comment_text":"","digests":{"blake2b_256":"3c9f9437dde0361f094e3737e31e29329d4e604eeb39609858ff360a9a5c4824","md5":"1d752c102a70c36462ab5c6eef57cce4","sha256":"1d8091e5de78922f7170bf34dd897b4fe519bf6ae1c4941cdc45a4e6db307ab7"},"downloads":-1,"filename":"cs.progress-20200129.tar.gz","has_sig":false,"md5_digest":"1d752c102a70c36462ab5c6eef57cce4","packagetype":"sdist","python_version":"source","requires_python":null,"size":8176,"upload_time":"2020-01-29T03:51:29","upload_time_iso_8601":"2020-01-29T03:51:29.889161Z","url":"https://files.pythonhosted.org/packages/3c/9f/9437dde0361f094e3737e31e29329d4e604eeb39609858ff360a9a5c4824/cs.progress-20200129.tar.gz","yanked":false,"yanked_reason":null}],"20200129.3":[{"comment_text":"","digests":{"blake2b_256":"8be89209b1944d2fbcd134dae9ee1e4783712f20d199692be9c3febeef4cc60d","md5":"3fb93443c1abab98efdd1bfd5b620f34","sha256":"ae1792c419b07bc3ac135e6ce9989a4ca57ec50e495147117eade6ba796b3821"},"downloads":-1,"filename":"cs.progress-20200129.3.tar.gz","has_sig":false,"md5_digest":"3fb93443c1abab98efdd1bfd5b620f34","packagetype":"sdist","python_version":"source","requires_python":null,"size":8363,"upload_time":"2020-01-29T06:25:08","upload_time_iso_8601":"2020-01-29T06:25:08.683569Z","url":"https://files.pythonhosted.org/packages/8b/e8/9209b1944d2fbcd134dae9ee1e4783712f20d199692be9c3febeef4cc60d/cs.progress-20200129.3.tar.gz","yanked":false,"yanked_reason":null}],"20200520":[{"comment_text":"","digests":{"blake2b_256":"5a62cfd84e8f15cdb46b3843a75ba583d0ed736f568f03650eb47b8e10868d98","md5":"6f5c42cff084be12bb3b3900bdfb3b00","sha256":"5fb3bf69e5af24a165f2ef666168102574d527d015d6e66454f8f05f86039f0a"},"downloads":-1,"filename":"cs.progress-20200520.tar.gz","has_sig":false,"md5_digest":"6f5c42cff084be12bb3b3900bdfb3b00","packagetype":"sdist","python_version":"source","requires_python":null,"size":8100,"upload_time":"2020-05-20T05:49:49","upload_time_iso_8601":"2020-05-20T05:49:49.777902Z","url":"https://files.pythonhosted.org/packages/5a/62/cfd84e8f15cdb46b3843a75ba583d0ed736f568f03650eb47b8e10868d98/cs.progress-20200520.tar.gz","yanked":false,"yanked_reason":null}],"20200613":[{"comment_text":"","digests":{"blake2b_256":"7a3af1e728953633987bb75ec4f00f39ae5180472c6fe2d9312fedaf279374bf","md5":"505153d49f69f90091d00f1a1eee7504","sha256":"9d67ede8d8159ff15eae4f2fdcfe52f903abdf8341f1f7746f9185d8d886b2aa"},"downloads":-1,"filename":"cs.progress-20200613.tar.gz","has_sig":false,"md5_digest":"505153d49f69f90091d00f1a1eee7504","packagetype":"sdist","python_version":"source","requires_python":null,"size":8868,"upload_time":"2020-06-13T04:06:07","upload_time_iso_8601":"2020-06-13T04:06:07.424890Z","url":"https://files.pythonhosted.org/packages/7a/3a/f1e728953633987bb75ec4f00f39ae5180472c6fe2d9312fedaf279374bf/cs.progress-20200613.tar.gz","yanked":false,"yanked_reason":null}],"20200626":[{"comment_text":"","digests":{"blake2b_256":"8d883d82dbe4e854bb68b6cdb40bcedcdb0d7416e0637254f7ff218cc74d5562","md5":"4ad02e8f39ad8e15ef8edc88d66840bf","sha256":"02c8403a2b48cbc5998dadbafa5bd244fdc6bae53c93a14640c9facd52d3efcf"},"downloads":-1,"filename":"cs.progress-20200626.tar.gz","has_sig":false,"md5_digest":"4ad02e8f39ad8e15ef8edc88d66840bf","packagetype":"sdist","python_version":"source","requires_python":null,"size":11138,"upload_time":"2020-06-26T03:12:58","upload_time_iso_8601":"2020-06-26T03:12:58.010505Z","url":"https://files.pythonhosted.org/packages/8d/88/3d82dbe4e854bb68b6cdb40bcedcdb0d7416e0637254f7ff218cc74d5562/cs.progress-20200626.tar.gz","yanked":false,"yanked_reason":null}],"20200627":[{"comment_text":"","digests":{"blake2b_256":"b8bb34c378c04f18adf0a95127f7d9ab5d13f597cd1f57d9aa5eb5a18a028d1c","md5":"0cc60d5f1598e7fd2870a43d4141a58e","sha256":"4c2f22a37253eda50ae055677b63ee7bf39d9f04fd663ad2bf7e248992a8fbab"},"downloads":-1,"filename":"cs.progress-20200627.tar.gz","has_sig":false,"md5_digest":"0cc60d5f1598e7fd2870a43d4141a58e","packagetype":"sdist","python_version":"source","requires_python":null,"size":11378,"upload_time":"2020-06-26T22:39:47","upload_time_iso_8601":"2020-06-26T22:39:47.278517Z","url":"https://files.pythonhosted.org/packages/b8/bb/34c378c04f18adf0a95127f7d9ab5d13f597cd1f57d9aa5eb5a18a028d1c/cs.progress-20200627.tar.gz","yanked":false,"yanked_reason":null}],"20200716":[{"comment_text":"","digests":{"blake2b_256":"53d71c799b71a5408bc38a7d9d8b9665799f8e536f5115c982e9a81f76705416","md5":"f8bf57f0327126cb5467d4577ce83f7a","sha256":"3e1bf151b9c31eca5487fab1db6febd6dac083270305134b458bf73d175f3c82"},"downloads":-1,"filename":"cs.progress-20200716.tar.gz","has_sig":false,"md5_digest":"f8bf57f0327126cb5467d4577ce83f7a","packagetype":"sdist","python_version":"source","requires_python":null,"size":11561,"upload_time":"2020-07-16T09:04:21","upload_time_iso_8601":"2020-07-16T09:04:21.780296Z","url":"https://files.pythonhosted.org/packages/53/d7/1c799b71a5408bc38a7d9d8b9665799f8e536f5115c982e9a81f76705416/cs.progress-20200716.tar.gz","yanked":false,"yanked_reason":null}],"20200716.1":[{"comment_text":"","digests":{"blake2b_256":"9d107d35c034f2d3422d9abca182b5124bcde1470b313a8195133865e10b5b47","md5":"2fe1399a5d487123a26bb494aff9bfc4","sha256":"abc1df051d5ee0edfd7be0fceed05ab70155182caf0326823343e1ea80c815ad"},"downloads":-1,"filename":"cs.progress-20200716.1.tar.gz","has_sig":false,"md5_digest":"2fe1399a5d487123a26bb494aff9bfc4","packagetype":"sdist","python_version":"source","requires_python":null,"size":11690,"upload_time":"2020-07-16T13:00:24","upload_time_iso_8601":"2020-07-16T13:00:24.115700Z","url":"https://files.pythonhosted.org/packages/9d/10/7d35c034f2d3422d9abca182b5124bcde1470b313a8195133865e10b5b47/cs.progress-20200716.1.tar.gz","yanked":false,"yanked_reason":null}],"20200718":[{"comment_text":"","digests":{"blake2b_256":"756220068d007bd0e58475e1fb7b3e85554e84e36c3508f9795f3d80e80fb286","md5":"b20702df268eb336f43d2beb464f3efa","sha256":"ab8f8a2f62eccacfe960a6dce26f7be75bbea127fe822a5e0535587ac48d3aae"},"downloads":-1,"filename":"cs.progress-20200718.tar.gz","has_sig":false,"md5_digest":"b20702df268eb336f43d2beb464f3efa","packagetype":"sdist","python_version":"source","requires_python":null,"size":12471,"upload_time":"2020-07-17T22:51:06","upload_time_iso_8601":"2020-07-17T22:51:06.385317Z","url":"https://files.pythonhosted.org/packages/75/62/20068d007bd0e58475e1fb7b3e85554e84e36c3508f9795f3d80e80fb286/cs.progress-20200718.tar.gz","yanked":false,"yanked_reason":null}],"20200718.1":[{"comment_text":"","digests":{"blake2b_256":"2d12d60d7306f7d9b7a390d230cf86bf06cfdb0238b713b73f16ae92abf6fe63","md5":"73e0a9fba8d1f23c80be46a07b3f8222","sha256":"c1368a17d62e490c6b4b249340ab85c04441cd21650f4e352479aacdb69e0fbd"},"downloads":-1,"filename":"cs.progress-20200718.1.tar.gz","has_sig":false,"md5_digest":"73e0a9fba8d1f23c80be46a07b3f8222","packagetype":"sdist","python_version":"source","requires_python":null,"size":12723,"upload_time":"2020-07-17T23:04:24","upload_time_iso_8601":"2020-07-17T23:04:24.799896Z","url":"https://files.pythonhosted.org/packages/2d/12/d60d7306f7d9b7a390d230cf86bf06cfdb0238b713b73f16ae92abf6fe63/cs.progress-20200718.1.tar.gz","yanked":false,"yanked_reason":null}],"20200718.2":[{"comment_text":"","digests":{"blake2b_256":"ffba58f562bb19ae1b3f8b3bb7c184009ca0454aa89d5c4ed54368f530216d3a","md5":"99e9cb769d0f33af9d632ba6520a265a","sha256":"9985f1bef598a38fe1b21b583680d5fd769b3d46606999a70e5f648d42986af8"},"downloads":-1,"filename":"cs.progress-20200718.2.tar.gz","has_sig":false,"md5_digest":"99e9cb769d0f33af9d632ba6520a265a","packagetype":"sdist","python_version":"source","requires_python":null,"size":12765,"upload_time":"2020-07-17T23:15:22","upload_time_iso_8601":"2020-07-17T23:15:22.506162Z","url":"https://files.pythonhosted.org/packages/ff/ba/58f562bb19ae1b3f8b3bb7c184009ca0454aa89d5c4ed54368f530216d3a/cs.progress-20200718.2.tar.gz","yanked":false,"yanked_reason":null}],"20200718.3":[{"comment_text":"","digests":{"blake2b_256":"e944ae2471950b0dddf8dbd9dd683ece9f51aee3467051fd49e45c871aefcae7","md5":"e77b6704f3f0e30ad3ea73c2588644ee","sha256":"9bc95c379a8b6dfe3f35dc219ee6ca744053217b6dac7487261556d125621c6a"},"downloads":-1,"filename":"cs.progress-20200718.3.tar.gz","has_sig":false,"md5_digest":"e77b6704f3f0e30ad3ea73c2588644ee","packagetype":"sdist","python_version":"source","requires_python":null,"size":13046,"upload_time":"2020-07-18T00:47:08","upload_time_iso_8601":"2020-07-18T00:47:08.148880Z","url":"https://files.pythonhosted.org/packages/e9/44/ae2471950b0dddf8dbd9dd683ece9f51aee3467051fd49e45c871aefcae7/cs.progress-20200718.3.tar.gz","yanked":false,"yanked_reason":null}],"20201025":[{"comment_text":"","digests":{"blake2b_256":"1e748229ae513ff6a14688708c957cc8ea8de600a78fedb2e81d2e521288371f","md5":"fdaeee2fbd671b005248b2f9aeea0641","sha256":"2cb34c57dc83b6308123eabeef55788a2d6e17813308f35a5510ff12778c4975"},"downloads":-1,"filename":"cs.progress-20201025.tar.gz","has_sig":false,"md5_digest":"fdaeee2fbd671b005248b2f9aeea0641","packagetype":"sdist","python_version":"source","requires_python":null,"size":22851,"upload_time":"2020-10-25T05:35:18","upload_time_iso_8601":"2020-10-25T05:35:18.611313Z","url":"https://files.pythonhosted.org/packages/1e/74/8229ae513ff6a14688708c957cc8ea8de600a78fedb2e81d2e521288371f/cs.progress-20201025.tar.gz","yanked":false,"yanked_reason":null}],"20201102":[{"comment_text":"","digests":{"blake2b_256":"a2e802a5a737806a85596958c1bfddfacafa4f4f1d78ccf4b6e1e71594c37c92","md5":"802e2f87542d5cfff495e86169121ff5","sha256":"f51f6bca538a90220983fa4232130c05b49f03b0413ff4c3042c11739a5b33de"},"downloads":-1,"filename":"cs.progress-20201102.tar.gz","has_sig":false,"md5_digest":"802e2f87542d5cfff495e86169121ff5","packagetype":"sdist","python_version":"source","requires_python":null,"size":25635,"upload_time":"2020-11-01T21:42:03","upload_time_iso_8601":"2020-11-01T21:42:03.080809Z","url":"https://files.pythonhosted.org/packages/a2/e8/02a5a737806a85596958c1bfddfacafa4f4f1d78ccf4b6e1e71594c37c92/cs.progress-20201102.tar.gz","yanked":false,"yanked_reason":null}],"20201102.1":[{"comment_text":"","digests":{"blake2b_256":"03dcf867ff5824c7ad37bd374bb221971f06bcc7489c6913074e11ddbe4e484b","md5":"b58cce5ca6e382b54bb6e673bf56dbed","sha256":"763accbd3e714ea710a295e5d8af912985a24588e09eab559e68e45f5e076dd5"},"downloads":-1,"filename":"cs.progress-20201102.1.tar.gz","has_sig":false,"md5_digest":"b58cce5ca6e382b54bb6e673bf56dbed","packagetype":"sdist","python_version":"source","requires_python":null,"size":25741,"upload_time":"2020-11-01T22:12:42","upload_time_iso_8601":"2020-11-01T22:12:42.802438Z","url":"https://files.pythonhosted.org/packages/03/dc/f867ff5824c7ad37bd374bb221971f06bcc7489c6913074e11ddbe4e484b/cs.progress-20201102.1.tar.gz","yanked":false,"yanked_reason":null}],"20210306":[{"comment_text":"","digests":{"blake2b_256":"3c1cab01575218bb274eca514a531385911c6b32db3ca748407d7b099280bb86","md5":"8901e004d3e3b12d707c210b9b1471a0","sha256":"78c84e79af80c6fec1109159262547ad98d63a1f3afa58cf2d6f3c82e439bf6b"},"downloads":-1,"filename":"cs.progress-20210306.tar.gz","has_sig":false,"md5_digest":"8901e004d3e3b12d707c210b9b1471a0","packagetype":"sdist","python_version":"source","requires_python":null,"size":25795,"upload_time":"2021-03-06T00:42:41","upload_time_iso_8601":"2021-03-06T00:42:41.383743Z","url":"https://files.pythonhosted.org/packages/3c/1c/ab01575218bb274eca514a531385911c6b32db3ca748407d7b099280bb86/cs.progress-20210306.tar.gz","yanked":false,"yanked_reason":null}],"20210316":[{"comment_text":"","digests":{"blake2b_256":"f83ec7533139a23656fd99948e12abc6e2affb36a08efb608b41f95a1b4302ec","md5":"9642dce2480f948b79718eed30193587","sha256":"55835c26e10657ef5b3665d4f37c11dfe77e038e94d20ad131f1c3e149abcb1d"},"downloads":-1,"filename":"cs.progress-20210316.tar.gz","has_sig":false,"md5_digest":"9642dce2480f948b79718eed30193587","packagetype":"sdist","python_version":"source","requires_python":null,"size":26417,"upload_time":"2021-03-15T23:26:35","upload_time_iso_8601":"2021-03-15T23:26:35.946196Z","url":"https://files.pythonhosted.org/packages/f8/3e/c7533139a23656fd99948e12abc6e2affb36a08efb608b41f95a1b4302ec/cs.progress-20210316.tar.gz","yanked":false,"yanked_reason":null}],"20210717":[{"comment_text":"","digests":{"blake2b_256":"e19531ee7136dc754bab31ae9b7cdfe5488608280e7273f7f996411574bb8adc","md5":"4a50d971e0609b55afa0d4fe68ff25ac","sha256":"7dd1ec3d24ba17108041757d2d67214a2f5094271fd22e50577eb8d570cb95ab"},"downloads":-1,"filename":"cs.progress-20210717.tar.gz","has_sig":false,"md5_digest":"4a50d971e0609b55afa0d4fe68ff25ac","packagetype":"sdist","python_version":"source","requires_python":null,"size":26572,"upload_time":"2021-07-17T02:00:42","upload_time_iso_8601":"2021-07-17T02:00:42.880323Z","url":"https://files.pythonhosted.org/packages/e1/95/31ee7136dc754bab31ae9b7cdfe5488608280e7273f7f996411574bb8adc/cs.progress-20210717.tar.gz","yanked":false,"yanked_reason":null}],"20210730":[{"comment_text":"","digests":{"blake2b_256":"ab21eebe5bfa0497fdbfde0f04d3da2b84b80320bd16867701c298d55f880163","md5":"f17dc20ca30da679e81ed6a0ddfd7135","sha256":"faebaf7e9cda1be7e94e24ed7442dd4d30f292085ad1a6c9691e6b279be2a252"},"downloads":-1,"filename":"cs.progress-20210730.tar.gz","has_sig":false,"md5_digest":"f17dc20ca30da679e81ed6a0ddfd7135","packagetype":"sdist","python_version":"source","requires_python":null,"size":26662,"upload_time":"2021-07-30T11:24:59","upload_time_iso_8601":"2021-07-30T11:24:59.758731Z","url":"https://files.pythonhosted.org/packages/ab/21/eebe5bfa0497fdbfde0f04d3da2b84b80320bd16867701c298d55f880163/cs.progress-20210730.tar.gz","yanked":false,"yanked_reason":null}],"20210803":[{"comment_text":"","digests":{"blake2b_256":"b9140f2b399d33aa5e3f2b225de20c27cba9f34a6a03d1211d13ee5368b18fd5","md5":"978288f2cec6f1b6f25ddbd2f9fa826d","sha256":"3320b0d5005a15c1258b40aa1cfb4eeff134de4a134ce088b1ed80d9b07de8f1"},"downloads":-1,"filename":"cs.progress-20210803.tar.gz","has_sig":false,"md5_digest":"978288f2cec6f1b6f25ddbd2f9fa826d","packagetype":"sdist","python_version":"source","requires_python":null,"size":27005,"upload_time":"2021-08-03T03:26:03","upload_time_iso_8601":"2021-08-03T03:26:03.940016Z","url":"https://files.pythonhosted.org/packages/b9/14/0f2b399d33aa5e3f2b225de20c27cba9f34a6a03d1211d13ee5368b18fd5/cs.progress-20210803.tar.gz","yanked":false,"yanked_reason":null}],"20211208":[{"comment_text":"","digests":{"blake2b_256":"2e899418e9c748fafcaea8146d6d4c7fb422623d3202690a89a6cb1848dd8328","md5":"a3950ece5b86cf411627c1d272c190b8","sha256":"fa8fc260200228eae5227c887a739341918af30b7d1e129cb779e7fa0ee412e8"},"downloads":-1,"filename":"cs.progress-20211208.tar.gz","has_sig":false,"md5_digest":"a3950ece5b86cf411627c1d272c190b8","packagetype":"sdist","python_version":"source","requires_python":null,"size":25511,"upload_time":"2021-12-08T09:33:32","upload_time_iso_8601":"2021-12-08T09:33:32.666662Z","url":"https://files.pythonhosted.org/packages/2e/89/9418e9c748fafcaea8146d6d4c7fb422623d3202690a89a6cb1848dd8328/cs.progress-20211208.tar.gz","yanked":false,"yanked_reason":null}],"20220918":[{"comment_text":"","digests":{"blake2b_256":"51607841fb223053fc101ed5afb9d4c97c0ae02995ea852208683f32b82cbc0c","md5":"8dd5ff663256dc3b7b5120eb10ea29b2","sha256":"d21fb3ac6431100e8ebe5b1d4629f53630213790ef514b2e24344a73fed40aa4"},"downloads":-1,"filename":"cs.progress-20220918-py3-none-any.whl","has_sig":false,"md5_digest":"8dd5ff663256dc3b7b5120eb10ea29b2","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":14176,"upload_time":"2022-09-18T00:17:56","upload_time_iso_8601":"2022-09-18T00:17:56.312091Z","url":"https://files.pythonhosted.org/packages/51/60/7841fb223053fc101ed5afb9d4c97c0ae02995ea852208683f32b82cbc0c/cs.progress-20220918-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d7bdbc979fe3d7343b11f05eb888d32d188c3f1063c827d4d2fb1f2263528339","md5":"099a4592fc9da5d51cf6a093dae32ec0","sha256":"babba8ce167504ed754a47a81ed01cc6fcb615644a3e86f187fda1d7ac395541"},"downloads":-1,"filename":"cs.progress-20220918.tar.gz","has_sig":false,"md5_digest":"099a4592fc9da5d51cf6a093dae32ec0","packagetype":"sdist","python_version":"source","requires_python":null,"size":18952,"upload_time":"2022-09-18T00:17:57","upload_time_iso_8601":"2022-09-18T00:17:57.916498Z","url":"https://files.pythonhosted.org/packages/d7/bd/bc979fe3d7343b11f05eb888d32d188c3f1063c827d4d2fb1f2263528339/cs.progress-20220918.tar.gz","yanked":false,"yanked_reason":null}],"20221207":[{"comment_text":"","digests":{"blake2b_256":"17c390bdc1fe302e50fc3378ffbb896f42e66c1a586e3cc5c368cd0f20c9f3c7","md5":"67f6f5701ee4e5638534b84699c6c8a8","sha256":"3b430b65b3923a12820675766175a57fa9264e825c83e24368baa04f6f136f9b"},"downloads":-1,"filename":"cs.progress-20221207-py3-none-any.whl","has_sig":false,"md5_digest":"67f6f5701ee4e5638534b84699c6c8a8","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":14233,"upload_time":"2022-12-07T03:51:13","upload_time_iso_8601":"2022-12-07T03:51:13.852823Z","url":"https://files.pythonhosted.org/packages/17/c3/90bdc1fe302e50fc3378ffbb896f42e66c1a586e3cc5c368cd0f20c9f3c7/cs.progress-20221207-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"05ef007c743e3a2d75de228400c3e42e0aa6e7f5cc14431d2ec15e06210af021","md5":"7180969df883686aeab640559aa6f6c5","sha256":"7b8307a8b830fe1d99b18c8176651bf578a710540c26c9de6f79685907f212c3"},"downloads":-1,"filename":"cs.progress-20221207.tar.gz","has_sig":false,"md5_digest":"7180969df883686aeab640559aa6f6c5","packagetype":"sdist","python_version":"source","requires_python":null,"size":19061,"upload_time":"2022-12-07T03:51:15","upload_time_iso_8601":"2022-12-07T03:51:15.491804Z","url":"https://files.pythonhosted.org/packages/05/ef/007c743e3a2d75de228400c3e42e0aa6e7f5cc14431d2ec15e06210af021/cs.progress-20221207.tar.gz","yanked":false,"yanked_reason":null}],"20230212":[{"comment_text":"","digests":{"blake2b_256":"555b0aef8ea565f3f8232464b95941a4905602cef48c3858852cb576bf3e224d","md5":"c1fb95abb8d9da2969dae70091096ab8","sha256":"0faacd3e0a4c07ddd3f7607c6288035a37c33be5079eed4410798f444de24527"},"downloads":-1,"filename":"cs.progress-20230212-py3-none-any.whl","has_sig":false,"md5_digest":"c1fb95abb8d9da2969dae70091096ab8","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":14450,"upload_time":"2023-02-12T00:20:55","upload_time_iso_8601":"2023-02-12T00:20:55.137516Z","url":"https://files.pythonhosted.org/packages/55/5b/0aef8ea565f3f8232464b95941a4905602cef48c3858852cb576bf3e224d/cs.progress-20230212-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"40bea315756eb19d391f3469f1fcd391de94e24a2ecc3bc3735885f07460e541","md5":"bf40d5b2e3f8ce25377eb980697b4e34","sha256":"94ce8a54656840dfc7857d45b55815e74ad19e3c5812b0b2e2240fd60308940f"},"downloads":-1,"filename":"cs.progress-20230212.tar.gz","has_sig":false,"md5_digest":"bf40d5b2e3f8ce25377eb980697b4e34","packagetype":"sdist","python_version":"source","requires_python":null,"size":19500,"upload_time":"2023-02-12T00:20:56","upload_time_iso_8601":"2023-02-12T00:20:56.807461Z","url":"https://files.pythonhosted.org/packages/40/be/a315756eb19d391f3469f1fcd391de94e24a2ecc3bc3735885f07460e541/cs.progress-20230212.tar.gz","yanked":false,"yanked_reason":null}],"20230401":[{"comment_text":"","digests":{"blake2b_256":"25502c4bb96e202d98648d609cfa423c435544ecf83aefe266d4ff62b05dbe28","md5":"dccc523e974326369e95b58d5482cba0","sha256":"6a5b3f7c6312d78af4fa7d66dd2d2efc6cdac19f8840c417f025085b65d953ab"},"downloads":-1,"filename":"cs.progress-20230401-py3-none-any.whl","has_sig":false,"md5_digest":"dccc523e974326369e95b58d5482cba0","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":14228,"upload_time":"2023-04-01T05:07:19","upload_time_iso_8601":"2023-04-01T05:07:19.694591Z","url":"https://files.pythonhosted.org/packages/25/50/2c4bb96e202d98648d609cfa423c435544ecf83aefe266d4ff62b05dbe28/cs.progress-20230401-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d05732aa2e0d80e10dc311d1e01243c1eced822382fd5da9717287a55f9fb225","md5":"2aff43cef95ad2fecfd1dba5df30e13d","sha256":"22d6f9b8e55e579b43baa908182b5429e38bdc2c2fd7b6167847557898f8f6b2"},"downloads":-1,"filename":"cs.progress-20230401.tar.gz","has_sig":false,"md5_digest":"2aff43cef95ad2fecfd1dba5df30e13d","packagetype":"sdist","python_version":"source","requires_python":null,"size":18169,"upload_time":"2023-04-01T05:07:21","upload_time_iso_8601":"2023-04-01T05:07:21.284082Z","url":"https://files.pythonhosted.org/packages/d0/57/32aa2e0d80e10dc311d1e01243c1eced822382fd5da9717287a55f9fb225/cs.progress-20230401.tar.gz","yanked":false,"yanked_reason":null}],"20240412":[{"comment_text":"","digests":{"blake2b_256":"a8867c0a4fe895ed097eb18f7291b4e5e9e377674420dc8ebd9731ea17fcfe6e","md5":"1dfc5c32f0c3345f8dfb8217b183ce13","sha256":"8ba5833afe5da8e300c94c9b05dd8f47a34ef9bd0af0ff56899c7dc7f9ab9611"},"downloads":-1,"filename":"cs.progress-20240412-py3-none-any.whl","has_sig":false,"md5_digest":"1dfc5c32f0c3345f8dfb8217b183ce13","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":16937,"upload_time":"2024-04-12T05:06:17","upload_time_iso_8601":"2024-04-12T05:06:17.243605Z","url":"https://files.pythonhosted.org/packages/a8/86/7c0a4fe895ed097eb18f7291b4e5e9e377674420dc8ebd9731ea17fcfe6e/cs.progress-20240412-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c032d31105691968a3a7a805cf6b259166f94e248f8ec3df76ec51a4676d58ef","md5":"c1d20c7b5f56f47fcb1a174028f29fcf","sha256":"11da3fde2f97be6a43e2046f59a137fc99fa69e5ad32e4ab78dbb2dbb8ca5ed9"},"downloads":-1,"filename":"cs.progress-20240412.tar.gz","has_sig":false,"md5_digest":"c1d20c7b5f56f47fcb1a174028f29fcf","packagetype":"sdist","python_version":"source","requires_python":null,"size":20902,"upload_time":"2024-04-12T05:06:19","upload_time_iso_8601":"2024-04-12T05:06:19.151902Z","url":"https://files.pythonhosted.org/packages/c0/32/d31105691968a3a7a805cf6b259166f94e248f8ec3df76ec51a4676d58ef/cs.progress-20240412.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"a8867c0a4fe895ed097eb18f7291b4e5e9e377674420dc8ebd9731ea17fcfe6e","md5":"1dfc5c32f0c3345f8dfb8217b183ce13","sha256":"8ba5833afe5da8e300c94c9b05dd8f47a34ef9bd0af0ff56899c7dc7f9ab9611"},"downloads":-1,"filename":"cs.progress-20240412-py3-none-any.whl","has_sig":false,"md5_digest":"1dfc5c32f0c3345f8dfb8217b183ce13","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":16937,"upload_time":"2024-04-12T05:06:17","upload_time_iso_8601":"2024-04-12T05:06:17.243605Z","url":"https://files.pythonhosted.org/packages/a8/86/7c0a4fe895ed097eb18f7291b4e5e9e377674420dc8ebd9731ea17fcfe6e/cs.progress-20240412-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c032d31105691968a3a7a805cf6b259166f94e248f8ec3df76ec51a4676d58ef","md5":"c1d20c7b5f56f47fcb1a174028f29fcf","sha256":"11da3fde2f97be6a43e2046f59a137fc99fa69e5ad32e4ab78dbb2dbb8ca5ed9"},"downloads":-1,"filename":"cs.progress-20240412.tar.gz","has_sig":false,"md5_digest":"c1d20c7b5f56f47fcb1a174028f29fcf","packagetype":"sdist","python_version":"source","requires_python":null,"size":20902,"upload_time":"2024-04-12T05:06:19","upload_time_iso_8601":"2024-04-12T05:06:19.151902Z","url":"https://files.pythonhosted.org/packages/c0/32/d31105691968a3a7a805cf6b259166f94e248f8ec3df76ec51a4676d58ef/cs.progress-20240412.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
