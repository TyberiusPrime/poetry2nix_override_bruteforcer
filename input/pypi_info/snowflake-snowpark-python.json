{"info":{"author":"Snowflake, Inc","author_email":"snowflake-python-libraries-dl@snowflake.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","Environment :: Other Environment","Intended Audience :: Developers","Intended Audience :: Education","Intended Audience :: Information Technology","Intended Audience :: System Administrators","License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: SQL","Topic :: Database","Topic :: Scientific/Engineering :: Information Analysis","Topic :: Software Development","Topic :: Software Development :: Libraries","Topic :: Software Development :: Libraries :: Application Frameworks","Topic :: Software Development :: Libraries :: Python Modules"],"description":"# Snowflake Snowpark Python and Snowpark pandas APIs\n\n[![Build and Test](https://github.com/snowflakedb/snowpark-python/actions/workflows/precommit.yml/badge.svg)](https://github.com/snowflakedb/snowpark-python/actions/workflows/precommit.yml)\n[![codecov](https://codecov.io/gh/snowflakedb/snowpark-python/branch/main/graph/badge.svg)](https://codecov.io/gh/snowflakedb/snowpark-python)\n[![PyPi](https://img.shields.io/pypi/v/snowflake-snowpark-python.svg)](https://pypi.org/project/snowflake-snowpark-python/)\n[![License Apache-2.0](https://img.shields.io/:license-Apache%202-brightgreen.svg)](http://www.apache.org/licenses/LICENSE-2.0.txt)\n[![Codestyle Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nThe Snowpark library provides intuitive APIs for querying and processing data in a data pipeline.\nUsing this library, you can build applications that process data in Snowflake without having to move data to the system where your application code runs.\n\n[Source code][source code] | [Snowpark Python developer guide][Snowpark Python developer guide] | [Snowpark Python API reference][Snowpark Python api references] | [Snowpark pandas developer guide][Snowpark pandas developer guide] | [Snowpark pandas API reference][Snowpark pandas api references] | [Product documentation][snowpark] | [Samples][samples]\n\n## Getting started\n\n### Have your Snowflake account ready\nIf you don't have a Snowflake account yet, you can [sign up for a 30-day free trial account][sign up trial].\n\n### Create a Python virtual environment\nYou can use [miniconda][miniconda], [anaconda][anaconda], or [virtualenv][virtualenv]\nto create a Python 3.8, 3.9, 3.10 or 3.11 virtual environment.\n\nFor Snowpark pandas, only Python 3.9, 3.10, or 3.11 is supported.\n\nTo have the best experience when using it with UDFs, [creating a local conda environment with the Snowflake channel][use snowflake channel] is recommended.\n\n### Install the library to the Python virtual environment\n```bash\npip install snowflake-snowpark-python\n```\nTo use the [Snowpark pandas API][Snowpark pandas developer guide], you can optionally install the following, which installs [modin][modin] in the same environment. The Snowpark pandas API provides a familiar interface for pandas users to query and process data directly in Snowflake.\n```bash\npip install \"snowflake-snowpark-python[modin]\"\n```\n\n### Create a session and use the Snowpark Python API\n```python\nfrom snowflake.snowpark import Session\n\nconnection_parameters = {\n  \"account\": \"<your snowflake account>\",\n  \"user\": \"<your snowflake user>\",\n  \"password\": \"<your snowflake password>\",\n  \"role\": \"<snowflake user role>\",\n  \"warehouse\": \"<snowflake warehouse>\",\n  \"database\": \"<snowflake database>\",\n  \"schema\": \"<snowflake schema>\"\n}\n\nsession = Session.builder.configs(connection_parameters).create()\n# Create a Snowpark dataframe from input data\ndf = session.create_dataframe([[1, 2], [3, 4]], schema=[\"a\", \"b\"]) \ndf = df.filter(df.a > 1)\nresult = df.collect()\ndf.show()\n\n# -------------\n# |\"A\"  |\"B\"  |\n# -------------\n# |3    |4    |\n# -------------\n```\n\n### Create a session and use the Snowpark pandas API\n```python\nimport modin.pandas as pd\nimport snowflake.snowpark.modin.plugin\nfrom snowflake.snowpark import Session\n\nCONNECTION_PARAMETERS = {\n    'account': '<myaccount>',\n    'user': '<myuser>',\n    'password': '<mypassword>',\n    'role': '<myrole>',\n    'database': '<mydatabase>',\n    'schema': '<myschema>',\n    'warehouse': '<mywarehouse>',\n}\nsession = Session.builder.configs(CONNECTION_PARAMETERS).create()\n\n# Create a Snowpark pandas dataframe from input data\ndf = pd.DataFrame([['a', 2.0, 1],['b', 4.0, 2],['c', 6.0, None]], columns=[\"COL_STR\", \"COL_FLOAT\", \"COL_INT\"])\ndf\n#   COL_STR  COL_FLOAT  COL_INT\n# 0       a        2.0      1.0\n# 1       b        4.0      2.0\n# 2       c        6.0      NaN\n\ndf.shape\n# (3, 3)\n\ndf.head(2)\n#   COL_STR  COL_FLOAT  COL_INT\n# 0       a        2.0        1\n# 1       b        4.0        2\n\ndf.dropna(subset=[\"COL_INT\"], inplace=True)\n\ndf\n#   COL_STR  COL_FLOAT  COL_INT\n# 0       a        2.0        1\n# 1       b        4.0        2\n\ndf.shape\n# (2, 3)\n\ndf.head(2)\n#   COL_STR  COL_FLOAT  COL_INT\n# 0       a        2.0        1\n# 1       b        4.0        2\n\n# Save the result back to Snowflake with a row_pos column.\ndf.reset_index(drop=True).to_snowflake('pandas_test2', index=True, index_label=['row_pos'])\n```\n\n## Samples\nThe [Snowpark Python developer guide][Snowpark Python developer guide], [Snowpark Python API references][Snowpark Python api references], [Snowpark pandas developer guide][Snowpark pandas developer guide], and [Snowpark pandas api references][Snowpark pandas api references] have basic sample code.\n[Snowflake-Labs][snowflake lab sample code] has more curated demos.\n\n## Logging\nConfigure logging level for `snowflake.snowpark` for Snowpark Python API logs.\nSnowpark uses the [Snowflake Python Connector][python connector].\nSo you may also want to configure the logging level for `snowflake.connector` when the error is in the Python Connector.\nFor instance,\n```python\nimport logging\nfor logger_name in ('snowflake.snowpark', 'snowflake.connector'):\n    logger = logging.getLogger(logger_name)\n    logger.setLevel(logging.DEBUG)\n    ch = logging.StreamHandler()\n    ch.setLevel(logging.DEBUG)\n    ch.setFormatter(logging.Formatter('%(asctime)s - %(threadName)s %(filename)s:%(lineno)d - %(funcName)s() - %(levelname)s - %(message)s'))\n    logger.addHandler(ch)\n```\n\n## Reading and writing to pandas DataFrame\n\nSnowpark Python API supports reading from and writing to a pandas DataFrame via the [to_pandas][to_pandas] and [write_pandas][write_pandas] commands. \n\nTo use these operations, ensure that pandas is installed in the same environment. You can install pandas alongside Snowpark Python by executing the following command:\n```bash\npip install \"snowflake-snowpark-python[pandas]\"\n```\nOnce pandas is installed, you can convert between a Snowpark DataFrame and pandas DataFrame as follows: \n```python\ndf = session.create_dataframe([[1, 2], [3, 4]], schema=[\"a\", \"b\"])\n# Convert Snowpark DataFrame to pandas DataFrame\npandas_df = df.to_pandas() \n# Write pandas DataFrame to a Snowflake table and return Snowpark DataFrame\nsnowpark_df = session.write_pandas(pandas_df, \"new_table\", auto_create_table=True)\n```\n\nSnowpark pandas API also supports writing to pandas: \n```python\nimport modin.pandas as pd\ndf = pd.DataFrame([[1, 2], [3, 4]], columns=[\"a\", \"b\"])\n# Convert Snowpark pandas DataFrame to pandas DataFrame\npandas_df = df.to_pandas() \n```\n\nNote that the above Snowpark pandas commands will work if Snowpark is installed with the `[modin]` option, the additional `[pandas]` installation is not required.\n\n## Contributing\nPlease refer to [CONTRIBUTING.md][contributing].\n\n[add other sample code repo links]: # (Developer advocacy is open-sourcing a repo that has excellent sample code. The link will be added here.)\n\n[Snowpark Python developer guide]: https://docs.snowflake.com/en/developer-guide/snowpark/python/index.html\n[Snowpark Python api references]: https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/index.html\n[Snowpark pandas developer guide]: https://docs.snowflake.com/developer-guide/snowpark/python/snowpark-pandas\n[Snowpark pandas api references]: https://docs.snowflake.com/developer-guide/snowpark/reference/python/latest/modin/index\n[snowpark]: https://www.snowflake.com/snowpark\n[sign up trial]: https://signup.snowflake.com\n[source code]: https://github.com/snowflakedb/snowpark-python\n[miniconda]: https://docs.conda.io/en/latest/miniconda.html\n[anaconda]: https://www.anaconda.com/\n[virtualenv]: https://docs.python.org/3/tutorial/venv.html\n[config pycharm interpreter]: https://www.jetbrains.com/help/pycharm/configuring-python-interpreter.html\n[python connector]: https://pypi.org/project/snowflake-connector-python/\n[use snowflake channel]: https://docs.snowflake.com/en/developer-guide/udf/python/udf-python-packages.html#local-development-and-testing\n[snowflake lab sample code]: https://github.com/Snowflake-Labs/snowpark-python-demos\n[samples]: https://github.com/snowflakedb/snowpark-python/blob/main/README.md#samples\n[contributing]: https://github.com/snowflakedb/snowpark-python/blob/main/CONTRIBUTING.md\n[to_pandas]: https://docs.snowflake.com/developer-guide/snowpark/reference/python/latest/snowpark/api/snowflake.snowpark.DataFrame.to_pandas\n[write_pandas]: https://docs.snowflake.com/developer-guide/snowpark/reference/python/latest/snowpark/api/snowflake.snowpark.Session.write_pandas\n[modin]: https://github.com/modin-project/modin\n\n\n# Release History\n\n## 1.19.0 (2024-06-25)\n\n### Snowpark Python API Updates\n\n#### Improvements\n\n#### New Features\n\n- Added support for `to_boolean` function.\n- Added documentation pages for `Index` and its APIs.\n\n#### Bug Fixes\n\n- Fixed a bug where python stored procedure with table return type fails when run in a task.\n- Fixed a bug where df.dropna fails due to `RecursionError: maximum recursion depth exceeded` when the DataFrame has more than 500 columns.\n- Fixed a bug where `AsyncJob.result(\"no_result\")` doesn't wait for the query to finish execution.\n\n### Snowpark Local Testing Updates\n\n#### New Features\n\n- Added support for the `strict` parameter when registering UDFs and Stored Procedures.\n\n#### Bug Fixes\n\n- Fixed a bug in convert_timezone that made the setting the source_timezone parameter return an error.\n- Fixed a bug where creating DataFrame with empty data of type `DateType` raises `AttributeError`.\n- Fixed a bug that table merge fails when update clause exists but no update takes place.\n- Fixed a bug in mock implementation of `to_char` that raises `IndexError` when incoming column has nonconsecutive row index.\n- Fixed a bug in handling of `CaseExpr` expressions that raises `IndexError` when incoming column has nonconsecutive row index.\n- Fixed a bug in implementation of `Column.like` that raises `IndexError` when incoming column has nonconsecutive row index.\n\n#### Improvements\n\n- Added support for type coercion in the implementation of DataFrame.replace, DataFrame.dropna and the mock function `iff`.\n\n### Snowpark pandas API Updates\n\n#### New Features\n\n- Added partial support for `DataFrame.pct_change` and `Series.pct_change` without the `freq` and `limit` parameters.\n- Added support for `Series.str.get`.\n- Added support for `Series.dt.dayofweek`, `Series.dt.day_of_week`, `Series.dt.dayofyear`, and `Series.dt.day_of_year`.\n- Added support for `Series.str.__getitem__` (`Series.str[...]`).\n- Added support for `Series.str.lstrip` and `Series.str.rstrip`.\n- Added support for `DataFrameGroupby.size` and `SeriesGroupby.size`.\n- Added support for `DataFrame.expanding` and `Series.expanding` for aggregations `count`, `sum`, `min`, `max`, `mean`, `std`, and `var` with `axis=0`.\n- Added support for `DataFrame.rolling` and `Series.rolling` for aggregation `count` with `axis=0`.\n- Added support for `Series.str.match`.\n- Added support for `DataFrame.resample` and `Series.resample` for aggregation `size`.\n\n#### Bug Fixes\n\n- Fixed a bug that causes output of GroupBy.aggregate's columns to be ordered incorrectly.\n- Fixed a bug where `DataFrame.describe` on a frame with duplicate columns of differing dtypes could cause an error or incorrect results.\n- Fixed a bug in `DataFrame.rolling` and `Series.rolling` so `window=0` now throws `NotImplementedError` instead of `ValueError`\n\n#### Improvements\n\n- Added support for named aggregations in `DataFrame.aggregate` and `Series.aggregate` with `axis=0`.\n- `pd.read_csv` reads using the native pandas CSV parser, then uploads data to snowflake using parquet. This enables most of the parameters supported by `read_csv` including date parsing and numeric conversions. Uploading via parquet is roughly twice as fast as uploading via CSV.\n- Initial work to support an `pd.Index` directly in Snowpark pandas. Support for `pd.Index` as a first-class component of Snowpark pandas is coming soon.\n- Added a lazy index constructor and support for `len`, `shape`, `size`, `empty`, `to_pandas()` and `names`. For `df.index`, Snowpark pandas creates a lazy index object.\n- For `df.columns`, Snowpark pandas supports a non-lazy version of an `Index` since the data is already stored locally.\n\n## 1.18.0 (2024-05-28)\n\n### Snowpark Python API Updates\n\n#### Improvements\n\n- Improved error message to remind users set `{\"infer_schema\": True}` when reading csv file without specifying its schema.\n- Improved error handling for `Session.create_dataframe` when called with more than 512 rows and using `format` or `pyformat` `paramstyle`.\n\n### Snowpark pandas API Updates\n\n#### New Features\n\n- Added `DataFrame.cache_result` and `Series.cache_result` methods for users to persist DataFrames and Series to a temporary table lasting the duration of the session to improve latency of subsequent operations.\n\n#### Bug Fixes\n\n#### Improvements\n\n- Added partial support for `DataFrame.pivot_table` with no `index` parameter, as well as for `margins` parameter.\n- Updated the signature of `DataFrame.shift`/`Series.shift`/`DataFrameGroupBy.shift`/`SeriesGroupBy.shift` to match pandas 2.2.1. Snowpark pandas does not yet support the newly-added `suffix` argument, or sequence values of `periods`.\n- Re-added support for `Series.str.split`.\n\n#### Bug Fixes\n\n- Fixed how we support mixed columns for string methods (`Series.str.*`).\n\n### Snowpark Local Testing Updates\n\n#### New Features\n\n- Added support for the following DataFrameReader read options to file formats `csv` and `json`:\n  - PURGE\n  - PATTERN\n  - INFER_SCHEMA with value being `False`\n  - ENCODING with value being `UTF8`\n- Added support for `DataFrame.analytics.moving_agg` and `DataFrame.analytics.cumulative_agg_agg`.\n- Added support for `if_not_exists` parameter during UDF and stored procedure registration.\n\n#### Bug Fixes\n\n- Fixed a bug that when processing time format, fractional second part is not handled properly.\n- Fixed a bug that caused function calls on `*` to fail.\n- Fixed a bug that prevented creation of map and struct type objects.\n- Fixed a bug that function `date_add` was unable to handle some numeric types.\n- Fixed a bug that `TimestampType` casting resulted in incorrect data.\n- Fixed a bug that caused `DecimalType` data to have incorrect precision in some cases.\n- Fixed a bug where referencing missing table or view raises confusing `IndexError`.\n- Fixed a bug that mocked function `to_timestamp_ntz` can not handle None data.\n- Fixed a bug that mocked UDFs handles output data of None improperly.\n- Fixed a bug where `DataFrame.with_column_renamed` ignores attributes from parent DataFrames after join operations.\n- Fixed a bug that integer precision of large value gets lost when converted to pandas DataFrame.\n- Fixed a bug that the schema of datetime object is wrong when create DataFrame from a pandas DataFrame.\n- Fixed a bug in the implementation of `Column.equal_nan` where null data is handled incorrectly.\n- Fixed a bug where `DataFrame.drop` ignore attributes from parent DataFrames after join operations.\n- Fixed a bug in mocked function `date_part` where Column type is set wrong.\n- Fixed a bug where `DataFrameWriter.save_as_table` does not raise exceptions when inserting null data into non-nullable columns.\n- Fixed a bug in the implementation of `DataFrameWriter.save_as_table` where\n  - Append or Truncate fails when incoming data has different schema than existing table.\n  - Truncate fails when incoming data does not specify columns that are nullable.\n\n#### Improvements\n\n- Removed dependency check for `pyarrow` as it is not used.\n- Improved target type coverage of `Column.cast`, adding support for casting to boolean and all integral types.\n- Aligned error experience when calling UDFs and stored procedures.\n- Added appropriate error messages for `is_permanent` and `anonymous` options in UDFs and stored procedures registration to make it more clear that those features are not yet supported.\n- File read operation with unsupported options and values now raises `NotImplementedError` instead of warnings and unclear error information.\n\n## 1.17.0 (2024-05-21)\n\n### Snowpark Python API Updates\n\n#### New Features\n\n- Added support to add a comment on tables and views using the functions listed below:\n  - `DataFrameWriter.save_as_table`\n  - `DataFrame.create_or_replace_view`\n  - `DataFrame.create_or_replace_temp_view`\n  - `DataFrame.create_or_replace_dynamic_table`\n\n#### Improvements\n\n- Improved error message to remind users to set `{\"infer_schema\": True}` when reading CSV file without specifying its schema.\n\n### Snowpark pandas API Updates\n\n#### New Features\n\n- Start of Public Preview of Snowpark pandas API. Refer to the [Snowpark pandas API Docs](https://docs.snowflake.com/developer-guide/snowpark/python/snowpark-pandas) for more details.\n\n### Snowpark Local Testing Updates\n\n#### New Features\n\n- Added support for NumericType and VariantType data conversion in the mocked function `to_timestamp_ltz`, `to_timestamp_ntz`, `to_timestamp_tz` and `to_timestamp`.\n- Added support for DecimalType, BinaryType, ArrayType, MapType, TimestampType, DateType and TimeType data conversion in the mocked function `to_char`.\n- Added support for the following APIs:\n  - snowflake.snowpark.functions:\n    - to_varchar\n  - snowflake.snowpark.DataFrame:\n    - pivot\n  - snowflake.snowpark.Session:\n    - cancel_all\n- Introduced a new exception class `snowflake.snowpark.mock.exceptions.SnowparkLocalTestingException`.\n- Added support for casting to FloatType\n\n#### Bug Fixes\n\n- Fixed a bug that stored procedure and UDF should not remove imports already in the `sys.path` during the clean-up step.\n- Fixed a bug that when processing datetime format, the fractional second part is not handled properly.\n- Fixed a bug that on Windows platform that file operations was unable to properly handle file separator in directory name.\n- Fixed a bug that on Windows platform that when reading a pandas dataframe, IntervalType column with integer data can not be processed.\n- Fixed a bug that prevented users from being able to select multiple columns with the same alias.\n- Fixed a bug that `Session.get_current_[schema|database|role|user|account|warehouse]` returns upper-cased identifiers when identifiers are quoted.\n- Fixed a bug that function `substr` and `substring` can not handle 0-based `start_expr`.\n\n#### Improvements\n\n- Standardized the error experience by raising `SnowparkLocalTestingException` in error cases which is on par with `SnowparkSQLException` raised in non-local execution.\n- Improved error experience of `Session.write_pandas` method that `NotImplementError` will be raised when called.\n- Aligned error experience with reusing a closed session in non-local execution.\n\n## 1.16.0 (2024-05-07)\n\n### New Features\n\n- Support stored procedure register with packages given as Python modules.\n- Added snowflake.snowpark.Session.lineage.trace to explore data lineage of snowfake objects.\n- Added support for structured type schema parsing.\n\n### Bug Fixes\n\n- Fixed a bug when inferring schema, single quotes are added to stage files already have single quotes.\n\n### Local Testing Updates\n\n#### New Features\n\n- Added support for StringType, TimestampType and VariantType data conversion in the mocked function `to_date`.\n- Added support for the following APIs:\n  - snowflake.snowpark.functions\n    - get\n    - concat\n    - concat_ws\n\n#### Bug Fixes\n\n- Fixed a bug that caused `NaT` and `NaN` values to not be recognized.\n- Fixed a bug where, when inferring a schema, single quotes were added to stage files that already had single quotes.\n- Fixed a bug where `DataFrameReader.csv` was unable to handle quoted values containing a delimiter.\n- Fixed a bug that when there is `None` value in an arithmetic calculation, the output should remain `None` instead of `math.nan`.\n- Fixed a bug in function `sum` and `covar_pop` that when there is `math.nan` in the data, the output should also be `math.nan`.\n- Fixed a bug that stage operation can not handle directories.\n- Fixed a bug that `DataFrame.to_pandas` should take Snowflake numeric types with precision 38 as `int64`.\n\n## 1.15.0 (2024-04-24)\n\n### New Features\n\n- Added `truncate` save mode in `DataFrameWrite` to overwrite existing tables by truncating the underlying table instead of dropping it.\n- Added telemetry to calculate query plan height and number of duplicate nodes during collect operations.\n- Added the functions below to unload data from a `DataFrame` into one or more files in a stage:\n  - `DataFrame.write.json`\n  - `DataFrame.write.csv`\n  - `DataFrame.write.parquet`\n- Added distributed tracing using open telemetry APIs for action functions in `DataFrame` and `DataFrameWriter`:\n  - snowflake.snowpark.DataFrame:\n    - collect\n    - collect_nowait\n    - to_pandas\n    - count\n    - show\n  - snowflake.snowpark.DataFrameWriter:\n    - save_as_table\n- Added support for snow:// URLs to `snowflake.snowpark.Session.file.get` and `snowflake.snowpark.Session.file.get_stream`\n- Added support to register stored procedures and UDxFs with a `comment`.\n- UDAF client support is ready for public preview. Please stay tuned for the Snowflake announcement of UDAF public preview.\n- Added support for dynamic pivot.  This feature is currently in private preview.\n\n### Improvements\n\n- Improved the generated query performance for both compilation and execution by converting duplicate subqueries to Common Table Expressions (CTEs). It is still an experimental feature not enabled by default, and can be enabled by setting `session.cte_optimization_enabled` to `True`.\n\n### Bug Fixes\n\n- Fixed a bug where `statement_params` was not passed to query executions that register stored procedures and user defined functions.\n- Fixed a bug causing `snowflake.snowpark.Session.file.get_stream` to fail for quoted stage locations.\n- Fixed a bug that an internal type hint in `utils.py` might raise AttributeError in case the underlying module can not be found.\n\n### Local Testing Updates\n\n#### New Features\n\n- Added support for registering UDFs and stored procedures.\n- Added support for the following APIs:\n  - snowflake.snowpark.Session:\n    - file.put\n    - file.put_stream\n    - file.get\n    - file.get_stream\n    - read.json\n    - add_import\n    - remove_import\n    - get_imports\n    - clear_imports\n    - add_packages\n    - add_requirements\n    - clear_packages\n    - remove_package\n    - udf.register\n    - udf.register_from_file\n    - sproc.register\n    - sproc.register_from_file\n  - snowflake.snowpark.functions\n    - current_database\n    - current_session\n    - date_trunc\n    - object_construct\n    - object_construct_keep_null\n    - pow\n    - sqrt\n    - udf\n    - sproc\n- Added support for StringType, TimestampType and VariantType data conversion in the mocked function `to_time`.\n\n#### Bug Fixes\n\n- Fixed a bug that null filled columns for constant functions.\n- Fixed a bug that implementation of to_object, to_array and to_binary to better handle null inputs.\n- Fixed a bug that timestamp data comparison can not handle year beyond 2262.\n- Fixed a bug that `Session.builder.getOrCreate` should return the created mock session.\n\n## 1.14.0 (2024-03-20)\n\n### New Features\n\n- Added support for creating vectorized UDTFs with `process` method.\n- Added support for dataframe functions:\n  - to_timestamp_ltz\n  - to_timestamp_ntz\n  - to_timestamp_tz\n  - locate\n- Added support for ASOF JOIN type.\n- Added support for the following local testing APIs:\n  - snowflake.snowpark.functions:\n    - to_double\n    - to_timestamp\n    - to_timestamp_ltz\n    - to_timestamp_ntz\n    - to_timestamp_tz\n    - greatest\n    - least\n    - convert_timezone\n    - dateadd\n    - date_part\n  - snowflake.snowpark.Session:\n    - get_current_account\n    - get_current_warehouse\n    - get_current_role\n    - use_schema\n    - use_warehouse\n    - use_database\n    - use_role\n\n### Bug Fixes\n\n- Fixed a bug in `SnowflakePlanBuilder` that `save_as_table` does not filter column that name start with '$' and follow by number correctly.\n- Fixed a bug that statement parameters may have no effect when resolving imports and packages.\n- Fixed bugs in local testing:\n  - LEFT ANTI and LEFT SEMI joins drop rows with null values.\n  - DataFrameReader.csv incorrectly parses data when the optional parameter `field_optionally_enclosed_by` is specified.\n  - Column.regexp only considers the first entry when `pattern` is a `Column`.\n  - Table.update raises `KeyError` when updating null values in the rows.\n  - VARIANT columns raise errors at `DataFrame.collect`.\n  - `count_distinct` does not work correctly when counting.\n  - Null values in integer columns raise `TypeError`.\n\n### Improvements\n\n- Added telemetry to local testing.\n- Improved the error message of `DataFrameReader` to raise `FileNotFound` error when reading a path that does not exist or when there are no files under the path.\n\n## 1.13.0 (2024-02-26)\n\n### New Features\n\n- Added support for an optional `date_part` argument in function `last_day`.\n- `SessionBuilder.app_name` will set the query_tag after the session is created.\n- Added support for the following local testing functions:\n  - current_timestamp\n  - current_date\n  - current_time\n  - strip_null_value\n  - upper\n  - lower\n  - length\n  - initcap\n\n### Improvements\n\n- Added cleanup logic at interpreter shutdown to close all active sessions.\n- Closing sessions within stored procedures now is a no-op logging a warning instead of raising an error.\n\n### Bug Fixes\n\n- Fixed a bug in `DataFrame.to_local_iterator` where the iterator could yield wrong results if another query is executed before the iterator finishes due to wrong isolation level. For details, please see #945.\n- Fixed a bug that truncated table names in error messages while running a plan with local testing enabled.\n- Fixed a bug that `Session.range` returns empty result when the range is large.\n\n## 1.12.1 (2024-02-08)\n\n### Improvements\n\n- Use `split_blocks=True` by default during `to_pandas` conversion, for optimal memory allocation. This parameter is passed to `pyarrow.Table.to_pandas`, which enables `PyArrow` to split the memory allocation into smaller, more manageable blocks instead of allocating a single contiguous block. This results in better memory management when dealing with larger datasets.\n\n### Bug Fixes\n\n- Fixed a bug in `DataFrame.to_pandas` that caused an error when evaluating on a Dataframe with an `IntergerType` column with null values.\n\n## 1.12.0 (2024-01-30)\n\n### New Features\n\n- Exposed `statement_params` in `StoredProcedure.__call__`.\n- Added two optional arguments to `Session.add_import`.\n  - `chunk_size`: The number of bytes to hash per chunk of the uploaded files.\n  - `whole_file_hash`: By default only the first chunk of the uploaded import is hashed to save time. When this is set to True each uploaded file is fully hashed instead.\n- Added parameters `external_access_integrations` and `secrets` when creating a UDAF from Snowpark Python to allow integration with external access.\n- Added a new method `Session.append_query_tag`. Allows an additional tag to be added to the current query tag by appending it as a comma separated value.\n- Added a new method `Session.update_query_tag`. Allows updates to a JSON encoded dictionary query tag.\n- `SessionBuilder.getOrCreate` will now attempt to replace the singleton it returns when token expiration has been detected.\n- Added support for new functions in `snowflake.snowpark.functions`:\n  - `array_except`\n  - `create_map`\n  - `sign`/`signum`\n- Added the following functions to `DataFrame.analytics`:\n  - Added the `moving_agg` function in `DataFrame.analytics` to enable moving aggregations like sums and averages with multiple window sizes.\n  - Added the `cummulative_agg` function in `DataFrame.analytics` to enable commulative aggregations like sums and averages on multiple columns.\n  - Added the `compute_lag` and `compute_lead` functions in `DataFrame.analytics` for enabling lead and lag calculations on multiple columns.\n  - Added the `time_series_agg` function in `DataFrame.analytics` to enable time series aggregations like sums and averages with multiple time windows.\n\n### Bug Fixes\n\n- Fixed a bug in `DataFrame.na.fill` that caused Boolean values to erroneously override integer values.\n- Fixed a bug in `Session.create_dataframe` where the Snowpark DataFrames created using pandas DataFrames were not inferring the type for timestamp columns correctly. The behavior is as follows:\n  - Earlier timestamp columns without a timezone would be converted to nanosecond epochs and inferred as `LongType()`, but will now be correctly maintained as timestamp values and be inferred as `TimestampType(TimestampTimeZone.NTZ)`.\n  - Earlier timestamp columns with a timezone would be inferred as `TimestampType(TimestampTimeZone.NTZ)` and loose timezone information but will now be correctly inferred as `TimestampType(TimestampTimeZone.LTZ)` and timezone information is retained correctly.\n  - Set session parameter `PYTHON_SNOWPARK_USE_LOGICAL_TYPE_FOR_CREATE_DATAFRAME` to revert back to old behavior. It is recommended that you update your code to align with correct behavior because the parameter will be removed in the future.\n- Fixed a bug that `DataFrame.to_pandas` gets decimal type when scale is not 0, and creates an object dtype in `pandas`. Instead, we cast the value to a float64 type.\n- Fixed bugs that wrongly flattened the generated SQL when one of the following happens:\n  - `DataFrame.filter()` is called after `DataFrame.sort().limit()`.\n  - `DataFrame.sort()` or `filter()` is called on a DataFrame that already has a window function or sequence-dependent data generator column.\n    For instance, `df.select(\"a\", seq1().alias(\"b\")).select(\"a\", \"b\").sort(\"a\")` won't flatten the sort clause anymore.\n  - a window or sequence-dependent data generator column is used after `DataFrame.limit()`. For instance, `df.limit(10).select(row_number().over())` won't flatten the limit and select in the generated SQL.\n- Fixed a bug where aliasing a DataFrame column raised an error when the DataFame was copied from another DataFrame with an aliased column. For instance,\n\n  ```python\n  df = df.select(col(\"a\").alias(\"b\"))\n  df = copy(df)\n  df.select(col(\"b\").alias(\"c\"))  # threw an error. Now it's fixed.\n  ```\n\n- Fixed a bug in `Session.create_dataframe` that the non-nullable field in a schema is not respected for boolean type. Note that this fix is only effective when the user has the privilege to create a temp table.\n- Fixed a bug in SQL simplifier where non-select statements in `session.sql` dropped a SQL query when used with `limit()`.\n- Fixed a bug that raised an exception when session parameter `ERROR_ON_NONDETERMINISTIC_UPDATE` is true.\n\n### Behavior Changes (API Compatible)\n\n- When parsing data types during a `to_pandas` operation, we rely on GS precision value to fix precision issues for large integer values. This may affect users where a column that was earlier returned as `int8` gets returned as `int64`. Users can fix this by explicitly specifying precision values for their return column.\n- Aligned behavior for `Session.call` in case of table stored procedures where running `Session.call` would not trigger stored procedure unless a `collect()` operation was performed.\n- `StoredProcedureRegistration` will now automatically add `snowflake-snowpark-python` as a package dependency. The added dependency will be on the client's local version of the library and an error is thrown if the server cannot support that version.\n\n## 1.11.1 (2023-12-07)\n\n### Bug Fixes\n\n- Fixed a bug that numpy should not be imported at the top level of mock module.\n- Added support for these new functions in `snowflake.snowpark.functions`:\n  - `from_utc_timestamp`\n  - `to_utc_timestamp`\n\n## 1.11.0 (2023-12-05)\n\n### New Features\n\n- Add the `conn_error` attribute to `SnowflakeSQLException` that stores the whole underlying exception from `snowflake-connector-python`.\n- Added support for `RelationalGroupedDataframe.pivot()` to access `pivot` in the following pattern `Dataframe.group_by(...).pivot(...)`.\n- Added experimental feature: Local Testing Mode, which allows you to create and operate on Snowpark Python DataFrames locally without connecting to a Snowflake account. You can use the local testing framework to test your DataFrame operations locally, on your development machine or in a CI (continuous integration) pipeline, before deploying code changes to your account.\n\n- Added support for `arrays_to_object` new functions in `snowflake.snowpark.functions`.\n- Added support for the vector data type.\n\n### Dependency Updates\n\n- Bumped cloudpickle dependency to work with `cloudpickle==2.2.1`\n- Updated ``snowflake-connector-python`` to `3.4.0`.\n\n### Bug Fixes\n\n- DataFrame column names quoting check now supports newline characters.\n- Fix a bug where a DataFrame generated by `session.read.with_metadata` creates inconsistent table when doing `df.write.save_as_table`.\n\n## 1.10.0 (2023-11-03)\n\n### New Features\n\n- Added support for managing case sensitivity in `DataFrame.to_local_iterator()`.\n- Added support for specifying vectorized UDTF's input column names by using the optional parameter `input_names` in `UDTFRegistration.register/register_file` and `functions.pandas_udtf`. By default, `RelationalGroupedDataFrame.applyInPandas` will infer the column names from current dataframe schema.\n- Add `sql_error_code` and `raw_message` attributes to `SnowflakeSQLException` when it is caused by a SQL exception.\n\n### Bug Fixes\n\n- Fixed a bug in `DataFrame.to_pandas()` where converting snowpark dataframes to pandas dataframes was losing precision on integers with more than 19 digits.\n- Fixed a bug that `session.add_packages` can not handle requirement specifier that contains project name with underscore and version.\n- Fixed a bug in `DataFrame.limit()` when `offset` is used and the parent `DataFrame` uses `limit`. Now the `offset` won't impact the parent DataFrame's `limit`.\n- Fixed a bug in `DataFrame.write.save_as_table` where dataframes created from read api could not save data into snowflake because of invalid column name `$1`.\n\n### Behavior change\n\n- Changed the behavior of `date_format`:\n  - The `format` argument changed from optional to required.\n  - The returned result changed from a date object to a date-formatted string.\n- When a window function, or a sequence-dependent data generator (`normal`, `zipf`, `uniform`, `seq1`, `seq2`, `seq4`, `seq8`) function is used, the sort and filter operation will no longer be flattened when generating the query.\n\n## 1.9.0 (2023-10-13)\n\n### New Features\n\n- Added support for the Python 3.11 runtime environment.\n\n### Dependency updates\n\n- Added back the dependency of `typing-extensions`.\n\n### Bug Fixes\n\n- Fixed a bug where imports from permanent stage locations were ignored for temporary stored procedures, UDTFs, UDFs, and UDAFs.\n- Revert back to using CTAS (create table as select) statement for `Dataframe.writer.save_as_table` which does not need insert permission for writing tables.\n\n### New Features\n- Support `PythonObjJSONEncoder` json-serializable objects for `ARRAY` and `OBJECT` literals.\n\n## 1.8.0 (2023-09-14)\n\n### New Features\n\n- Added support for VOLATILE/IMMUTABLE keyword when registering UDFs.\n- Added support for specifying clustering keys when saving dataframes using `DataFrame.save_as_table`.\n- Accept `Iterable` objects input for `schema` when creating dataframes using `Session.create_dataframe`.\n- Added the property `DataFrame.session` to return a `Session` object.\n- Added the property `Session.session_id` to return an integer that represents session ID.\n- Added the property `Session.connection` to return a `SnowflakeConnection` object .\n\n- Added support for creating a Snowpark session from a configuration file or environment variables.\n\n### Dependency updates\n\n- Updated ``snowflake-connector-python`` to 3.2.0.\n\n### Bug Fixes\n\n- Fixed a bug where automatic package upload would raise `ValueError` even when compatible package version were added in `session.add_packages`.\n- Fixed a bug where table stored procedures were not registered correctly when using `register_from_file`.\n- Fixed a bug where dataframe joins failed with `invalid_identifier` error.\n- Fixed a bug where `DataFrame.copy` disables SQL simplfier for the returned copy.\n- Fixed a bug where `session.sql().select()` would fail if any parameters are specified to `session.sql()`\n\n## 1.7.0 (2023-08-28)\n\n### New Features\n\n- Added parameters `external_access_integrations` and `secrets` when creating a UDF, UDTF or Stored Procedure from Snowpark Python to allow integration with external access.\n- Added support for these new functions in `snowflake.snowpark.functions`:\n  - `array_flatten`\n  - `flatten`\n- Added support for `apply_in_pandas` in `snowflake.snowpark.relational_grouped_dataframe`.\n- Added support for replicating your local Python environment on Snowflake via `Session.replicate_local_environment`.\n\n### Bug Fixes\n\n- Fixed a bug where `session.create_dataframe` fails to properly set nullable columns where nullability was affected by order or data was given.\n- Fixed a bug where `DataFrame.select` could not identify and alias columns in presence of table functions when output columns of table function overlapped with columns in dataframe.\n\n### Behavior Changes\n\n- When creating stored procedures, UDFs, UDTFs, UDAFs with parameter `is_permanent=False` will now create temporary objects even when `stage_name` is provided. The default value of `is_permanent` is `False` which is why if this value is not explicitly set to `True` for permanent objects, users will notice a change in behavior.\n- `types.StructField` now enquotes column identifier by default.\n\n## 1.6.1 (2023-08-02)\n\n### New Features\n\n- Added support for these new functions in `snowflake.snowpark.functions`:\n  - `array_sort`\n  - `sort_array`\n  - `array_min`\n  - `array_max`\n  - `explode_outer`\n- Added support for pure Python packages specified via `Session.add_requirements` or `Session.add_packages`. They are now usable in stored procedures and UDFs even if packages are not present on the Snowflake Anaconda channel.\n  - Added Session parameter `custom_packages_upload_enabled` and `custom_packages_force_upload_enabled` to enable the support for pure Python packages feature mentioned above. Both parameters default to `False`.\n- Added support for specifying package requirements by passing a Conda environment yaml file to `Session.add_requirements`.\n- Added support for asynchronous execution of multi-query dataframes that contain binding variables.\n- Added support for renaming multiple columns in `DataFrame.rename`.\n- Added support for Geometry datatypes.\n- Added support for `params` in `session.sql()` in stored procedures.\n- Added support for user-defined aggregate functions (UDAFs). This feature is currently in private preview.\n- Added support for vectorized UDTFs (user-defined table functions). This feature is currently in public preview.\n- Added support for Snowflake Timestamp variants (i.e., `TIMESTAMP_NTZ`, `TIMESTAMP_LTZ`, `TIMESTAMP_TZ`)\n  - Added `TimestampTimezone` as an argument in `TimestampType` constructor.\n  - Added type hints `NTZ`, `LTZ`, `TZ` and `Timestamp` to annotate functions when registering UDFs.\n\n### Improvements\n\n- Removed redundant dependency `typing-extensions`.\n- `DataFrame.cache_result` now creates temp table fully qualified names under current database and current schema.\n\n### Bug Fixes\n\n- Fixed a bug where type check happens on pandas before it is imported.\n- Fixed a bug when creating a UDF from `numpy.ufunc`.\n- Fixed a bug where `DataFrame.union` was not generating the correct `Selectable.schema_query` when SQL simplifier is enabled.\n\n### Behavior Changes\n\n- `DataFrameWriter.save_as_table` now respects the `nullable` field of the schema provided by the user or the inferred schema based on data from user input.\n\n### Dependency updates\n\n- Updated ``snowflake-connector-python`` to 3.0.4.\n\n## 1.5.1 (2023-06-20)\n\n### New Features\n\n- Added support for the Python 3.10 runtime environment.\n\n## 1.5.0 (2023-06-09)\n\n### Behavior Changes\n\n- Aggregation results, from functions such as `DataFrame.agg` and `DataFrame.describe`, no longer strip away non-printing characters from column names.\n\n### New Features\n\n- Added support for the Python 3.9 runtime environment.\n- Added support for new functions in `snowflake.snowpark.functions`:\n  - `array_generate_range`\n  - `array_unique_agg`\n  - `collect_set`\n  - `sequence`\n- Added support for registering and calling stored procedures with `TABLE` return type.\n- Added support for parameter `length` in `StringType()` to specify the maximum number of characters that can be stored by the column.\n- Added the alias `functions.element_at()` for `functions.get()`.\n- Added the alias `Column.contains` for `functions.contains`.\n- Added experimental feature `DataFrame.alias`.\n- Added support for querying metadata columns from stage when creating `DataFrame` using `DataFrameReader`.\n- Added support for `StructType.add` to append more fields to existing `StructType` objects.\n- Added support for parameter `execute_as` in `StoredProcedureRegistration.register_from_file()` to specify stored procedure caller rights.\n\n### Bug Fixes\n\n- Fixed a bug where the `Dataframe.join_table_function` did not run all of the necessary queries to set up the join table function when SQL simplifier was enabled.\n- Fixed type hint declaration for custom types - `ColumnOrName`, `ColumnOrLiteralStr`, `ColumnOrSqlExpr`, `LiteralType` and `ColumnOrLiteral` that were breaking `mypy` checks.\n- Fixed a bug where `DataFrameWriter.save_as_table` and `DataFrame.copy_into_table` failed to parse fully qualified table names.\n\n## 1.4.0 (2023-04-24)\n\n### New Features\n\n- Added support for `session.getOrCreate`.\n- Added support for alias `Column.getField`.\n- Added support for new functions in `snowflake.snowpark.functions`:\n  - `date_add` and `date_sub` to make add and subtract operations easier.\n  - `daydiff`\n  - `explode`\n  - `array_distinct`.\n  - `regexp_extract`.\n  - `struct`.\n  - `format_number`.\n  - `bround`.\n  - `substring_index`\n- Added parameter `skip_upload_on_content_match` when creating UDFs, UDTFs and stored procedures using `register_from_file` to skip uploading files to a stage if the same version of the files are already on the stage.\n- Added support for `DataFrameWriter.save_as_table` method to take table names that contain dots.\n- Flattened generated SQL when `DataFrame.filter()` or `DataFrame.order_by()` is followed by a projection statement (e.g. `DataFrame.select()`, `DataFrame.with_column()`).\n- Added support for creating dynamic tables _(in private preview)_ using `Dataframe.create_or_replace_dynamic_table`.\n- Added an optional argument `params` in `session.sql()` to support binding variables. Note that this is not supported in stored procedures yet.\n\n### Bug Fixes\n\n- Fixed a bug in `strtok_to_array` where an exception was thrown when a delimiter was passed in.\n- Fixed a bug in `session.add_import` where the module had the same namespace as other dependencies.\n\n## 1.3.0 (2023-03-28)\n\n### New Features\n\n- Added support for `delimiters` parameter in `functions.initcap()`.\n- Added support for `functions.hash()` to accept a variable number of input expressions.\n- Added API `Session.RuntimeConfig` for getting/setting/checking the mutability of any runtime configuration.\n- Added support managing case sensitivity in `Row` results from `DataFrame.collect` using `case_sensitive` parameter.\n- Added API `Session.conf` for getting, setting or checking the mutability of any runtime configuration.\n- Added support for managing case sensitivity in `Row` results from `DataFrame.collect` using `case_sensitive` parameter.\n- Added indexer support for `snowflake.snowpark.types.StructType`.\n- Added a keyword argument `log_on_exception` to `Dataframe.collect` and `Dataframe.collect_no_wait` to optionally disable error logging for SQL exceptions.\n\n### Bug Fixes\n\n- Fixed a bug where a DataFrame set operation(`DataFrame.substract`, `DataFrame.union`, etc.) being called after another DataFrame set operation and `DataFrame.select` or `DataFrame.with_column` throws an exception.\n- Fixed a bug where chained sort statements are overwritten by the SQL simplifier.\n\n### Improvements\n\n- Simplified JOIN queries to use constant subquery aliases (`SNOWPARK_LEFT`, `SNOWPARK_RIGHT`) by default. Users can disable this at runtime with `session.conf.set('use_constant_subquery_alias', False)` to use randomly generated alias names instead.\n- Allowed specifying statement parameters in `session.call()`.\n- Enabled the uploading of large pandas DataFrames in stored procedures by defaulting to a chunk size of 100,000 rows.\n\n## 1.2.0 (2023-03-02)\n\n### New Features\n\n- Added support for displaying source code as comments in the generated scripts when registering stored procedures. This\n  is enabled by default, turn off by specifying `source_code_display=False` at registration.\n- Added a parameter `if_not_exists` when creating a UDF, UDTF or Stored Procedure from Snowpark Python to ignore creating the specified function or procedure if it already exists.\n- Accept integers when calling `snowflake.snowpark.functions.get` to extract value from array.\n- Added `functions.reverse` in functions to open access to Snowflake built-in function\n  [reverse](https://docs.snowflake.com/en/sql-reference/functions/reverse).\n- Added parameter `require_scoped_url` in snowflake.snowflake.files.SnowflakeFile.open() `(in Private Preview)` to replace `is_owner_file` is marked for deprecation.\n\n### Bug Fixes\n\n- Fixed a bug that overwrote `paramstyle` to `qmark` when creating a Snowpark session.\n- Fixed a bug where `df.join(..., how=\"cross\")` fails with `SnowparkJoinException: (1112): Unsupported using join type 'Cross'`.\n- Fixed a bug where querying a `DataFrame` column created from chained function calls used a wrong column name.\n\n## 1.1.0 (2023-01-26)\n\n### New Features:\n\n- Added `asc`, `asc_nulls_first`, `asc_nulls_last`, `desc`, `desc_nulls_first`, `desc_nulls_last`, `date_part` and `unix_timestamp` in functions.\n- Added the property `DataFrame.dtypes` to return a list of column name and data type pairs.\n- Added the following aliases:\n  - `functions.expr()` for `functions.sql_expr()`.\n  - `functions.date_format()` for `functions.to_date()`.\n  - `functions.monotonically_increasing_id()` for `functions.seq8()`\n  - `functions.from_unixtime()` for `functions.to_timestamp()`\n\n### Bug Fixes:\n\n- Fixed a bug in SQL simplifier that didn’t handle Column alias and join well in some cases. See https://github.com/snowflakedb/snowpark-python/issues/658 for details.\n- Fixed a bug in SQL simplifier that generated wrong column names for function calls, NaN and INF.\n\n### Improvements\n\n- The session parameter `PYTHON_SNOWPARK_USE_SQL_SIMPLIFIER` is `True` after Snowflake 7.3 was released. In snowpark-python, `session.sql_simplifier_enabled` reads the value of `PYTHON_SNOWPARK_USE_SQL_SIMPLIFIER` by default, meaning that the SQL simplfier is enabled by default after the Snowflake 7.3 release. To turn this off, set `PYTHON_SNOWPARK_USE_SQL_SIMPLIFIER` in Snowflake to `False` or run `session.sql_simplifier_enabled = False` from Snowpark. It is recommended to use the SQL simplifier because it helps to generate more concise SQL.\n\n## 1.0.0 (2022-11-01)\n\n### New Features\n\n- Added `Session.generator()` to create a new `DataFrame` using the Generator table function.\n- Added a parameter `secure` to the functions that create a secure UDF or UDTF.\n\n## 0.12.0 (2022-10-14)\n\n### New Features\n\n- Added new APIs for async job:\n  - `Session.create_async_job()` to create an `AsyncJob` instance from a query id.\n  - `AsyncJob.result()` now accepts argument `result_type` to return the results in different formats.\n  - `AsyncJob.to_df()` returns a `DataFrame` built from the result of this asynchronous job.\n  - `AsyncJob.query()` returns the SQL text of the executed query.\n- `DataFrame.agg()` and `RelationalGroupedDataFrame.agg()` now accept variable-length arguments.\n- Added parameters `lsuffix` and `rsuffix` to `DataFram.join()` and `DataFrame.cross_join()` to conveniently rename overlapping columns.\n- Added `Table.drop_table()` so you can drop the temp table after `DataFrame.cache_result()`. `Table` is also a context manager so you can use the `with` statement to drop the cache temp table after use.\n- Added `Session.use_secondary_roles()`.\n- Added functions `first_value()` and `last_value()`. (contributed by @chasleslr)\n- Added `on` as an alias for `using_columns` and `how` as an alias for `join_type` in `DataFrame.join()`.\n\n### Bug Fixes\n\n- Fixed a bug in `Session.create_dataframe()` that raised an error when `schema` names had special characters.\n- Fixed a bug in which options set in `Session.read.option()` were not passed to `DataFrame.copy_into_table()` as default values.\n- Fixed a bug in which `DataFrame.copy_into_table()` raises an error when a copy option has single quotes in the value.\n\n## 0.11.0 (2022-09-28)\n\n### Behavior Changes\n\n- `Session.add_packages()` now raises `ValueError` when the version of a package cannot be found in Snowflake Anaconda channel. Previously, `Session.add_packages()` succeeded, and a `SnowparkSQLException` exception was raised later in the UDF/SP registration step.\n\n### New Features:\n\n- Added method `FileOperation.get_stream()` to support downloading stage files as stream.\n- Added support in `functions.ntiles()` to accept int argument.\n- Added the following aliases:\n  - `functions.call_function()` for `functions.call_builtin()`.\n  - `functions.function()` for `functions.builtin()`.\n  - `DataFrame.order_by()` for `DataFrame.sort()`\n  - `DataFrame.orderBy()` for `DataFrame.sort()`\n- Improved `DataFrame.cache_result()` to return a more accurate `Table` class instead of a `DataFrame` class.\n- Added support to allow `session` as the first argument when calling `StoredProcedure`.\n\n### Improvements\n\n- Improved nested query generation by flattening queries when applicable.\n  - This improvement could be enabled by setting `Session.sql_simplifier_enabled = True`.\n  - `DataFrame.select()`, `DataFrame.with_column()`, `DataFrame.drop()` and other select-related APIs have more flattened SQLs.\n  - `DataFrame.union()`, `DataFrame.union_all()`, `DataFrame.except_()`, `DataFrame.intersect()`, `DataFrame.union_by_name()` have flattened SQLs generated when multiple set operators are chained.\n- Improved type annotations for async job APIs.\n\n### Bug Fixes\n\n- Fixed a bug in which `Table.update()`, `Table.delete()`, `Table.merge()` try to reference a temp table that does not exist.\n\n## 0.10.0 (2022-09-16)\n\n### New Features:\n\n- Added experimental APIs for evaluating Snowpark dataframes with asynchronous queries:\n  - Added keyword argument `block` to the following action APIs on Snowpark dataframes (which execute queries) to allow asynchronous evaluations:\n    - `DataFrame.collect()`, `DataFrame.to_local_iterator()`, `DataFrame.to_pandas()`, `DataFrame.to_pandas_batches()`, `DataFrame.count()`, `DataFrame.first()`.\n    - `DataFrameWriter.save_as_table()`, `DataFrameWriter.copy_into_location()`.\n    - `Table.delete()`, `Table.update()`, `Table.merge()`.\n  - Added method `DataFrame.collect_nowait()` to allow asynchronous evaluations.\n  - Added class `AsyncJob` to retrieve results from asynchronously executed queries and check their status.\n- Added support for `table_type` in `Session.write_pandas()`. You can now choose from these `table_type` options: `\"temporary\"`, `\"temp\"`, and `\"transient\"`.\n- Added support for using Python structured data (`list`, `tuple` and `dict`) as literal values in Snowpark.\n- Added keyword argument `execute_as` to `functions.sproc()` and `session.sproc.register()` to allow registering a stored procedure as a caller or owner.\n- Added support for specifying a pre-configured file format when reading files from a stage in Snowflake.\n\n### Improvements:\n\n- Added support for displaying details of a Snowpark session.\n\n### Bug Fixes:\n\n- Fixed a bug in which `DataFrame.copy_into_table()` and `DataFrameWriter.save_as_table()` mistakenly created a new table if the table name is fully qualified, and the table already exists.\n\n### Deprecations:\n\n- Deprecated keyword argument `create_temp_table` in `Session.write_pandas()`.\n- Deprecated invoking UDFs using arguments wrapped in a Python list or tuple. You can use variable-length arguments without a list or tuple.\n\n### Dependency updates\n\n- Updated ``snowflake-connector-python`` to 2.7.12.\n\n## 0.9.0 (2022-08-30)\n\n### New Features:\n\n- Added support for displaying source code as comments in the generated scripts when registering UDFs.\n  This feature is turned on by default. To turn it off, pass the new keyword argument `source_code_display` as `False` when calling `register()` or `@udf()`.\n- Added support for calling table functions from `DataFrame.select()`, `DataFrame.with_column()` and `DataFrame.with_columns()` which now take parameters of type `table_function.TableFunctionCall` for columns.\n- Added keyword argument `overwrite` to `session.write_pandas()` to allow overwriting contents of a Snowflake table with that of a pandas DataFrame.\n- Added keyword argument `column_order` to `df.write.save_as_table()` to specify the matching rules when inserting data into table in append mode.\n- Added method `FileOperation.put_stream()` to upload local files to a stage via file stream.\n- Added methods `TableFunctionCall.alias()` and `TableFunctionCall.as_()` to allow aliasing the names of columns that come from the output of table function joins.\n- Added function `get_active_session()` in module `snowflake.snowpark.context` to get the current active Snowpark session.\n\n### Bug Fixes:\n\n- Fixed a bug in which batch insert should not raise an error when `statement_params` is not passed to the function.\n- Fixed a bug in which column names should be quoted when `session.create_dataframe()` is called with dicts and a given schema.\n- Fixed a bug in which creation of table should be skipped if the table already exists and is in append mode when calling `df.write.save_as_table()`.\n- Fixed a bug in which third-party packages with underscores cannot be added when registering UDFs.\n\n### Improvements:\n\n- Improved function `function.uniform()` to infer the types of inputs `max_` and `min_` and cast the limits to `IntegerType` or `FloatType` correspondingly.\n\n## 0.8.0 (2022-07-22)\n\n### New Features:\n\n- Added keyword only argument `statement_params` to the following methods to allow for specifying statement level parameters:\n  - `collect`, `to_local_iterator`, `to_pandas`, `to_pandas_batches`,\n    `count`, `copy_into_table`, `show`, `create_or_replace_view`, `create_or_replace_temp_view`, `first`, `cache_result`\n    and `random_split` on class `snowflake.snowpark.Dateframe`.\n  - `update`, `delete` and `merge` on class `snowflake.snowpark.Table`.\n  - `save_as_table` and `copy_into_location` on class `snowflake.snowpark.DataFrameWriter`.\n  - `approx_quantile`, `statement_params`, `cov` and `crosstab` on class `snowflake.snowpark.DataFrameStatFunctions`.\n  - `register` and `register_from_file` on class `snowflake.snowpark.udf.UDFRegistration`.\n  - `register` and `register_from_file` on class `snowflake.snowpark.udtf.UDTFRegistration`.\n  - `register` and `register_from_file` on class `snowflake.snowpark.stored_procedure.StoredProcedureRegistration`.\n  - `udf`, `udtf` and `sproc` in `snowflake.snowpark.functions`.\n- Added support for `Column` as an input argument to `session.call()`.\n- Added support for `table_type` in `df.write.save_as_table()`. You can now choose from these `table_type` options: `\"temporary\"`, `\"temp\"`, and `\"transient\"`.\n\n### Improvements:\n\n- Added validation of object name in `session.use_*` methods.\n- Updated the query tag in SQL to escape it when it has special characters.\n- Added a check to see if Anaconda terms are acknowledged when adding missing packages.\n\n### Bug Fixes:\n\n- Fixed the limited length of the string column in `session.create_dataframe()`.\n- Fixed a bug in which `session.create_dataframe()` mistakenly converted 0 and `False` to `None` when the input data was only a list.\n- Fixed a bug in which calling `session.create_dataframe()` using a large local dataset sometimes created a temp table twice.\n- Aligned the definition of `function.trim()` with the SQL function definition.\n- Fixed an issue where snowpark-python would hang when using the Python system-defined (built-in function) `sum` vs. the Snowpark `function.sum()`.\n\n### Deprecations:\n\n- Deprecated keyword argument `create_temp_table` in `df.write.save_as_table()`.\n\n## 0.7.0 (2022-05-25)\n\n### New Features:\n\n- Added support for user-defined table functions (UDTFs).\n  - Use function `snowflake.snowpark.functions.udtf()` to register a UDTF, or use it as a decorator to register the UDTF.\n    - You can also use `Session.udtf.register()` to register a UDTF.\n  - Use `Session.udtf.register_from_file()` to register a UDTF from a Python file.\n- Updated APIs to query a table function, including both Snowflake built-in table functions and UDTFs.\n  - Use function `snowflake.snowpark.functions.table_function()` to create a callable representing a table function and use it to call the table function in a query.\n  - Alternatively, use function `snowflake.snowpark.functions.call_table_function()` to call a table function.\n  - Added support for `over` clause that specifies `partition by` and `order by` when lateral joining a table function.\n  - Updated `Session.table_function()` and `DataFrame.join_table_function()` to accept `TableFunctionCall` instances.\n\n### Breaking Changes:\n\n- When creating a function with `functions.udf()` and `functions.sproc()`, you can now specify an empty list for the `imports` or `packages` argument to indicate that no import or package is used for this UDF or stored procedure. Previously, specifying an empty list meant that the function would use session-level imports or packages.\n- Improved the `__repr__` implementation of data types in `types.py`. The unused `type_name` property has been removed.\n- Added a Snowpark-specific exception class for SQL errors. This replaces the previous `ProgrammingError` from the Python connector.\n\n### Improvements:\n\n- Added a lock to a UDF or UDTF when it is called for the first time per thread.\n- Improved the error message for pickling errors that occurred during UDF creation.\n- Included the query ID when logging the failed query.\n\n### Bug Fixes:\n\n- Fixed a bug in which non-integral data (such as timestamps) was occasionally converted to integer when calling `DataFrame.to_pandas()`.\n- Fixed a bug in which `DataFrameReader.parquet()` failed to read a parquet file when its column contained spaces.\n- Fixed a bug in which `DataFrame.copy_into_table()` failed when the dataframe is created by reading a file with inferred schemas.\n\n### Deprecations\n\n`Session.flatten()` and `DataFrame.flatten()`.\n\n### Dependency Updates:\n\n- Restricted the version of `cloudpickle` <= `2.0.0`.\n\n## 0.6.0 (2022-04-27)\n\n### New Features:\n\n- Added support for vectorized UDFs with the input as a pandas DataFrame or pandas Series and the output as a pandas Series. This improves the performance of UDFs in Snowpark.\n- Added support for inferring the schema of a DataFrame by default when it is created by reading a Parquet, Avro, or ORC file in the stage.\n- Added functions `current_session()`, `current_statement()`, `current_user()`, `current_version()`, `current_warehouse()`, `date_from_parts()`, `date_trunc()`, `dayname()`, `dayofmonth()`, `dayofweek()`, `dayofyear()`, `grouping()`, `grouping_id()`, `hour()`, `last_day()`, `minute()`, `next_day()`, `previous_day()`, `second()`, `month()`, `monthname()`, `quarter()`, `year()`, `current_database()`, `current_role()`, `current_schema()`, `current_schemas()`, `current_region()`, `current_avaliable_roles()`, `add_months()`, `any_value()`, `bitnot()`, `bitshiftleft()`, `bitshiftright()`, `convert_timezone()`, `uniform()`, `strtok_to_array()`, `sysdate()`, `time_from_parts()`,  `timestamp_from_parts()`, `timestamp_ltz_from_parts()`, `timestamp_ntz_from_parts()`, `timestamp_tz_from_parts()`, `weekofyear()`, `percentile_cont()` to `snowflake.snowflake.functions`.\n\n### Breaking Changes:\n\n- Expired deprecations:\n  - Removed the following APIs that were deprecated in 0.4.0: `DataFrame.groupByGroupingSets()`, `DataFrame.naturalJoin()`, `DataFrame.joinTableFunction`, `DataFrame.withColumns()`, `Session.getImports()`, `Session.addImport()`, `Session.removeImport()`, `Session.clearImports()`, `Session.getSessionStage()`, `Session.getDefaultDatabase()`, `Session.getDefaultSchema()`, `Session.getCurrentDatabase()`, `Session.getCurrentSchema()`, `Session.getFullyQualifiedCurrentSchema()`.\n\n### Improvements:\n\n- Added support for creating an empty `DataFrame` with a specific schema using the `Session.create_dataframe()` method.\n- Changed the logging level from `INFO` to `DEBUG` for several logs (e.g., the executed query) when evaluating a dataframe.\n- Improved the error message when failing to create a UDF due to pickle errors.\n\n### Bug Fixes:\n\n- Removed pandas hard dependencies in the `Session.create_dataframe()` method.\n\n### Dependency Updates:\n\n- Added `typing-extension` as a new dependency with the version >= `4.1.0`.\n\n## 0.5.0 (2022-03-22)\n\n### New Features\n\n- Added stored procedures API.\n  - Added `Session.sproc` property and `sproc()` to `snowflake.snowpark.functions`, so you can register stored procedures.\n  - Added `Session.call` to call stored procedures by name.\n- Added `UDFRegistration.register_from_file()` to allow registering UDFs from Python source files or zip files directly.\n- Added `UDFRegistration.describe()` to describe a UDF.\n- Added `DataFrame.random_split()` to provide a way to randomly split a dataframe.\n- Added functions `md5()`, `sha1()`, `sha2()`, `ascii()`, `initcap()`, `length()`, `lower()`, `lpad()`, `ltrim()`, `rpad()`, `rtrim()`, `repeat()`, `soundex()`, `regexp_count()`, `replace()`, `charindex()`, `collate()`, `collation()`, `insert()`, `left()`, `right()`, `endswith()` to `snowflake.snowpark.functions`.\n- Allowed `call_udf()` to accept literal values.\n- Provided a `distinct` keyword in `array_agg()`.\n\n### Bug Fixes:\n\n- Fixed an issue that caused `DataFrame.to_pandas()` to have a string column if `Column.cast(IntegerType())` was used.\n- Fixed a bug in `DataFrame.describe()` when there is more than one string column.\n\n## 0.4.0 (2022-02-15)\n\n### New Features\n\n- You can now specify which Anaconda packages to use when defining UDFs.\n  - Added `add_packages()`, `get_packages()`, `clear_packages()`, and `remove_package()`, to class `Session`.\n  - Added `add_requirements()` to `Session` so you can use a requirements file to specify which packages this session will use.\n  - Added parameter `packages` to function `snowflake.snowpark.functions.udf()` and method `UserDefinedFunction.register()` to indicate UDF-level Anaconda package dependencies when creating a UDF.\n  - Added parameter `imports` to `snowflake.snowpark.functions.udf()` and `UserDefinedFunction.register()` to specify UDF-level code imports.\n- Added a parameter `session` to function `udf()` and `UserDefinedFunction.register()` so you can specify which session to use to create a UDF if you have multiple sessions.\n- Added types `Geography` and `Variant` to `snowflake.snowpark.types` to be used as type hints for Geography and Variant data when defining a UDF.\n- Added support for Geography geoJSON data.\n- Added `Table`, a subclass of `DataFrame` for table operations:\n  - Methods `update` and `delete` update and delete rows of a table in Snowflake.\n  - Method `merge` merges data from a `DataFrame` to a `Table`.\n  - Override method `DataFrame.sample()` with an additional parameter `seed`, which works on tables but not on view and sub-queries.\n- Added `DataFrame.to_local_iterator()` and `DataFrame.to_pandas_batches()` to allow getting results from an iterator when the result set returned from the Snowflake database is too large.\n- Added `DataFrame.cache_result()` for caching the operations performed on a `DataFrame` in a temporary table.\n  Subsequent operations on the original `DataFrame` have no effect on the cached result `DataFrame`.\n- Added property `DataFrame.queries` to get SQL queries that will be executed to evaluate the `DataFrame`.\n- Added `Session.query_history()` as a context manager to track SQL queries executed on a session, including all SQL queries to evaluate `DataFrame`s created from a session. Both query ID and query text are recorded.\n- You can now create a `Session` instance from an existing established `snowflake.connector.SnowflakeConnection`. Use parameter `connection` in `Session.builder.configs()`.\n- Added `use_database()`, `use_schema()`, `use_warehouse()`, and `use_role()` to class `Session` to switch database/schema/warehouse/role after a session is created.\n- Added `DataFrameWriter.copy_into_table()` to unload a `DataFrame` to stage files.\n- Added `DataFrame.unpivot()`.\n- Added `Column.within_group()` for sorting the rows by columns with some aggregation functions.\n- Added functions `listagg()`, `mode()`, `div0()`, `acos()`, `asin()`, `atan()`, `atan2()`, `cos()`, `cosh()`, `sin()`, `sinh()`, `tan()`, `tanh()`, `degrees()`, `radians()`, `round()`, `trunc()`, and `factorial()` to `snowflake.snowflake.functions`.\n- Added an optional argument `ignore_nulls` in function `lead()` and `lag()`.\n- The `condition` parameter of function `when()` and `iff()` now accepts SQL expressions.\n\n### Improvements\n\n- All function and method names have been renamed to use the snake case naming style, which is more Pythonic. For convenience, some camel case names are kept as aliases to the snake case APIs. It is recommended to use the snake case APIs.\n  - Deprecated these methods on class `Session` and replaced them with their snake case equivalents: `getImports()`, `addImports()`, `removeImport()`, `clearImports()`, `getSessionStage()`, `getDefaultSchema()`, `getDefaultSchema()`, `getCurrentDatabase()`, `getFullyQualifiedCurrentSchema()`.\n  - Deprecated these methods on class `DataFrame` and replaced them with their snake case equivalents: `groupingByGroupingSets()`, `naturalJoin()`, `withColumns()`, `joinTableFunction()`.\n- Property `DataFrame.columns` is now consistent with `DataFrame.schema.names` and the Snowflake database `Identifier Requirements`.\n- `Column.__bool__()` now raises a `TypeError`. This will ban the use of logical operators `and`, `or`, `not` on `Column` object, for instance `col(\"a\") > 1 and col(\"b\") > 2` will raise the `TypeError`. Use `(col(\"a\") > 1) & (col(\"b\") > 2)` instead.\n- Changed `PutResult` and `GetResult` to subclass `NamedTuple`.\n- Fixed a bug which raised an error when the local path or stage location has a space or other special characters.\n- Changed `DataFrame.describe()` so that non-numeric and non-string columns are ignored instead of raising an exception.\n\n### Dependency updates\n\n- Updated ``snowflake-connector-python`` to 2.7.4.\n\n## 0.3.0 (2022-01-09)\n\n### New Features\n\n- Added `Column.isin()`, with an alias `Column.in_()`.\n- Added `Column.try_cast()`, which is a special version of `cast()`. It tries to cast a string expression to other types and returns `null` if the cast is not possible.\n- Added `Column.startswith()` and `Column.substr()` to process string columns.\n- `Column.cast()` now also accepts a `str` value to indicate the cast type in addition to a `DataType` instance.\n- Added `DataFrame.describe()` to summarize stats of a `DataFrame`.\n- Added `DataFrame.explain()` to print the query plan of a `DataFrame`.\n- `DataFrame.filter()` and `DataFrame.select_expr()` now accepts a sql expression.\n- Added a new `bool` parameter `create_temp_table` to methods `DataFrame.saveAsTable()` and `Session.write_pandas()` to optionally create a temp table.\n- Added `DataFrame.minus()` and `DataFrame.subtract()` as aliases to `DataFrame.except_()`.\n- Added `regexp_replace()`, `concat()`, `concat_ws()`, `to_char()`, `current_timestamp()`, `current_date()`, `current_time()`, `months_between()`, `cast()`, `try_cast()`, `greatest()`, `least()`, and `hash()` to module `snowflake.snowpark.functions`.\n\n### Bug Fixes\n\n- Fixed an issue where `Session.createDataFrame(pandas_df)` and `Session.write_pandas(pandas_df)` raise an exception when the `pandas DataFrame` has spaces in the column name.\n- `DataFrame.copy_into_table()` sometimes prints an `error` level log entry while it actually works. It's fixed now.\n- Fixed an API docs issue where some `DataFrame` APIs are missing from the docs.\n\n### Dependency updates\n\n- Update ``snowflake-connector-python`` to 2.7.2, which upgrades ``pyarrow`` dependency to 6.0.x. Refer to the [python connector 2.7.2 release notes](https://pypi.org/project/snowflake-connector-python/2.7.2/) for more details.\n\n## 0.2.0 (2021-12-02)\n\n### New Features\n\n- Updated the `Session.createDataFrame()` method for creating a `DataFrame` from a pandas DataFrame.\n- Added the `Session.write_pandas()` method for writing a `pandas DataFrame` to a table in Snowflake and getting a `Snowpark DataFrame` object back.\n- Added new classes and methods for calling window functions.\n- Added the new functions `cume_dist()`, to find the cumulative distribution of a value with regard to other values within a window partition,\n  and `row_number()`, which returns a unique row number for each row within a window partition.\n- Added functions for computing statistics for DataFrames in the `DataFrameStatFunctions` class.\n- Added functions for handling missing values in a DataFrame in the `DataFrameNaFunctions` class.\n- Added new methods `rollup()`, `cube()`, and `pivot()` to the `DataFrame` class.\n- Added the `GroupingSets` class, which you can use with the DataFrame groupByGroupingSets method to perform a SQL GROUP BY GROUPING SETS.\n- Added the new `FileOperation(session)`\n  class that you can use to upload and download files to and from a stage.\n- Added the `DataFrame.copy_into_table()`\n  method for loading data from files in a stage into a table.\n- In CASE expressions, the functions `when()` and `otherwise()`\n  now accept Python types in addition to `Column` objects.\n- When you register a UDF you can now optionally set the `replace` parameter to `True` to overwrite an existing UDF with the same name.\n\n### Improvements\n\n- UDFs are now compressed before they are uploaded to the server. This makes them about 10 times smaller, which can help\n  when you are using large ML model files.\n- When the size of a UDF is less than 8196 bytes, it will be uploaded as in-line code instead of uploaded to a stage.\n\n### Bug Fixes\n\n- Fixed an issue where the statement `df.select(when(col(\"a\") == 1, 4).otherwise(col(\"a\"))), [Row(4), Row(2), Row(3)]` raised an exception.\n- Fixed an issue where `df.toPandas()` raised an exception when a DataFrame was created from large local data.\n\n## 0.1.0 (2021-10-26)\n\nStart of Private Preview\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://www.snowflake.com/","keywords":"Snowflake db database cloud analytics warehouse","license":"Apache License, Version 2.0","maintainer":null,"maintainer_email":null,"name":"snowflake-snowpark-python","package_url":"https://pypi.org/project/snowflake-snowpark-python/","platform":null,"project_url":"https://pypi.org/project/snowflake-snowpark-python/","project_urls":{"Changelog":"https://github.com/snowflakedb/snowpark-python/blob/main/CHANGELOG.md","Documentation":"https://docs.snowflake.com/en/developer-guide/snowpark/python/index.html","Homepage":"https://www.snowflake.com/","Issues":"https://github.com/snowflakedb/snowpark-python/issues","Source":"https://github.com/snowflakedb/snowpark-python"},"provides_extra":["development","localtest","modin","modin-development","opentelemetry","pandas","secure-local-storage"],"release_url":"https://pypi.org/project/snowflake-snowpark-python/1.19.0/","requires_dist":["setuptools>=40.6.0","wheel","snowflake-connector-python<4.0.0,>=3.10.0","typing-extensions<5.0.0,>=4.1.0","pyyaml","cloudpickle!=2.1.0,!=2.2.0,<=2.2.1,>=1.6.0; python_version < \"3.11\"","cloudpickle==2.2.1; python_version ~= \"3.11\"","pytest<8.0.0; extra == \"development\"","pytest-cov; extra == \"development\"","coverage; extra == \"development\"","sphinx==5.0.2; extra == \"development\"","cachetools; extra == \"development\"","pytest-timeout; extra == \"development\"","pytest-xdist; extra == \"development\"","pre-commit; extra == \"development\"","pandas; extra == \"localtest\"","requests; extra == \"localtest\"","snowflake-connector-python[pandas]<4.0.0,>=3.10.0; extra == \"modin\"","modin==0.28.1; extra == \"modin\"","snowflake-connector-python[pandas]<4.0.0,>=3.10.0; extra == \"modin-development\"","modin==0.28.1; extra == \"modin-development\"","pytest<8.0.0; extra == \"modin-development\"","pytest-cov; extra == \"modin-development\"","coverage; extra == \"modin-development\"","sphinx==5.0.2; extra == \"modin-development\"","cachetools; extra == \"modin-development\"","pytest-timeout; extra == \"modin-development\"","pytest-xdist; extra == \"modin-development\"","pre-commit; extra == \"modin-development\"","pytest-assume; extra == \"modin-development\"","decorator; extra == \"modin-development\"","scipy; extra == \"modin-development\"","statsmodels; extra == \"modin-development\"","opentelemetry-api<2.0.0,>=1.0.0; extra == \"opentelemetry\"","opentelemetry-sdk<2.0.0,>=1.0.0; extra == \"opentelemetry\"","snowflake-connector-python[pandas]<4.0.0,>=3.10.0; extra == \"pandas\"","snowflake-connector-python[secure-local-storage]<4.0.0,>=3.10.0; extra == \"secure-local-storage\""],"requires_python":"<3.12,>=3.8","summary":"Snowflake Snowpark for Python","version":"1.19.0","yanked":false,"yanked_reason":null},"last_serial":23860523,"releases":{"0.10.0":[{"comment_text":"","digests":{"blake2b_256":"da6121a387fc3c36f6853acbe705151c7f7d5bedddf7e36d4ffc31a580778028","md5":"2077a27c4b548b827c452edb3e8d0d08","sha256":"483843541ba46ddbe27ef58c981e746652d449b2984f97071b70832e9e7e44c5"},"downloads":-1,"filename":"snowflake_snowpark_python-0.10.0-py3-none-any.whl","has_sig":false,"md5_digest":"2077a27c4b548b827c452edb3e8d0d08","packagetype":"bdist_wheel","python_version":"py3","requires_python":"==3.8.*","size":233382,"upload_time":"2022-09-16T19:31:03","upload_time_iso_8601":"2022-09-16T19:31:03.122289Z","url":"https://files.pythonhosted.org/packages/da/61/21a387fc3c36f6853acbe705151c7f7d5bedddf7e36d4ffc31a580778028/snowflake_snowpark_python-0.10.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2307778f356c6d2f4fdb213e45f42f9cb8b5d64578c03c413dcde4ba41d1f430","md5":"dbc647d73ecef6b0afc583123743274d","sha256":"48a8d9e7fec6eba77bddf2055f930094254a48bc4c59bce0ed4ff9c92099a523"},"downloads":-1,"filename":"snowflake-snowpark-python-0.10.0.tar.gz","has_sig":false,"md5_digest":"dbc647d73ecef6b0afc583123743274d","packagetype":"sdist","python_version":"source","requires_python":"==3.8.*","size":219807,"upload_time":"2022-09-16T19:31:04","upload_time_iso_8601":"2022-09-16T19:31:04.861993Z","url":"https://files.pythonhosted.org/packages/23/07/778f356c6d2f4fdb213e45f42f9cb8b5d64578c03c413dcde4ba41d1f430/snowflake-snowpark-python-0.10.0.tar.gz","yanked":false,"yanked_reason":null}],"0.11.0":[{"comment_text":"","digests":{"blake2b_256":"36439b645509f6385b413afbb70435d05ea60009560ec60e96344ebf72ccdbbb","md5":"a74d9b4499154ffce3bb0ef84f4dce69","sha256":"77505fb9c0f01b4310162fd4611080885b198d13e1a96d45e63c938edada4186"},"downloads":-1,"filename":"snowflake_snowpark_python-0.11.0-py3-none-any.whl","has_sig":false,"md5_digest":"a74d9b4499154ffce3bb0ef84f4dce69","packagetype":"bdist_wheel","python_version":"py3","requires_python":"==3.8.*","size":245400,"upload_time":"2022-09-29T16:56:50","upload_time_iso_8601":"2022-09-29T16:56:50.727856Z","url":"https://files.pythonhosted.org/packages/36/43/9b645509f6385b413afbb70435d05ea60009560ec60e96344ebf72ccdbbb/snowflake_snowpark_python-0.11.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"075a8e284a96b60a772885594e1546065f2e19fb1018cb1190d2f7abb05f5223","md5":"7c8c62f3c2cc4d3bccc1e0f6dbca220d","sha256":"3665ab81be6afcc05a75c345847c144031837432acb2a31f597ef18cfdc46c99"},"downloads":-1,"filename":"snowflake-snowpark-python-0.11.0.tar.gz","has_sig":false,"md5_digest":"7c8c62f3c2cc4d3bccc1e0f6dbca220d","packagetype":"sdist","python_version":"source","requires_python":"==3.8.*","size":231957,"upload_time":"2022-09-29T16:56:52","upload_time_iso_8601":"2022-09-29T16:56:52.661569Z","url":"https://files.pythonhosted.org/packages/07/5a/8e284a96b60a772885594e1546065f2e19fb1018cb1190d2f7abb05f5223/snowflake-snowpark-python-0.11.0.tar.gz","yanked":false,"yanked_reason":null}],"0.12.0":[{"comment_text":"","digests":{"blake2b_256":"71ab416bd627e1bad0f87cc52f707efe7cb784d29e3fb5f2a76887f3b32551c0","md5":"5b909180c98278f15d56e75e5ae2f387","sha256":"06e9e767333f08d8694b58ece05a03ba6ca28c3fcb4a888d17bab6825ce4504b"},"downloads":-1,"filename":"snowflake_snowpark_python-0.12.0-py3-none-any.whl","has_sig":false,"md5_digest":"5b909180c98278f15d56e75e5ae2f387","packagetype":"bdist_wheel","python_version":"py3","requires_python":"==3.8.*","size":251367,"upload_time":"2022-10-14T21:16:12","upload_time_iso_8601":"2022-10-14T21:16:12.749504Z","url":"https://files.pythonhosted.org/packages/71/ab/416bd627e1bad0f87cc52f707efe7cb784d29e3fb5f2a76887f3b32551c0/snowflake_snowpark_python-0.12.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e0ee55fcf8e168e5fea34a914c1c0fe078fc8b59c203a054d76e5237e58c7055","md5":"67a4d14764f8b8ef59c87b3123bbc58e","sha256":"369c5ef8011462cac6708293dceb135c49d5585801cc2f67eb22fe123de0475c"},"downloads":-1,"filename":"snowflake-snowpark-python-0.12.0.tar.gz","has_sig":false,"md5_digest":"67a4d14764f8b8ef59c87b3123bbc58e","packagetype":"sdist","python_version":"source","requires_python":"==3.8.*","size":238273,"upload_time":"2022-10-14T21:16:14","upload_time_iso_8601":"2022-10-14T21:16:14.437078Z","url":"https://files.pythonhosted.org/packages/e0/ee/55fcf8e168e5fea34a914c1c0fe078fc8b59c203a054d76e5237e58c7055/snowflake-snowpark-python-0.12.0.tar.gz","yanked":false,"yanked_reason":null}],"0.6.0":[{"comment_text":"","digests":{"blake2b_256":"d9c9b53337b359fdcf1a67c67a833e1720977f3254cf0333cd8b14f23d977f78","md5":"91a7a48b3fad989c4d32177714427d0f","sha256":"224eee33d3c35ac1de3a1ce4fdd0cbeb4db50b1b72a5fad7ed26a6b3bb278e08"},"downloads":-1,"filename":"snowflake_snowpark_python-0.6.0-py3-none-any.whl","has_sig":false,"md5_digest":"91a7a48b3fad989c4d32177714427d0f","packagetype":"bdist_wheel","python_version":"py3","requires_python":"==3.8.*","size":192512,"upload_time":"2022-06-07T19:00:47","upload_time_iso_8601":"2022-06-07T19:00:47.008497Z","url":"https://files.pythonhosted.org/packages/d9/c9/b53337b359fdcf1a67c67a833e1720977f3254cf0333cd8b14f23d977f78/snowflake_snowpark_python-0.6.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3d2b06b69d403c06f7f45157c6d9a8a4a58b6cafd77f1c753eede6b5d7dffc2a","md5":"f835eeac48f7a18ff4d2109dcf54c9cb","sha256":"490326636c26f1be60c65925ba29726e4120548096d7194ca6218a0953dca5db"},"downloads":-1,"filename":"snowflake-snowpark-python-0.6.0.tar.gz","has_sig":false,"md5_digest":"f835eeac48f7a18ff4d2109dcf54c9cb","packagetype":"sdist","python_version":"source","requires_python":"==3.8.*","size":179531,"upload_time":"2022-06-07T19:00:48","upload_time_iso_8601":"2022-06-07T19:00:48.678379Z","url":"https://files.pythonhosted.org/packages/3d/2b/06b69d403c06f7f45157c6d9a8a4a58b6cafd77f1c753eede6b5d7dffc2a/snowflake-snowpark-python-0.6.0.tar.gz","yanked":false,"yanked_reason":null}],"0.7.0":[{"comment_text":"","digests":{"blake2b_256":"125808b497305b6e36b8e05a3cefcd63e8f281a897531c6c6551d480598725b1","md5":"d8874e99db77f3a9acfcb8353b3549cb","sha256":"b62f05ec7900567798e5f0bed77d3ea3c120d2f6e23449cc7783d1fd1f429814"},"downloads":-1,"filename":"snowflake_snowpark_python-0.7.0-py3-none-any.whl","has_sig":false,"md5_digest":"d8874e99db77f3a9acfcb8353b3549cb","packagetype":"bdist_wheel","python_version":"py3","requires_python":"==3.8.*","size":207465,"upload_time":"2022-06-07T23:36:40","upload_time_iso_8601":"2022-06-07T23:36:40.397373Z","url":"https://files.pythonhosted.org/packages/12/58/08b497305b6e36b8e05a3cefcd63e8f281a897531c6c6551d480598725b1/snowflake_snowpark_python-0.7.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"63ed08e132a17d4b7068cfb50555de2ff0732bac890aa104f8b2f55dc98ee408","md5":"8e8eebf0cad58ba5ac51793f97eb10e1","sha256":"abbc6fa73f0351cd60ad4c1543504fd4dc5a41e226f597be950ff2c76e313772"},"downloads":-1,"filename":"snowflake-snowpark-python-0.7.0.tar.gz","has_sig":false,"md5_digest":"8e8eebf0cad58ba5ac51793f97eb10e1","packagetype":"sdist","python_version":"source","requires_python":"==3.8.*","size":192607,"upload_time":"2022-06-07T23:36:42","upload_time_iso_8601":"2022-06-07T23:36:42.296889Z","url":"https://files.pythonhosted.org/packages/63/ed/08e132a17d4b7068cfb50555de2ff0732bac890aa104f8b2f55dc98ee408/snowflake-snowpark-python-0.7.0.tar.gz","yanked":false,"yanked_reason":null}],"0.8.0":[{"comment_text":"","digests":{"blake2b_256":"30d0bc9af885353e7318dd4bb1c0e35ceca9dc60d9acd13d51171765cdb7b826","md5":"b647a230b0bb53486ef71b8e07e84cf3","sha256":"102ef861e25acd1b47c26c34d5c9126184cf5c4eb8c81a9f603b620207a8d2df"},"downloads":-1,"filename":"snowflake_snowpark_python-0.8.0-py3-none-any.whl","has_sig":false,"md5_digest":"b647a230b0bb53486ef71b8e07e84cf3","packagetype":"bdist_wheel","python_version":"py3","requires_python":"==3.8.*","size":212714,"upload_time":"2022-07-25T20:52:03","upload_time_iso_8601":"2022-07-25T20:52:03.207939Z","url":"https://files.pythonhosted.org/packages/30/d0/bc9af885353e7318dd4bb1c0e35ceca9dc60d9acd13d51171765cdb7b826/snowflake_snowpark_python-0.8.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0ea3909e5f842a539ce9a0ceb3f555fb9d7869e42b9f18471f3eb9242dda36ab","md5":"275fd8541bf53b9c1a63bb8916664735","sha256":"46d674f7e8e1e3750853ad25fdb7ff8b19062b424f2f6cb8784709e3f4d43214"},"downloads":-1,"filename":"snowflake-snowpark-python-0.8.0.tar.gz","has_sig":false,"md5_digest":"275fd8541bf53b9c1a63bb8916664735","packagetype":"sdist","python_version":"source","requires_python":"==3.8.*","size":198816,"upload_time":"2022-07-25T20:52:05","upload_time_iso_8601":"2022-07-25T20:52:05.371085Z","url":"https://files.pythonhosted.org/packages/0e/a3/909e5f842a539ce9a0ceb3f555fb9d7869e42b9f18471f3eb9242dda36ab/snowflake-snowpark-python-0.8.0.tar.gz","yanked":false,"yanked_reason":null}],"0.9.0":[{"comment_text":"","digests":{"blake2b_256":"3c4c84447c360e918ef881f427044d48f9cc28b62e9ccd11bebeecb50ad5d7e3","md5":"7daf3c04de416396031a68e022bd017c","sha256":"1c4a7232ba0dc04bf36a0158c2d2ccdb665c44d9f798692f7e46aeadfd1dfe03"},"downloads":-1,"filename":"snowflake_snowpark_python-0.9.0-py3-none-any.whl","has_sig":false,"md5_digest":"7daf3c04de416396031a68e022bd017c","packagetype":"bdist_wheel","python_version":"py3","requires_python":"==3.8.*","size":224134,"upload_time":"2022-08-31T00:53:49","upload_time_iso_8601":"2022-08-31T00:53:49.035097Z","url":"https://files.pythonhosted.org/packages/3c/4c/84447c360e918ef881f427044d48f9cc28b62e9ccd11bebeecb50ad5d7e3/snowflake_snowpark_python-0.9.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5ff8865df4acb8b6ba6c57133c0cbe70447a719de8bad4bf356bc6d47e6c464e","md5":"91e184e4d16cbc87f6f8d00651f97f43","sha256":"b9fc70fff0462c8bd39576025df4e27a4b0b7f254f441d716aa1c6e3e440651a"},"downloads":-1,"filename":"snowflake-snowpark-python-0.9.0.tar.gz","has_sig":false,"md5_digest":"91e184e4d16cbc87f6f8d00651f97f43","packagetype":"sdist","python_version":"source","requires_python":"==3.8.*","size":210555,"upload_time":"2022-08-31T00:53:50","upload_time_iso_8601":"2022-08-31T00:53:50.773709Z","url":"https://files.pythonhosted.org/packages/5f/f8/865df4acb8b6ba6c57133c0cbe70447a719de8bad4bf356bc6d47e6c464e/snowflake-snowpark-python-0.9.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"3306cdfd2027efaef97d6902bd4b33af02e8fe60e2091f339abcff04b5742717","md5":"898d33d914884729dfe3addc6b3ce21d","sha256":"4a4d5abca0e416f7b681e1d429623cd0be76de318164a78132613a3779168872"},"downloads":-1,"filename":"snowflake_snowpark_python-1.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"898d33d914884729dfe3addc6b3ce21d","packagetype":"bdist_wheel","python_version":"py3","requires_python":"==3.8.*","size":253764,"upload_time":"2022-11-01T04:33:37","upload_time_iso_8601":"2022-11-01T04:33:37.898649Z","url":"https://files.pythonhosted.org/packages/33/06/cdfd2027efaef97d6902bd4b33af02e8fe60e2091f339abcff04b5742717/snowflake_snowpark_python-1.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c72a81da937dcf82fcb7e2fc6c7af1c22c36557edd02951f14f98deca753a0db","md5":"abc32f27b2f803e5141fbe101e969dbb","sha256":"11493391e81a910bc10e8550031440050c47ce4a44aa0401c3c4e51dcb826ddf"},"downloads":-1,"filename":"snowflake-snowpark-python-1.0.0.tar.gz","has_sig":false,"md5_digest":"abc32f27b2f803e5141fbe101e969dbb","packagetype":"sdist","python_version":"source","requires_python":"==3.8.*","size":241017,"upload_time":"2022-11-01T04:33:40","upload_time_iso_8601":"2022-11-01T04:33:40.186790Z","url":"https://files.pythonhosted.org/packages/c7/2a/81da937dcf82fcb7e2fc6c7af1c22c36557edd02951f14f98deca753a0db/snowflake-snowpark-python-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"7545ccb6674574d6f63befa61fea5b90002a5c756bd4c8b0b6cf68c70e87eacb","md5":"b51ee896e22d5f6e1054f09ca157fa9f","sha256":"66e5660a2a3663ec59eec7078bc71df1f27131ef96cf9b0cde983ea34c81c3fe"},"downloads":-1,"filename":"snowflake_snowpark_python-1.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"b51ee896e22d5f6e1054f09ca157fa9f","packagetype":"bdist_wheel","python_version":"py3","requires_python":"==3.8.*","size":255877,"upload_time":"2023-01-27T05:45:51","upload_time_iso_8601":"2023-01-27T05:45:51.593735Z","url":"https://files.pythonhosted.org/packages/75/45/ccb6674574d6f63befa61fea5b90002a5c756bd4c8b0b6cf68c70e87eacb/snowflake_snowpark_python-1.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"525a59a334bbe9640a657dbc42cc6cb9cb82e80add893f461b702a1de76413a3","md5":"0618d92a71192edf046dc34413bcafe7","sha256":"78c760441670cddb8edb554e2ee354e4efefb5229d38831cd616d023c3198cf2"},"downloads":-1,"filename":"snowflake-snowpark-python-1.1.0.tar.gz","has_sig":false,"md5_digest":"0618d92a71192edf046dc34413bcafe7","packagetype":"sdist","python_version":"source","requires_python":"==3.8.*","size":243996,"upload_time":"2023-01-27T05:45:53","upload_time_iso_8601":"2023-01-27T05:45:53.421659Z","url":"https://files.pythonhosted.org/packages/52/5a/59a334bbe9640a657dbc42cc6cb9cb82e80add893f461b702a1de76413a3/snowflake-snowpark-python-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.10.0":[{"comment_text":"","digests":{"blake2b_256":"130d0a6c919a3de762871eab45b8c84eacf30ae15f92a7d69be991d87570931d","md5":"bdf4cac19b2e9f3447f53e7b03915228","sha256":"d6fb8adb93fc705a7498762b8f5cd8a87984e4876f0ee83a4291c71222891a33"},"downloads":-1,"filename":"snowflake_snowpark_python-1.10.0-py3-none-any.whl","has_sig":false,"md5_digest":"bdf4cac19b2e9f3447f53e7b03915228","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.12","size":330956,"upload_time":"2023-11-03T20:13:26","upload_time_iso_8601":"2023-11-03T20:13:26.977433Z","url":"https://files.pythonhosted.org/packages/13/0d/0a6c919a3de762871eab45b8c84eacf30ae15f92a7d69be991d87570931d/snowflake_snowpark_python-1.10.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5b7befda1bfe5f3c6d67b4f785fcc37c090d945c8d2d569e2ba9cf18fc55b3eb","md5":"539170fc3179b9151eb78ad0e52977ca","sha256":"7a9bbc47eac6862b7bcd172cec8e6786ea6c75b3dc27a2366b930fb0eccb0ca5"},"downloads":-1,"filename":"snowflake-snowpark-python-1.10.0.tar.gz","has_sig":false,"md5_digest":"539170fc3179b9151eb78ad0e52977ca","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.12","size":326731,"upload_time":"2023-11-03T20:13:29","upload_time_iso_8601":"2023-11-03T20:13:29.227738Z","url":"https://files.pythonhosted.org/packages/5b/7b/efda1bfe5f3c6d67b4f785fcc37c090d945c8d2d569e2ba9cf18fc55b3eb/snowflake-snowpark-python-1.10.0.tar.gz","yanked":false,"yanked_reason":null}],"1.11.0":[{"comment_text":"","digests":{"blake2b_256":"99b33ef74dcaa53089004f739bb7d95ddaf80143ea9400d472263c3afe20420b","md5":"de91d288b36e4b986ad2d81d84612b86","sha256":"398085b1b77a70c2e3fcb8bc1c2163f402e01fcd2780c4a7dd3959bc747c3ca5"},"downloads":-1,"filename":"snowflake_snowpark_python-1.11.0-py3-none-any.whl","has_sig":false,"md5_digest":"de91d288b36e4b986ad2d81d84612b86","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.12","size":390034,"upload_time":"2023-12-07T01:05:39","upload_time_iso_8601":"2023-12-07T01:05:39.184435Z","url":"https://files.pythonhosted.org/packages/99/b3/3ef74dcaa53089004f739bb7d95ddaf80143ea9400d472263c3afe20420b/snowflake_snowpark_python-1.11.0-py3-none-any.whl","yanked":true,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"06a3aa1a8a22f0a79f0994db54f66e0fc42155ad83c1fb72638dd60f3f598de4","md5":"f976e1ee2e448ca9239d67f26b3f02e1","sha256":"555231ad95501275bd2f210ebdde9435b59a680a138087b3c1aadc3d405dd27f"},"downloads":-1,"filename":"snowflake-snowpark-python-1.11.0.tar.gz","has_sig":false,"md5_digest":"f976e1ee2e448ca9239d67f26b3f02e1","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.12","size":380279,"upload_time":"2023-12-07T01:05:41","upload_time_iso_8601":"2023-12-07T01:05:41.027876Z","url":"https://files.pythonhosted.org/packages/06/a3/aa1a8a22f0a79f0994db54f66e0fc42155ad83c1fb72638dd60f3f598de4/snowflake-snowpark-python-1.11.0.tar.gz","yanked":true,"yanked_reason":null}],"1.11.1":[{"comment_text":"","digests":{"blake2b_256":"17ec051fb693fa1912b80efd846b070b96435cfa05170524d5343a6938865290","md5":"486bc7a73e6f9a0f3b647dba5f898771","sha256":"80f4c744a2f76cf0f0852c1e3a32f4c060dc4b7b5dffff05f3b4a7d945dff624"},"downloads":-1,"filename":"snowflake_snowpark_python-1.11.1-py3-none-any.whl","has_sig":false,"md5_digest":"486bc7a73e6f9a0f3b647dba5f898771","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.12","size":390075,"upload_time":"2023-12-07T21:26:40","upload_time_iso_8601":"2023-12-07T21:26:40.347454Z","url":"https://files.pythonhosted.org/packages/17/ec/051fb693fa1912b80efd846b070b96435cfa05170524d5343a6938865290/snowflake_snowpark_python-1.11.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ab71b3222f7935068038a62448eb609b1cc9261054b00b6560772f70906e19d6","md5":"4151b065ee9d39f4569c1285b343257c","sha256":"1f03cb546cc750267036ee1986854075fd83349c63461aa01bf1bc4a7155be01"},"downloads":-1,"filename":"snowflake-snowpark-python-1.11.1.tar.gz","has_sig":false,"md5_digest":"4151b065ee9d39f4569c1285b343257c","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.12","size":380389,"upload_time":"2023-12-07T21:26:42","upload_time_iso_8601":"2023-12-07T21:26:42.869652Z","url":"https://files.pythonhosted.org/packages/ab/71/b3222f7935068038a62448eb609b1cc9261054b00b6560772f70906e19d6/snowflake-snowpark-python-1.11.1.tar.gz","yanked":false,"yanked_reason":null}],"1.12.0":[{"comment_text":"","digests":{"blake2b_256":"4734341ed46570297d9cfda15716c7730edbc9c6761a6d6232106a5b4355c23c","md5":"8522a97933fd22f61e996cd503dede70","sha256":"309a3baacedfafd73649b4f89adb030647e64588a60a5dd8eebef0e317af5d7e"},"downloads":-1,"filename":"snowflake_snowpark_python-1.12.0-py3-none-any.whl","has_sig":false,"md5_digest":"8522a97933fd22f61e996cd503dede70","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.12","size":399819,"upload_time":"2024-01-31T00:23:47","upload_time_iso_8601":"2024-01-31T00:23:47.399349Z","url":"https://files.pythonhosted.org/packages/47/34/341ed46570297d9cfda15716c7730edbc9c6761a6d6232106a5b4355c23c/snowflake_snowpark_python-1.12.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"47ac8548a93909d2d59c36a02745e29c568d5deb090ea06383cbc20b07d686f3","md5":"903b94f19d5c806fc1d8f32d0844264a","sha256":"64e4f478e4327635aa6514434a6e55e01466ad33e2b431f7e06956b735387a62"},"downloads":-1,"filename":"snowflake-snowpark-python-1.12.0.tar.gz","has_sig":false,"md5_digest":"903b94f19d5c806fc1d8f32d0844264a","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.12","size":392489,"upload_time":"2024-01-31T00:23:49","upload_time_iso_8601":"2024-01-31T00:23:49.534514Z","url":"https://files.pythonhosted.org/packages/47/ac/8548a93909d2d59c36a02745e29c568d5deb090ea06383cbc20b07d686f3/snowflake-snowpark-python-1.12.0.tar.gz","yanked":false,"yanked_reason":null}],"1.12.1":[{"comment_text":"","digests":{"blake2b_256":"1f1704b686debdc604395ad3f022df3320b4e6a7dc92392ac1ea507c25ad985e","md5":"20dd62d524619962826d348caae3bbf0","sha256":"c79af44ff1cd17853a6eb30924bf810a3ce43ea26a58eba58e7f1325cd5c460d"},"downloads":-1,"filename":"snowflake_snowpark_python-1.12.1-py3-none-any.whl","has_sig":false,"md5_digest":"20dd62d524619962826d348caae3bbf0","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.12","size":400033,"upload_time":"2024-02-08T21:23:03","upload_time_iso_8601":"2024-02-08T21:23:03.991976Z","url":"https://files.pythonhosted.org/packages/1f/17/04b686debdc604395ad3f022df3320b4e6a7dc92392ac1ea507c25ad985e/snowflake_snowpark_python-1.12.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f91e9307ed60b8dfd048259651c3497edd9be9f6bfe773248914b491634bc4c1","md5":"4da0b12dddbd918385f4d2bb03297988","sha256":"538f873fe2af7612a3b58063ddd6ff46f915a6ee25900b254f29fd84f2eb62d0"},"downloads":-1,"filename":"snowflake-snowpark-python-1.12.1.tar.gz","has_sig":false,"md5_digest":"4da0b12dddbd918385f4d2bb03297988","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.12","size":393064,"upload_time":"2024-02-08T21:23:06","upload_time_iso_8601":"2024-02-08T21:23:06.745464Z","url":"https://files.pythonhosted.org/packages/f9/1e/9307ed60b8dfd048259651c3497edd9be9f6bfe773248914b491634bc4c1/snowflake-snowpark-python-1.12.1.tar.gz","yanked":false,"yanked_reason":null}],"1.13.0":[{"comment_text":"","digests":{"blake2b_256":"1c1a35a3b9126d1c74f10ab50db6218ebd92aeb6f9d73f4e0b7b77241e853277","md5":"3ea72ba9cddb1adf9274dc88af500a41","sha256":"bf6744465dbcb3666316dd6151581745579d3ae108d50fd92eff78469b4becfc"},"downloads":-1,"filename":"snowflake_snowpark_python-1.13.0-py3-none-any.whl","has_sig":false,"md5_digest":"3ea72ba9cddb1adf9274dc88af500a41","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.12","size":404564,"upload_time":"2024-02-27T22:24:21","upload_time_iso_8601":"2024-02-27T22:24:21.617285Z","url":"https://files.pythonhosted.org/packages/1c/1a/35a3b9126d1c74f10ab50db6218ebd92aeb6f9d73f4e0b7b77241e853277/snowflake_snowpark_python-1.13.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5b5fa2ee9cc1b6d35dbeb40a55f20b934298dc6def9878d647a9e70128a7c1a3","md5":"e6e26c3ea51b5f306e3b029e063075e2","sha256":"deba6f82297fd368d0ec4c8d8f514f5b022035024b13b0f25420b12374bfc0fd"},"downloads":-1,"filename":"snowflake-snowpark-python-1.13.0.tar.gz","has_sig":false,"md5_digest":"e6e26c3ea51b5f306e3b029e063075e2","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.12","size":398635,"upload_time":"2024-02-27T22:24:24","upload_time_iso_8601":"2024-02-27T22:24:24.059349Z","url":"https://files.pythonhosted.org/packages/5b/5f/a2ee9cc1b6d35dbeb40a55f20b934298dc6def9878d647a9e70128a7c1a3/snowflake-snowpark-python-1.13.0.tar.gz","yanked":false,"yanked_reason":null}],"1.14.0":[{"comment_text":"","digests":{"blake2b_256":"e86478013f54adc402424e980c94c7e8c9d69dc4648649796c8b2ba8fdddb09b","md5":"866f7d5ba99a7e2851830f9a0a33f94a","sha256":"364264474b646e96c5d13620e1ead3c2bc2510f994d444621b10a3800f9cf645"},"downloads":-1,"filename":"snowflake_snowpark_python-1.14.0-py3-none-any.whl","has_sig":false,"md5_digest":"866f7d5ba99a7e2851830f9a0a33f94a","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":419665,"upload_time":"2024-03-21T17:29:21","upload_time_iso_8601":"2024-03-21T17:29:21.779152Z","url":"https://files.pythonhosted.org/packages/e8/64/78013f54adc402424e980c94c7e8c9d69dc4648649796c8b2ba8fdddb09b/snowflake_snowpark_python-1.14.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b52dcd3fa16ae6c10b2d8f3a4c7b96ffbe2f9da39b5a3a95f098b960a715c83d","md5":"8a5c787ee0d4432deb8c008cdc31b057","sha256":"f42483c66eb6dbaed077ce1255ff505e0b240fbcd77e6faa3b5c70758162d3e7"},"downloads":-1,"filename":"snowflake-snowpark-python-1.14.0.tar.gz","has_sig":false,"md5_digest":"8a5c787ee0d4432deb8c008cdc31b057","packagetype":"sdist","python_version":"source","requires_python":"<3.12,>=3.8","size":413217,"upload_time":"2024-03-21T17:29:23","upload_time_iso_8601":"2024-03-21T17:29:23.760491Z","url":"https://files.pythonhosted.org/packages/b5/2d/cd3fa16ae6c10b2d8f3a4c7b96ffbe2f9da39b5a3a95f098b960a715c83d/snowflake-snowpark-python-1.14.0.tar.gz","yanked":false,"yanked_reason":null}],"1.15.0":[{"comment_text":"","digests":{"blake2b_256":"d1dc8445a893d22aa48901788f9caabef91e16a92ef0cdeb12fef36244873338","md5":"7491b6478b1028b88a5ef4b5547acb88","sha256":"17db1aae393a595caf1f07457366001eba5a8ca4b070f9970bed75efdc2c9a30"},"downloads":-1,"filename":"snowflake_snowpark_python-1.15.0-py3-none-any.whl","has_sig":false,"md5_digest":"7491b6478b1028b88a5ef4b5547acb88","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":442828,"upload_time":"2024-04-24T19:23:19","upload_time_iso_8601":"2024-04-24T19:23:19.978469Z","url":"https://files.pythonhosted.org/packages/d1/dc/8445a893d22aa48901788f9caabef91e16a92ef0cdeb12fef36244873338/snowflake_snowpark_python-1.15.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b34fd0af929700e9fcf42016fe7d23fd540911f2af33fab7bf1b2ed4941ac2f7","md5":"1c0f318a1828b6694f5e773eb25a24fc","sha256":"b96ecde5717c9a409020b930c79f6f7d46dc7af1178ea403e8b672643d83406a"},"downloads":-1,"filename":"snowflake_snowpark_python-1.15.0.tar.gz","has_sig":false,"md5_digest":"1c0f318a1828b6694f5e773eb25a24fc","packagetype":"sdist","python_version":"source","requires_python":"<3.12,>=3.8","size":435832,"upload_time":"2024-04-24T19:23:22","upload_time_iso_8601":"2024-04-24T19:23:22.937785Z","url":"https://files.pythonhosted.org/packages/b3/4f/d0af929700e9fcf42016fe7d23fd540911f2af33fab7bf1b2ed4941ac2f7/snowflake_snowpark_python-1.15.0.tar.gz","yanked":false,"yanked_reason":null}],"1.16.0":[{"comment_text":"","digests":{"blake2b_256":"20c5bf13a60d509d3c457329d8df300a755c39880090e4124543bc12606127e4","md5":"e9a73add5bbc086fecfd7dcedc434062","sha256":"3b3713235644bfa463f41a72e368e0007667c4efb91d770e9a5681164e495aee"},"downloads":-1,"filename":"snowflake_snowpark_python-1.16.0-py3-none-any.whl","has_sig":false,"md5_digest":"e9a73add5bbc086fecfd7dcedc434062","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":450384,"upload_time":"2024-05-08T17:58:36","upload_time_iso_8601":"2024-05-08T17:58:36.293391Z","url":"https://files.pythonhosted.org/packages/20/c5/bf13a60d509d3c457329d8df300a755c39880090e4124543bc12606127e4/snowflake_snowpark_python-1.16.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"24893ffacd4368d56399ef9fc5960ce854e2167233a02ed0aef174a735fae877","md5":"f2491edcbb1dd600b62254a4fc2785ca","sha256":"b6c25fa37878f250ee8dca40c83bf556bc6d983be85818fd0767fcee893f9112"},"downloads":-1,"filename":"snowflake_snowpark_python-1.16.0.tar.gz","has_sig":false,"md5_digest":"f2491edcbb1dd600b62254a4fc2785ca","packagetype":"sdist","python_version":"source","requires_python":"<3.12,>=3.8","size":443369,"upload_time":"2024-05-08T17:58:38","upload_time_iso_8601":"2024-05-08T17:58:38.995234Z","url":"https://files.pythonhosted.org/packages/24/89/3ffacd4368d56399ef9fc5960ce854e2167233a02ed0aef174a735fae877/snowflake_snowpark_python-1.16.0.tar.gz","yanked":false,"yanked_reason":null}],"1.17.0":[{"comment_text":"","digests":{"blake2b_256":"9e68b3496e1d59e8c8b302df7fa5c4ce851a687b8b8ddb92d6f6254bfce77009","md5":"f52b82e63147ad7a337ef6ad6b217f5e","sha256":"51ed5b5ecaf1968f4a37511418ba2d69e4bcc2808d96871c9743d7f770608151"},"downloads":-1,"filename":"snowflake_snowpark_python-1.17.0-py3-none-any.whl","has_sig":false,"md5_digest":"f52b82e63147ad7a337ef6ad6b217f5e","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1147503,"upload_time":"2024-05-21T22:31:42","upload_time_iso_8601":"2024-05-21T22:31:42.093560Z","url":"https://files.pythonhosted.org/packages/9e/68/b3496e1d59e8c8b302df7fa5c4ce851a687b8b8ddb92d6f6254bfce77009/snowflake_snowpark_python-1.17.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a3a7868bb878b6016786794e02e56947bda1c96fd5df53056ed4eaaf8ca58028","md5":"2edc11cdb6c908522c028bef1fffaee3","sha256":"1c2a3cec4b1a605c95a0ff8396b2dd1247b502bf3acc8dd3b53c43579df28025"},"downloads":-1,"filename":"snowflake_snowpark_python-1.17.0.tar.gz","has_sig":false,"md5_digest":"2edc11cdb6c908522c028bef1fffaee3","packagetype":"sdist","python_version":"source","requires_python":"<3.12,>=3.8","size":1082507,"upload_time":"2024-05-21T22:31:44","upload_time_iso_8601":"2024-05-21T22:31:44.627467Z","url":"https://files.pythonhosted.org/packages/a3/a7/868bb878b6016786794e02e56947bda1c96fd5df53056ed4eaaf8ca58028/snowflake_snowpark_python-1.17.0.tar.gz","yanked":false,"yanked_reason":null}],"1.18.0":[{"comment_text":"","digests":{"blake2b_256":"2b6ffafbf56e47e2f6820ebc99203755374e20d5c26762e2de8db991f8f97579","md5":"46a984bec05d6b845d9c0c7d091b4fea","sha256":"870cd623befe23097053a7e93e341b418c8fc3f087192c4183b440b9d7d7ab05"},"downloads":-1,"filename":"snowflake_snowpark_python-1.18.0-py3-none-any.whl","has_sig":false,"md5_digest":"46a984bec05d6b845d9c0c7d091b4fea","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1159827,"upload_time":"2024-05-28T23:34:30","upload_time_iso_8601":"2024-05-28T23:34:30.176794Z","url":"https://files.pythonhosted.org/packages/2b/6f/fafbf56e47e2f6820ebc99203755374e20d5c26762e2de8db991f8f97579/snowflake_snowpark_python-1.18.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0bcf15311694defe004fd29b0e5ff23ae0a5c377fd0ea01ca52bc57636244bee","md5":"4b00fbf158cf977f81995881da0229b4","sha256":"d7556eb92cba66ddfefa50fe62d4139d36eed0ee32ca9cd674a90942689a1aff"},"downloads":-1,"filename":"snowflake_snowpark_python-1.18.0.tar.gz","has_sig":false,"md5_digest":"4b00fbf158cf977f81995881da0229b4","packagetype":"sdist","python_version":"source","requires_python":"<3.12,>=3.8","size":1095752,"upload_time":"2024-05-28T23:34:32","upload_time_iso_8601":"2024-05-28T23:34:32.679470Z","url":"https://files.pythonhosted.org/packages/0b/cf/15311694defe004fd29b0e5ff23ae0a5c377fd0ea01ca52bc57636244bee/snowflake_snowpark_python-1.18.0.tar.gz","yanked":false,"yanked_reason":null}],"1.19.0":[{"comment_text":"","digests":{"blake2b_256":"eaab62e3cd641d49a079fa34bc911df38937f867b76947d85465f36c44d8da50","md5":"8711a6e54cc4c4b27213c23df6ce58be","sha256":"09cb20942460798033790f7c800b060830f44db1f5928ee5cdcd689a40cb61ef"},"downloads":-1,"filename":"snowflake_snowpark_python-1.19.0-py3-none-any.whl","has_sig":false,"md5_digest":"8711a6e54cc4c4b27213c23df6ce58be","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1184929,"upload_time":"2024-06-26T14:50:27","upload_time_iso_8601":"2024-06-26T14:50:27.194001Z","url":"https://files.pythonhosted.org/packages/ea/ab/62e3cd641d49a079fa34bc911df38937f867b76947d85465f36c44d8da50/snowflake_snowpark_python-1.19.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5505d469d3392a820557387c211008efcff8661007df34f029a4ead306d27224","md5":"2f57c3645448affca1984c583bf40b45","sha256":"70eb7e991e1b7ba970e79f4e87ff083e5c66a167ec11729c846a66f672cd8a6c"},"downloads":-1,"filename":"snowflake_snowpark_python-1.19.0.tar.gz","has_sig":false,"md5_digest":"2f57c3645448affca1984c583bf40b45","packagetype":"sdist","python_version":"source","requires_python":"<3.12,>=3.8","size":1125359,"upload_time":"2024-06-26T14:50:29","upload_time_iso_8601":"2024-06-26T14:50:29.853107Z","url":"https://files.pythonhosted.org/packages/55/05/d469d3392a820557387c211008efcff8661007df34f029a4ead306d27224/snowflake_snowpark_python-1.19.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"19ca970750ee0fe2fff9f3e8c93a6a24a00c7e1bd9cc644be0d1592918953a1f","md5":"4506428359b320e6c568b213fbcb7f60","sha256":"a3c802dcc45324243236fe4c288e8e733cb637c2cfc4cf73bee63d02598c74a7"},"downloads":-1,"filename":"snowflake_snowpark_python-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"4506428359b320e6c568b213fbcb7f60","packagetype":"bdist_wheel","python_version":"py3","requires_python":"==3.8.*","size":257901,"upload_time":"2023-03-03T01:38:38","upload_time_iso_8601":"2023-03-03T01:38:38.811626Z","url":"https://files.pythonhosted.org/packages/19/ca/970750ee0fe2fff9f3e8c93a6a24a00c7e1bd9cc644be0d1592918953a1f/snowflake_snowpark_python-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c23cbeeb72dbb3320541e4d6c89df0954f88fd3d0299b910ec609283c6254b0d","md5":"11dbc8db3c66f35efe9678aefc0b401f","sha256":"7cb65b93e6ec7c5b639d1ecd897d90878698852d72cea5d3f6c2b5e0794e194d"},"downloads":-1,"filename":"snowflake-snowpark-python-1.2.0.tar.gz","has_sig":false,"md5_digest":"11dbc8db3c66f35efe9678aefc0b401f","packagetype":"sdist","python_version":"source","requires_python":"==3.8.*","size":246680,"upload_time":"2023-03-03T01:38:40","upload_time_iso_8601":"2023-03-03T01:38:40.603858Z","url":"https://files.pythonhosted.org/packages/c2/3c/beeb72dbb3320541e4d6c89df0954f88fd3d0299b910ec609283c6254b0d/snowflake-snowpark-python-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"1.3.0":[{"comment_text":"","digests":{"blake2b_256":"85d56d04a16611b0eb2673fb6d900b8e3779a7fff6dfefc803194fa6d26b32ef","md5":"9bae622dd4d190255d3c8e9b56fc914d","sha256":"7c7d7f49a7159b0c139d103558f0de265405ed332a503595047cb9d74f12cdb1"},"downloads":-1,"filename":"snowflake_snowpark_python-1.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"9bae622dd4d190255d3c8e9b56fc914d","packagetype":"bdist_wheel","python_version":"py3","requires_python":"==3.8.*","size":275177,"upload_time":"2023-03-29T01:00:45","upload_time_iso_8601":"2023-03-29T01:00:45.835961Z","url":"https://files.pythonhosted.org/packages/85/d5/6d04a16611b0eb2673fb6d900b8e3779a7fff6dfefc803194fa6d26b32ef/snowflake_snowpark_python-1.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4a13a6fefc9c6110432764e4227885f77ef9eb32a8c39e3e0d993d7675cbfe2a","md5":"c41b1d07e6f8190bc6e89cc21bffae1e","sha256":"3cbbafc66fcb581efd725bac7b32ddd844d40dbcb41db81f2358447ec3a7bd71"},"downloads":-1,"filename":"snowflake-snowpark-python-1.3.0.tar.gz","has_sig":false,"md5_digest":"c41b1d07e6f8190bc6e89cc21bffae1e","packagetype":"sdist","python_version":"source","requires_python":"==3.8.*","size":265504,"upload_time":"2023-03-29T01:00:48","upload_time_iso_8601":"2023-03-29T01:00:48.289364Z","url":"https://files.pythonhosted.org/packages/4a/13/a6fefc9c6110432764e4227885f77ef9eb32a8c39e3e0d993d7675cbfe2a/snowflake-snowpark-python-1.3.0.tar.gz","yanked":false,"yanked_reason":null}],"1.4.0":[{"comment_text":"","digests":{"blake2b_256":"d5d0e81975ff4dc49972356e06884bd15159452fff078d388a741e077b22d3b8","md5":"7eeba4ced57882d16ab22986c71bfad4","sha256":"bfeaeeae56604a2fab3a311aec1782d6110aa5b04704759f9d54f35fbcc6d1b6"},"downloads":-1,"filename":"snowflake_snowpark_python-1.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"7eeba4ced57882d16ab22986c71bfad4","packagetype":"bdist_wheel","python_version":"py3","requires_python":"==3.8.*","size":284348,"upload_time":"2023-04-24T22:22:40","upload_time_iso_8601":"2023-04-24T22:22:40.391403Z","url":"https://files.pythonhosted.org/packages/d5/d0/e81975ff4dc49972356e06884bd15159452fff078d388a741e077b22d3b8/snowflake_snowpark_python-1.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e0656e70f1e6e184735db86d5ba761e1692aa4a393c2ee068c952cbe6f56352c","md5":"1c7614c718383d897524cb15df9a15df","sha256":"cecf7a6a09ec59840506eadb08422520a4a3267877f2f0d1d720b31e67afdd2b"},"downloads":-1,"filename":"snowflake-snowpark-python-1.4.0.tar.gz","has_sig":false,"md5_digest":"1c7614c718383d897524cb15df9a15df","packagetype":"sdist","python_version":"source","requires_python":"==3.8.*","size":275282,"upload_time":"2023-04-24T22:22:44","upload_time_iso_8601":"2023-04-24T22:22:44.026827Z","url":"https://files.pythonhosted.org/packages/e0/65/6e70f1e6e184735db86d5ba761e1692aa4a393c2ee068c952cbe6f56352c/snowflake-snowpark-python-1.4.0.tar.gz","yanked":false,"yanked_reason":null}],"1.5.0":[{"comment_text":"","digests":{"blake2b_256":"d5dc20059ff0a3314fd63e6f3d9c967ee1caaea478502496cd669f225f475d75","md5":"0805b6a4ebcf9ebb9b02e94a8a381ff1","sha256":"c4b20366c001b70704f4168677e43dfef13588da667e1a1121c7f46fdb18c9a6"},"downloads":-1,"filename":"snowflake_snowpark_python-1.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"0805b6a4ebcf9ebb9b02e94a8a381ff1","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.10","size":291664,"upload_time":"2023-06-13T23:22:28","upload_time_iso_8601":"2023-06-13T23:22:28.529344Z","url":"https://files.pythonhosted.org/packages/d5/dc/20059ff0a3314fd63e6f3d9c967ee1caaea478502496cd669f225f475d75/snowflake_snowpark_python-1.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"648abbbaac334f8b280b7713fe67764a09f6f2a97ef3b387bcb84347a085ba3f","md5":"50ff5b543625552b6b8e9a0bd4fe8894","sha256":"ab04ea3c738143efc3f5f26249a53027c4377058b0019ceb10291439321b16ce"},"downloads":-1,"filename":"snowflake-snowpark-python-1.5.0.tar.gz","has_sig":false,"md5_digest":"50ff5b543625552b6b8e9a0bd4fe8894","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.10","size":283503,"upload_time":"2023-06-13T23:22:30","upload_time_iso_8601":"2023-06-13T23:22:30.760685Z","url":"https://files.pythonhosted.org/packages/64/8a/bbbaac334f8b280b7713fe67764a09f6f2a97ef3b387bcb84347a085ba3f/snowflake-snowpark-python-1.5.0.tar.gz","yanked":false,"yanked_reason":null}],"1.5.1":[{"comment_text":"","digests":{"blake2b_256":"a04b0e976c43a24b9d52cdf765d70638121a5b7b76bd651e91240adcdd1d4dd4","md5":"ac78c63a48f9df6c54a55523d470f9ca","sha256":"971dd0c52ff09f80d63132808746e70beac6f86bb9eb0604fe4da60c50c23421"},"downloads":-1,"filename":"snowflake_snowpark_python-1.5.1-py3-none-any.whl","has_sig":false,"md5_digest":"ac78c63a48f9df6c54a55523d470f9ca","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.11","size":291718,"upload_time":"2023-06-21T18:15:08","upload_time_iso_8601":"2023-06-21T18:15:08.566170Z","url":"https://files.pythonhosted.org/packages/a0/4b/0e976c43a24b9d52cdf765d70638121a5b7b76bd651e91240adcdd1d4dd4/snowflake_snowpark_python-1.5.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"85c5482c46bca65f5ca428d7a6d18386539bbe1fdba644b28382144b22d30893","md5":"59e7f67c399ca9ddb69a72ee3900522b","sha256":"31439ed61e4180100e2ae97786f2e98029dbf31a89ad1af09bcfd3386f642faa"},"downloads":-1,"filename":"snowflake-snowpark-python-1.5.1.tar.gz","has_sig":false,"md5_digest":"59e7f67c399ca9ddb69a72ee3900522b","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.11","size":283601,"upload_time":"2023-06-21T18:15:10","upload_time_iso_8601":"2023-06-21T18:15:10.899182Z","url":"https://files.pythonhosted.org/packages/85/c5/482c46bca65f5ca428d7a6d18386539bbe1fdba644b28382144b22d30893/snowflake-snowpark-python-1.5.1.tar.gz","yanked":false,"yanked_reason":null}],"1.6.0":[{"comment_text":"","digests":{"blake2b_256":"f30e3e9bc26d831675f83ffac51db1d13c33ffe7cac33ab1e12f89fbe44b2556","md5":"fd54f1664136e0358eb82a7903c4c7a9","sha256":"8e6bcf416e99d3cefbdd9bd434a45545f245006b13df250d5aa1d7b56cff31bf"},"downloads":-1,"filename":"snowflake_snowpark_python-1.6.0-py3-none-any.whl","has_sig":false,"md5_digest":"fd54f1664136e0358eb82a7903c4c7a9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.11","size":318675,"upload_time":"2023-07-31T21:45:40","upload_time_iso_8601":"2023-07-31T21:45:40.664875Z","url":"https://files.pythonhosted.org/packages/f3/0e/3e9bc26d831675f83ffac51db1d13c33ffe7cac33ab1e12f89fbe44b2556/snowflake_snowpark_python-1.6.0-py3-none-any.whl","yanked":true,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"df1beac433b74e921b510343ad09ade91c7ef7a95c1bc31b228739a18f445a84","md5":"645c41c292d8550c318ca67fc01dacff","sha256":"ab6b5af85566cb9e98714a1ddeca1ce4418a5fcf1a5b8e6630d355858778bbd8"},"downloads":-1,"filename":"snowflake-snowpark-python-1.6.0.tar.gz","has_sig":false,"md5_digest":"645c41c292d8550c318ca67fc01dacff","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.11","size":311523,"upload_time":"2023-07-31T21:45:42","upload_time_iso_8601":"2023-07-31T21:45:42.424612Z","url":"https://files.pythonhosted.org/packages/df/1b/eac433b74e921b510343ad09ade91c7ef7a95c1bc31b228739a18f445a84/snowflake-snowpark-python-1.6.0.tar.gz","yanked":true,"yanked_reason":null}],"1.6.1":[{"comment_text":"","digests":{"blake2b_256":"67efe48835e08ab2bae59e9da1c32a37f4a76ddac2d8d6b55a008418162b9a99","md5":"51dfac888556b00b3f7b1a34d0b7071a","sha256":"1e1ba7ae56469b7381a49bceda28a727c4835cd45163840f7afc93febe9525b8"},"downloads":-1,"filename":"snowflake_snowpark_python-1.6.1-py3-none-any.whl","has_sig":false,"md5_digest":"51dfac888556b00b3f7b1a34d0b7071a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.11","size":318660,"upload_time":"2023-08-03T01:29:26","upload_time_iso_8601":"2023-08-03T01:29:26.938186Z","url":"https://files.pythonhosted.org/packages/67/ef/e48835e08ab2bae59e9da1c32a37f4a76ddac2d8d6b55a008418162b9a99/snowflake_snowpark_python-1.6.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"403239ace1dc0e59adb1de116f3d8e7e6a435130e34166d927ebd69abfa85eb3","md5":"28e5e6ea216f6ec449d22a0ed07edd6c","sha256":"a34b133ad9530ca02ab5ee449761250cb24e195bd8ff13894c1650c53d10ca87"},"downloads":-1,"filename":"snowflake-snowpark-python-1.6.1.tar.gz","has_sig":false,"md5_digest":"28e5e6ea216f6ec449d22a0ed07edd6c","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.11","size":311503,"upload_time":"2023-08-03T01:29:28","upload_time_iso_8601":"2023-08-03T01:29:28.803977Z","url":"https://files.pythonhosted.org/packages/40/32/39ace1dc0e59adb1de116f3d8e7e6a435130e34166d927ebd69abfa85eb3/snowflake-snowpark-python-1.6.1.tar.gz","yanked":false,"yanked_reason":null}],"1.7.0":[{"comment_text":"","digests":{"blake2b_256":"fec9cf9558b4f20c59f336d5de793444eb7f5faaed93427e6f6a0c08cd9821f9","md5":"41652921232bb0555da1f04452667e3b","sha256":"401acd192b3cc3b52335360052d693e91f369a1d58681da04f1221364b362375"},"downloads":-1,"filename":"snowflake_snowpark_python-1.7.0-py3-none-any.whl","has_sig":false,"md5_digest":"41652921232bb0555da1f04452667e3b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.11","size":324080,"upload_time":"2023-08-28T20:44:05","upload_time_iso_8601":"2023-08-28T20:44:05.673249Z","url":"https://files.pythonhosted.org/packages/fe/c9/cf9558b4f20c59f336d5de793444eb7f5faaed93427e6f6a0c08cd9821f9/snowflake_snowpark_python-1.7.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a8629a4e945a2d6a58a3e4caf1ac58f41b2566595804faafc483c3f8ab704180","md5":"499a678e358ba2eed44bb37dcac058fb","sha256":"e96fa78e8d7fe02c64856cb4073bca4a76fbd85ce5e83a2c17f507970a0180ee"},"downloads":-1,"filename":"snowflake-snowpark-python-1.7.0.tar.gz","has_sig":false,"md5_digest":"499a678e358ba2eed44bb37dcac058fb","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.11","size":317549,"upload_time":"2023-08-28T20:44:07","upload_time_iso_8601":"2023-08-28T20:44:07.788547Z","url":"https://files.pythonhosted.org/packages/a8/62/9a4e945a2d6a58a3e4caf1ac58f41b2566595804faafc483c3f8ab704180/snowflake-snowpark-python-1.7.0.tar.gz","yanked":false,"yanked_reason":null}],"1.8.0":[{"comment_text":"","digests":{"blake2b_256":"0840566c32e83a9aa3cab05a92608ca5198fe027b52aceed7cbd0edf6a164a6e","md5":"606a388ff07c3249fc7e021bfc05e761","sha256":"78fde4313fa8a713586d3af14d3ca4437f899627c7c36b9e5e81999e8acf9ce2"},"downloads":-1,"filename":"snowflake_snowpark_python-1.8.0-py3-none-any.whl","has_sig":false,"md5_digest":"606a388ff07c3249fc7e021bfc05e761","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.11","size":326897,"upload_time":"2023-09-15T20:48:22","upload_time_iso_8601":"2023-09-15T20:48:22.131753Z","url":"https://files.pythonhosted.org/packages/08/40/566c32e83a9aa3cab05a92608ca5198fe027b52aceed7cbd0edf6a164a6e/snowflake_snowpark_python-1.8.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9bff199129c3662944ef2ffa0d4ae8a078fa77029cad5a1a259d8d986f888aaf","md5":"7524e2569c57c9c9ff86c58585724a4a","sha256":"62d3d353fb48149a3cb256331078257cf51e122f8c8b5f38a686a364f845c467"},"downloads":-1,"filename":"snowflake-snowpark-python-1.8.0.tar.gz","has_sig":false,"md5_digest":"7524e2569c57c9c9ff86c58585724a4a","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.11","size":321454,"upload_time":"2023-09-15T20:48:24","upload_time_iso_8601":"2023-09-15T20:48:24.121098Z","url":"https://files.pythonhosted.org/packages/9b/ff/199129c3662944ef2ffa0d4ae8a078fa77029cad5a1a259d8d986f888aaf/snowflake-snowpark-python-1.8.0.tar.gz","yanked":false,"yanked_reason":null}],"1.9.0":[{"comment_text":"","digests":{"blake2b_256":"ce0d3f3643937aaa92a15760fe0e8afa588e18d6ccc67fbfe43365b20524c9a0","md5":"ab13edf6a595224e78170bf29a7f2493","sha256":"99fecadfbb8fd693c0709fedfee2446ed2b36f53351ccae3e103a3b57e4e3340"},"downloads":-1,"filename":"snowflake_snowpark_python-1.9.0-py3-none-any.whl","has_sig":false,"md5_digest":"ab13edf6a595224e78170bf29a7f2493","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8, <3.12","size":327479,"upload_time":"2023-10-16T18:52:53","upload_time_iso_8601":"2023-10-16T18:52:53.118690Z","url":"https://files.pythonhosted.org/packages/ce/0d/3f3643937aaa92a15760fe0e8afa588e18d6ccc67fbfe43365b20524c9a0/snowflake_snowpark_python-1.9.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c76fa2d15d5ac98590aac8c34cc7a8889ad99bc2744520dc8bbe433903f91293","md5":"f0d6f9e2b6ed1db2c137ab123d79b993","sha256":"7a5a7d901b6289c3203a66209cac3046e561191ffa0048f3e64272459507c9da"},"downloads":-1,"filename":"snowflake-snowpark-python-1.9.0.tar.gz","has_sig":false,"md5_digest":"f0d6f9e2b6ed1db2c137ab123d79b993","packagetype":"sdist","python_version":"source","requires_python":">=3.8, <3.12","size":322355,"upload_time":"2023-10-16T18:52:55","upload_time_iso_8601":"2023-10-16T18:52:55.523557Z","url":"https://files.pythonhosted.org/packages/c7/6f/a2d15d5ac98590aac8c34cc7a8889ad99bc2744520dc8bbe433903f91293/snowflake-snowpark-python-1.9.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"eaab62e3cd641d49a079fa34bc911df38937f867b76947d85465f36c44d8da50","md5":"8711a6e54cc4c4b27213c23df6ce58be","sha256":"09cb20942460798033790f7c800b060830f44db1f5928ee5cdcd689a40cb61ef"},"downloads":-1,"filename":"snowflake_snowpark_python-1.19.0-py3-none-any.whl","has_sig":false,"md5_digest":"8711a6e54cc4c4b27213c23df6ce58be","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1184929,"upload_time":"2024-06-26T14:50:27","upload_time_iso_8601":"2024-06-26T14:50:27.194001Z","url":"https://files.pythonhosted.org/packages/ea/ab/62e3cd641d49a079fa34bc911df38937f867b76947d85465f36c44d8da50/snowflake_snowpark_python-1.19.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5505d469d3392a820557387c211008efcff8661007df34f029a4ead306d27224","md5":"2f57c3645448affca1984c583bf40b45","sha256":"70eb7e991e1b7ba970e79f4e87ff083e5c66a167ec11729c846a66f672cd8a6c"},"downloads":-1,"filename":"snowflake_snowpark_python-1.19.0.tar.gz","has_sig":false,"md5_digest":"2f57c3645448affca1984c583bf40b45","packagetype":"sdist","python_version":"source","requires_python":"<3.12,>=3.8","size":1125359,"upload_time":"2024-06-26T14:50:29","upload_time_iso_8601":"2024-06-26T14:50:29.853107Z","url":"https://files.pythonhosted.org/packages/55/05/d469d3392a820557387c211008efcff8661007df34f029a4ead306d27224/snowflake_snowpark_python-1.19.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
