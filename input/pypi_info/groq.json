{"info":{"author":null,"author_email":"Groq <support@groq.com>","bugtrack_url":null,"classifiers":["Intended Audience :: Developers","License :: OSI Approved :: Apache Software License","Operating System :: MacOS","Operating System :: Microsoft :: Windows","Operating System :: OS Independent","Operating System :: POSIX","Operating System :: POSIX :: Linux","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Topic :: Software Development :: Libraries :: Python Modules","Typing :: Typed"],"description":"# Groq Python API library\n\n[![PyPI version](https://img.shields.io/pypi/v/groq.svg)](https://pypi.org/project/groq/)\n\nThe Groq Python library provides convenient access to the Groq REST API from any Python 3.7+\napplication. The library includes type definitions for all request params and response fields,\nand offers both synchronous and asynchronous clients powered by [httpx](https://github.com/encode/httpx).\n\nIt is generated with [Stainless](https://www.stainlessapi.com/).\n\n## Documentation\n\nThe REST API documentation can be found [on console.groq.com](https://console.groq.com/docs). The full API of this library can be found in [api.md](https://github.com/groq/groq-python/tree/main/api.md).\n\n## Installation\n\n```sh\n# install from PyPI\npip install groq\n```\n\n## Usage\n\nThe full API of this library can be found in [api.md](https://github.com/groq/groq-python/tree/main/api.md).\n\n```python\nimport os\nfrom groq import Groq\n\nclient = Groq(\n    # This is the default and can be omitted\n    api_key=os.environ.get(\"GROQ_API_KEY\"),\n)\n\nchat_completion = client.chat.completions.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"Explain the importance of low latency LLMs\",\n        }\n    ],\n    model=\"llama3-8b-8192\",\n)\nprint(chat_completion.choices[0].message.content)\n```\n\nWhile you can provide an `api_key` keyword argument,\nwe recommend using [python-dotenv](https://pypi.org/project/python-dotenv/)\nto add `GROQ_API_KEY=\"My API Key\"` to your `.env` file\nso that your API Key is not stored in source control.\n\n## Async usage\n\nSimply import `AsyncGroq` instead of `Groq` and use `await` with each API call:\n\n```python\nimport os\nimport asyncio\nfrom groq import AsyncGroq\n\nclient = AsyncGroq(\n    # This is the default and can be omitted\n    api_key=os.environ.get(\"GROQ_API_KEY\"),\n)\n\n\nasync def main() -> None:\n    chat_completion = await client.chat.completions.create(\n        messages=[\n            {\n                \"role\": \"user\",\n                \"content\": \"Explain the importance of low latency LLMs\",\n            }\n        ],\n        model=\"llama3-8b-8192\",\n    )\n    print(chat_completion.choices[0].message.content)\n\n\nasyncio.run(main())\n```\n\nFunctionality between the synchronous and asynchronous clients is otherwise identical.\n\n## Using types\n\nNested request parameters are [TypedDicts](https://docs.python.org/3/library/typing.html#typing.TypedDict). Responses are [Pydantic models](https://docs.pydantic.dev) which also provide helper methods for things like:\n\n- Serializing back into JSON, `model.to_json()`\n- Converting to a dictionary, `model.to_dict()`\n\nTyped requests and responses provide autocomplete and documentation within your editor. If you would like to see type errors in VS Code to help catch bugs earlier, set `python.analysis.typeCheckingMode` to `basic`.\n\n## Handling errors\n\nWhen the library is unable to connect to the API (for example, due to network connection problems or a timeout), a subclass of `groq.APIConnectionError` is raised.\n\nWhen the API returns a non-success status code (that is, 4xx or 5xx\nresponse), a subclass of `groq.APIStatusError` is raised, containing `status_code` and `response` properties.\n\nAll errors inherit from `groq.APIError`.\n\n```python\nimport groq\nfrom groq import Groq\n\nclient = Groq()\n\ntry:\n    client.chat.completions.create(\n        messages=[\n            {\n                \"role\": \"system\",\n                \"content\": \"You are a helpful assistant.\",\n            },\n            {\n                \"role\": \"user\",\n                \"content\": \"Explain the importance of low latency LLMs\",\n            },\n        ],\n        model=\"llama3-8b-8192\",\n    )\nexcept groq.APIConnectionError as e:\n    print(\"The server could not be reached\")\n    print(e.__cause__)  # an underlying Exception, likely raised within httpx.\nexcept groq.RateLimitError as e:\n    print(\"A 429 status code was received; we should back off a bit.\")\nexcept groq.APIStatusError as e:\n    print(\"Another non-200-range status code was received\")\n    print(e.status_code)\n    print(e.response)\n```\n\nError codes are as followed:\n\n| Status Code | Error Type                 |\n| ----------- | -------------------------- |\n| 400         | `BadRequestError`          |\n| 401         | `AuthenticationError`      |\n| 403         | `PermissionDeniedError`    |\n| 404         | `NotFoundError`            |\n| 422         | `UnprocessableEntityError` |\n| 429         | `RateLimitError`           |\n| >=500       | `InternalServerError`      |\n| N/A         | `APIConnectionError`       |\n\n### Retries\n\nCertain errors are automatically retried 2 times by default, with a short exponential backoff.\nConnection errors (for example, due to a network connectivity problem), 408 Request Timeout, 409 Conflict,\n429 Rate Limit, and >=500 Internal errors are all retried by default.\n\nYou can use the `max_retries` option to configure or disable retry settings:\n\n```python\nfrom groq import Groq\n\n# Configure the default for all requests:\nclient = Groq(\n    # default is 2\n    max_retries=0,\n)\n\n# Or, configure per-request:\nclient.with_options(max_retries=5).chat.completions.create(\n    messages=[\n        {\n            \"role\": \"system\",\n            \"content\": \"You are a helpful assistant.\",\n        },\n        {\n            \"role\": \"user\",\n            \"content\": \"Explain the importance of low latency LLMs\",\n        },\n    ],\n    model=\"llama3-8b-8192\",\n)\n```\n\n### Timeouts\n\nBy default requests time out after 1 minute. You can configure this with a `timeout` option,\nwhich accepts a float or an [`httpx.Timeout`](https://www.python-httpx.org/advanced/#fine-tuning-the-configuration) object:\n\n```python\nfrom groq import Groq\n\n# Configure the default for all requests:\nclient = Groq(\n    # 20 seconds (default is 1 minute)\n    timeout=20.0,\n)\n\n# More granular control:\nclient = Groq(\n    timeout=httpx.Timeout(60.0, read=5.0, write=10.0, connect=2.0),\n)\n\n# Override per-request:\nclient.with_options(timeout=5.0).chat.completions.create(\n    messages=[\n        {\n            \"role\": \"system\",\n            \"content\": \"You are a helpful assistant.\",\n        },\n        {\n            \"role\": \"user\",\n            \"content\": \"Explain the importance of low latency LLMs\",\n        },\n    ],\n    model=\"llama3-8b-8192\",\n)\n```\n\nOn timeout, an `APITimeoutError` is thrown.\n\nNote that requests that time out are [retried twice by default](https://github.com/groq/groq-python/tree/main/#retries).\n\n## Advanced\n\n### Logging\n\nWe use the standard library [`logging`](https://docs.python.org/3/library/logging.html) module.\n\nYou can enable logging by setting the environment variable `GROQ_LOG` to `debug`.\n\n```shell\n$ export GROQ_LOG=debug\n```\n\n### How to tell whether `None` means `null` or missing\n\nIn an API response, a field may be explicitly `null`, or missing entirely; in either case, its value is `None` in this library. You can differentiate the two cases with `.model_fields_set`:\n\n```py\nif response.my_field is None:\n  if 'my_field' not in response.model_fields_set:\n    print('Got json like {}, without a \"my_field\" key present at all.')\n  else:\n    print('Got json like {\"my_field\": null}.')\n```\n\n### Accessing raw response data (e.g. headers)\n\nThe \"raw\" Response object can be accessed by prefixing `.with_raw_response.` to any HTTP method call, e.g.,\n\n```py\nfrom groq import Groq\n\nclient = Groq()\nresponse = client.chat.completions.with_raw_response.create(\n    messages=[{\n        \"role\": \"system\",\n        \"content\": \"You are a helpful assistant.\",\n    }, {\n        \"role\": \"user\",\n        \"content\": \"Explain the importance of low latency LLMs\",\n    }],\n    model=\"llama3-8b-8192\",\n)\nprint(response.headers.get('X-My-Header'))\n\ncompletion = response.parse()  # get the object that `chat.completions.create()` would have returned\nprint(completion.id)\n```\n\nThese methods return an [`APIResponse`](https://github.com/groq/groq-python/tree/main/src/groq/_response.py) object.\n\nThe async client returns an [`AsyncAPIResponse`](https://github.com/groq/groq-python/tree/main/src/groq/_response.py) with the same structure, the only difference being `await`able methods for reading the response content.\n\n#### `.with_streaming_response`\n\nThe above interface eagerly reads the full response body when you make the request, which may not always be what you want.\n\nTo stream the response body, use `.with_streaming_response` instead, which requires a context manager and only reads the response body once you call `.read()`, `.text()`, `.json()`, `.iter_bytes()`, `.iter_text()`, `.iter_lines()` or `.parse()`. In the async client, these are async methods.\n\n```python\nwith client.chat.completions.with_streaming_response.create(\n    messages=[\n        {\n            \"role\": \"system\",\n            \"content\": \"You are a helpful assistant.\",\n        },\n        {\n            \"role\": \"user\",\n            \"content\": \"Explain the importance of low latency LLMs\",\n        },\n    ],\n    model=\"llama3-8b-8192\",\n) as response:\n    print(response.headers.get(\"X-My-Header\"))\n\n    for line in response.iter_lines():\n        print(line)\n```\n\nThe context manager is required so that the response will reliably be closed.\n\n### Making custom/undocumented requests\n\nThis library is typed for convenient access to the documented API.\n\nIf you need to access undocumented endpoints, params, or response properties, the library can still be used.\n\n#### Undocumented endpoints\n\nTo make requests to undocumented endpoints, you can make requests using `client.get`, `client.post`, and other\nhttp verbs. Options on the client will be respected (such as retries) will be respected when making this\nrequest.\n\n```py\nimport httpx\n\nresponse = client.post(\n    \"/foo\",\n    cast_to=httpx.Response,\n    body={\"my_param\": True},\n)\n\nprint(response.headers.get(\"x-foo\"))\n```\n\n#### Undocumented request params\n\nIf you want to explicitly send an extra param, you can do so with the `extra_query`, `extra_body`, and `extra_headers` request\noptions.\n\n#### Undocumented response properties\n\nTo access undocumented response properties, you can access the extra fields like `response.unknown_prop`. You\ncan also get all the extra fields on the Pydantic model as a dict with\n[`response.model_extra`](https://docs.pydantic.dev/latest/api/base_model/#pydantic.BaseModel.model_extra).\n\n### Configuring the HTTP client\n\nYou can directly override the [httpx client](https://www.python-httpx.org/api/#client) to customize it for your use case, including:\n\n- Support for proxies\n- Custom transports\n- Additional [advanced](https://www.python-httpx.org/advanced/#client-instances) functionality\n\n```python\nfrom groq import Groq, DefaultHttpxClient\n\nclient = Groq(\n    # Or use the `GROQ_BASE_URL` env var\n    base_url=\"http://my.test.server.example.com:8083\",\n    http_client=DefaultHttpxClient(\n        proxies=\"http://my.test.proxy.example.com\",\n        transport=httpx.HTTPTransport(local_address=\"0.0.0.0\"),\n    ),\n)\n```\n\n### Managing HTTP resources\n\nBy default the library closes underlying HTTP connections whenever the client is [garbage collected](https://docs.python.org/3/reference/datamodel.html#object.__del__). You can manually close the client using the `.close()` method if desired, or with a context manager that closes when exiting.\n\n## Versioning\n\nThis package generally follows [SemVer](https://semver.org/spec/v2.0.0.html) conventions, though certain backwards-incompatible changes may be released as minor versions:\n\n1. Changes that only affect static types, without breaking runtime behavior.\n2. Changes to library internals which are technically public but not intended or documented for external use. _(Please open a GitHub issue to let us know if you are relying on such internals)_.\n3. Changes that we do not expect to impact the vast majority of users in practice.\n\nWe take backwards-compatibility seriously and work hard to ensure you can rely on a smooth upgrade experience.\n\nWe are keen for your feedback; please open an [issue](https://www.github.com/groq/groq-python/issues) with questions, bugs, or suggestions.\n\n## Requirements\n\nPython 3.7 or higher.\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":null,"license":null,"maintainer":null,"maintainer_email":null,"name":"groq","package_url":"https://pypi.org/project/groq/","platform":null,"project_url":"https://pypi.org/project/groq/","project_urls":{"Homepage":"https://github.com/groq/groq-python","Repository":"https://github.com/groq/groq-python"},"provides_extra":null,"release_url":"https://pypi.org/project/groq/0.9.0/","requires_dist":["anyio<5,>=3.5.0","cached-property; python_version < \"3.8\"","distro<2,>=1.7.0","httpx<1,>=0.23.0","pydantic<3,>=1.9.0","sniffio","typing-extensions<5,>=4.7"],"requires_python":">=3.7","summary":"The official Python library for the groq API","version":"0.9.0","yanked":false,"yanked_reason":null},"last_serial":23628829,"releases":{"0.0.1":[{"comment_text":"","digests":{"blake2b_256":"968428d2f231bb012898ac3560930a86ff34aaa9eece75161e6580b57277f8f3","md5":"0980b9ef2173e165f896a23c639d8f80","sha256":"0674a8c1c5a8076e3ae5bb75e8dd572895629b84e815eb1c337af3125f101cdc"},"downloads":-1,"filename":"groq-0.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"0980b9ef2173e165f896a23c639d8f80","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":31379,"upload_time":"2023-11-02T01:26:19","upload_time_iso_8601":"2023-11-02T01:26:19.408906Z","url":"https://files.pythonhosted.org/packages/96/84/28d2f231bb012898ac3560930a86ff34aaa9eece75161e6580b57277f8f3/groq-0.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"33251d797622f99502881029c7de94ab0e2e075a62b3d943f8e3a3579b9f668a","md5":"799d666c18cc686861726e0a61a8f5ab","sha256":"d8d462c44190884e15ff47697000375f5cc8761d7f03b5f5f0b5b94f57d0f594"},"downloads":-1,"filename":"groq-0.0.1.tar.gz","has_sig":false,"md5_digest":"799d666c18cc686861726e0a61a8f5ab","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":26762,"upload_time":"2023-11-02T01:26:22","upload_time_iso_8601":"2023-11-02T01:26:22.182770Z","url":"https://files.pythonhosted.org/packages/33/25/1d797622f99502881029c7de94ab0e2e075a62b3d943f8e3a3579b9f668a/groq-0.0.1.tar.gz","yanked":false,"yanked_reason":null}],"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"396bb7bdc04d2957733049cafceeb3f6c977242c931f128ff04257d15138b649","md5":"3ae71a54c094adbb8664ecada78ef973","sha256":"ac2ae6b957e7dff6ceb472213cee116e51ca40893c8c3b0994251b2c100ccb10"},"downloads":-1,"filename":"groq-0.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"3ae71a54c094adbb8664ecada78ef973","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10,<4.0","size":50465,"upload_time":"2024-01-09T23:43:50","upload_time_iso_8601":"2024-01-09T23:43:50.012868Z","url":"https://files.pythonhosted.org/packages/39/6b/b7bdc04d2957733049cafceeb3f6c977242c931f128ff04257d15138b649/groq-0.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cf03774de12c99d332cbfb36e76d4c38c5ad28743f09662a2d8e4db6375f6bb4","md5":"0a97ba73cf76ea0f69acf3abacaf1fbb","sha256":"fa518f47a7ca610f7d823873b1ada197627a399016beb484ef155437550fb81c"},"downloads":-1,"filename":"groq-0.1.1.tar.gz","has_sig":false,"md5_digest":"0a97ba73cf76ea0f69acf3abacaf1fbb","packagetype":"sdist","python_version":"source","requires_python":">=3.10,<4.0","size":36630,"upload_time":"2024-01-09T23:43:51","upload_time_iso_8601":"2024-01-09T23:43:51.518117Z","url":"https://files.pythonhosted.org/packages/cf/03/774de12c99d332cbfb36e76d4c38c5ad28743f09662a2d8e4db6375f6bb4/groq-0.1.1.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"f6af83e10df39d12c2c2867498205ae2cbad74ee299389eb40890a1889cb4210","md5":"b92f16ca4555eeb01609ff6e7822c75d","sha256":"d0cadc90caa4a7861087b8269725b70c334fbe31c80a1ec8319e8bfbdd5b2d80"},"downloads":-1,"filename":"groq-0.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"b92f16ca4555eeb01609ff6e7822c75d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10,<4.0","size":50041,"upload_time":"2024-01-23T00:57:47","upload_time_iso_8601":"2024-01-23T00:57:47.745002Z","url":"https://files.pythonhosted.org/packages/f6/af/83e10df39d12c2c2867498205ae2cbad74ee299389eb40890a1889cb4210/groq-0.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3a6466660628cb6644e3ab72ec72cb80157a14b5ec887285114d9aac019f1915","md5":"ee8c4f8b1e31f9382574cc0d1c3e19e0","sha256":"2e655f137a791ae79e9272705bf1a2a6200f282da42927f6a3595280ff57d7bb"},"downloads":-1,"filename":"groq-0.2.0.tar.gz","has_sig":false,"md5_digest":"ee8c4f8b1e31f9382574cc0d1c3e19e0","packagetype":"sdist","python_version":"source","requires_python":">=3.10,<4.0","size":36103,"upload_time":"2024-01-23T00:57:49","upload_time_iso_8601":"2024-01-23T00:57:49.557557Z","url":"https://files.pythonhosted.org/packages/3a/64/66660628cb6644e3ab72ec72cb80157a14b5ec887285114d9aac019f1915/groq-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"43ef5e244337bc399786e9cfca3c5423f0a0646e0c1cbd50645c535d86b77e2f","md5":"9de2d38d124a1151f83284e1475b7998","sha256":"e714f0f1359dc90c6bd6d03ddb3a45f66cc0077715c57d777244fa4cd3bf051c"},"downloads":-1,"filename":"groq-0.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"9de2d38d124a1151f83284e1475b7998","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10,<4.0","size":50095,"upload_time":"2024-02-09T01:05:24","upload_time_iso_8601":"2024-02-09T01:05:24.947146Z","url":"https://files.pythonhosted.org/packages/43/ef/5e244337bc399786e9cfca3c5423f0a0646e0c1cbd50645c535d86b77e2f/groq-0.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fa8beba92e5fba5a07a93fa0b2dbadf46815a02947e1930a12d65265efb542a1","md5":"fe5c2f13e8af48cc578ae91ca2671e99","sha256":"8a4a626c03b1c181dcaacc4e3fd3b36fc054335b4be31d77efac641e81096272"},"downloads":-1,"filename":"groq-0.3.0.tar.gz","has_sig":false,"md5_digest":"fe5c2f13e8af48cc578ae91ca2671e99","packagetype":"sdist","python_version":"source","requires_python":">=3.10,<4.0","size":35934,"upload_time":"2024-02-09T01:05:26","upload_time_iso_8601":"2024-02-09T01:05:26.565555Z","url":"https://files.pythonhosted.org/packages/fa/8b/eba92e5fba5a07a93fa0b2dbadf46815a02947e1930a12d65265efb542a1/groq-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"0.4.0":[{"comment_text":"","digests":{"blake2b_256":"c213b60a2e02f0530cd37c56b5c210f72e197dc3ee45d0931c007acd0c08676e","md5":"e9b1ce7aeeb920e2a0e253693a7c4bc5","sha256":"ee2649349984a519946b76eb6e6c8a43575aed9c43409c20fbfb056a42f3c308"},"downloads":-1,"filename":"groq-0.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"e9b1ce7aeeb920e2a0e253693a7c4bc5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":65485,"upload_time":"2024-02-16T00:16:57","upload_time_iso_8601":"2024-02-16T00:16:57.899182Z","url":"https://files.pythonhosted.org/packages/c2/13/b60a2e02f0530cd37c56b5c210f72e197dc3ee45d0931c007acd0c08676e/groq-0.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6d44acca081dfcaf6a531fac020e0d509b649711cfa0c8919f1baa3fe88d90bb","md5":"3dc364dba87b4ddda97f60f99ea3d904","sha256":"9e942f28320d84f75f88e5e7a6ada7ed2d16c48de38af4153f1daf268282986d"},"downloads":-1,"filename":"groq-0.4.0.tar.gz","has_sig":false,"md5_digest":"3dc364dba87b4ddda97f60f99ea3d904","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":52311,"upload_time":"2024-02-16T00:16:59","upload_time_iso_8601":"2024-02-16T00:16:59.231120Z","url":"https://files.pythonhosted.org/packages/6d/44/acca081dfcaf6a531fac020e0d509b649711cfa0c8919f1baa3fe88d90bb/groq-0.4.0.tar.gz","yanked":false,"yanked_reason":null}],"0.4.1":[{"comment_text":"","digests":{"blake2b_256":"5ea50f61c7e43f0c31dc21e6316fa6751b14acb726e90073116bf02a5559182b","md5":"f5d0b57e8fc4a906027964f443958a00","sha256":"2939ff96e3fc633416e5d9ab26bbfd63c70b2226338a507f8c2b0b3aa27c9dec"},"downloads":-1,"filename":"groq-0.4.1-py3-none-any.whl","has_sig":false,"md5_digest":"f5d0b57e8fc4a906027964f443958a00","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":65486,"upload_time":"2024-02-21T03:02:16","upload_time_iso_8601":"2024-02-21T03:02:16.518505Z","url":"https://files.pythonhosted.org/packages/5e/a5/0f61c7e43f0c31dc21e6316fa6751b14acb726e90073116bf02a5559182b/groq-0.4.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f01bf091d37b94ed852c2d65e8a76c287f3abd12719d98a0e14134f6d802da7c","md5":"f9cec78348fd3eeb0932fae70b9b856e","sha256":"f2285c0a7d64abefcdec3d61e8bc1a61ff04d887ed30b991ac7fe53ae1e10251"},"downloads":-1,"filename":"groq-0.4.1.tar.gz","has_sig":false,"md5_digest":"f9cec78348fd3eeb0932fae70b9b856e","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":52312,"upload_time":"2024-02-21T03:02:17","upload_time_iso_8601":"2024-02-21T03:02:17.799945Z","url":"https://files.pythonhosted.org/packages/f0/1b/f091d37b94ed852c2d65e8a76c287f3abd12719d98a0e14134f6d802da7c/groq-0.4.1.tar.gz","yanked":false,"yanked_reason":null}],"0.4.2":[{"comment_text":"","digests":{"blake2b_256":"b21908a43f1fb3d8d289c08b20303d5d7ce93e218e5b049faf7b7d175c003703","md5":"ed0e67488a4ef8b69dc5419f08513323","sha256":"5b2b472c64d9f35210e0487db465415d47162da3a114031ecbfc8843d26302a5"},"downloads":-1,"filename":"groq-0.4.2-py3-none-any.whl","has_sig":false,"md5_digest":"ed0e67488a4ef8b69dc5419f08513323","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":65748,"upload_time":"2024-03-01T22:13:56","upload_time_iso_8601":"2024-03-01T22:13:56.970946Z","url":"https://files.pythonhosted.org/packages/b2/19/08a43f1fb3d8d289c08b20303d5d7ce93e218e5b049faf7b7d175c003703/groq-0.4.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a0dc2802faba3a7cb7349b355715d210af0043f8c07f03a0104d6fc5352bbdb6","md5":"bbc325fafe90dc22d40c6472a7edb679","sha256":"42e8b0abd0f2b2da024b9a747d28960d62951a5364f078e1537c9fceeca8259d"},"downloads":-1,"filename":"groq-0.4.2.tar.gz","has_sig":false,"md5_digest":"bbc325fafe90dc22d40c6472a7edb679","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":52609,"upload_time":"2024-03-01T22:13:58","upload_time_iso_8601":"2024-03-01T22:13:58.814553Z","url":"https://files.pythonhosted.org/packages/a0/dc/2802faba3a7cb7349b355715d210af0043f8c07f03a0104d6fc5352bbdb6/groq-0.4.2.tar.gz","yanked":false,"yanked_reason":null}],"0.5.0":[{"comment_text":"","digests":{"blake2b_256":"1d56097cee324676d25ba0ed593c5310a695becdcb921239b030a32d97ddfbee","md5":"dd558e0f533a3dfcc9906d14e814ea9c","sha256":"a7e6be1118bcdfea3ed071ec00f505a34d4e6ec28c435adb5a5afd33545683a1"},"downloads":-1,"filename":"groq-0.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"dd558e0f533a3dfcc9906d14e814ea9c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":75009,"upload_time":"2024-04-11T17:53:42","upload_time_iso_8601":"2024-04-11T17:53:42.547313Z","url":"https://files.pythonhosted.org/packages/1d/56/097cee324676d25ba0ed593c5310a695becdcb921239b030a32d97ddfbee/groq-0.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9b90ed6d534816e4aed94e98dc93339e5f2324521743ae613cfafbd0be65c31f","md5":"9254bc7e58777b84bf1044c5342db954","sha256":"d476cdc3383b45d2a4dc1876142a9542e663ea1029f9e07a05de24f895cae48c"},"downloads":-1,"filename":"groq-0.5.0.tar.gz","has_sig":false,"md5_digest":"9254bc7e58777b84bf1044c5342db954","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":56549,"upload_time":"2024-04-11T17:53:44","upload_time_iso_8601":"2024-04-11T17:53:44.431188Z","url":"https://files.pythonhosted.org/packages/9b/90/ed6d534816e4aed94e98dc93339e5f2324521743ae613cfafbd0be65c31f/groq-0.5.0.tar.gz","yanked":false,"yanked_reason":null}],"0.6.0":[{"comment_text":"","digests":{"blake2b_256":"95b4d1f153a1ebf61f4e2ed1d861ebfc2728eb20f209675c8a8067079b703baf","md5":"09cb1b1b7aac22d3a6e3fb3426026191","sha256":"99e2e5ea48df074c09bffcc349b049d3573d9cb35da872d4acbbe50a4b266414"},"downloads":-1,"filename":"groq-0.6.0-py3-none-any.whl","has_sig":false,"md5_digest":"09cb1b1b7aac22d3a6e3fb3426026191","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":84923,"upload_time":"2024-05-16T17:46:49","upload_time_iso_8601":"2024-05-16T17:46:49.822285Z","url":"https://files.pythonhosted.org/packages/95/b4/d1f153a1ebf61f4e2ed1d861ebfc2728eb20f209675c8a8067079b703baf/groq-0.6.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f6f28748b50cda7a2de6d9fd0bdd85dd338bde364af2eea723fdf3211c84fe89","md5":"72f625ce8d2deb60d87ea5b2f6a57964","sha256":"a96f3a49a0d4119a1bec7f6352af0a87733a2865d464da34a4eb27bfe8068c7e"},"downloads":-1,"filename":"groq-0.6.0.tar.gz","has_sig":false,"md5_digest":"72f625ce8d2deb60d87ea5b2f6a57964","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":62502,"upload_time":"2024-05-16T17:46:51","upload_time_iso_8601":"2024-05-16T17:46:51.372969Z","url":"https://files.pythonhosted.org/packages/f6/f2/8748b50cda7a2de6d9fd0bdd85dd338bde364af2eea723fdf3211c84fe89/groq-0.6.0.tar.gz","yanked":false,"yanked_reason":null}],"0.7.0":[{"comment_text":"","digests":{"blake2b_256":"512a2892c0058fd3b434a413c351d9bfe5cb363437973b32c36708c5a8c25132","md5":"05bf4bf2973c60de9bfd9c886bb6de03","sha256":"891d530e1b4686e7a113f84084459905e13d37337e6b9376b73e55a293f18fe5"},"downloads":-1,"filename":"groq-0.7.0-py3-none-any.whl","has_sig":false,"md5_digest":"05bf4bf2973c60de9bfd9c886bb6de03","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":89362,"upload_time":"2024-05-22T00:18:56","upload_time_iso_8601":"2024-05-22T00:18:56.990194Z","url":"https://files.pythonhosted.org/packages/51/2a/2892c0058fd3b434a413c351d9bfe5cb363437973b32c36708c5a8c25132/groq-0.7.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cc8773cebab01ebfc96731ef258c5edc5401cc08f53a401e43c2e6711e62dba8","md5":"8e4651b5bb55c252099e75e316c10da6","sha256":"7ac2d58516a312cfdfcbeefb3ed90b24b5d42ac3f6d29210e6e92b83b27d4578"},"downloads":-1,"filename":"groq-0.7.0.tar.gz","has_sig":false,"md5_digest":"8e4651b5bb55c252099e75e316c10da6","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":66527,"upload_time":"2024-05-22T00:18:58","upload_time_iso_8601":"2024-05-22T00:18:58.794248Z","url":"https://files.pythonhosted.org/packages/cc/87/73cebab01ebfc96731ef258c5edc5401cc08f53a401e43c2e6711e62dba8/groq-0.7.0.tar.gz","yanked":false,"yanked_reason":null}],"0.8.0":[{"comment_text":"","digests":{"blake2b_256":"15e4835f485c6b3268fbc52687481dd574d785b6500384b150196686d78f4cdf","md5":"49d72d2ec92bab38a6cbe2cde3464124","sha256":"f5e4e892d45001241a930db451e633ca1f0007e3f749deaa5d7360062fcd61e3"},"downloads":-1,"filename":"groq-0.8.0-py3-none-any.whl","has_sig":false,"md5_digest":"49d72d2ec92bab38a6cbe2cde3464124","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":105391,"upload_time":"2024-05-22T21:43:02","upload_time_iso_8601":"2024-05-22T21:43:02.132998Z","url":"https://files.pythonhosted.org/packages/15/e4/835f485c6b3268fbc52687481dd574d785b6500384b150196686d78f4cdf/groq-0.8.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d00f8e58cd93839ce90df1dad812a5c793d9dcd511fe1eae26552264549d7d2d","md5":"c30fe81ed188a9781bfd508be920b2e5","sha256":"37ceb2f706bd516d0bfcac8e89048a24b375172987a0d6bd9efb521c54f6deff"},"downloads":-1,"filename":"groq-0.8.0.tar.gz","has_sig":false,"md5_digest":"c30fe81ed188a9781bfd508be920b2e5","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":69423,"upload_time":"2024-05-22T21:43:03","upload_time_iso_8601":"2024-05-22T21:43:03.503851Z","url":"https://files.pythonhosted.org/packages/d0/0f/8e58cd93839ce90df1dad812a5c793d9dcd511fe1eae26552264549d7d2d/groq-0.8.0.tar.gz","yanked":false,"yanked_reason":null}],"0.9.0":[{"comment_text":"","digests":{"blake2b_256":"597c81b1302925c2452d540c7d7784b316017b69e1f3f19c2996bcb09360437b","md5":"ed57fc7d3db5ab249e6c01fd2068648e","sha256":"d0e46f4ad645504672bb09c8100af3ced3a7db0d5119dc13e4aca535fc455874"},"downloads":-1,"filename":"groq-0.9.0-py3-none-any.whl","has_sig":false,"md5_digest":"ed57fc7d3db5ab249e6c01fd2068648e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":103457,"upload_time":"2024-06-11T20:12:02","upload_time_iso_8601":"2024-06-11T20:12:02.407848Z","url":"https://files.pythonhosted.org/packages/59/7c/81b1302925c2452d540c7d7784b316017b69e1f3f19c2996bcb09360437b/groq-0.9.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"48c85ea4aa6b329fd01795acdf4cb0c78d92860253d108eddfc008fccbe56642","md5":"3737f9b591b3a2c7e6f45060fd1bd663","sha256":"130ed5e35d3acfaab46b9e7a078eeaebf91052f4a9d71f86f87fb319b5fec332"},"downloads":-1,"filename":"groq-0.9.0.tar.gz","has_sig":false,"md5_digest":"3737f9b591b3a2c7e6f45060fd1bd663","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":68728,"upload_time":"2024-06-11T20:12:03","upload_time_iso_8601":"2024-06-11T20:12:03.864184Z","url":"https://files.pythonhosted.org/packages/48/c8/5ea4aa6b329fd01795acdf4cb0c78d92860253d108eddfc008fccbe56642/groq-0.9.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"597c81b1302925c2452d540c7d7784b316017b69e1f3f19c2996bcb09360437b","md5":"ed57fc7d3db5ab249e6c01fd2068648e","sha256":"d0e46f4ad645504672bb09c8100af3ced3a7db0d5119dc13e4aca535fc455874"},"downloads":-1,"filename":"groq-0.9.0-py3-none-any.whl","has_sig":false,"md5_digest":"ed57fc7d3db5ab249e6c01fd2068648e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":103457,"upload_time":"2024-06-11T20:12:02","upload_time_iso_8601":"2024-06-11T20:12:02.407848Z","url":"https://files.pythonhosted.org/packages/59/7c/81b1302925c2452d540c7d7784b316017b69e1f3f19c2996bcb09360437b/groq-0.9.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"48c85ea4aa6b329fd01795acdf4cb0c78d92860253d108eddfc008fccbe56642","md5":"3737f9b591b3a2c7e6f45060fd1bd663","sha256":"130ed5e35d3acfaab46b9e7a078eeaebf91052f4a9d71f86f87fb319b5fec332"},"downloads":-1,"filename":"groq-0.9.0.tar.gz","has_sig":false,"md5_digest":"3737f9b591b3a2c7e6f45060fd1bd663","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":68728,"upload_time":"2024-06-11T20:12:03","upload_time_iso_8601":"2024-06-11T20:12:03.864184Z","url":"https://files.pythonhosted.org/packages/48/c8/5ea4aa6b329fd01795acdf4cb0c78d92860253d108eddfc008fccbe56642/groq-0.9.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
