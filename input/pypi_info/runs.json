{"info":{"author":"Tom Ritchford","author_email":"tom@swirly.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description":"🏃 runs: a better subprocess 🏃\n---------------------------------------------------------------------\n\n``runs`` has improved versions of ``call()``, ``check_call()``, ``check_output()``,\nand ``run()`` from Python's ``subprocess`` module that handle multiple commands and\nblocks of text, fix some defects, and add some features.\n\n.. code-block:: python\n\n    import runs\n\n    runs('''\n        ls\n        df -k  # or perhaps -h?\n        echo 'Done and done'\n    ''')\n\n---\n\n``subprocess`` is essential but:\n\n* You can only run one command at a time\n\n* Commands to subprocess must be either a sequence of strings or a string,\n  depending on whether ``shell=True`` or not\n\n* Results are returned by default as bytes and not strings\n\n---\n\nThe ``runs`` functions let you run a block of text as a sequence of subprocess\ncalls.\n\n``runs`` provides call-compatible replacements for the functions\n``subprocess.call()``, ``subprocess.check_call()``, ``subprocess.check_output()``,\nand ``subprocess.run()``\n\nEach replacement function takes a block of text, which is split into individual\ncommand lines, or a list of commands, and returns a list of values, one for\neach command.  A block of text can contain line continuations, and comments,\nwhich are ignored.\n\nThe replacement functions also add optional logging, error handling,\nand lazy evaluation, and use UTF-8 encoding by default.\n\nThe module ``runs`` is callable - ``runs()`` is a synonym for ``runs.run()``.\n\nEXAMPLES:\n\n.. code-block:: python\n\n    # ``runs()`` or ``runs.run()`` writes to stdout and stderr just as if you'd run\n    # the commands from the terminal\n\n    import runs\n\n    runs('echo \"hello, world!\"')  # prints hello, world!\n\n    # runs.check_output() returns a list, one string result for each command\n\n    results = check_output('''\n        echo  line   one  # Here's line one.\n        echo   'line \"  two  \"'  # and two!\n    ''')\n    assert results == ['line one', 'line \"  two  \"']\n\n    # Line continuations work too, either single or double\n    runs('''\n        ls -cail\n\n        # One command that takes many lines.\n        g++ -DDEBUG  -O0 -g -std=c++17 -pthread -I ./include -lm -lstdc++ \\\n          -Wall -Wextra -Wno-strict-aliasing -Wpedantic \\\\\n          -MMD -MP -MF -c src/tests.cpp -o build/./src/tests.cpp.o\n\n        echo DONE\n     ''')\n\nNOTES:\n\nExactly like ``subprocess``, ``runs`` differs from the shell in a few ways, so\nyou can't just paste your shell scripts in:\n\n* Redirection doesn't work.\n\n.. code-block:: python\n\n    result = runs.check_output('echo foo > bar.txt')\n    assert result == ['foo > bar.txt\\n']\n\n* Pipes don't work.\n\n.. code-block:: python\n\n    result = runs.check_output('echo foo | wc')\n    assert result == ['foo | wc \\n']\n\n*  Environment variables are not expanded in command lines\n\n.. code-block:: python\n\n    result = runs.check_output('echo $FOO', env={'FOO': 'bah!'})\n    assert result == ['$FOO\\n']\n\nEnvironment variables are exported to the subprocess, absolutely,\nbut no environment variable expension happens on command lines.\n\nAPI\n===\n\n``runs()``\n~~~~~~~~~~\n\n.. code-block:: python\n\n  runs(\n       commands,\n       *args,\n       iterate=False,\n       encoding='utf8',\n       on_exception=None,\n       echo=False,\n       **kwargs,\n  )\n\n(`runs.py, 186-200 <https://github.com/rec/runs/blob/master/runs.py#L186-L200>`_)\n\nCall ``subprocess.run()`` on each command.\nReturn a list of ``subprocess.CompletedProcess`` instances.\nSee the help for ``subprocess.run()`` for more information.\n\nArguments:\n  commands:\n    A string, which gets split into lines on line endings, or a list of\n    strings.\n\n  args:\n    Positional arguments to ``subprocess.run()`` (but prefer keyword\n    arguments!)\n\n  on_exception:\n    If ``on_exception`` is ``False``, the default, exceptions from\n    ``subprocess.run()`` are raised as usual.\n\n    If ``on_exception`` is True, they are ignored.\n\n    If ``on_exception`` is a callable, the line that caused the exception is\n    passed to it.\n\n    If ``on_exception`` is a string, the line causing the exception\n    is printed, prefixed with that string.\n\n  echo:\n    If ``echo`` is ``False``, the default, then commands are silently executed.\n    If ``echo`` is ``True``, commands are printed prefixed with ``$``\n    If ``echo`` is a string, commands are printed prefixed with that string\n    If ``echo`` is callable, then each command is passed to it.\n\n  iterate:\n    If ``iterate`` is ``False``, the default, then a list of results is\n    returned.\n\n    Otherwise an iterator of results which is returned, allowing for lazy\n    evaluation.\n\n  encoding:\n    Like the argument to ``subprocess.run()``, except the default  is\n    ``'utf8'``\n\n  kwargs:\n    Named arguments passed on to ``subprocess.run()``\n\n``runs.call()``\n~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n  runs.call(\n       commands,\n       *args,\n       iterate=False,\n       encoding='utf8',\n       on_exception=None,\n       echo=False,\n       **kwargs,\n  )\n\n(`runs.py, 186-200 <https://github.com/rec/runs/blob/master/runs.py#L186-L200>`_)\n\nCall ``subprocess.call()`` on each command.\nReturn a list of integer returncodes, one for each command executed.\nSee the help for ``subprocess.call()`` for more information.\n\nArguments:\n  commands:\n    A string, which gets split into lines on line endings, or a list of\n    strings.\n\n  args:\n    Positional arguments to ``subprocess.call()`` (but prefer keyword\n    arguments!)\n\n  on_exception:\n    If ``on_exception`` is ``False``, the default, exceptions from\n    ``subprocess.call()`` are raised as usual.\n\n    If ``on_exception`` is True, they are ignored.\n\n    If ``on_exception`` is a callable, the line that caused the exception is\n    passed to it.\n\n    If ``on_exception`` is a string, the line causing the exception\n    is printed, prefixed with that string.\n\n  echo:\n    If ``echo`` is ``False``, the default, then commands are silently executed.\n    If ``echo`` is ``True``, commands are printed prefixed with ``$``\n    If ``echo`` is a string, commands are printed prefixed with that string\n    If ``echo`` is callable, then each command is passed to it.\n\n  iterate:\n    If ``iterate`` is ``False``, the default, then a list of results is\n    returned.\n\n    Otherwise an iterator of results which is returned, allowing for lazy\n    evaluation.\n\n  encoding:\n    Like the argument to ``subprocess.call()``, except the default  is\n    ``'utf8'``\n\n  kwargs:\n    Named arguments passed on to ``subprocess.call()``\n\n``runs.check_call()``\n~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n  runs.check_call(\n       commands,\n       *args,\n       iterate=False,\n       encoding='utf8',\n       on_exception=None,\n       echo=False,\n       **kwargs,\n  )\n\n(`runs.py, 186-200 <https://github.com/rec/runs/blob/master/runs.py#L186-L200>`_)\n\nCall ``subprocess.check_call()`` on each command.\nIf any command has a non-zero returncode, raise ``subprocess.CallProcessError``.\n\nSee the help for ``subprocess.check_call()`` for more information.\n\nArguments:\n  commands:\n    A string, which gets split into lines on line endings, or a list of\n    strings.\n\n  args:\n    Positional arguments to ``subprocess.check_call()`` (but prefer keyword\n    arguments!)\n\n  on_exception:\n    If ``on_exception`` is ``False``, the default, exceptions from\n    ``subprocess.check_call()`` are raised as usual.\n\n    If ``on_exception`` is True, they are ignored.\n\n    If ``on_exception`` is a callable, the line that caused the exception is\n    passed to it.\n\n    If ``on_exception`` is a string, the line causing the exception\n    is printed, prefixed with that string.\n\n  echo:\n    If ``echo`` is ``False``, the default, then commands are silently executed.\n    If ``echo`` is ``True``, commands are printed prefixed with ``$``\n    If ``echo`` is a string, commands are printed prefixed with that string\n    If ``echo`` is callable, then each command is passed to it.\n\n  iterate:\n    If ``iterate`` is ``False``, the default, then a list of results is\n    returned.\n\n    Otherwise an iterator of results which is returned, allowing for lazy\n    evaluation.\n\n  encoding:\n    Like the argument to ``subprocess.check_call()``, except the default  is\n    ``'utf8'``\n\n  kwargs:\n    Named arguments passed on to ``subprocess.check_call()``\n\n``runs.check_output()``\n~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n  runs.check_output(\n       commands,\n       *args,\n       iterate=False,\n       encoding='utf8',\n       on_exception=None,\n       echo=False,\n       **kwargs,\n  )\n\n(`runs.py, 186-200 <https://github.com/rec/runs/blob/master/runs.py#L186-L200>`_)\n\nCall ``subprocess.check_output()`` on each command.\nIf a command has a non-zero exit code, raise a ``subprocess.CallProcessError``.\nOtherwise, return the results as a list of strings, one for each command.\nSee the help for ``subprocess.check_output()`` for more information.\n\nArguments:\n  commands:\n    A string, which gets split into lines on line endings, or a list of\n    strings.\n\n  args:\n    Positional arguments to ``subprocess.check_output()`` (but prefer keyword\n    arguments!)\n\n  on_exception:\n    If ``on_exception`` is ``False``, the default, exceptions from\n    ``subprocess.check_output()`` are raised as usual.\n\n    If ``on_exception`` is True, they are ignored.\n\n    If ``on_exception`` is a callable, the line that caused the exception is\n    passed to it.\n\n    If ``on_exception`` is a string, the line causing the exception\n    is printed, prefixed with that string.\n\n  echo:\n    If ``echo`` is ``False``, the default, then commands are silently executed.\n    If ``echo`` is ``True``, commands are printed prefixed with ``$``\n    If ``echo`` is a string, commands are printed prefixed with that string\n    If ``echo`` is callable, then each command is passed to it.\n\n  iterate:\n    If ``iterate`` is ``False``, the default, then a list of results is\n    returned.\n\n    Otherwise an iterator of results which is returned, allowing for lazy\n    evaluation.\n\n  encoding:\n    Like the argument to ``subprocess.check_output()``, except the default  is\n    ``'utf8'``\n\n  kwargs:\n    Named arguments passed on to ``subprocess.check_output()``\n\n(automatically generated by `doks <https://github.com/rec/doks/>`_ on 2020-12-16T13:48:26.579866)\n","description_content_type":"text/x-rst","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"runs","package_url":"https://pypi.org/project/runs/","platform":null,"project_url":"https://pypi.org/project/runs/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/runs/1.2.2/","requires_dist":["xmod"],"requires_python":">=3.8","summary":"🏃 Run a block of text as a subprocess 🏃","version":"1.2.2","yanked":false,"yanked_reason":null},"last_serial":21586180,"releases":{"0.3.1":[{"comment_text":"","digests":{"blake2b_256":"2dd34473b639b6df03db1eeeda063b7848b168f0f80c182f9bd22e2ccf965d11","md5":"5ec0b3c98926ba79e778b9d84577997f","sha256":"b5839315f80a752427284f460c2f092a7d2841248316cb883a6e6ebb17915913"},"downloads":-1,"filename":"runs-0.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"5ec0b3c98926ba79e778b9d84577997f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":2853,"upload_time":"2020-11-09T11:50:02","upload_time_iso_8601":"2020-11-09T11:50:02.362798Z","url":"https://files.pythonhosted.org/packages/2d/d3/4473b639b6df03db1eeeda063b7848b168f0f80c182f9bd22e2ccf965d11/runs-0.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ab9c50c6513deb95c90691f8848cc5f5cde87bdde1b92ebd2af1cf27eab8b0fc","md5":"24ed9dd3c383f61eabc0531b559625ee","sha256":"b2a7f426455f1e59a2df2512726544cfdb25996b7f1d16fc2fa9a1a786ba1e1c"},"downloads":-1,"filename":"runs-0.3.1.tar.gz","has_sig":false,"md5_digest":"24ed9dd3c383f61eabc0531b559625ee","packagetype":"sdist","python_version":"source","requires_python":null,"size":2075,"upload_time":"2020-11-09T11:50:14","upload_time_iso_8601":"2020-11-09T11:50:14.846785Z","url":"https://files.pythonhosted.org/packages/ab/9c/50c6513deb95c90691f8848cc5f5cde87bdde1b92ebd2af1cf27eab8b0fc/runs-0.3.1.tar.gz","yanked":false,"yanked_reason":null}],"0.3.2":[{"comment_text":"","digests":{"blake2b_256":"74d745404df2c373a971c475faa3ba84c879da32516d16f32472b24a8ca086bf","md5":"2a21e744e918b12a8e03fd2fc4a0c849","sha256":"c64216397bd1e255ed56f22b9cefe507e75e8c3c76946c2e869488593b6bd767"},"downloads":-1,"filename":"runs-0.3.2-py3-none-any.whl","has_sig":false,"md5_digest":"2a21e744e918b12a8e03fd2fc4a0c849","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":6469,"upload_time":"2020-11-14T18:39:49","upload_time_iso_8601":"2020-11-14T18:39:49.779075Z","url":"https://files.pythonhosted.org/packages/74/d7/45404df2c373a971c475faa3ba84c879da32516d16f32472b24a8ca086bf/runs-0.3.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cfa3fa3497a7191361f233de3d20b97fbdaa40114957292b5d802869ad858013","md5":"f5d16193ca49b018fc674de049dcd208","sha256":"0348be6c966fc4164e816a53bd5d1c6c8c01c86691cb8800b90bb065987087ff"},"downloads":-1,"filename":"runs-0.3.2.tar.gz","has_sig":false,"md5_digest":"f5d16193ca49b018fc674de049dcd208","packagetype":"sdist","python_version":"source","requires_python":null,"size":4938,"upload_time":"2020-11-14T18:39:51","upload_time_iso_8601":"2020-11-14T18:39:51.430460Z","url":"https://files.pythonhosted.org/packages/cf/a3/fa3497a7191361f233de3d20b97fbdaa40114957292b5d802869ad858013/runs-0.3.2.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"9511cfa0b0ce7688c5d24356883340c7395b75a65da811b0f006805fe5bd8032","md5":"9647a162f5cbea3efff73345860c6969","sha256":"14cf2636c580fef79077de5e4afe693cdf92fc52344fd9cb994cc2b1566d788a"},"downloads":-1,"filename":"runs-1.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"9647a162f5cbea3efff73345860c6969","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":6475,"upload_time":"2020-11-14T18:42:41","upload_time_iso_8601":"2020-11-14T18:42:41.439281Z","url":"https://files.pythonhosted.org/packages/95/11/cfa0b0ce7688c5d24356883340c7395b75a65da811b0f006805fe5bd8032/runs-1.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9e4fbfbe6cd1f65ffc6f6dfa3e3a57759e28a8a621be6549df603c0aa145b983","md5":"98b39e3355f49e5b1bdfa1a567e2d877","sha256":"f21ca2361ad741489de7074a401a71104ed10122eeef8f9720cf2a0c7ad2cdee"},"downloads":-1,"filename":"runs-1.0.0.tar.gz","has_sig":false,"md5_digest":"98b39e3355f49e5b1bdfa1a567e2d877","packagetype":"sdist","python_version":"source","requires_python":null,"size":4940,"upload_time":"2020-11-14T18:42:43","upload_time_iso_8601":"2020-11-14T18:42:43.063447Z","url":"https://files.pythonhosted.org/packages/9e/4f/bfbe6cd1f65ffc6f6dfa3e3a57759e28a8a621be6549df603c0aa145b983/runs-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"bc123cd1e484a2276271c6b365a7213e10274f8da5b53b300738c7585936e003","md5":"ebc37271248ba6d2c4ad7ec09085b13f","sha256":"702a31bec6d3336175ab6dcadd605ebd39b75d792a98303202b090d4556883e3"},"downloads":-1,"filename":"runs-1.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"ebc37271248ba6d2c4ad7ec09085b13f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":6479,"upload_time":"2020-11-17T12:25:21","upload_time_iso_8601":"2020-11-17T12:25:21.111459Z","url":"https://files.pythonhosted.org/packages/bc/12/3cd1e484a2276271c6b365a7213e10274f8da5b53b300738c7585936e003/runs-1.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"17ee30e49d568c07300ed52a44dc8cecb6b20262fbd1c15645399f295f09b002","md5":"a0f61b729b33740b4f07269521d0aac3","sha256":"c8685f129e54086f103b365c8d20c3f117f7518d0717962905c96248643530ef"},"downloads":-1,"filename":"runs-1.1.0.tar.gz","has_sig":false,"md5_digest":"a0f61b729b33740b4f07269521d0aac3","packagetype":"sdist","python_version":"source","requires_python":null,"size":4941,"upload_time":"2020-11-17T12:25:22","upload_time_iso_8601":"2020-11-17T12:25:22.787626Z","url":"https://files.pythonhosted.org/packages/17/ee/30e49d568c07300ed52a44dc8cecb6b20262fbd1c15645399f295f09b002/runs-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"812f0bc8ca6f42ea647afcb056efe3546341bd75dc40892a68a65414d668fba0","md5":"619206a1bef179963b54b6bd4a6c5377","sha256":"ec6fe3b24dfa20c5c4e5c4806d3b35bb880aad0e787a8610913c665c5a7cc07c"},"downloads":-1,"filename":"runs-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"619206a1bef179963b54b6bd4a6c5377","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":6890,"upload_time":"2023-12-29T13:03:33","upload_time_iso_8601":"2023-12-29T13:03:33.573078Z","url":"https://files.pythonhosted.org/packages/81/2f/0bc8ca6f42ea647afcb056efe3546341bd75dc40892a68a65414d668fba0/runs-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8b914d1e3f01cecdd7f8a5486f6a5961bf2cd1d48b98b48541b08e783e3c8853","md5":"92a7ccd09c0f8b31223bbe53ccd7e3e9","sha256":"8804271011b7a2eeb0d77c3e3f556e5ce5f602fa0dd2a31ed0c1222893be69b7"},"downloads":-1,"filename":"runs-1.2.0.tar.gz","has_sig":false,"md5_digest":"92a7ccd09c0f8b31223bbe53ccd7e3e9","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":5258,"upload_time":"2023-12-29T13:03:35","upload_time_iso_8601":"2023-12-29T13:03:35.550235Z","url":"https://files.pythonhosted.org/packages/8b/91/4d1e3f01cecdd7f8a5486f6a5961bf2cd1d48b98b48541b08e783e3c8853/runs-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.1":[{"comment_text":"","digests":{"blake2b_256":"d774cb1ca09152bcca9ebed1a9a3cd8c66639d68bee528233e84c7db1c94c99d","md5":"78731b16cc323271dfa8a95f5a4780fb","sha256":"f103386deb84983d445e61b56de48a006691289a17f80214fe593e858d193a12"},"downloads":-1,"filename":"runs-1.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"78731b16cc323271dfa8a95f5a4780fb","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":6892,"upload_time":"2024-01-25T10:43:23","upload_time_iso_8601":"2024-01-25T10:43:23.236361Z","url":"https://files.pythonhosted.org/packages/d7/74/cb1ca09152bcca9ebed1a9a3cd8c66639d68bee528233e84c7db1c94c99d/runs-1.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"302d82125b2b78d80e26bc0c24cc8d616573d4acd25d12813e277b0d7a6392a5","md5":"ca6c7d615e0d01cfe1173c9e2fd88e01","sha256":"4da28358b53d92a7b49cce744387de0bcb623edbb48941a58cd40291ef4c2301"},"downloads":-1,"filename":"runs-1.2.1.tar.gz","has_sig":false,"md5_digest":"ca6c7d615e0d01cfe1173c9e2fd88e01","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":5264,"upload_time":"2024-01-25T10:43:25","upload_time_iso_8601":"2024-01-25T10:43:25.026414Z","url":"https://files.pythonhosted.org/packages/30/2d/82125b2b78d80e26bc0c24cc8d616573d4acd25d12813e277b0d7a6392a5/runs-1.2.1.tar.gz","yanked":false,"yanked_reason":null}],"1.2.2":[{"comment_text":"","digests":{"blake2b_256":"86d617caf2e4af1dec288477a0cbbe4a96fbc9b8a28457dce3f1f452630ce216","md5":"e99aacda09e4f80343c300651506cf53","sha256":"0980dcbc25aba1505f307ac4f0e9e92cbd0be2a15a1e983ee86c24c87b839dfd"},"downloads":-1,"filename":"runs-1.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"e99aacda09e4f80343c300651506cf53","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":7033,"upload_time":"2024-01-25T14:43:59","upload_time_iso_8601":"2024-01-25T14:43:59.959789Z","url":"https://files.pythonhosted.org/packages/86/d6/17caf2e4af1dec288477a0cbbe4a96fbc9b8a28457dce3f1f452630ce216/runs-1.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"266db9aace390f62db5d7d2c77eafce3d42774f27f1829d24fa9b6f598b3ef71","md5":"f7da0ce7ad7b6f8ceb7297e9de387907","sha256":"9dc1815e2895cfb3a48317b173b9f1eac9ba5549b36a847b5cc60c3bf82ecef1"},"downloads":-1,"filename":"runs-1.2.2.tar.gz","has_sig":false,"md5_digest":"f7da0ce7ad7b6f8ceb7297e9de387907","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":5474,"upload_time":"2024-01-25T14:44:01","upload_time_iso_8601":"2024-01-25T14:44:01.563460Z","url":"https://files.pythonhosted.org/packages/26/6d/b9aace390f62db5d7d2c77eafce3d42774f27f1829d24fa9b6f598b3ef71/runs-1.2.2.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"86d617caf2e4af1dec288477a0cbbe4a96fbc9b8a28457dce3f1f452630ce216","md5":"e99aacda09e4f80343c300651506cf53","sha256":"0980dcbc25aba1505f307ac4f0e9e92cbd0be2a15a1e983ee86c24c87b839dfd"},"downloads":-1,"filename":"runs-1.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"e99aacda09e4f80343c300651506cf53","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":7033,"upload_time":"2024-01-25T14:43:59","upload_time_iso_8601":"2024-01-25T14:43:59.959789Z","url":"https://files.pythonhosted.org/packages/86/d6/17caf2e4af1dec288477a0cbbe4a96fbc9b8a28457dce3f1f452630ce216/runs-1.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"266db9aace390f62db5d7d2c77eafce3d42774f27f1829d24fa9b6f598b3ef71","md5":"f7da0ce7ad7b6f8ceb7297e9de387907","sha256":"9dc1815e2895cfb3a48317b173b9f1eac9ba5549b36a847b5cc60c3bf82ecef1"},"downloads":-1,"filename":"runs-1.2.2.tar.gz","has_sig":false,"md5_digest":"f7da0ce7ad7b6f8ceb7297e9de387907","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":5474,"upload_time":"2024-01-25T14:44:01","upload_time_iso_8601":"2024-01-25T14:44:01.563460Z","url":"https://files.pythonhosted.org/packages/26/6d/b9aace390f62db5d7d2c77eafce3d42774f27f1829d24fa9b6f598b3ef71/runs-1.2.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
