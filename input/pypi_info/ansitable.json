{"info":{"author":null,"author_email":"Peter Corke <rvc@petercorke.com>","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description":"[![PyPI version fury.io](https://badge.fury.io/py/ansitable.svg)](https://pypi.python.org/pypi/ansitable/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/ansitable)](https://pypistats.org/packages/ansitable)\n[![Anaconda version](https://anaconda.org/conda-forge/ansitable/badges/version.svg)](https://anaconda.org/conda-forge/ansitable)\n[![pyversions](https://img.shields.io/pypi/pyversions/ansitable)](https://pypi.python.org/pypi/ansitable/)\n[![PyPI status](https://img.shields.io/pypi/status/ansitable.svg)](https://pypi.python.org/pypi/ansitable/)\n[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://github.com/petercorke/ansitable/graphs/commit-activity)\n[![GitHub license](https://img.shields.io/github/license/Naereen/StrapDown.js.svg)](https://github.com/petercorke/ansitable/blob/master/LICENSE)\n\n- GitHub repository: [https://github.com/petercorke/ansitable](https://github.com/petercorke/ansitable)\n- Dependencies: [`colored`](https://pypi.org/project/colored)\n\n# Synopsis\n\nPainless creation of nice-looking [tables of data](#tables) or [matrices](#matrices) in Python.\n\nWhat's new:\n\n0.10.0:\n\n- `colsep` is now the number of padding spaces on each side of the cell data.  `colsep=1` means one space on the left and one on the right, previously this was achieved by `colsep=2`.\n- the padding now has `bgcolor`\n- the method `rule()` adds a horizontal dividing line across the table (actually this is from a few releases ago)\n- `row()` has arguments to override the fgcolor, bgcolor and style of all columns in the row, useful for highlighting a row.\n\n0.9.10:\n\n- fix problems due to changes with [`colored`](https://pypi.org/project/colored) 2.x\n  \n0.9.5:\n\n- methods to format table as MarkDown or LaTeX\n- work with Python 3.4\n\n0.9.3:\n\n- create matrices as well as tables\n- option to suppress color output\n\n# Tables\n\nPainless creation of nice-looking tables of data for Python.\n\n![colored table](https://github.com/petercorke/ansitable/raw/master/figs/colortable.png) \n\n## Starting simple\n\n```python\n 1 | from ansitable import ANSITable, Column\n 2 |\n 3 | table = ANSITable(\"col1\", \"column 2 has a big header\", \"column 3\")\n 4 | table.row(\"aaaaaaaaa\", 2.2, 3)\n 5 | table.row(\"bbbbbbbbbbbbb\", 5.5, 6)\n 6 | table.row(\"ccccccc\", 8.8, 9)\n 7 | table.print()\n\n```\nLine 3 constructs an `ANSITable` object and the arguments are a sequence of \ncolumn names followed by `ANSITable` keyword arguments - there are none in this first example.  Since there are three column names this this will be \na 3-column table.\nLines 4-6 add rows, 3 data values for each row.\n\nLine 7 prints the table and yields a tabular display\nwith column widths automatically chosen, and headings and column \ndata all right-justified (default)\n\n```\n         col1  column 2 has a big header  column 3  \n    aaaaaaaaa                        2.2         3  \nbbbbbbbbbbbbb                        5.5         6  \n      ccccccc                        8.8         9  \n```\n\nBy default output is printed to the console (`stdout`) but we can also:\n\n- provide a `file` option to `.print()` to allow writing to a specified output stream, the\ndefault is `stdout`.\n- obtain a multi-line string version of the entire table as `str(table)`.\n\nThe more general solution is to provide a sequence of `Column` objects which \nallows many column specific options to be given, as we shall see later. \nFor now though, we could rewrite the example above as:\n\n```python\ntable = ANSITable(\n        Column(\"col1\"),\n        Column(\"column 2 has a big header\"),\n        Column(\"column 3\")\n    )\n```\n\nor as\n\n```python\ntable = ANSITable()\ntable.addcolumn(\"col1\")\ntable.addcolumn(\"column 2 has a big header\")\ntable.addcolumn(\"column 3\")\n```\nwhere the keyword arguments to `.addcolumn()` are the same as those for\n`Column` and are given below.\n\n***\nWe can specify a [Python `format()` style format string](https://docs.python.org/3/library/string.html#formatspec) for any column - by default it\nis the general formatting option `\"{}\"`.\nYou may choose to left or right justify values via the format string, `ansitable` provides control over how those resulting strings are justified within the column.\n\n```python\ntable = ANSITable(\n        Column(\"col1\"),\n        Column(\"column 2 has a big header\", \"{:.3g}\"),  # CHANGE\n        Column(\"column 3\", \"{:-10.4f}\")\n    )\ntable.row(\"aaaaaaaaa\", 2.2, 3)\ntable.row(\"bbbbbbbbbbbbb\", 5.5, 6)\ntable.row(\"ccccccc\", 8.8, 9)\ntable.print()\n```\nwhich yields\n\n```\n         col1  column 2 has a big header    column 3  \n    aaaaaaaaa                        2.2      3.0000  \nbbbbbbbbbbbbb                        5.5      6.0000  \n      ccccccc                        8.8      9.0000  \n      \n```\nAlternatively we can specify the format argument as a function that converts\nthe value to a string.\n\n\n***\nThe data in column 1 is quite long, we might wish to set a maximum column width which\nwe can do using the `width` argument\n\n```python\ntable = ANSITable(\n        Column(\"col1\", width=10),                      # CHANGE\n        Column(\"column 2 has a big header\", \"{:.3g}\"),\n        Column(\"column 3\", \"{:-10.4f}\")\n    )\ntable.row(\"aaaaaaaaa\", 2.2, 3)\ntable.row(\"bbbbbbbbbbbbb\", 5.5, 6)\ntable.row(\"ccccccc\", 8.8, 9)\ntable.print()\n```\nwhich yields\n\n\n```\n      col1  column 2 has a big header    column 3  \n aaaaaaaaa                        2.2      3.0000  \nbbbbbbbbb…                        5.5      6.0000  \n   ccccccc                        8.8      9.0000  \n\n```\nwhere we see that the data in column 1 has been truncated.\n\nIf you don't like the ellipsis you can turn it off, and get to see one more\ncharacter, with the `ANSITable` option `ellipsis=False`.  The Unicode ellipsis\ncharacter u+2026 is used.\n\n## Borders\nWe can add a table border made up of regular ASCII characters\n\n```python\ntable = ANSITable(\n        Column(\"col1\"),\n        Column(\"column 2 has a big header\"),\n        Column(\"column 3\"),\n        border=\"ascii\"                          # CHANGE\n    )\ntable.row(\"aaaaaaaaa\", 2.2, 3)\ntable.row(\"bbbbbbbbbbbbb\", 5.5, 6)\ntable.row(\"ccccccc\", 8.8, 9)\ntable.print()\n```\nwhich yields\n\n```\n+--------------+---------------------------+----------+\n|         col1 | column 2 has a big header | column 3 |\n+--------------+---------------------------+----------+\n|    aaaaaaaaa |                       2.2 |        3 |\n|bbbbbbbbbbbbb |                       5.5 |        6 |\n|      ccccccc |                       8.8 |        9 |\n+--------------+---------------------------+----------+\n```\n***\nOr we can construct a border using the [ANSI box-drawing characters](https://en.wikipedia.org/wiki/Box-drawing_character) which are supported by most terminal\nemulators\n\n```python\ntable = ANSITable(\n        Column(\"col1\"),\n        Column(\"column 2 has a big header\"),\n        Column(\"column 3\"),\n        border=\"thick\"                           # CHANGE\n    )\ntable.row(\"aaaaaaaaa\", 2.2, 3)\ntable.row(\"bbbbbbbbbbbbb\", 5.5, 6)\ntable.row(\"ccccccc\", 8.8, 9)\ntable.print()\n```\nwhich yields\n\n```\n┏━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓\n┃         col1 ┃ column 2 has a big header ┃ column 3 ┃\n┣━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━┫\n┃    aaaaaaaaa ┃                       2.2 ┃        3 ┃\n┃bbbbbbbbbbbbb ┃                       5.5 ┃        6 ┃\n┃      ccccccc ┃                       8.8 ┃        9 ┃\n┗━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━┛\n```\n_Note: this actually looks better on the console than it does in GitHub markdown._\n\nOther border options include \"thin\", \"rounded\" (thin with round corners) and \"double\".\n\n## Header and column alignment\nWe can change the alignment of data and heading for any column with the alignment flags `\"<\"` (left), \n`\">\"` (right) and `\"^\"` (centered).\n\n```python\ntable = ANSITable(\n        Column(\"col1\"),\n        Column(\"column 2 has a big header\", colalign=\"^\"),  # CHANGE\n        Column(\"column 3\"),\n        border=\"thick\"\n    )\ntable.row(\"aaaaaaaaa\", 2.2, 3)\ntable.row(\"bbbbbbbbbbbbb\", 5.5, 6)\ntable.row(\"ccccccc\", 8.8, 9)\ntable.print()\n```\nwhich yields\n\n\n```\n┏━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓\n┃         col1 ┃ column 2 has a big header ┃ column 3 ┃\n┣━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━┫\n┃    aaaaaaaaa ┃            2.2            ┃        3 ┃\n┃bbbbbbbbbbbbb ┃            5.5            ┃        6 ┃\n┃      ccccccc ┃            8.8            ┃        9 ┃\n┗━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━┛\n```\nwhere the data for column 2 has been centered.\n***\nHeading and data alignment for any column can be set independently\n\n```python\ntable = ANSITable(\n        Column(\"col1\", headalign=\"<\"),                      # CHANGE\n        Column(\"column 2 has a big header\", colalign=\"^\"),\n        Column(\"column 3\", colalign=\"<\"),                   # CHANGE\n        border=\"thick\"\n    )\ntable.row(\"aaaaaaaaa\", 2.2, 3)\ntable.row(\"bbbbbbbbbbbbb\", -5.5, 6)\ntable.row(\"ccccccc\", 8.8, -9)\ntable.print()\n```\nyields\n\n```\n┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓\n┃          col1 ┃ column 2 has a big header ┃ column 3 ┃\n┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━┫\n┃     aaaaaaaaa ┃                       2.2 ┃        3 ┃\n┃ bbbbbbbbbbbbb ┃                      -5.5 ┃        6 ┃\n┃       ccccccc ┃                       8.8 ┃       -9 ┃\n┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━┛\n```\nwhere we have left-justified the heading for column 1 and the data for column 3.\n\nWe can easily add a dividing line\n```python\ntable = ANSITable(\n        Column(\"col1\", headalign=\"<\"),\n        Column(\"column 2 has a big header\", colalign=\"^\"),\n        Column(\"column 3\", colalign=\"<\"),\n        border=\"thick\"\n    )\ntable.row(\"aaaaaaaaa\", 2.2, 3)\ntable.row(\"bbbbbbbbbbbbb\", -5.5, 6)\ntable.rule()                                                # CHANGE\ntable.row(\"ccccccc\", 8.8, -9)\ntable.print()\n```\nyields\n\n```\n┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓\n┃          col1 ┃ column 2 has a big header ┃ column 3 ┃\n┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━┫\n┃     aaaaaaaaa ┃                       2.2 ┃        3 ┃\n┃ bbbbbbbbbbbbb ┃                      -5.5 ┃        6 ┃\n┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━┫\n┃       ccccccc ┃                       8.8 ┃       -9 ┃\n┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━┛\n```\n\n\n## Color\nIf you have the `colored` package installed then you can set the foreground and\nbackground color and style (bold, reverse, underlined, dim) of the header and column data, as well as the border color.\n\n```python\ntable = ANSITable(\n    Column(\"col1\", headalign=\"<\", colcolor=\"red\", headstyle=\"underlined\"),      # CHANGE\n    Column(\"column 2 has a big header\", colalign=\"^\", colstyle=\"reverse\"),      # CHANGE\n    Column(\"column 3\", colalign=\"<\", colbgcolor=\"green\"),                       # CHANGE\n    border=\"thick\", bordercolor=\"blue\"                                          # CHANGE\n)\n   table = ANSITable(\n        Column(\"col1\", headalign=\"^\", colcolor=\"red\", headstyle=\"underlined\"),  # CHANGE\n        Column(\"column 2 has a big header\", colalign=\"^\"),                      # CHANGE\n        Column(\"column 3\", colalign=\"<\", colbgcolor=\"green\", fmt=\"{: d}\"),      # CHANGE\n        border=\"thick\",\n        bordercolor=\"blue\",\n        colsep=2,\n    )\n    table.row(\"aaaaaaaaa\", 2.2, 3)\n    table.row(\"bbbbbbbbbbbbb\", -5.5, 6, bgcolor=\"yellow\")                        # CHANGE\n    table.row(\"ccccccc\", 8.8, -9)\n    table.print()\n```\n\nwhich yields\n\n![colored table](https://github.com/petercorke/ansitable/raw/master/figs/colortable.png) \n\nIt is possible the change the color of a single row of the table by\n\n```python\ntable.row(\"aaaaaaaaa\", 2.2, 3)\ntable.row(\"bbbbbbbbbbbbb\", 5.5, 6, bgcolor=\"red\")\ntable.row(\"ccccccc\", 8.8, 9)\n```\n\nwhich yields\n\n![colored table](https://github.com/petercorke/ansitable/raw/master/figs/colortable2.png) \n\nIt is also possible to change the color of individual cells in the table\nby prefixing the value with a color enclosed in double angle brackets, for example `<<red>>`.\n\n```python\ntable = ANSITable(\"col1\", \"column 2 has a big header\", \"column 3\")\n    table.row(\"aaaaaaaaa\", 2.2, 3)\n    table.row(\"<<red>>bbbbbbbbbbbbb\", 5.5, 6)\n    table.row(\"<<blue>>ccccccc\", 8.8, 9)\n    table.print()\n```\n\n## All options\n\n### ANSITable\nThese keyword arguments control the styling of the entire table.\n\n| Keyword  | Default | Purpose |\n|----      |----     |----    |\ncolsep | 2 | Gap between columns (in spaces)\noffset | 0 | Gap at start of each row, shifts the table to the left\nborder | no border  | Border style: 'ascii', 'thin', 'thick', 'double'\nbordercolor | |Border color, see [possible values](https://pypi.org/project/colored)\nellipsis | True | Add an ellipsis if a wide column is truncated\nheader | True | Include the column header row\ncolumns | | Specify the number of columns if `header=False` and no header name or `Column` arguments are given\ncolor | True | Enable color \n\n- Color is only possible if the `colored` package is installed\n- If `color` is False then no color escape sequences will be emitted, useful \n  override for tables included in Sphinx documentation.\n\n### Column\nThese keyword arguments control the styling of a single column.\n\n| Keyword  | Default | Purpose |\n|----      |----     |----    |\nfmt | `\"{}\"` | format string for the column value, or a callable that maps the column value to a string\nwidth || maximum column width, excess will be truncated\ncolcolor || Text color, see [possible values](https://pypi.org/project/colored)\ncolbgcolor || Text background color, see [possible values](https://pypi.org/project/colored)\ncolstyle  || Text style: \"bold\", \"underlined\", \"reverse\", \"dim\", \"blink\"\ncolalign | `\">\"` | Text alignment: `\">\"` (left), `\"<\"` (right), `\"^\"` (centered)\nheadcolor || Heading text color, see [possible values](https://pypi.org/project/colored)\nheadbgcolor || Heading text background color, see [possible values](https://pypi.org/project/colored)\nheadstyle || Heading text style: \"bold\", \"underlined\", \"reverse\", \"dim\", \"blink\"\nheadalign | `\">\"` | Heading text alignment: `\">\"` (left), `\"<\"` (right), `\"^\"` (centered)\n\nNote that many terminal emulators do not support the \"blink\" style.\n\n### Row\nThese keyword arguments control the styling of a single row.\n\n| Keyword  | Default | Purpose |\n|----      |----     |----    |\nfgcolor || Text color, see [possible values](https://pypi.org/project/colored)\nbgcolor || Text background color, see [possible values](https://pypi.org/project/colored)\nstyle  || Text style: \"bold\", \"underlined\", \"reverse\", \"dim\", \"blink\"\n\n# Output in other tabular formats\n\nThe main use for this package is to generate tables on the console that are easy to read, but\nsometimes you might want the table in a different format to include in\ndocumentation.\n\n```python\ntable = ANSITable(\"col1\", \"column 2 has a big header\", \"column 3\")\ntable.row(\"aaaaaaaaa\", 2.2, 3)\ntable.row(\"bbbbbbbbbbbbb\", -5.5, 6)\ntable.row(\"ccccccc\", 8.8, -9)\ntable.print()\n```\n\ncan be rendered into Markdown\n\n```\ntable.markdown()\n\n|          col1 | column 2 has a big header | column 3 |\n| ------------: | ------------------------: | -------: |\n|     aaaaaaaaa |                       2.2 |        3 |\n| bbbbbbbbbbbbb |                      -5.5 |        6 |\n|       ccccccc |                       8.8 |       -9 |\n```\nor LaTex\n\n```\ntable.latex()\n\n\\begin{tabular}{ |r|r|r| }\\hline\n\\multicolumn{1}{|r|}{col1} & \\multicolumn{1}{|r|}{column 2 has a big header} & \\multicolumn{1}{|r|}{column 3}\\\\\\hline\\hline\naaaaaaaaa & 2.2 & 3 \\\\\nbbbbbbbbbbbbb & -5.5 & 6 \\\\\nccccccc & 8.8 & -9 \\\\\n\\hline\n\\end{tabular}\n```\n\nIn both cases the method returns a string and column alignment is supported.\nMarkDown doesn't allow the header to have different alignment to the data.\n\n\n# Matrices\n\nPainless creation of nice-looking matrices for Python.\n\n\nWe can create a formatter for NumPy arrays (1D or 2D)\n\n```python\nfrom ansitable import ANSIMatrix\nformatter = ANSIMatrix(style='thick')\n```\n\nand then use it to format a NumPy array\n\n```python\nm = np.random.rand(4,4) - 0.5\nm[0,0] = 1.23456e-14\nformatter.print(m)\n```\n\nyields\n\n```\n┏                                           ┓\n┃ 0         -0.385     -0.106      0.296    ┃\n┃ 0.0432     0.339      0.119     -0.468    ┃\n┃ 0.405     -0.306      0.0165    -0.439    ┃\n┃ 0.203      0.4       -0.499     -0.487    ┃\n┗                                           ┛\n```\n\nwe can also add suffixes\n\n\n```python\nformatter.print(m, suffix_super='T', suffix_sub='3')\n```\n\nyields\n\n```\n┏                                           ┓T\n┃ 0         -0.239      0.186     -0.414    ┃\n┃ 0.49       0.215     -0.0148     0.0529   ┃\n┃ 0.0473     0.0311     0.45       0.394    ┃\n┃-0.192      0.193     -0.455      0.0302   ┃\n┗                                           ┛3\n```\n\nBy default output is printed to the console (stdout) but we can also:\n\n* provide a `file` option to `.print()` to allow writing to a specified output stream, the default is `stdout`.\n* obtain a multi-line string version of the entire table using the `.str()` method\ninstead of `.print()`.\n\nThe formatter takes additional arguments to control the numeric format and to \ncontrol the suppression of very small values.\n\n### ANSIMatrix\nThese keyword arguments control the overall styling and operation of the formatter.\n\n| Keyword  | Default | Purpose |\n|----      |----     |----    |\nstyle | `\"thin\"` | `\"thin\"`, `\"round\"`, `\"thick\"`, `\"double\"`\nfmt | `\"{:< 10.3g}\"` | format for each element\nsquish | True | set small elements to zero\nsquishtol | 100 | elements less than `squishtol * eps` are set to zero\n\n### Formatter\nA formatter takes additional arguments to the styling for a particular call.\n\n| Keyword  | Default | Purpose |\n|----      |----     |----    |\nsuffix_super | `\"\"` | superscript suffix text\nsuffix_sub | `\"\"` | subscript suffix text\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"table, table layout, table format, tabular, tabular layout, tabular format, ANSI, ANSI art, ANSI box characters, color, ANSI color, matrix format","license":null,"maintainer":null,"maintainer_email":null,"name":"ansitable","package_url":"https://pypi.org/project/ansitable/","platform":null,"project_url":"https://pypi.org/project/ansitable/","project_urls":{"Bug Tracker":"https://github.com/petercorke/ansitable/issues","Documentation":"https://github.com/petercorke/ansitable","Homepage":"https://github.com/petercorke/ansitable","Source":"https://github.com/petercorke/ansitable"},"provides_extra":null,"release_url":"https://pypi.org/project/ansitable/0.10.0/","requires_dist":["colored"],"requires_python":">=3.7","summary":"Quick and easy display of tabular data and matrices with optional ANSI color and borders","version":"0.10.0","yanked":false,"yanked_reason":null},"last_serial":23302484,"releases":{"0.10.0":[{"comment_text":"","digests":{"blake2b_256":"917eb59b9d822c70f4e64d5ef5e94ca0e0e4656bf8195a0a2fc5ff8c25dec51d","md5":"60068fd5497ec301a0a2060f513be252","sha256":"6a6b4ab12150ac2be1c2ee00a44a6525bad01a8cde84ec1b4bb462ddcc83e9b2"},"downloads":-1,"filename":"ansitable-0.10.0-py3-none-any.whl","has_sig":false,"md5_digest":"60068fd5497ec301a0a2060f513be252","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":14538,"upload_time":"2024-05-21T07:27:25","upload_time_iso_8601":"2024-05-21T07:27:25.014463Z","url":"https://files.pythonhosted.org/packages/91/7e/b59b9d822c70f4e64d5ef5e94ca0e0e4656bf8195a0a2fc5ff8c25dec51d/ansitable-0.10.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dfb655d2d99785caee2252f52cf329f03f0527dc1c116b3bb8057bc96e5a66e0","md5":"cb1e6f06b2acce2270296be5d3d3e7f0","sha256":"7a13cfa59f42fcdae5cbd5a82497d9b6fd987d9f4c11c42c2adbb13697097bb5"},"downloads":-1,"filename":"ansitable-0.10.0.tar.gz","has_sig":false,"md5_digest":"cb1e6f06b2acce2270296be5d3d3e7f0","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":19611,"upload_time":"2024-05-21T07:27:28","upload_time_iso_8601":"2024-05-21T07:27:28.211963Z","url":"https://files.pythonhosted.org/packages/df/b6/55d2d99785caee2252f52cf329f03f0527dc1c116b3bb8057bc96e5a66e0/ansitable-0.10.0.tar.gz","yanked":false,"yanked_reason":null}],"0.5":[{"comment_text":"","digests":{"blake2b_256":"ec624b38dab00994b8811de419d5fdabf6342d1f4141e0c88b83383fb9c14c29","md5":"9a93a93076c2712502f9009b532334a7","sha256":"4fe1a3bfae2a2fc6ca9c0a6a3fbd11dc0f2f04048301011bcd3acc570f8da342"},"downloads":-1,"filename":"ansitable-0.5.tar.gz","has_sig":false,"md5_digest":"9a93a93076c2712502f9009b532334a7","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":10274,"upload_time":"2020-09-26T22:54:41","upload_time_iso_8601":"2020-09-26T22:54:41.142473Z","url":"https://files.pythonhosted.org/packages/ec/62/4b38dab00994b8811de419d5fdabf6342d1f4141e0c88b83383fb9c14c29/ansitable-0.5.tar.gz","yanked":false,"yanked_reason":null}],"0.8":[{"comment_text":"","digests":{"blake2b_256":"fb8eb918ba4b869e9c0644a6f7b7ef5bb6e522eec474185c48603e3169c8bac2","md5":"7d6add1b11c26a549a3f6b524481d761","sha256":"76d2f47a9ad0af7df996599e3184364e57c34df9548b2dfcf8bcfc3b7626b114"},"downloads":-1,"filename":"ansitable-0.8.tar.gz","has_sig":false,"md5_digest":"7d6add1b11c26a549a3f6b524481d761","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":9060,"upload_time":"2020-09-28T21:04:16","upload_time_iso_8601":"2020-09-28T21:04:16.939193Z","url":"https://files.pythonhosted.org/packages/fb/8e/b918ba4b869e9c0644a6f7b7ef5bb6e522eec474185c48603e3169c8bac2/ansitable-0.8.tar.gz","yanked":false,"yanked_reason":null}],"0.8.1":[{"comment_text":"","digests":{"blake2b_256":"bc66df774337533814847aaa1b72e478da8912e566f33bae4240cbfd6fa810eb","md5":"b7a2bd8a07fd808d9820392ce2050364","sha256":"8ae3fdc8f14fd0e248e0edf3d05f46d8deadff2005f2c1179581fe837bd8c0eb"},"downloads":-1,"filename":"ansitable-0.8.1.tar.gz","has_sig":false,"md5_digest":"b7a2bd8a07fd808d9820392ce2050364","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":9110,"upload_time":"2020-09-28T23:17:07","upload_time_iso_8601":"2020-09-28T23:17:07.938686Z","url":"https://files.pythonhosted.org/packages/bc/66/df774337533814847aaa1b72e478da8912e566f33bae4240cbfd6fa810eb/ansitable-0.8.1.tar.gz","yanked":false,"yanked_reason":null}],"0.8.2":[{"comment_text":"","digests":{"blake2b_256":"2d9518e83c03c74a8f6d54992f799a49d5b94908ab861c859813d3b43c379126","md5":"5a9d6c47ba38379f64fffac162006149","sha256":"30bb5105a919eb0511fd176c242fdd75c89fe50d1819eed7977677029a37491d"},"downloads":-1,"filename":"ansitable-0.8.2.tar.gz","has_sig":false,"md5_digest":"5a9d6c47ba38379f64fffac162006149","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":9112,"upload_time":"2020-09-29T01:35:59","upload_time_iso_8601":"2020-09-29T01:35:59.006819Z","url":"https://files.pythonhosted.org/packages/2d/95/18e83c03c74a8f6d54992f799a49d5b94908ab861c859813d3b43c379126/ansitable-0.8.2.tar.gz","yanked":false,"yanked_reason":null}],"0.9":[{"comment_text":"","digests":{"blake2b_256":"122ea14d94b2c22eb85e9bc3871cab2538ac6dd417dd77de453f11ab890caa4e","md5":"e99b27816ab12d753bcba2200be17c7c","sha256":"da79ee6b42e72ea418aabf1465b8e76e33bf37e7877000a0b676f29574054803"},"downloads":-1,"filename":"ansitable-0.9.tar.gz","has_sig":false,"md5_digest":"e99b27816ab12d753bcba2200be17c7c","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":9726,"upload_time":"2020-10-03T22:12:53","upload_time_iso_8601":"2020-10-03T22:12:53.106561Z","url":"https://files.pythonhosted.org/packages/12/2e/a14d94b2c22eb85e9bc3871cab2538ac6dd417dd77de453f11ab890caa4e/ansitable-0.9.tar.gz","yanked":false,"yanked_reason":null}],"0.9.1":[{"comment_text":"","digests":{"blake2b_256":"3e1f6445b8342d0b6c17ec2e7b51adf0b1bb7d79e61f34271c348398cc60aa57","md5":"eebbeeaa576f67c648b9f75b18b018f4","sha256":"46560c5ef47ad57c70765f70b717e090c544a0298ba999df9dab0bbe0f15afda"},"downloads":-1,"filename":"ansitable-0.9.1.tar.gz","has_sig":false,"md5_digest":"eebbeeaa576f67c648b9f75b18b018f4","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":10965,"upload_time":"2020-10-11T06:12:18","upload_time_iso_8601":"2020-10-11T06:12:18.786294Z","url":"https://files.pythonhosted.org/packages/3e/1f/6445b8342d0b6c17ec2e7b51adf0b1bb7d79e61f34271c348398cc60aa57/ansitable-0.9.1.tar.gz","yanked":false,"yanked_reason":null}],"0.9.10":[{"comment_text":"","digests":{"blake2b_256":"b8df72d9d030350aef8b0a6a06422b8e97139e1d5707b3feb55823914190b43d","md5":"7fce48b955fe71fc1f63b4304101cf47","sha256":"db3aba6b5767a967e64324bd82641d1ce836465ed71a77d7b46610dc8c897b19"},"downloads":-1,"filename":"ansitable-0.9.10-py3-none-any.whl","has_sig":false,"md5_digest":"7fce48b955fe71fc1f63b4304101cf47","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":12988,"upload_time":"2023-11-13T01:36:57","upload_time_iso_8601":"2023-11-13T01:36:57.410420Z","url":"https://files.pythonhosted.org/packages/b8/df/72d9d030350aef8b0a6a06422b8e97139e1d5707b3feb55823914190b43d/ansitable-0.9.10-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5b73fbb3e0903641c9122cca2a0069a58fbecd0be11f1041fd3f03c1196ddd9e","md5":"19606a0766cf74e5b551182fe3e2b346","sha256":"7cb55000c0bbb5a9157b5d28482f265f3047f9fce8788447277eab2ce97e8b46"},"downloads":-1,"filename":"ansitable-0.9.10.tar.gz","has_sig":false,"md5_digest":"19606a0766cf74e5b551182fe3e2b346","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":17466,"upload_time":"2023-11-13T01:36:59","upload_time_iso_8601":"2023-11-13T01:36:59.391670Z","url":"https://files.pythonhosted.org/packages/5b/73/fbb3e0903641c9122cca2a0069a58fbecd0be11f1041fd3f03c1196ddd9e/ansitable-0.9.10.tar.gz","yanked":false,"yanked_reason":null}],"0.9.2":[{"comment_text":"","digests":{"blake2b_256":"309bc3956c2592302f2f93edc53c84d36c06776cbc5f2edf4e36e0c6eb953e63","md5":"85c1f2844981c6ec0c7367d7c9451f12","sha256":"439ea95dbf35fe5e8c37af7ae9061a95e969ba728ac2d8dc476d6a692b0edd4a"},"downloads":-1,"filename":"ansitable-0.9.2.tar.gz","has_sig":false,"md5_digest":"85c1f2844981c6ec0c7367d7c9451f12","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":11353,"upload_time":"2020-10-11T07:19:33","upload_time_iso_8601":"2020-10-11T07:19:33.547925Z","url":"https://files.pythonhosted.org/packages/30/9b/c3956c2592302f2f93edc53c84d36c06776cbc5f2edf4e36e0c6eb953e63/ansitable-0.9.2.tar.gz","yanked":false,"yanked_reason":null}],"0.9.3":[{"comment_text":"","digests":{"blake2b_256":"bc13446eb981722425e770bea924cd8630b762208272eb2f8a48b3e2b4eba77f","md5":"74416c48bc65abc24b50c3d18e2eb91f","sha256":"63550124078e8ee3d08c4e6831fa6dc41fdea72468ee59593b0f3551e928fd5b"},"downloads":-1,"filename":"ansitable-0.9.3.tar.gz","has_sig":false,"md5_digest":"74416c48bc65abc24b50c3d18e2eb91f","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":13596,"upload_time":"2020-10-28T23:09:06","upload_time_iso_8601":"2020-10-28T23:09:06.740056Z","url":"https://files.pythonhosted.org/packages/bc/13/446eb981722425e770bea924cd8630b762208272eb2f8a48b3e2b4eba77f/ansitable-0.9.3.tar.gz","yanked":false,"yanked_reason":null}],"0.9.4":[{"comment_text":"","digests":{"blake2b_256":"b0b295c93e535d35359abb85dbe01d23bb7020bb255ba96ea272109723eab025","md5":"3cdd920c3ace23076f099e2eb8fbc815","sha256":"e25ac307600199c36ef57ec8c968e2139e337d36ecbc4d908f3fbc695fc9d483"},"downloads":-1,"filename":"ansitable-0.9.4.tar.gz","has_sig":false,"md5_digest":"3cdd920c3ace23076f099e2eb8fbc815","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":13656,"upload_time":"2020-11-18T21:49:32","upload_time_iso_8601":"2020-11-18T21:49:32.746016Z","url":"https://files.pythonhosted.org/packages/b0/b2/95c93e535d35359abb85dbe01d23bb7020bb255ba96ea272109723eab025/ansitable-0.9.4.tar.gz","yanked":false,"yanked_reason":null}],"0.9.5":[{"comment_text":"","digests":{"blake2b_256":"a1c63e0b10ced944057b0150d01d37e768b8fc20590399060a1ceb0277d4d868","md5":"20ae31e2a43ca43e88dca1fabc3ca449","sha256":"58394a26255c5d56b5db103317980cb8766e3e376dea873b2ab94c30e0d28b3c"},"downloads":-1,"filename":"ansitable-0.9.5.tar.gz","has_sig":false,"md5_digest":"20ae31e2a43ca43e88dca1fabc3ca449","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":16751,"upload_time":"2020-12-18T23:22:06","upload_time_iso_8601":"2020-12-18T23:22:06.894607Z","url":"https://files.pythonhosted.org/packages/a1/c6/3e0b10ced944057b0150d01d37e768b8fc20590399060a1ceb0277d4d868/ansitable-0.9.5.tar.gz","yanked":false,"yanked_reason":null}],"0.9.6":[{"comment_text":"","digests":{"blake2b_256":"915760e1fa72f83071caa22743dab38786527ecd861dd980d84051fc975f1ed8","md5":"00bbfb209c6bc97d9a657b92d9efe3e9","sha256":"f15a81c41cd2b1c027640fedbdd5fd7b1ff46d959a06c4cdee825af3818df15e"},"downloads":-1,"filename":"ansitable-0.9.6.tar.gz","has_sig":false,"md5_digest":"00bbfb209c6bc97d9a657b92d9efe3e9","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":17585,"upload_time":"2021-04-23T10:11:02","upload_time_iso_8601":"2021-04-23T10:11:02.796987Z","url":"https://files.pythonhosted.org/packages/91/57/60e1fa72f83071caa22743dab38786527ecd861dd980d84051fc975f1ed8/ansitable-0.9.6.tar.gz","yanked":false,"yanked_reason":null}],"0.9.7":[{"comment_text":"","digests":{"blake2b_256":"9a7b7ad7b730d8bc5d7a334f3618a441d822f21b8de833a0c73fddd6a9545bb7","md5":"29949dae46c7d6de16730af63595316d","sha256":"6689708b537346dec55a7c908763e8f48b64b72e065c2cf8426100762c7d45f3"},"downloads":-1,"filename":"ansitable-0.9.7-py3-none-any.whl","has_sig":false,"md5_digest":"29949dae46c7d6de16730af63595316d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.4","size":14273,"upload_time":"2022-10-06T23:46:34","upload_time_iso_8601":"2022-10-06T23:46:34.625243Z","url":"https://files.pythonhosted.org/packages/9a/7b/7ad7b730d8bc5d7a334f3618a441d822f21b8de833a0c73fddd6a9545bb7/ansitable-0.9.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a8f3f9663221828088e39e1f410a9d87951ed376000a7b4644e3c61b5b0d8ae0","md5":"90f0204b32ff4beb658df75d6d6247a4","sha256":"dc9fc1c926b5db8e4cf9ddf48facd9550292af7ef60ff57aa26cc382505d74a5"},"downloads":-1,"filename":"ansitable-0.9.7.tar.gz","has_sig":false,"md5_digest":"90f0204b32ff4beb658df75d6d6247a4","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":17913,"upload_time":"2022-10-06T23:46:37","upload_time_iso_8601":"2022-10-06T23:46:37.001711Z","url":"https://files.pythonhosted.org/packages/a8/f3/f9663221828088e39e1f410a9d87951ed376000a7b4644e3c61b5b0d8ae0/ansitable-0.9.7.tar.gz","yanked":false,"yanked_reason":null}],"0.9.9":[{"comment_text":"","digests":{"blake2b_256":"03fe61659254bd1834a393199bc5c188273d22166b2fef1c447c474fc2dd203f","md5":"9bd907c95a7d0e6ac5d5174c9895332d","sha256":"20e1bb905b27c385d3149829b8325d2236868c0bba8b01672c4d8e815796e9b2"},"downloads":-1,"filename":"ansitable-0.9.9-py3-none-any.whl","has_sig":false,"md5_digest":"9bd907c95a7d0e6ac5d5174c9895332d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":13725,"upload_time":"2023-10-19T01:41:00","upload_time_iso_8601":"2023-10-19T01:41:00.078796Z","url":"https://files.pythonhosted.org/packages/03/fe/61659254bd1834a393199bc5c188273d22166b2fef1c447c474fc2dd203f/ansitable-0.9.9-py3-none-any.whl","yanked":true,"yanked_reason":"bad build"},{"comment_text":"","digests":{"blake2b_256":"e512c4600ba3be721b2de4e0f644e5cc08fc0ccc7381b897840dd6f8481f0219","md5":"05cc746779097e3435a99a6b50f53f38","sha256":"2d424d52725d082bd72a4f4706718db0b81f4805d85279b4e133884e97605767"},"downloads":-1,"filename":"ansitable-0.9.9.tar.gz","has_sig":false,"md5_digest":"05cc746779097e3435a99a6b50f53f38","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":18225,"upload_time":"2023-10-19T01:41:01","upload_time_iso_8601":"2023-10-19T01:41:01.966556Z","url":"https://files.pythonhosted.org/packages/e5/12/c4600ba3be721b2de4e0f644e5cc08fc0ccc7381b897840dd6f8481f0219/ansitable-0.9.9.tar.gz","yanked":true,"yanked_reason":"bad build"}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"917eb59b9d822c70f4e64d5ef5e94ca0e0e4656bf8195a0a2fc5ff8c25dec51d","md5":"60068fd5497ec301a0a2060f513be252","sha256":"6a6b4ab12150ac2be1c2ee00a44a6525bad01a8cde84ec1b4bb462ddcc83e9b2"},"downloads":-1,"filename":"ansitable-0.10.0-py3-none-any.whl","has_sig":false,"md5_digest":"60068fd5497ec301a0a2060f513be252","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":14538,"upload_time":"2024-05-21T07:27:25","upload_time_iso_8601":"2024-05-21T07:27:25.014463Z","url":"https://files.pythonhosted.org/packages/91/7e/b59b9d822c70f4e64d5ef5e94ca0e0e4656bf8195a0a2fc5ff8c25dec51d/ansitable-0.10.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dfb655d2d99785caee2252f52cf329f03f0527dc1c116b3bb8057bc96e5a66e0","md5":"cb1e6f06b2acce2270296be5d3d3e7f0","sha256":"7a13cfa59f42fcdae5cbd5a82497d9b6fd987d9f4c11c42c2adbb13697097bb5"},"downloads":-1,"filename":"ansitable-0.10.0.tar.gz","has_sig":false,"md5_digest":"cb1e6f06b2acce2270296be5d3d3e7f0","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":19611,"upload_time":"2024-05-21T07:27:28","upload_time_iso_8601":"2024-05-21T07:27:28.211963Z","url":"https://files.pythonhosted.org/packages/df/b6/55d2d99785caee2252f52cf329f03f0527dc1c116b3bb8057bc96e5a66e0/ansitable-0.10.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
