{"info":{"author":"Cameron Simpson","author_email":"Cameron Simpson <cs@cskk.id.au>","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Topic :: Software Development :: Libraries :: Python Modules"],"description":"Facilities for mappings and objects associated with mappings.\n\n*Latest release 20231129*:\nAttrableMappingMixin: look up ATTRABLE_MAPPING_DEFAULT on the class, not the instance.\n\nIn particular `named_column_tuple(column_names)`,\na function returning a factory\nfor namedtuples subclasses derived from the supplied column names,\nand `named_column_tuples(rows)`,\na function returning a namedtuple factory and an iterable of instances\ncontaining the row data.\nThese are used by the `csv_import` and `xl_import` functions\nfrom `cs.csvutils`.\n\n## Function `attrable(o)`\n\nLike `jsonable`, return `o` with `dicts` replaced by `AttrableMapping`s.\n\n## Class `AttrableMapping(builtins.dict, AttrableMappingMixin)`\n\nA `dict` subclass using `AttrableMappingMixin`.\n\n## Class `AttrableMappingMixin`\n\nProvides a `__getattr__` which accesses the mapping value.\n\n## Class `AttributableList(builtins.list)`\n\nAn `AttributableList` maps unimplemented attributes\nonto the list members and returns you a new `AttributableList`\nwith the results, ready for a further dereference.\n\nExample:\n\n    >>> class C(object):\n    ...   def __init__(self, i):\n    ...     self.i = i\n    >>> Cs = [ C(1), C(2), C(3) ]\n    >>> AL = AttributableList( Cs )\n    >>> print(AL.i)\n    [1, 2, 3]\n\n*Method `AttributableList.__init__(self, initlist=None, strict=False)`*:\nInitialise the list.\n\nThe optional parameter `initlist` initialises the list\nas for a normal list.\n\nThe optional parameter `strict`, if true, causes list elements\nlacking the attribute to raise an AttributeError. If false,\nlist elements without the attribute are omitted from the results.\n\n## Function `column_name_to_identifier(column_name, snake_case=False)`\n\nThe default function used to convert raw column names in\n`named_row_tuple`, for example from a CSV file, into Python\nindentifiers.\n\nIf `snake_case` is true (default `False`) produce snake cased\nidentifiers instead of merely lowercased identifiers.\nThis means that something like 'redLines' will become `red_lines`\ninstead of `redlines`.\n\n## Function `dicts_to_namedtuples(dicts, class_name, keys=None)`\n\nScan an iterable of `dict`s,\nyield a sequence of `namedtuple`s derived from them.\n\nParameters:\n* `dicts`: the `dict`s to scan and convert, an iterable\n* `class_name`: the name for the new `namedtuple` class\n* `keys`: optional iterable of `dict` keys of interest;\n  if omitted then the `dicts` are scanned in order to learn the keys\n\nNote that if `keys` is not specified\nthis generator prescans the `dicts` in order to learn their keys.\nAs a consequence, all the `dicts` will be kept in memory\nand no `namedtuple`s will be yielded until after that prescan completes.\n\n## Class `FallbackDict(collections.defaultdict, builtins.dict)`\n\nA dictlike object that inherits from another dictlike object;\nthis is a convenience subclass of `defaultdict`.\n\n## Class `IndexedMapping(IndexedSetMixin)`\n\nInterface to a mapping with `IndexedSetMixin` style `.by_*` attributes.\n\n*Method `IndexedMapping.__init__(self, mapping=None, pk='id')`*:\nInitialise the `IndexedMapping`.\n\nParameters:\n* `mapping`: the mapping to wrap; a new `dict` will be made if not specified\n* `pk`: the primary key of the mapping, default `'id'`\n\n## Class `IndexedSetMixin`\n\nA base mixin to provide `.by_`* attributes\nwhich index records from an autoloaded backing store,\nwhich might be a file or might be another related data structure.\nThe records are themselves key->value mappings, such as `dict`s.\n\nThe primary key name is provided by the `.IndexedSetMixin__pk`\nclass attribute, to be provided by subclasses.\n\nNote that this mixin keeps the entire loadable mapping in memory.\n\nNote that this does not see subsequent changes to loaded records\ni.e. changing the value of some record[k]\ndoes not update the index associated with the .by_k attribute.\n\nSubclasses must provide the following attributes and methods:\n* `IndexedSetMixin__pk`: the name of the primary key;\n  it is an error for multiple records to have the same primary key\n* `scan`: a generator method to scan the backing store\n  and yield records, used for the inital load of the mapping\n* `add_backend(record)`: add a new record to the backing store;\n  this is called from the `.add(record)` method\n  after indexing to persist the record in the backing store\n\nSee `UUIDNDJSONMapping` and `UUIDedDict` for an example subclass\nindexing records from a newline delimited JSON file.\n\n## Class `JSONableMappingMixin`\n\nProvide `.from_json()`, `.as_json()` and `.append_ndjson()` methods,\nand `__str__=as_json` and a `__repr__`.\n\n## Class `MappingChain`\n\nA mapping interface to a sequence of mappings.\n\nIt does not support `__setitem__` at present;\nthat is expected to be managed via the backing mappings.\n\n*Method `MappingChain.__init__(self, mappings=None, get_mappings=None)`*:\nInitialise the MappingChain.\n\nParameters:\n* `mappings`: initial sequence of mappings, default None.\n* `get_mappings`: callable to obtain the initial sequence of\n\nExactly one of `mappings` or `get_mappings` must be provided.\n\n## Class `MethodicalList(AttributableList, builtins.list)`\n\nA MethodicalList subclasses a list and maps unimplemented attributes\ninto a callable which calls the corresponding method on each list members\nand returns you a new `MethodicalList` with the results, ready for a\nfurther dereference.\n\nExample:\n\n    >>> n = 1\n    >>> class C(object):\n    ...   def __init__(self):\n    ...     global n\n    ...     self.n = n\n    ...     n += 1\n    ...   def x(self):\n    ...     return self.n\n    ...\n    >>> Cs=[ C(), C(), C() ]\n    >>> ML = MethodicalList( Cs )\n    >>> print(ML.x())\n    [1, 2, 3]\n\n*Method `MethodicalList.__init__(self, initlist=None, strict=False)`*:\nInitialise the list.\n\nThe optional parameter `initlist` initialises the list\nas for a normal list.\n\nThe optional parameter `strict`, if true, causes list elements\nlacking the attribute to raise an AttributeError. If false,\nlist elements without the attribute are omitted from the results.\n\n## Function `named_column_tuples(rows, class_name=None, column_names=None, computed=None, preprocess=None, mixin=None, snake_case=False)`\n\nProcess an iterable of data rows, usually with the first row being\ncolumn names.\nReturn a generated `namedtuple` factory (the row class)\nand an iterable of instances of the namedtuples for each row.\n\nParameters:\n* `rows`: an iterable of rows, each an iterable of data values.\n* `class_name`: option class name for the namedtuple class\n* `column_names`: optional iterable of column names used as the basis for\n  the namedtuple. If this is not provided then the first row from\n  `rows` is taken to be the column names.\n* `computed`: optional mapping of str to functions of `self`\n* `preprocess`: optional callable to modify CSV rows before\n  they are converted into the namedtuple.  It receives a context\n  object an the data row.\n  It should return the row (possibly modified), or `None` to drop the\n  row.\n* `mixin`: an optional mixin class for the generated `namedtuple` subclass\n  to provide extra methods or properties\n\nThe context object passed to `preprocess` has the following attributes:\n* `.cls`: the generated namedtuple subclass;\n  this is useful for obtaining things like the column names\n  or column indices;\n  this is `None` when preprocessing the header row, if any\n* `.index`: attribute with the row's enumeration, which counts from `0`\n* `.previous`: the previously accepted row's `namedtuple`,\n  or `None` if there is no previous row;\n  this is useful for differencing\n\nRows may be flat iterables in the same order as the column names\nor mappings keyed on the column names.\n\nIf the column names contain empty strings they are dropped\nand the corresponding data row entries are also dropped. This\nis very common with spreadsheet exports with unused padding\ncolumns.\n\nTypical human readable column headings, also common in\nspeadsheet exports, are lowercased and have runs of whitespace\nor punctuation turned into single underscores; trailing\nunderscores then get dropped.\n\nBasic example:\n\n    >>> data1 = [\n    ...   ('a', 'b', 'c'),\n    ...   (1, 11, \"one\"),\n    ...   (2, 22, \"two\"),\n    ... ]\n    >>> rowtype, rows = named_column_tuples(data1)\n    >>> print(list(rows))\n    [NamedRow(a=1, b=11, c='one'), NamedRow(a=2, b=22, c='two')]\n\nHuman readable column headings:\n\n    >>> data1 = [\n    ...   ('Index', 'Value Found', 'Descriptive Text'),\n    ...   (1, 11, \"one\"),\n    ...   (2, 22, \"two\"),\n    ... ]\n    >>> rowtype, rows = named_column_tuples(data1)\n    >>> print(list(rows))\n    [NamedRow(index=1, value_found=11, descriptive_text='one'), NamedRow(index=2, value_found=22, descriptive_text='two')]\n\nRows which are mappings:\n\n    >>> data1 = [\n    ...   ('a', 'b', 'c'),\n    ...   (1, 11, \"one\"),\n    ...   {'a': 2, 'c': \"two\", 'b': 22},\n    ... ]\n    >>> rowtype, rows = named_column_tuples(data1)\n    >>> print(list(rows))\n    [NamedRow(a=1, b=11, c='one'), NamedRow(a=2, b=22, c='two')]\n\nCSV export with unused padding columns:\n\n    >>> data1 = [\n    ...   ('a', 'b', 'c', '', ''),\n    ...   (1, 11, \"one\"),\n    ...   {'a': 2, 'c': \"two\", 'b': 22},\n    ...   [3, 11, \"three\", '', 'dropped'],\n    ... ]\n    >>> rowtype, rows = named_column_tuples(data1, 'CSV_Row')\n    >>> print(list(rows))\n    [CSV_Row(a=1, b=11, c='one'), CSV_Row(a=2, b=22, c='two'), CSV_Row(a=3, b=11, c='three')]\n\nA mixin class providing a `test1` method and a `test2` property:\n\n    >>> class Mixin(object):\n    ...   def test1(self):\n    ...     return \"test1\"\n    ...   @property\n    ...   def test2(self):\n    ...     return \"test2\"\n    >>> data1 = [\n    ...   ('a', 'b', 'c'),\n    ...   (1, 11, \"one\"),\n    ...   {'a': 2, 'c': \"two\", 'b': 22},\n    ... ]\n    >>> rowtype, rows = named_column_tuples(data1, mixin=Mixin)\n    >>> rows = list(rows)\n    >>> rows[0].test1()\n    'test1'\n    >>> rows[0].test2\n    'test2'\n\n## Function `named_row_tuple(*column_names, class_name=None, computed=None, column_map=None, snake_case=False, mixin=None)`\n\nReturn a `namedtuple` subclass factory derived from `column_names`.\nThe primary use case is using the header row of a spreadsheet\nto key the data from the subsequent rows.\n\nParameters:\n* `column_names`: an iterable of `str`, such as the heading columns\n  of a CSV export\n* `class_name`: optional keyword parameter specifying the class name\n* `computed`: optional keyword parameter providing a mapping\n  of `str` to functions of `self`; these strings are available\n  via `__getitem__`\n* `mixin`: an optional mixin class for the generated namedtuple subclass\n  to provide extra methods or properties\n\nThe tuple's attributes are computed by converting all runs\nof nonalphanumerics\n(as defined by the `re` module's \"\\W\" sequence)\nto an underscore, lowercasing and then stripping\nleading and trailing underscores.\n\nIn addition to the normal numeric indices, the tuple may\nalso be indexed by the attribute names or the column names.\n\nThe new class has the following additional attributes:\n* `attributes_`: the attribute names of each tuple in order\n* `names_`: the originating name strings\n* `name_attributes_`: the computed attribute names corresponding to the\n  `names`; there may be empty strings in this list\n* `attr_of_`: a mapping of column name to attribute name\n* `name_of_`: a mapping of attribute name to column name\n* `index_of_`: a mapping of column names and attributes their tuple indices\n\nExamples:\n\n    >>> T = named_row_tuple('Column 1', '', 'Column 3', ' Column 4', 'Column 5 ', '', '', class_name='Example')\n    >>> T.attributes_\n    ['column_1', 'column_3', 'column_4', 'column_5']\n    >>> row = T('val1', 'dropped', 'val3', 4, 5, 6, 7)\n    >>> row\n    Example(column_1='val1', column_3='val3', column_4=4, column_5=5)\n\n## Class `PrefixedMappingProxy(RemappedMappingProxy)`\n\nA proxy for another mapping\noperating on keys commencing with a prefix.\n\n## Class `RemappedMappingProxy`\n\nA proxy for another mapping\nwith translation functions between the external keys\nand the keys used inside the other mapping.\n\nExample:\n\n    >>> proxy = RemappedMappingProxy(\n    ...   {},\n    ...   lambda key: 'prefix.' + key,\n    ...   lambda subkey: cutprefix('prefix.', subkey))\n    >>> proxy['key'] = 1\n    >>> proxy['key']\n    1\n    >>> proxy.mapping\n    {'prefix.key': 1}\n    >>> list(proxy.keys())\n    ['key']\n    >>> proxy.subkey('key')\n    'prefix.key'\n    >>> proxy.key('prefix.key')\n    'key'\n\n## Class `SeenSet`\n\nA set-like collection with optional backing store file.\n\n## Class `SeqMapUC_Attrs`\n\nA wrapper for a mapping from keys\n(matching the regular expression `^[A-Z][A-Z_0-9]*$`)\nto tuples.\n\nAttributes matching such a key return the first element\nof the sequence (and requires the sequence to have exactly on element).\nAn attribute `FOOs` or `FOOes`\n(ending in a literal 's' or 'es', a plural)\nreturns the sequence (`FOO` must be a key of the mapping).\n\n## Class `StackableValues`\n\nA collection of named stackable values with the latest value\navailable as an attribute.\n\n*DEPRECATED*: I now recommend my `cs.context.stackattrs` context\nmanager for most uses; it may be applied to any object instead of\nrequiring use of this class.\n\nNote that names conflicting with methods are not available\nas attributes and must be accessed via `__getitem__`.\nAs a matter of practice, in addition to the mapping methods,\navoid names which are verbs or which begin with an underscore.\n\nExample:\n\n    >>> S = StackableValues()\n    >>> print(S)\n    StackableValues()\n    >>> S.push('x', 1)\n    >>> print(S)\n    StackableValues(x=1)\n    >>> print(S.x)\n    1\n    >>> S.push('x', 2)\n    1\n    >>> print(S.x)\n    2\n    >>> S.x = 3\n    >>> print(S.x)\n    3\n    >>> S.pop('x')\n    3\n    >>> print(S.x)\n    1\n    >>> with S.stack(x=4):\n    ...   print(S.x)\n    ...\n    4\n    >>> print(S.x)\n    1\n    >>> S.update(x=5)\n    {'x': 1}\n\n## Class `StrKeyedDefaultDict(TypedKeyMixin, collections.defaultdict, builtins.dict)`\n\nSubclass of `defaultdict` which ensures that its\nkeys are of type `str` using `TypedKeyMixin`.\n\n*Method `StrKeyedDefaultDict.__init__(self, *a, **kw)`*:\nInitialise the `TypedKeyDict`. The first positional parameter\nis the type for keys.\n\n## Class `StrKeyedDict(TypedKeyMixin, builtins.dict)`\n\nSubclass of `dict` which ensures that its\nkeys are of type `str` using `TypedKeyMixin`.\n\n*Method `StrKeyedDict.__init__(self, *a, **kw)`*:\nInitialise the `TypedKeyDict`. The first positional parameter\nis the type for keys.\n\n## Function `TypedKeyClass(key_type, superclass, name=None)`\n\nFactory to create a new mapping class subclassing\n`(TypedKeyMixin,superclass)` which checks that keys are of type\n`key_type`.\n\n## Class `TypedKeyMixin`\n\nA mixin to check that the keys of a mapping are of a particular type.\n\nThe triggering use case is the constant UUID vs str(UUID) tension\nin a lot of database code.\n\n## Class `UC_Sequence(builtins.list)`\n\nA tuple-of-nodes on which `.ATTRs` indirection can be done,\nyielding another tuple-of-nodes or tuple-of-values.\n\n*Method `UC_Sequence.__init__(self, Ns)`*:\nInitialise from an iterable sequence.\n\n## Class `UUIDedDict(builtins.dict, JSONableMappingMixin, AttrableMappingMixin)`\n\nA handy `dict` subtype providing the basis for mapping classes\nindexed by `UUID`s.\n\nThe `'uuid'` attribute is always a `UUID` instance.\n\n*Method `UUIDedDict.__init__(self, _d=None, **kw)`*:\nInitialise the `UUIDedDict`,\ngenerating a `'uuid'` key value if omitted.\n\n## Class `UUIDKeyedDefaultDict(TypedKeyMixin, collections.defaultdict, builtins.dict)`\n\nSubclass of `defaultdict` which ensures that its\nkeys are of type `UUID` using `TypedKeyMixin`.\n\n*Method `UUIDKeyedDefaultDict.__init__(self, *a, **kw)`*:\nInitialise the `TypedKeyDict`. The first positional parameter\nis the type for keys.\n\n## Class `UUIDKeyedDict(TypedKeyMixin, builtins.dict)`\n\nSubclass of `dict` which ensures that its\nkeys are of type `UUID` using `TypedKeyMixin`.\n\n*Method `UUIDKeyedDict.__init__(self, *a, **kw)`*:\nInitialise the `TypedKeyDict`. The first positional parameter\nis the type for keys.\n\n# Release Log\n\n\n\n*Release 20231129*:\nAttrableMappingMixin: look up ATTRABLE_MAPPING_DEFAULT on the class, not the instance.\n\n*Release 20230612*:\n* AttrableMappingMixin.__getattr__: fast path the check for \"ATTRABLE_MAPPING_DEFAULT\", fixes unbound recursion.\n* New attrable() function returning an object with dicts transmuted to AttrableMapping instances.\n\n*Release 20220912.4*:\n* TypedKeyMixin: add .get() and .setdefault().\n* Provide names for UUIDKeyedDict, StrKeyedDefaultDict, UUIDKeyedDefaultDict.\n\n*Release 20220912.3*:\n* New TypedKeyClass class factory.\n* Redo StrKeyedDict and UUIDKeyedDict using TypedKeyClass.\n* New StrKeyedDefaultDict and UUIDKeyedDefaultDict convenience classes.\n\n*Release 20220912.2*:\nTypedKeyMixin: fix another typo.\n\n*Release 20220912.1*:\nTypedKeyMixin: remove debug, bugfix super() calls.\n\n*Release 20220912*:\n* New TypedKeyMixin to check that the keys of a mapping are of a particular type.\n* New TypedKeyDict(TypedKeyMixin,dict) subclass.\n* New StrKeyedDict and UUIDKeyedDict factories.\n\n*Release 20220626*:\nExpose the default column name mapping function of named_row_tuple as column_name_to_identifier for reuse.\n\n*Release 20220605*:\n* named_row_tuple et al: plumb a new optional snake_case parameter to snake case mixed case attribute names.\n* Drop Python 2 support and the cs.py3 shims.\n\n*Release 20220318*:\nBump cs.sharedfile requirement to get an import fix.\n\n*Release 20211208*:\n* PrefixedMappingProxy: swap to_subkey/from_subkey prefix/unprefix actions, were backwards.\n* PrefixedMappingProxy: make the key and subkey conversion methods public static methods for reuse.\n* Assorted minor internal changes.\n\n*Release 20210906*:\nNew RemappedMappingProxy with general subkey(key) and key(subkey) methods.\n\n*Release 20210717*:\n* New IndexedMapping: wrapper for another mapping providing LoadableMappingMixin stype .by_* attributes.\n* Rename LoadableMappingMixin to IndexedSetMixin and make it abstract, rename .scan_mapping to .scan, .add_to_mapping to .add etc.\n\n*Release 20210306*:\nStackableValues: fix typo, make deprecation overt.\n\n*Release 20210123*:\nAttrableMappingMixin.__getattr__: some bugfixes.\n\n*Release 20201228*:\nNew PrefixedMappingProxy presenting the keys of another mapping commencing with a prefix.\n\n*Release 20201102*:\n* StackableValues is obsolete, add recommendation for cs.context.stackattrs to the docstring.\n* New AttrableMappingMixin with a __getattr__ which looks up unknown attributes as keys.\n* New JSONableMappingMixin with methods for JSON actions: from_json, as_json, append_ndjson and a __str__ and __repr__.\n* New LoadableMappingMixin to load .by_* attributes on demand.\n* New AttrableMapping(dict, AttrableMappingMixin).\n\n*Release 20200130*:\nNew dicts_to_namedtuples function to yield namedtuples from an iterable of dicts.\n\n*Release 20191120*:\nnamed_row_tuple: support None in a column name, as from Excel unfilled heading row entries\n\n*Release 20190617*:\n* StackableValues.push now returns the previous value.\n* StackableValues.update has a signature like dict.update.\n* StackableValues.pop removes entries when their stack becomes empty.\n* StackableValues.stack: clean implementation of save/restore.\n* StackableValues: avoid infinite recursion through ._fallback.\n* StackableValues.keys now returns a list of the nonempty keys.\n* Update doctests.\n\n*Release 20190103*:\nDocumentation update.\n\n*Release 20181231*:\n* Bugfix for mapping of column names to row indices.\n* New subclass._fallback method for when a stack is empty.\n\n*Release 20180720*:\nInitial PyPI release specificly for named_column_tuple and named_column_tuples.\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://bitbucket.org/cameron_simpson/css/commits/all","keywords":"python2,python3","license":"GNU General Public License v3 or later (GPLv3+)","maintainer":"","maintainer_email":"","name":"cs.mappings","package_url":"https://pypi.org/project/cs.mappings/","platform":null,"project_url":"https://pypi.org/project/cs.mappings/","project_urls":{"Homepage":"https://bitbucket.org/cameron_simpson/css/commits/all","URL":"https://bitbucket.org/cameron_simpson/css/commits/all"},"provides_extra":null,"release_url":"https://pypi.org/project/cs.mappings/20231129/","requires_dist":["cs.deco >=20231129","cs.lex >=20231018","cs.logutils >=20230212","cs.pfx >=20230604","cs.seq >=20221118","cs.sharedfile >=20211208"],"requires_python":"","summary":"Facilities for mappings and objects associated with mappings.","version":"20231129","yanked":false,"yanked_reason":null},"last_serial":20834498,"releases":{"20180720":[{"comment_text":"","digests":{"blake2b_256":"73abc2f7a3b7fde6299a4bdc8e1aef787fbc4509877b2a470237696c3e847eda","md5":"df6ff0452f3e294fa4da75dec3fa0eaf","sha256":"2fb2ab950b452f1fe117ff712e16ac28088daf5bc000b51ab305e2b891f0cd13"},"downloads":-1,"filename":"cs.mappings-20180720.tar.gz","has_sig":false,"md5_digest":"df6ff0452f3e294fa4da75dec3fa0eaf","packagetype":"sdist","python_version":"source","requires_python":null,"size":7856,"upload_time":"2018-07-20T00:11:04","upload_time_iso_8601":"2018-07-20T00:11:04.620367Z","url":"https://files.pythonhosted.org/packages/73/ab/c2f7a3b7fde6299a4bdc8e1aef787fbc4509877b2a470237696c3e847eda/cs.mappings-20180720.tar.gz","yanked":false,"yanked_reason":null}],"20181231":[{"comment_text":"","digests":{"blake2b_256":"3dd593790c8401183ff789b8aebb85edac439e579b9cef472cef0076e0ce7204","md5":"154dc2cc23a9b27fc9955cb9ebcc350a","sha256":"c9ef09e385bab5e150f0b57e91dc606ede3c9de184cd3735acae72f5e39b8d4e"},"downloads":-1,"filename":"cs.mappings-20181231.tar.gz","has_sig":false,"md5_digest":"154dc2cc23a9b27fc9955cb9ebcc350a","packagetype":"sdist","python_version":"source","requires_python":null,"size":10113,"upload_time":"2018-12-31T05:38:42","upload_time_iso_8601":"2018-12-31T05:38:42.734135Z","url":"https://files.pythonhosted.org/packages/3d/d5/93790c8401183ff789b8aebb85edac439e579b9cef472cef0076e0ce7204/cs.mappings-20181231.tar.gz","yanked":false,"yanked_reason":null}],"20190103":[{"comment_text":"","digests":{"blake2b_256":"acecf4473c2df886089accc318fede65577907271df1d84bf1d98edb6001a46e","md5":"659756f30d991af69004f3c4b2e5555f","sha256":"5e039f783e3c2b5321c93458c04e565ed41a9c8cd81397f432eca5b26a705de5"},"downloads":-1,"filename":"cs.mappings-20190103.tar.gz","has_sig":false,"md5_digest":"659756f30d991af69004f3c4b2e5555f","packagetype":"sdist","python_version":"source","requires_python":null,"size":10314,"upload_time":"2019-01-02T22:22:07","upload_time_iso_8601":"2019-01-02T22:22:07.392849Z","url":"https://files.pythonhosted.org/packages/ac/ec/f4473c2df886089accc318fede65577907271df1d84bf1d98edb6001a46e/cs.mappings-20190103.tar.gz","yanked":false,"yanked_reason":null}],"20190617":[{"comment_text":"","digests":{"blake2b_256":"525a6f263a32e2b9306a2d3981561c74bd3c5c498fe00b1c9767d2fc0ca42ead","md5":"6040e5358778a463fbc956f80e686d71","sha256":"02481410e48664b2d9632e67271045d0b55cdbb558efce9c414d07d915f0a9f2"},"downloads":-1,"filename":"cs.mappings-20190617.tar.gz","has_sig":false,"md5_digest":"6040e5358778a463fbc956f80e686d71","packagetype":"sdist","python_version":"source","requires_python":null,"size":13011,"upload_time":"2019-06-17T02:52:10","upload_time_iso_8601":"2019-06-17T02:52:10.004717Z","url":"https://files.pythonhosted.org/packages/52/5a/6f263a32e2b9306a2d3981561c74bd3c5c498fe00b1c9767d2fc0ca42ead/cs.mappings-20190617.tar.gz","yanked":false,"yanked_reason":null}],"20191120":[{"comment_text":"","digests":{"blake2b_256":"4e815cafcff8e81e956426adb6180cf4e46117afb4c6626b8fc694309048a2d0","md5":"f6968ea65c7693cf04f26ce64bdfde32","sha256":"e164d942576ccfa6c31d8831fb918442b9b13d42c130c43699dc5638d8119750"},"downloads":-1,"filename":"cs.mappings-20191120.tar.gz","has_sig":false,"md5_digest":"f6968ea65c7693cf04f26ce64bdfde32","packagetype":"sdist","python_version":"source","requires_python":null,"size":14465,"upload_time":"2019-11-20T01:58:28","upload_time_iso_8601":"2019-11-20T01:58:28.995159Z","url":"https://files.pythonhosted.org/packages/4e/81/5cafcff8e81e956426adb6180cf4e46117afb4c6626b8fc694309048a2d0/cs.mappings-20191120.tar.gz","yanked":false,"yanked_reason":null}],"20200130":[{"comment_text":"","digests":{"blake2b_256":"cd104837f8e7ff0fdc7a6a5521329e1cef24a4ca2f4df4ddef913f604ef1f58a","md5":"24952b2808d6538e9f729a3b13bfe55b","sha256":"1ce9ec11bf7edbbf67c58adf3b67c17bdab05eea66648a7a0e5eb04934e8bc5f"},"downloads":-1,"filename":"cs.mappings-20200130.tar.gz","has_sig":false,"md5_digest":"24952b2808d6538e9f729a3b13bfe55b","packagetype":"sdist","python_version":"source","requires_python":null,"size":15273,"upload_time":"2020-01-30T06:25:31","upload_time_iso_8601":"2020-01-30T06:25:31.245102Z","url":"https://files.pythonhosted.org/packages/cd/10/4837f8e7ff0fdc7a6a5521329e1cef24a4ca2f4df4ddef913f604ef1f58a/cs.mappings-20200130.tar.gz","yanked":false,"yanked_reason":null}],"20201102":[{"comment_text":"","digests":{"blake2b_256":"3fd2d1bfcdce6210dbfc110098be1036a974919ec0fe3f690c88d3ab4bc00596","md5":"af8d77971f2804a981ce8b6446917649","sha256":"ec9ba5f7b0fb5df7bc61ec0240982614bd59a62e0cfc1c9bd01fd64f12fbbe32"},"downloads":-1,"filename":"cs.mappings-20201102.tar.gz","has_sig":false,"md5_digest":"af8d77971f2804a981ce8b6446917649","packagetype":"sdist","python_version":"source","requires_python":null,"size":26784,"upload_time":"2020-11-01T21:54:50","upload_time_iso_8601":"2020-11-01T21:54:50.330784Z","url":"https://files.pythonhosted.org/packages/3f/d2/d1bfcdce6210dbfc110098be1036a974919ec0fe3f690c88d3ab4bc00596/cs.mappings-20201102.tar.gz","yanked":false,"yanked_reason":null}],"20201228":[{"comment_text":"","digests":{"blake2b_256":"fdf98906b778e5b23e0911da19540f816e0367049ef2adf6dec15b441214f562","md5":"0fcf29000fb4dd5f246ea39e25a4242f","sha256":"eac854a092e40863358d00edd09f623efc0d8f86bb13a688452322d99f909f27"},"downloads":-1,"filename":"cs.mappings-20201228.tar.gz","has_sig":false,"md5_digest":"0fcf29000fb4dd5f246ea39e25a4242f","packagetype":"sdist","python_version":"source","requires_python":null,"size":27251,"upload_time":"2020-12-28T10:08:30","upload_time_iso_8601":"2020-12-28T10:08:30.255595Z","url":"https://files.pythonhosted.org/packages/fd/f9/8906b778e5b23e0911da19540f816e0367049ef2adf6dec15b441214f562/cs.mappings-20201228.tar.gz","yanked":false,"yanked_reason":null}],"20210123":[{"comment_text":"","digests":{"blake2b_256":"38cda1ec9d118c1c657b3126c9a7bbdf0cc54cbc8fdd5d3cfe8125f20efc1fba","md5":"7836522c1b0b4d2296143cd7ae9b7561","sha256":"506794a87fe72579ad41b9605c30e4807f9423d97702aaf8f749a32d12615be3"},"downloads":-1,"filename":"cs.mappings-20210123.tar.gz","has_sig":false,"md5_digest":"7836522c1b0b4d2296143cd7ae9b7561","packagetype":"sdist","python_version":"source","requires_python":null,"size":27822,"upload_time":"2021-01-22T22:25:03","upload_time_iso_8601":"2021-01-22T22:25:03.510990Z","url":"https://files.pythonhosted.org/packages/38/cd/a1ec9d118c1c657b3126c9a7bbdf0cc54cbc8fdd5d3cfe8125f20efc1fba/cs.mappings-20210123.tar.gz","yanked":false,"yanked_reason":null}],"20210306":[{"comment_text":"","digests":{"blake2b_256":"dfabbe2c6589b0ec9eed0df735a5388cd26c2142e3b63d2061b1f09e99c3090f","md5":"172b92b79fd6ac0cb0086b2e28d84a5c","sha256":"7469bfdd43923c0879c6ef2da484e036b7d441b379e00cfe6f98e3b003ea45ca"},"downloads":-1,"filename":"cs.mappings-20210306.tar.gz","has_sig":false,"md5_digest":"172b92b79fd6ac0cb0086b2e28d84a5c","packagetype":"sdist","python_version":"source","requires_python":null,"size":27962,"upload_time":"2021-03-05T23:44:19","upload_time_iso_8601":"2021-03-05T23:44:19.158193Z","url":"https://files.pythonhosted.org/packages/df/ab/be2c6589b0ec9eed0df735a5388cd26c2142e3b63d2061b1f09e99c3090f/cs.mappings-20210306.tar.gz","yanked":false,"yanked_reason":null}],"20210717":[{"comment_text":"","digests":{"blake2b_256":"a5f79c390209370807f11f295d406b8b3f2273ce89cc1e31c95043c578fd1628","md5":"aef2d80fa5b398c811bcd0899f81445c","sha256":"5235f4493c6efc706172ffea6d991fe57595e359073497e9391969b2f3bdb0e6"},"downloads":-1,"filename":"cs.mappings-20210717.tar.gz","has_sig":false,"md5_digest":"aef2d80fa5b398c811bcd0899f81445c","packagetype":"sdist","python_version":"source","requires_python":null,"size":29076,"upload_time":"2021-07-17T02:02:20","upload_time_iso_8601":"2021-07-17T02:02:20.477917Z","url":"https://files.pythonhosted.org/packages/a5/f7/9c390209370807f11f295d406b8b3f2273ce89cc1e31c95043c578fd1628/cs.mappings-20210717.tar.gz","yanked":false,"yanked_reason":null}],"20210906":[{"comment_text":"","digests":{"blake2b_256":"ae35563dcc85ff69a25df74d3748e7dc836b5449ae29c71bb2e5e0afb4599f30","md5":"64e1881f975498d7ccee16983738a8c1","sha256":"ed23220f2ef3d581a21a56bfb38feb1533c2e95efe177d45ec77ff2a668cb371"},"downloads":-1,"filename":"cs.mappings-20210906.tar.gz","has_sig":false,"md5_digest":"64e1881f975498d7ccee16983738a8c1","packagetype":"sdist","python_version":"source","requires_python":null,"size":30495,"upload_time":"2021-09-05T23:10:41","upload_time_iso_8601":"2021-09-05T23:10:41.429786Z","url":"https://files.pythonhosted.org/packages/ae/35/563dcc85ff69a25df74d3748e7dc836b5449ae29c71bb2e5e0afb4599f30/cs.mappings-20210906.tar.gz","yanked":false,"yanked_reason":null}],"20211208":[{"comment_text":"","digests":{"blake2b_256":"0d5e6eef847029ed826928f8b53fb07709722acb213cfe36e6bcccdd947ffe66","md5":"1d63ddf13d97db6bdfd4093a66067fa5","sha256":"45a144624ead9c152f94a324088f93d262f41cf757009b30a92aee19f4c8fc7d"},"downloads":-1,"filename":"cs.mappings-20211208.tar.gz","has_sig":false,"md5_digest":"1d63ddf13d97db6bdfd4093a66067fa5","packagetype":"sdist","python_version":"source","requires_python":null,"size":29748,"upload_time":"2021-12-08T10:07:07","upload_time_iso_8601":"2021-12-08T10:07:07.104713Z","url":"https://files.pythonhosted.org/packages/0d/5e/6eef847029ed826928f8b53fb07709722acb213cfe36e6bcccdd947ffe66/cs.mappings-20211208.tar.gz","yanked":false,"yanked_reason":null}],"20220318":[{"comment_text":"","digests":{"blake2b_256":"37b27dd037f3783473c0b1f0167d021be3b8ad016b6a8045093a3a4513133629","md5":"36eeaa89c8b31d9ff9f6deafeb7ad138","sha256":"417479ccb3028199e0d42d8c7930e9014140368310f4eedd8a1cb8f6dc9bc5d8"},"downloads":-1,"filename":"cs.mappings-20220318.tar.gz","has_sig":false,"md5_digest":"36eeaa89c8b31d9ff9f6deafeb7ad138","packagetype":"sdist","python_version":"source","requires_python":null,"size":30015,"upload_time":"2022-03-18T05:13:29","upload_time_iso_8601":"2022-03-18T05:13:29.859951Z","url":"https://files.pythonhosted.org/packages/37/b2/7dd037f3783473c0b1f0167d021be3b8ad016b6a8045093a3a4513133629/cs.mappings-20220318.tar.gz","yanked":false,"yanked_reason":null}],"20220605":[{"comment_text":"","digests":{"blake2b_256":"6f5114c929a2a745ba0531692ef7ad58bdd402dbe45a5e9c06fe8963546ee65f","md5":"b4dab3e0a9cf5e00ff75b45dbd54ac4e","sha256":"e8ace680002a2055534ee1d50bef1c6a72f267e2125c1044ebba08c82c134747"},"downloads":-1,"filename":"cs.mappings-20220605-py3-none-any.whl","has_sig":false,"md5_digest":"b4dab3e0a9cf5e00ff75b45dbd54ac4e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18535,"upload_time":"2022-06-05T11:29:19","upload_time_iso_8601":"2022-06-05T11:29:19.785962Z","url":"https://files.pythonhosted.org/packages/6f/51/14c929a2a745ba0531692ef7ad58bdd402dbe45a5e9c06fe8963546ee65f/cs.mappings-20220605-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1029ca518613eec9a3299b309819f77339d29fcfb52556447ed9ac6451ce91cd","md5":"cc8857d0901101f11cc875869e3f11a1","sha256":"d1a4be28b44d5ad5e5d58ca9b20297069d7c7aace83327b976fda3095a204e25"},"downloads":-1,"filename":"cs.mappings-20220605.tar.gz","has_sig":false,"md5_digest":"cc8857d0901101f11cc875869e3f11a1","packagetype":"sdist","python_version":"source","requires_python":null,"size":23584,"upload_time":"2022-06-05T11:29:22","upload_time_iso_8601":"2022-06-05T11:29:22.463718Z","url":"https://files.pythonhosted.org/packages/10/29/ca518613eec9a3299b309819f77339d29fcfb52556447ed9ac6451ce91cd/cs.mappings-20220605.tar.gz","yanked":false,"yanked_reason":null}],"20220626":[{"comment_text":"","digests":{"blake2b_256":"c1055bcc2735f4cbc989f4e566dcac3067c45753179686550785610af00bc43e","md5":"b6d77292bba1183b14b1b3aa77fae366","sha256":"bb4003cbb1a79aa363871a857ba5158e8bb10f64fd6f4f0988fb985b53be29cc"},"downloads":-1,"filename":"cs.mappings-20220626-py3-none-any.whl","has_sig":false,"md5_digest":"b6d77292bba1183b14b1b3aa77fae366","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18882,"upload_time":"2022-06-26T09:43:57","upload_time_iso_8601":"2022-06-26T09:43:57.011162Z","url":"https://files.pythonhosted.org/packages/c1/05/5bcc2735f4cbc989f4e566dcac3067c45753179686550785610af00bc43e/cs.mappings-20220626-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"af4f72a83380f751b400cf2737918dce8af36f3b16c7a346b4d911129ded24f4","md5":"8a06da3a0283832c747c514c9d1d2234","sha256":"83cfee3ff9bdcafb1e290ff8c3ea26bef310570e6095c99065248efee2cf7315"},"downloads":-1,"filename":"cs.mappings-20220626.tar.gz","has_sig":false,"md5_digest":"8a06da3a0283832c747c514c9d1d2234","packagetype":"sdist","python_version":"source","requires_python":null,"size":23976,"upload_time":"2022-06-26T09:43:58","upload_time_iso_8601":"2022-06-26T09:43:58.713619Z","url":"https://files.pythonhosted.org/packages/af/4f/72a83380f751b400cf2737918dce8af36f3b16c7a346b4d911129ded24f4/cs.mappings-20220626.tar.gz","yanked":false,"yanked_reason":null}],"20220912":[{"comment_text":"","digests":{"blake2b_256":"87336e988a2a1d3ac9a0e81403fe1100503e6c596bbec9c5a6d7f37ab7c717dc","md5":"9df0bd2f86934c346f97d4046010a8a7","sha256":"79fcc9f0640c911f3f486e4e2dc479b23809736e0fb708b637e052aead3e6fe5"},"downloads":-1,"filename":"cs.mappings-20220912-py3-none-any.whl","has_sig":false,"md5_digest":"9df0bd2f86934c346f97d4046010a8a7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":19511,"upload_time":"2022-09-12T00:27:57","upload_time_iso_8601":"2022-09-12T00:27:57.036587Z","url":"https://files.pythonhosted.org/packages/87/33/6e988a2a1d3ac9a0e81403fe1100503e6c596bbec9c5a6d7f37ab7c717dc/cs.mappings-20220912-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"acedf3a980360fc312c7ce4a725a9fd80aeefa2070075084d7ef06f806b063bc","md5":"d497328a4110ae8a8c777673862eb769","sha256":"4f8794af78bacb4b677cf918893ee922a576e42afa2d2af636fb58b436cb57d5"},"downloads":-1,"filename":"cs.mappings-20220912.tar.gz","has_sig":false,"md5_digest":"d497328a4110ae8a8c777673862eb769","packagetype":"sdist","python_version":"source","requires_python":null,"size":24856,"upload_time":"2022-09-12T00:27:58","upload_time_iso_8601":"2022-09-12T00:27:58.663996Z","url":"https://files.pythonhosted.org/packages/ac/ed/f3a980360fc312c7ce4a725a9fd80aeefa2070075084d7ef06f806b063bc/cs.mappings-20220912.tar.gz","yanked":false,"yanked_reason":null}],"20220912.1":[{"comment_text":"","digests":{"blake2b_256":"20294a31d674116f4fa8113a510d77bb9dcb757d1c9a13efafb3d19b580afb38","md5":"91d8a0ce0cb177ded7f2a792e0b6bcd0","sha256":"dc4393d05ca5ca8628edae1e90fcba6c4be5f5e4b66bb254bbfdd97fe089a81b"},"downloads":-1,"filename":"cs.mappings-20220912.1-py3-none-any.whl","has_sig":false,"md5_digest":"91d8a0ce0cb177ded7f2a792e0b6bcd0","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":19555,"upload_time":"2022-09-12T00:36:02","upload_time_iso_8601":"2022-09-12T00:36:02.828120Z","url":"https://files.pythonhosted.org/packages/20/29/4a31d674116f4fa8113a510d77bb9dcb757d1c9a13efafb3d19b580afb38/cs.mappings-20220912.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b11e9f3034cb1eb682d1af84b5aa2b81e6ea84b020e36e728e282bbc28cfe87b","md5":"d94e2e23a7f7a22e28d222c34936d00b","sha256":"44ea77956244286c80a20039ff60fbf05df14e59dc96cf8227600531ea7d632a"},"downloads":-1,"filename":"cs.mappings-20220912.1.tar.gz","has_sig":false,"md5_digest":"d94e2e23a7f7a22e28d222c34936d00b","packagetype":"sdist","python_version":"source","requires_python":null,"size":24908,"upload_time":"2022-09-12T00:36:04","upload_time_iso_8601":"2022-09-12T00:36:04.743234Z","url":"https://files.pythonhosted.org/packages/b1/1e/9f3034cb1eb682d1af84b5aa2b81e6ea84b020e36e728e282bbc28cfe87b/cs.mappings-20220912.1.tar.gz","yanked":false,"yanked_reason":null}],"20220912.2":[{"comment_text":"","digests":{"blake2b_256":"a38ec26acb45e707cba6846810b4e85d8c40437e9cd6ea57af32adcba03f8dc1","md5":"cf2724f35b87a5c80ff6a47b4f650d9b","sha256":"8b0abbca4b3bceb46dcf38c5cc2ce114fa79e7eace368035fe399b9ad442d4dd"},"downloads":-1,"filename":"cs.mappings-20220912.2-py3-none-any.whl","has_sig":false,"md5_digest":"cf2724f35b87a5c80ff6a47b4f650d9b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":19571,"upload_time":"2022-09-12T00:41:26","upload_time_iso_8601":"2022-09-12T00:41:26.274269Z","url":"https://files.pythonhosted.org/packages/a3/8e/c26acb45e707cba6846810b4e85d8c40437e9cd6ea57af32adcba03f8dc1/cs.mappings-20220912.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f704904fe409658439a61f78560aca4bae9ed5b7612d695ab196171950552773","md5":"de5624f5f12c88fea7b4a07faf172eca","sha256":"395e2f98a80718f680e4e20cac953e0bec02a7745363a47a2b8490b78220bae0"},"downloads":-1,"filename":"cs.mappings-20220912.2.tar.gz","has_sig":false,"md5_digest":"de5624f5f12c88fea7b4a07faf172eca","packagetype":"sdist","python_version":"source","requires_python":null,"size":24920,"upload_time":"2022-09-12T00:41:27","upload_time_iso_8601":"2022-09-12T00:41:27.927473Z","url":"https://files.pythonhosted.org/packages/f7/04/904fe409658439a61f78560aca4bae9ed5b7612d695ab196171950552773/cs.mappings-20220912.2.tar.gz","yanked":false,"yanked_reason":null}],"20220912.3":[{"comment_text":"","digests":{"blake2b_256":"894697f9d30415678545412f8558c021a9fdba8b2f6fe194f39f0d2aa3c10758","md5":"c544773809d475c6b386430b2e18de71","sha256":"0e783c59917a43f7946cc6c034db36c0970ac825991a86e6203ec5d4a6eae506"},"downloads":-1,"filename":"cs.mappings-20220912.3-py3-none-any.whl","has_sig":false,"md5_digest":"c544773809d475c6b386430b2e18de71","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":19858,"upload_time":"2022-09-12T03:47:21","upload_time_iso_8601":"2022-09-12T03:47:21.953685Z","url":"https://files.pythonhosted.org/packages/89/46/97f9d30415678545412f8558c021a9fdba8b2f6fe194f39f0d2aa3c10758/cs.mappings-20220912.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3d99ee9a40b6dd42d0ea84b2d3a28f72c3687a00f1a140ab3213e10cd95c1a91","md5":"5ba622348471d8393c22a787c51f8b40","sha256":"a7e1037f3c70f3c0ee6ce86aa03eb60222411cecd8830ec542a3ca4a88d5f8d5"},"downloads":-1,"filename":"cs.mappings-20220912.3.tar.gz","has_sig":false,"md5_digest":"5ba622348471d8393c22a787c51f8b40","packagetype":"sdist","python_version":"source","requires_python":null,"size":25365,"upload_time":"2022-09-12T03:47:23","upload_time_iso_8601":"2022-09-12T03:47:23.915494Z","url":"https://files.pythonhosted.org/packages/3d/99/ee9a40b6dd42d0ea84b2d3a28f72c3687a00f1a140ab3213e10cd95c1a91/cs.mappings-20220912.3.tar.gz","yanked":false,"yanked_reason":null}],"20220912.4":[{"comment_text":"","digests":{"blake2b_256":"e3c8c430e490ecd54a65d1189bc0c5ebfe845719b14478d54fcbc0a7a9d78910","md5":"e1175952ac8e120a24f28460948de98f","sha256":"795f3440a70be401c2ab0322aa1cf838f6182ab66fe2b1546839c02d1b9048c1"},"downloads":-1,"filename":"cs.mappings-20220912.4-py3-none-any.whl","has_sig":false,"md5_digest":"e1175952ac8e120a24f28460948de98f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":19940,"upload_time":"2022-09-12T09:09:34","upload_time_iso_8601":"2022-09-12T09:09:34.812497Z","url":"https://files.pythonhosted.org/packages/e3/c8/c430e490ecd54a65d1189bc0c5ebfe845719b14478d54fcbc0a7a9d78910/cs.mappings-20220912.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"eb8b3e7859ae2d3c8ace51bf02d5a111f0a345e3f87ede201800fd183bf575fa","md5":"752a2ec8c8d9d5c40f0d5b78f7e4c23b","sha256":"5a05c97b74e3a3b618da395e81d04c30caae1528b24daad912cc9635e03dbc03"},"downloads":-1,"filename":"cs.mappings-20220912.4.tar.gz","has_sig":false,"md5_digest":"752a2ec8c8d9d5c40f0d5b78f7e4c23b","packagetype":"sdist","python_version":"source","requires_python":null,"size":25675,"upload_time":"2022-09-12T09:09:37","upload_time_iso_8601":"2022-09-12T09:09:37.276089Z","url":"https://files.pythonhosted.org/packages/eb/8b/3e7859ae2d3c8ace51bf02d5a111f0a345e3f87ede201800fd183bf575fa/cs.mappings-20220912.4.tar.gz","yanked":false,"yanked_reason":null}],"20230612":[{"comment_text":"","digests":{"blake2b_256":"b7d69e48172f7fcc5f9abc0d3f2c3e04051f73dca59b6aab6dab0c3c1e86a7c4","md5":"3a84cd5dbb6d7062cb56cd09f8467102","sha256":"a477d9662e6876cb21ffae46cd3734e80d1d78a3dfed50ce992f24825847245f"},"downloads":-1,"filename":"cs.mappings-20230612-py3-none-any.whl","has_sig":false,"md5_digest":"3a84cd5dbb6d7062cb56cd09f8467102","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":20196,"upload_time":"2023-06-12T03:23:23","upload_time_iso_8601":"2023-06-12T03:23:23.829922Z","url":"https://files.pythonhosted.org/packages/b7/d6/9e48172f7fcc5f9abc0d3f2c3e04051f73dca59b6aab6dab0c3c1e86a7c4/cs.mappings-20230612-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7a85cef7ef180a932c4de72fb89884d8b05271f97d9cb4cdb4c3020c326b866c","md5":"16eebf6bbe11fcb9602dd36cd9898642","sha256":"24d0bf9b52f3cd72a377b7359b27130329c4a793ba22d11ec818efb0aca6ee7a"},"downloads":-1,"filename":"cs.mappings-20230612.tar.gz","has_sig":false,"md5_digest":"16eebf6bbe11fcb9602dd36cd9898642","packagetype":"sdist","python_version":"source","requires_python":null,"size":26026,"upload_time":"2023-06-12T03:23:26","upload_time_iso_8601":"2023-06-12T03:23:26.010734Z","url":"https://files.pythonhosted.org/packages/7a/85/cef7ef180a932c4de72fb89884d8b05271f97d9cb4cdb4c3020c326b866c/cs.mappings-20230612.tar.gz","yanked":false,"yanked_reason":null}],"20231129":[{"comment_text":"","digests":{"blake2b_256":"d6a8019e5e9998480e73e1d66e8f17bf111b47051fbaf64d0097cea7a6570f1a","md5":"fc8a366f750a3bd49f0bb949ea69cb7c","sha256":"14b62424c6126146ba8be86986a9a86a420ef01542a4a6da8eed23e1b310bc83"},"downloads":-1,"filename":"cs.mappings-20231129-py3-none-any.whl","has_sig":false,"md5_digest":"fc8a366f750a3bd49f0bb949ea69cb7c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":20227,"upload_time":"2023-11-29T09:10:08","upload_time_iso_8601":"2023-11-29T09:10:08.351065Z","url":"https://files.pythonhosted.org/packages/d6/a8/019e5e9998480e73e1d66e8f17bf111b47051fbaf64d0097cea7a6570f1a/cs.mappings-20231129-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"40015e821b7ed750d9e20a89b67180931eb58c5cc76260fdf9b4250e4d0d06af","md5":"f35c2e7679c26760118a1a306cfc888c","sha256":"7d0a9dcfbbd8e088c8e610174d21ac6a9ef3e3e9d06b80011e7adeb48ccc979e"},"downloads":-1,"filename":"cs.mappings-20231129.tar.gz","has_sig":false,"md5_digest":"f35c2e7679c26760118a1a306cfc888c","packagetype":"sdist","python_version":"source","requires_python":null,"size":26150,"upload_time":"2023-11-29T09:10:10","upload_time_iso_8601":"2023-11-29T09:10:10.940728Z","url":"https://files.pythonhosted.org/packages/40/01/5e821b7ed750d9e20a89b67180931eb58c5cc76260fdf9b4250e4d0d06af/cs.mappings-20231129.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"d6a8019e5e9998480e73e1d66e8f17bf111b47051fbaf64d0097cea7a6570f1a","md5":"fc8a366f750a3bd49f0bb949ea69cb7c","sha256":"14b62424c6126146ba8be86986a9a86a420ef01542a4a6da8eed23e1b310bc83"},"downloads":-1,"filename":"cs.mappings-20231129-py3-none-any.whl","has_sig":false,"md5_digest":"fc8a366f750a3bd49f0bb949ea69cb7c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":20227,"upload_time":"2023-11-29T09:10:08","upload_time_iso_8601":"2023-11-29T09:10:08.351065Z","url":"https://files.pythonhosted.org/packages/d6/a8/019e5e9998480e73e1d66e8f17bf111b47051fbaf64d0097cea7a6570f1a/cs.mappings-20231129-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"40015e821b7ed750d9e20a89b67180931eb58c5cc76260fdf9b4250e4d0d06af","md5":"f35c2e7679c26760118a1a306cfc888c","sha256":"7d0a9dcfbbd8e088c8e610174d21ac6a9ef3e3e9d06b80011e7adeb48ccc979e"},"downloads":-1,"filename":"cs.mappings-20231129.tar.gz","has_sig":false,"md5_digest":"f35c2e7679c26760118a1a306cfc888c","packagetype":"sdist","python_version":"source","requires_python":null,"size":26150,"upload_time":"2023-11-29T09:10:10","upload_time_iso_8601":"2023-11-29T09:10:10.940728Z","url":"https://files.pythonhosted.org/packages/40/01/5e821b7ed750d9e20a89b67180931eb58c5cc76260fdf9b4250e4d0d06af/cs.mappings-20231129.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
