{"info":{"author":"Kevin Schaich","author_email":"schaich.kevin@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python :: 3"],"description":"<img align=\"right\" src=\"https://uber.github.io/img/h3Logo-color.svg\" alt=\"H3 Logo\" width=\"200\">\n\n# **h3-pyspark**: Uber's H3 Hexagonal Hierarchical Geospatial Indexing System in PySpark\n\n[![PyPI version](https://img.shields.io/pypi/v/h3-pyspark.svg)](https://pypi.org/project/h3-pyspark/)\n[![Conda Version](https://img.shields.io/conda/vn/conda-forge/h3-pyspark.svg)](https://anaconda.org/conda-forge/h3-pyspark)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/kevinschaich/h3-pyspark/blob/master/LICENSE)\n[![Tests](https://github.com/kevinschaich/h3-pyspark/actions/workflows/tests.yml/badge.svg?branch=master)](https://github.com/kevinschaich/h3-pyspark/actions/workflows/tests.yml)\n\nPySpark bindings for the [H3 core library](https://h3geo.org/).\n\nFor available functions, please see the vanilla Python binding documentation at:\n\n- [uber.github.io/h3-py](https://uber.github.io/h3-py)\n\n## Installation\n\nVia `PyPI`:\n\n```bash\npip install h3-pyspark\n```\n\nVia `conda-forge`:\n\n```bash\nconda install -c conda-forge h3-pyspark\n```\n\n## Usage\n\n```python\n>>> from pyspark.sql import SparkSession, functions as F\n>>> import h3_pyspark\n>>>\n>>> spark = SparkSession.builder.getOrCreate()\n>>> df = spark.createDataFrame([{\"lat\": 37.769377, \"lng\": -122.388903, 'resolution': 9}])\n>>>\n>>> df = df.withColumn('h3_9', h3_pyspark.geo_to_h3('lat', 'lng', 'resolution'))\n>>> df.show()\n\n+---------+-----------+----------+---------------+\n|      lat|        lng|resolution|           h3_9|\n+---------+-----------+----------+---------------+\n|37.769377|-122.388903|         9|89283082e73ffff|\n+---------+-----------+----------+---------------+\n```\n\n## Extension Functions\n\nThere are also various extension functions available for geospatial common operations which are not available in the vanilla H3 library.\n\n### Assumptions\n\n* You use GeoJSON to represent geometries in your PySpark pipeline (as opposed to WKT)\n* Geometries are stored in a GeoJSON `string` within a column (such as `geometry`) in your PySpark dataset\n* Individual H3 cells are stored as a `string` column (such as `h3_9`)\n* Sets of H3 cells are stored in an `array(string)` column (such as `h3_9`)\n\n### Indexing\n\n#### `index_shape(geometry: Column, resolution: Column)`\n\nGenerate an H3 spatial index for an input GeoJSON geometry column.\n\nThis function accepts GeoJSON `Point`, `LineString`, `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`\ninput features, and returns the set of H3 cells at the specified resolution which completely cover them\n(could be more than one cell for a substantially large geometry and substantially granular resolution).\n\nThe schema of the output column will be `T.ArrayType(T.StringType())`, where each value in the array is an H3 cell.\n\nThis spatial index can then be used for bucketing, clustering, and joins in Spark via an `explode()` operation.\n\n```python\n>>> from pyspark.sql import SparkSession, functions as F\n>>> from h3_pyspark.indexing import index_shape\n>>> spark = SparkSession.builder.getOrCreate()\n>>>\n>>> df = spark.createDataFrame([{\n        'geometry': '{ \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -80.79442262649536, 32.13522895845023 ], [ -80.79298496246338, 32.13522895845023 ], [ -80.79298496246338, 32.13602844594619 ], [ -80.79442262649536, 32.13602844594619 ], [ -80.79442262649536, 32.13522895845023 ] ] ], [ [ [ -80.7923412322998, 32.1330848437511 ], [ -80.79073190689087, 32.1330848437511 ], [ -80.79073190689087, 32.13375715632646 ], [ -80.7923412322998, 32.13375715632646 ], [ -80.7923412322998, 32.1330848437511 ] ] ] ] }',\n\n        'resolution': 9\n    }])\n>>>\n>>> df = df.withColumn('h3_9', index_shape('geometry', 'resolution'))\n>>> df.show()\n+----------------------+----------+------------------------------------+\n|              geometry|resolution|                                h3_9|\n+----------------------+----------+------------------------------------+\n| { \"type\": \"MultiP... |         9| [8944d551077ffff, 8944d551073ffff] |\n+----------------------+----------+------------------------------------+\n```\n\nOptionally, add another column `h3_9_geometry` for the GeoJSON representation of each cell in the `h3_9` column [to easily map the result alongside your original input geometry](docs/spatial_index.geojson):\n\n```python\n>>> df = df.withColumn('h3_9_geometry', h3_pyspark.h3_set_to_multi_polygon(F.col('h3_9'), F.lit(True)))\n```\n\n[View Live Map on GitHub](docs/spatial_index.geojson)\n\n[![Result](https://github.com/kevinschaich/h3-pyspark/raw/master/docs/spatial_index.png)](docs/spatial_index.geojson)\n\n### Buffers\n\n#### `k_ring_distinct(cells: Column, distance: Column)`\n\nTakes in an array of input cells, perform a k-ring operation on each cell, and return the distinct set of output cells.\n\nThe schema of the output column will be `T.ArrayType(T.StringType())`, where each value in the array is an H3 cell.\n\nSince [we know the edge length & diameter (`2 * edge length`) of each H3 cell resolution](https://h3geo.org/docs/core-library/restable), we can use this to efficiently generate a \"buffered\" index of our input geometry (useful for operations such as distance joins):\n\n```python\n>>> from pyspark.sql import SparkSession, functions as F\n>>> from h3_pyspark.indexing import index_shape\n>>> from h3_pyspark.traversal import k_ring_distinct\n>>> spark = SparkSession.builder.getOrCreate()\n>>>\n>>> df = spark.createDataFrame([{\n        'geometry': '{ \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -80.79442262649536, 32.13522895845023 ], [ -80.79298496246338, 32.13522895845023 ], [ -80.79298496246338, 32.13602844594619 ], [ -80.79442262649536, 32.13602844594619 ], [ -80.79442262649536, 32.13522895845023 ] ] ], [ [ [ -80.7923412322998, 32.1330848437511 ], [ -80.79073190689087, 32.1330848437511 ], [ -80.79073190689087, 32.13375715632646 ], [ -80.7923412322998, 32.13375715632646 ], [ -80.7923412322998, 32.1330848437511 ] ] ] ] }',\n\n        'resolution': 9\n    }])\n>>>\n>>> df = df.withColumn('h3_9', index_shape('geometry', 'resolution'))\n>>> df = df.withColumn('h3_9_buffer', k_ring_distinct('h3_9', 1))\n>>> df.show()\n+--------------------+----------+--------------------+--------------------+\n|            geometry|resolution|                h3_9|         h3_9_buffer|\n+--------------------+----------+--------------------+--------------------+\n|{ \"type\": \"MultiP...|         9|[8944d551077ffff,...|[8944d551073ffff,...|\n+--------------------+----------+--------------------+--------------------+\n```\n\n[View Live Map on GitHub](docs/buffer.geojson)\n\n[![Result](https://github.com/kevinschaich/h3-pyspark/raw/master/docs/buffer.png)](docs/buffer.geojson)\n\n### Spatial Joins\n\nOnce we have an indexed version of our geometries, we can easily join on the string column in H3 to get a set of pair candidates:\n\n```python\n>>> from pyspark.sql import SparkSession, functions as F\n>>> from h3_pyspark.indexing import index_shape\n>>> spark = SparkSession.builder.getOrCreate()\n>>>\n>>> left = spark.createDataFrame([{\n        'left_id': 'left_point',\n        'left_geometry': '{ \"type\": \"Point\", \"coordinates\": [ -80.79527020454407, 32.132884966083935 ] }',\n    }])\n>>> right = spark.createDataFrame([{\n        'right_id': 'right_polygon',\n        'right_geometry': '{ \"type\": \"Polygon\", \"coordinates\": [ [ [ -80.80022692680359, 32.12864200501338 ], [ -80.79224467277527, 32.12864200501338 ], [ -80.79224467277527, 32.13378441213715 ], [ -80.80022692680359, 32.13378441213715 ], [ -80.80022692680359, 32.12864200501338 ] ] ] }',\n    }])\n>>>\n>>> left = left.withColumn('h3_9', index_shape('left_geometry', F.lit(9)))\n>>> right = right.withColumn('h3_9', index_shape('right_geometry', F.lit(9)))\n>>>\n>>> left = left.withColumn('h3_9', F.explode('h3_9'))\n>>> right = right.withColumn('h3_9', F.explode('h3_9'))\n>>>\n>>> joined = left.join(right, on='h3_9', how='inner')\n>>> joined.show()\n+---------------+--------------------+----------+--------------------+-------------+\n|           h3_9|       left_geometry|   left_id|      right_geometry|     right_id|\n+---------------+--------------------+----------+--------------------+-------------+\n|8944d55100fffff|{ \"type\": \"Point\"...|left_point|{ \"type\": \"Polygo...|right_polygon|\n+---------------+--------------------+----------+--------------------+-------------+\n```\n\nYou can combine this technique with a [Buffer](#buffers) to do a **Distance Join**.\n\n<div style=\"color: red;\">\n\n> **⚠️ Warning ⚠️:** The outputs of an H3 join are *approximate* – all resulting geometry pairs should be considered *intersection candidates* rather than *definitely intersecting*. Pairing a join here with a subsequent `distance` calculation (`distance = 0` = intersecting) or `intersects` can make this calculation exact. [Shapely](https://shapely.readthedocs.io) is a popular library with a well-documented [`distance`](https://shapely.readthedocs.io/en/stable/manual.html#object.distance) function which can be easily wrapped in a UDF:\n\n</div>\n\n```python\nfrom pyspark.sql import functions as F, types as T\nfrom shapely import geometry\nimport json\n\n@F.udf(T.DoubleType())\ndef distance(geometry1, geometry2):\n    geometry1 = json.loads(geometry1)\n    geometry1 = geometry.shape(geometry1)\n    geometry2 = json.loads(geometry2)\n    geometry2 = geometry.shape(geometry2)\n    return geometry1.distance(geometry2)\n```\n\nAfter a spatial join (detailed above), you can filter to only directly intersecting geometries:\n\n```python\n>>> joined = joined.withColumn('distance', distance(F.col('left_geometry'), F.col('right_geometry')))\n>>> joined = joined.filter(F.col('distance') == 0)\n>>> joined.show()\n+---------------+--------------------+----------+--------------------+-------------+--------+\n|           h3_9|       left_geometry|   left_id|      right_geometry|     right_id|distance|\n+---------------+--------------------+----------+--------------------+-------------+--------+\n|8944d55100fffff|{ \"type\": \"Point\"...|left_point|{ \"type\": \"Polygo...|right_polygon|     0.0|\n+---------------+--------------------+----------+--------------------+-------------+--------+\n```\n\n[View Live Map on GitHub](docs/spatial_join.geojson)\n\n[![Result](https://github.com/kevinschaich/h3-pyspark/raw/master/docs/spatial_join.png)](docs/spatial_join.geojson)\n\n## Publishing New Versions\n\n1. Bump version in [`setup.cfg`](./setup.cfg)\n2. Publish to `PyPi`\n\n        git clean -fdx\n        python3 -m build\n        python3 -m twine upload --repository pypi dist/*\n\n3. Create a new tag & release w/ version `x.x.x` and name `h3-pyspark-x.x.x` in GitHub\n4. Publish to `conda-forge`:\n    * Bump version & new tag's `sha256` hash in [`meta.yml`](https://github.com/conda-forge/h3-pyspark-feedstock/blob/master/recipe/meta.yaml) in [`@conda-forge/h3-pyspark-feedstock`](https://github.com/conda-forge/h3-pyspark-feedstock)\n        openssl sha256 /path/to/h3-pyspark-x.x.x.tar.gz\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/kevinschaich/h3-pyspark","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"h3-pyspark","package_url":"https://pypi.org/project/h3-pyspark/","platform":null,"project_url":"https://pypi.org/project/h3-pyspark/","project_urls":{"Bug Tracker":"https://github.com/kevinschaich/h3-pyspark/issues","Homepage":"https://github.com/kevinschaich/h3-pyspark"},"provides_extra":null,"release_url":"https://pypi.org/project/h3-pyspark/1.2.6/","requires_dist":null,"requires_python":">=3.6","summary":"PySpark bindings for H3, a hierarchical hexagonal geospatial indexing system","version":"1.2.6","yanked":false,"yanked_reason":null},"last_serial":13140894,"releases":{"0.0.1":[{"comment_text":"","digests":{"blake2b_256":"cb99bad32a22cb5605601112e674563f8d87c8d45a59738f8bda300610c1579f","md5":"b0185710c8172e5121df85a4f3aa60df","sha256":"9e46b35224fa9a16018260a98fbe2477c58e0c535cd54b5b9bd79847a85be70c"},"downloads":-1,"filename":"h3_pyspark-0.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"b0185710c8172e5121df85a4f3aa60df","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":9558,"upload_time":"2021-11-25T00:42:10","upload_time_iso_8601":"2021-11-25T00:42:10.903097Z","url":"https://files.pythonhosted.org/packages/cb/99/bad32a22cb5605601112e674563f8d87c8d45a59738f8bda300610c1579f/h3_pyspark-0.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"393ce09db65ffb20aea81bf3226dbf1d2c402ea30b9d1a65e2797d9df9354194","md5":"485e850cd69d3bdc4919d199be192d66","sha256":"ee5dd11e555f331d6d7428cbaca3151a0fa3f2edba1d966b6fdde5bd18d01aaf"},"downloads":-1,"filename":"h3-pyspark-0.0.1.tar.gz","has_sig":false,"md5_digest":"485e850cd69d3bdc4919d199be192d66","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":9531,"upload_time":"2021-11-25T00:42:12","upload_time_iso_8601":"2021-11-25T00:42:12.297841Z","url":"https://files.pythonhosted.org/packages/39/3c/e09db65ffb20aea81bf3226dbf1d2c402ea30b9d1a65e2797d9df9354194/h3-pyspark-0.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"aaf86d52e011157adeae53f395fbc1277995714ce5128399fd4cababf6cb6ada","md5":"bb2765b5e730a7310cc1fa0f31196cf7","sha256":"7e14b79ec51d16e18b0d5d134f6eef8b6bef60473e43aa4ca88900e045904420"},"downloads":-1,"filename":"h3_pyspark-1.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"bb2765b5e730a7310cc1fa0f31196cf7","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":9610,"upload_time":"2021-11-25T00:50:19","upload_time_iso_8601":"2021-11-25T00:50:19.686131Z","url":"https://files.pythonhosted.org/packages/aa/f8/6d52e011157adeae53f395fbc1277995714ce5128399fd4cababf6cb6ada/h3_pyspark-1.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5fd68f2816e35dc1a0c82d84b0e11995f6f31072f6404236d611c959b44f28d2","md5":"368e8f9b3433873e69eb8d48f3c26de3","sha256":"0989ae24774088e59f0de043da2d5ad214fd5b6e31034e7f0f07b45b82f4d214"},"downloads":-1,"filename":"h3-pyspark-1.0.0.tar.gz","has_sig":false,"md5_digest":"368e8f9b3433873e69eb8d48f3c26de3","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":9634,"upload_time":"2021-11-25T00:50:21","upload_time_iso_8601":"2021-11-25T00:50:21.255182Z","url":"https://files.pythonhosted.org/packages/5f/d6/8f2816e35dc1a0c82d84b0e11995f6f31072f6404236d611c959b44f28d2/h3-pyspark-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"7d5af54c7dc945db52dff26087cda013f98572d420a8466a9815dcfcdb21d319","md5":"21942f960c6b9064e684a7b383a227ea","sha256":"ad0e19c27f94baaaf913207d219b512fa6f3cf8b37e34655f3bc1e3ceb6d8b03"},"downloads":-1,"filename":"h3_pyspark-1.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"21942f960c6b9064e684a7b383a227ea","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":11569,"upload_time":"2021-12-06T19:15:17","upload_time_iso_8601":"2021-12-06T19:15:17.071733Z","url":"https://files.pythonhosted.org/packages/7d/5a/f54c7dc945db52dff26087cda013f98572d420a8466a9815dcfcdb21d319/h3_pyspark-1.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"622aadb5624252bc5604b290e845c9e297ef33d1af711d495490da077ca40d4c","md5":"9c4677b9fda3122016bfb3ccb5433f86","sha256":"1efd3db4a61f2adad75b17b8199bf753d39e0797efd7ea7727d90139b72587ba"},"downloads":-1,"filename":"h3-pyspark-1.1.0.tar.gz","has_sig":false,"md5_digest":"9c4677b9fda3122016bfb3ccb5433f86","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":12417,"upload_time":"2021-12-06T19:15:18","upload_time_iso_8601":"2021-12-06T19:15:18.366132Z","url":"https://files.pythonhosted.org/packages/62/2a/adb5624252bc5604b290e845c9e297ef33d1af711d495490da077ca40d4c/h3-pyspark-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"b5a6293714bfae57a6db212c49d0eb4731051840591f14fa2b316f0580ee80f1","md5":"08c6003b601b29477a2c23a373176af5","sha256":"547447f5f0e53c79730ad419aedf5e311ff21f2b2a420ecb022829721eb0016b"},"downloads":-1,"filename":"h3_pyspark-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"08c6003b601b29477a2c23a373176af5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":12168,"upload_time":"2022-01-04T19:19:16","upload_time_iso_8601":"2022-01-04T19:19:16.420113Z","url":"https://files.pythonhosted.org/packages/b5/a6/293714bfae57a6db212c49d0eb4731051840591f14fa2b316f0580ee80f1/h3_pyspark-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bd083893ea10c9de668ef5bdc0a7361e0c286347f66dad9f00c6bcc4b86c6c0d","md5":"c77332ed28c9f574b186a8ff6cb36b8e","sha256":"8af1733758b580e61ba82a6588b1bf553854635f3fa7ece3196fdb49e7cabddf"},"downloads":-1,"filename":"h3-pyspark-1.2.0.tar.gz","has_sig":false,"md5_digest":"c77332ed28c9f574b186a8ff6cb36b8e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":13483,"upload_time":"2022-01-04T19:19:18","upload_time_iso_8601":"2022-01-04T19:19:18.090848Z","url":"https://files.pythonhosted.org/packages/bd/08/3893ea10c9de668ef5bdc0a7361e0c286347f66dad9f00c6bcc4b86c6c0d/h3-pyspark-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.1":[{"comment_text":"","digests":{"blake2b_256":"86d28733e909ccecc193a787f47d413052156e8fefb9cd5e767d68f1dd298dce","md5":"8697f58c2d69617325372adfe14d82bb","sha256":"ebd901f1ba5f388cf4a12fe646eef118f4e10555aef7c4bca31260503d1e59b5"},"downloads":-1,"filename":"h3_pyspark-1.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"8697f58c2d69617325372adfe14d82bb","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":12166,"upload_time":"2022-01-05T17:30:15","upload_time_iso_8601":"2022-01-05T17:30:15.602603Z","url":"https://files.pythonhosted.org/packages/86/d2/8733e909ccecc193a787f47d413052156e8fefb9cd5e767d68f1dd298dce/h3_pyspark-1.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"573d8f0a57e35b68c8dbd2e0b58b241fc93e85e808d61c33e74ff3c227c9a90b","md5":"436c1b317fb587e8e766732f04ea429b","sha256":"381df93623aadae4a67f888e38d43ad946d3c8b287e2b61080ba67900b158497"},"downloads":-1,"filename":"h3-pyspark-1.2.1.tar.gz","has_sig":false,"md5_digest":"436c1b317fb587e8e766732f04ea429b","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":13465,"upload_time":"2022-01-05T17:30:16","upload_time_iso_8601":"2022-01-05T17:30:16.750211Z","url":"https://files.pythonhosted.org/packages/57/3d/8f0a57e35b68c8dbd2e0b58b241fc93e85e808d61c33e74ff3c227c9a90b/h3-pyspark-1.2.1.tar.gz","yanked":false,"yanked_reason":null}],"1.2.2":[{"comment_text":"","digests":{"blake2b_256":"196a1afe70e17f32b8abbbf11394f37f47f88ce5a7a92200f3754f60dffdef42","md5":"f7914773581cd5f799f48891281648d9","sha256":"d4feafcfe1133af183a8cd17ce0c0c4961950b1610e88acd816df453cb65c867"},"downloads":-1,"filename":"h3_pyspark-1.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"f7914773581cd5f799f48891281648d9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":12173,"upload_time":"2022-01-05T17:35:44","upload_time_iso_8601":"2022-01-05T17:35:44.770540Z","url":"https://files.pythonhosted.org/packages/19/6a/1afe70e17f32b8abbbf11394f37f47f88ce5a7a92200f3754f60dffdef42/h3_pyspark-1.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7961d75962d9c49563c13b8a0af1bc7652ecb591aca79d843c5295213ab6d76c","md5":"e25d778a36c147bbd15205f4a14fe734","sha256":"1cbda949802c92c05e8e3bb7b0be943b730ef89433c17b55802d4e1fea627548"},"downloads":-1,"filename":"h3-pyspark-1.2.2.tar.gz","has_sig":false,"md5_digest":"e25d778a36c147bbd15205f4a14fe734","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":13490,"upload_time":"2022-01-05T17:35:46","upload_time_iso_8601":"2022-01-05T17:35:46.010828Z","url":"https://files.pythonhosted.org/packages/79/61/d75962d9c49563c13b8a0af1bc7652ecb591aca79d843c5295213ab6d76c/h3-pyspark-1.2.2.tar.gz","yanked":false,"yanked_reason":null}],"1.2.3":[{"comment_text":"","digests":{"blake2b_256":"5eac99e7e7009802664c3a4ee63d0fd687d16394d8bd7af7926bad1a0c45f8b7","md5":"ea314031d10cbe1f5666f72677696350","sha256":"7d8b38faeed76c3ccf1431d98e8ed9560b72315e296a5c07630d932d673ff1ac"},"downloads":-1,"filename":"h3_pyspark-1.2.3-py3-none-any.whl","has_sig":false,"md5_digest":"ea314031d10cbe1f5666f72677696350","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":12846,"upload_time":"2022-02-24T22:03:36","upload_time_iso_8601":"2022-02-24T22:03:36.570931Z","url":"https://files.pythonhosted.org/packages/5e/ac/99e7e7009802664c3a4ee63d0fd687d16394d8bd7af7926bad1a0c45f8b7/h3_pyspark-1.2.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c2ec82f3e4dc54ae15c048ad74d11f71acc00a476e0bb7f32dc51d514018d39b","md5":"1ce9a1716f091085424e160fc298858b","sha256":"0d55e91b542e668a7a354009933128abbe7d6d57ef6756b9f15636208f69ac24"},"downloads":-1,"filename":"h3-pyspark-1.2.3.tar.gz","has_sig":false,"md5_digest":"1ce9a1716f091085424e160fc298858b","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":14124,"upload_time":"2022-02-24T22:03:37","upload_time_iso_8601":"2022-02-24T22:03:37.889526Z","url":"https://files.pythonhosted.org/packages/c2/ec/82f3e4dc54ae15c048ad74d11f71acc00a476e0bb7f32dc51d514018d39b/h3-pyspark-1.2.3.tar.gz","yanked":false,"yanked_reason":null}],"1.2.4":[{"comment_text":"","digests":{"blake2b_256":"990b13244d442a02d8a7fab739e45eedf50ca40e25436af825c1cae45e58a588","md5":"eb22d853475e64d500fcba27936511da","sha256":"c89a19eb1cc134ca978976d52a36fbe4e77ee75fffb08b565470648298b9ffa1"},"downloads":-1,"filename":"h3_pyspark-1.2.4-py3-none-any.whl","has_sig":false,"md5_digest":"eb22d853475e64d500fcba27936511da","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":13066,"upload_time":"2022-03-04T16:53:11","upload_time_iso_8601":"2022-03-04T16:53:11.072258Z","url":"https://files.pythonhosted.org/packages/99/0b/13244d442a02d8a7fab739e45eedf50ca40e25436af825c1cae45e58a588/h3_pyspark-1.2.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6c6b6a733cb8b2e2dfeb1431bf31c5ef094921bdd50a4eb5a18a7080bdebbd15","md5":"b674498e875820d5c6b20eed59a9a2d0","sha256":"828714a11663ccb8eccd6667d24a79fd105536cbda8f8ff3c1833a1345f11dcf"},"downloads":-1,"filename":"h3-pyspark-1.2.4.tar.gz","has_sig":false,"md5_digest":"b674498e875820d5c6b20eed59a9a2d0","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":14572,"upload_time":"2022-03-04T16:53:12","upload_time_iso_8601":"2022-03-04T16:53:12.335814Z","url":"https://files.pythonhosted.org/packages/6c/6b/6a733cb8b2e2dfeb1431bf31c5ef094921bdd50a4eb5a18a7080bdebbd15/h3-pyspark-1.2.4.tar.gz","yanked":false,"yanked_reason":null}],"1.2.6":[{"comment_text":"","digests":{"blake2b_256":"a75df9f0679583112cb0e656769dc4c0fbf5d4144aa606e4d23acea1b53c0ff7","md5":"7c4c423a0dc09c974b0a24b5e4b0b73b","sha256":"e247713f7006260b2da6039b0a05bb3e109ec24aa482218f08d71011baf4e00d"},"downloads":-1,"filename":"h3_pyspark-1.2.6-py3-none-any.whl","has_sig":false,"md5_digest":"7c4c423a0dc09c974b0a24b5e4b0b73b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":13130,"upload_time":"2022-03-10T17:16:47","upload_time_iso_8601":"2022-03-10T17:16:47.079469Z","url":"https://files.pythonhosted.org/packages/a7/5d/f9f0679583112cb0e656769dc4c0fbf5d4144aa606e4d23acea1b53c0ff7/h3_pyspark-1.2.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"288ab85bb9a5bbe2468a9abf95baa2e3bd16754e770714caa9266b5183d13edb","md5":"9ac92283e58eae0cd9471ca090ae57fd","sha256":"27c6e9513b37cc18be4de5a7b9ebc8216372250ee59f26522f1ab0719f5395fe"},"downloads":-1,"filename":"h3-pyspark-1.2.6.tar.gz","has_sig":false,"md5_digest":"9ac92283e58eae0cd9471ca090ae57fd","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":14605,"upload_time":"2022-03-10T17:16:48","upload_time_iso_8601":"2022-03-10T17:16:48.904203Z","url":"https://files.pythonhosted.org/packages/28/8a/b85bb9a5bbe2468a9abf95baa2e3bd16754e770714caa9266b5183d13edb/h3-pyspark-1.2.6.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"a75df9f0679583112cb0e656769dc4c0fbf5d4144aa606e4d23acea1b53c0ff7","md5":"7c4c423a0dc09c974b0a24b5e4b0b73b","sha256":"e247713f7006260b2da6039b0a05bb3e109ec24aa482218f08d71011baf4e00d"},"downloads":-1,"filename":"h3_pyspark-1.2.6-py3-none-any.whl","has_sig":false,"md5_digest":"7c4c423a0dc09c974b0a24b5e4b0b73b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":13130,"upload_time":"2022-03-10T17:16:47","upload_time_iso_8601":"2022-03-10T17:16:47.079469Z","url":"https://files.pythonhosted.org/packages/a7/5d/f9f0679583112cb0e656769dc4c0fbf5d4144aa606e4d23acea1b53c0ff7/h3_pyspark-1.2.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"288ab85bb9a5bbe2468a9abf95baa2e3bd16754e770714caa9266b5183d13edb","md5":"9ac92283e58eae0cd9471ca090ae57fd","sha256":"27c6e9513b37cc18be4de5a7b9ebc8216372250ee59f26522f1ab0719f5395fe"},"downloads":-1,"filename":"h3-pyspark-1.2.6.tar.gz","has_sig":false,"md5_digest":"9ac92283e58eae0cd9471ca090ae57fd","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":14605,"upload_time":"2022-03-10T17:16:48","upload_time_iso_8601":"2022-03-10T17:16:48.904203Z","url":"https://files.pythonhosted.org/packages/28/8a/b85bb9a5bbe2468a9abf95baa2e3bd16754e770714caa9266b5183d13edb/h3-pyspark-1.2.6.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
