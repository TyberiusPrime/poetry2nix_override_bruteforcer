{"info":{"author":null,"author_email":"Jürgen Knauth <pubsrc@binary-overflow.de>","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","License :: OSI Approved :: Apache Software License","Programming Language :: Python :: 3","Topic :: Software Development :: Testing"],"description":"jk_prettyprintobj\n========\n\nIntroduction\n------------\n\nThis python module provides a mixin for dumping objects. This is ment for debugging purposes: Sometimes it is very convenient to have a way of writing all data of an object to STDOUT in a human readable way. This module assists in such implementations.\n\nInformation about this module can be found here:\n\n* [github.org](https://github.com/jkpubsrc/python-module-jk-prettyprintobj)\n* [pypi.python.org](https://pypi.python.org/pypi/jk_prettyprintobj)\n\nHow to use this module\n----------------------\n\n### Import the module\n\nIn order to use this module you need to import it first. So add this line to the head of your python source code file:\n\n```python\nimport jk_prettyprintobj\n```\n\n### Use the provided mixin\n\nTo make use of the features of this module you must add a mixin to your class. Example:\n\n```python\nclass ExampleClass(jk_prettyprintobj.DumpMixin):\n\n\tdef __init__(self, ...):\n\t\t...\n\n\t...\n```\n\nIf you derive your class from a base class just add the mixin to your list of base classes. The order does not matter in this case. Here is an example how to do this:\n\n```python\nclass MyFancyException(Exception, jk_prettyprintobj.DumpMixin):\n\n\tdef __init__(self, msg:str):\n\t\tsuper().__init__(msg)\n\n\t...\n```\n\nIn this example we use `Exception` as a base class to keep this example simple. It just demonstrates the technique. You can use any base class for inheritance, it is just necessary that you somewhere in the list of base classes add `jk_prettyprintobj.DumpMixin`. This does not yet make use of the features provided by `jk_prettyprintobj` but prepares its use.\n\nThis mixin adds a regular method named `dump()` to the class. For all things to work it is important that you have no other method named `dump()` in your class that might conflict with the implementation provided by `DumpMixin`. This method can be called later, but some additional implementation steps need to be taken first. (See next section!)\n\n### Implement a helper method\n\nTo actually enable the class to produce output we must implement one of the helper methods. These are:\n\n| **Method name**\t\t\t\t\t\t\t\t\t| **Description**\t\t\t\t\t\t\t\t|\n| ---\t\t\t\t\t\t\t\t\t\t\t\t| ---\t\t\t\t\t\t\t\t\t\t\t|\n| `_dump(ctx:jk_prettyprintobj.DumpCtx) -> None`\t| Implement dumping data on your own\t\t\t|\n| `_dumpVarNames() -> typing.List[str]`\t\t\t\t| Provide the names of the variable to output\t|\n\nMore to these options in the next sections.\n\n### Helper method _dumpVarNames()\n\nIf you implement the method `_dumpVarNames() -> typing.List[str]` your method needs to return a list of variable names that should be dumped to STDOUT.\n\nHere is an example of a simple but working implementation.\n\n```python\nclass Matrix(jk_prettyprintobj.DumpMixin):\n\n\tdef __init__(self, m):\n\t\tself.m = m\n\t\tself.nRows = len(m)\n\t\tself.nColumns = len(m[0])\n\n\tdef _dumpVarNames(self) -> list:\n\t\treturn [\n\t\t\t\"nRows\",\n\t\t\t\"nColumns\",\n\t\t\t\"m\",\n\t\t]\n```\n\nNow what `_dumpVarNames()` will do is simply returning a list of variables to access for output.\n\nAs private variables can not be accessed by mixins all variables in this example have therefore been defined as public variables. This is a general limitation of python so there is no way around this: All variables to output this way need to be non-private.\n\nNow let's create an instance of `Matrix` and invoke `dump()`:\n\n```python\nm = Matrix([\n\t[\t1,\t2,\t3 \t],\n\t[\t4,\t5,\t6 \t],\n\t[\t7,\t8,\t9.1234567\t],\n])\n\nm.dump()\n```\n\nIf `dump()` is invoked on an initialized instance of `Matrix` from this example such an object will render to something like this:\n\n```\n<Matrix(\n\tnRows = 3\n\tnColumns = 3\n\tm = [\n\t\t[ 1, 2, 3 ],\n\t\t[ 4, 5, 6 ],\n\t\t[ 7, 8, 9.1234567 ],\n\t]\n)>\n```\n\n### Helper method _dump(ctx)\n\nIf you implement the method `_dump(ctx:jk_prettyprintobj.DumpCtx) -> None` your method needs to use the provided context object to implement dumping variables to STDOUT on your own. This variant is helpful if you - for some reason - require to output private variables that an implementation of `_dumpVarNames()` will not be able to access.\n\nBy implementing this method you will also be able to modify the way how the contents of a variable will be written to STDOUT.\n\nHere is an example of a simple but working implementation:\n\n```python\nclass Matrix(jk_prettyprintobj.DumpMixin):\n\n\tdef __init__(self, m):\n\t\tself.__m = m\n\t\tself.__nRows = len(m)\n\t\tself.__nColumns = len(m[0])\n\n\tdef _dump(self, ctx:jk_prettyprintobj.DumpCtx):\n\t\tctx.dumpVar(\"nRows\", self.__nRows)\n\t\tctx.dumpVar(\"nColumns\", self.__nColumns)\n\t\tctx.dumpVar(\"m\", self.__m, \"float_round3\")\n```\n\nThis class is expected to represent a mathematical matrix and therefore should receive a two-dimensional field of `float` values during construction. During construction this data is stored in a private variable named `__m`. Additional private variables are created. For simplicity no other methods except `dump_()` are implemented in this example.\n\nNow what `_dump()` will do is to invoke `dumpVar()` for every single variable. `dumpVar()` has the following signature:\n\n* `dumpVar(varName:str, value, postProcessorName:str = None) -> None`\n\nThis method requires to receive up to three arguments:\n* `str varName`: The name to use for output. In this example we use `nRows` as we might add a property of exactly this name. (Not implemented in this example!)\n* `* value`: A value of any kind. This is the value that should later on be written to STDOUT.\n* `str processorName`: This optional value can be one of several identifiers that indicate how to process the value *before* it is converted to a string. (See section below.)\n\nIf `dump()` is invoked on an initialized instance of `Matrix` from this example such an object will render to something like this:\n\n```\n<Matrix(\n\tnRows = 3\n\tnColumns = 3\n\tm = [\n\t\t[ 1, 2, 3 ],\n\t\t[ 4, 5, 6 ],\n\t\t[ 7, 8, 9.123 ],\n\t]\n)>\n```\n\nPlease note that in this case the output of the very last `float` in the matrix might be rounded to three digits as defined by the processor `float_round3`. This is different to an implementation providing `_dumpVarNames()`.\n\n### Processors\n\nFor producing output you can apply a processor that will preprocess the output before writing it to STDOUT. This is useful to achieve a more human readable representation of data in some cases.\n\nThese are the processors you can use:\n\n| **Name**\t\t\t| **Description**\t\t\t\t|\n| ---\t\t\t\t| ---\t\t\t\t\t\t\t|\n| `float_round1`\t| Round to 1 fractional digit\t|\n| `float_round2`\t| Round to 2 fractional digit\t|\n| `float_round3`\t| Round to 3 fractional digit\t|\n| `float_round4`\t| Round to 4 fractional digit\t|\n| `float_round5`\t| Round to 5 fractional digit\t|\n| `float_round6`\t| Round to 6 fractional digit\t|\n| `float_round7`\t| Round to 7 fractional digit\t|\n| `int_hex`\t\t\t| Convert to hexadecimal representation\t\t|\n| `int_bit`\t\t\t| Convert to binary representation\t\t|\n| `str_shorten`\t\t| Shorten a string to at most 40 characters. If you have objects with large amounts of text this feature can make your output more readable.\t|\n\nFuther Development\n-------------------\n\nIt is likely that future developments will add more alternatives for dumping an objects. If you have any ideas, requirements or recommendations please feel free to leave a comment.\n\nContact Information\n-------------------\n\nThis is Open Source code. That not only gives you the possibility of freely using this code it also\nallows you to contribute. Feel free to contact the author(s) of this software listed below, either\nfor comments, collaboration requests, suggestions for improvement or reporting bugs:\n\n* Jürgen Knauth: pubsrc@binary-overflow.de\n\nLicense\n-------\n\nThis software is provided under the following license:\n\n* Apache Software License 2.0\n\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"pretty-print,debugging,debug","license":null,"maintainer":null,"maintainer_email":"Jürgen Knauth <pubsrc@binary-overflow.de>","name":"jk_prettyprintobj","package_url":"https://pypi.org/project/jk_prettyprintobj/","platform":null,"project_url":"https://pypi.org/project/jk_prettyprintobj/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/jk_prettyprintobj/0.2024.2.18/","requires_dist":null,"requires_python":">=3.8","summary":"This python module provides a mixin for creating pretty debugging output for objects. This is especially useful for semi-complex data structures.","version":"0.2024.2.18","yanked":false,"yanked_reason":null},"last_serial":21929185,"releases":{"0.2021.1.4":[{"comment_text":"","digests":{"blake2b_256":"725f9b5357b79ab33930f2bd00d1e60358bb647311fdef2e4ead67aa80c45c00","md5":"052b74fbf3b056383000f4ef7030be2e","sha256":"48086e418e3f7045f68e8b201011327852ccc057da083a1d3f0d3974280b416a"},"downloads":-1,"filename":"jk_prettyprintobj-0.2021.1.4.tar.gz","has_sig":false,"md5_digest":"052b74fbf3b056383000f4ef7030be2e","packagetype":"sdist","python_version":"source","requires_python":null,"size":8826,"upload_time":"2021-01-18T17:59:23","upload_time_iso_8601":"2021-01-18T17:59:23.292740Z","url":"https://files.pythonhosted.org/packages/72/5f/9b5357b79ab33930f2bd00d1e60358bb647311fdef2e4ead67aa80c45c00/jk_prettyprintobj-0.2021.1.4.tar.gz","yanked":false,"yanked_reason":null}],"0.2021.2.17":[{"comment_text":"","digests":{"blake2b_256":"7f5b820183b877183a1e04e5aa01f2729bb5cf61e131cd6121fcea2c7b4eff11","md5":"6f5fccf7ed163c8c1df6df267241a5fd","sha256":"16f5d7acb01e10b523d7196c9c00375974b97224ae602f682cca02168b3cd6e1"},"downloads":-1,"filename":"jk_prettyprintobj-0.2021.2.17.tar.gz","has_sig":false,"md5_digest":"6f5fccf7ed163c8c1df6df267241a5fd","packagetype":"sdist","python_version":"source","requires_python":null,"size":14513,"upload_time":"2021-02-17T10:39:22","upload_time_iso_8601":"2021-02-17T10:39:22.806830Z","url":"https://files.pythonhosted.org/packages/7f/5b/820183b877183a1e04e5aa01f2729bb5cf61e131cd6121fcea2c7b4eff11/jk_prettyprintobj-0.2021.2.17.tar.gz","yanked":false,"yanked_reason":null}],"0.2022.8.15":[{"comment_text":"","digests":{"blake2b_256":"a2b0bbef26a7b96847c607630537357a1040282183f58261918640a7efba67fd","md5":"2367a65256ecdc80061a355fe4982bcd","sha256":"dc723f0edcc636555a883f417e7153aab86cb70a654db4bd46be3b1927472bc6"},"downloads":-1,"filename":"jk_prettyprintobj-0.2022.8.15.tar.gz","has_sig":false,"md5_digest":"2367a65256ecdc80061a355fe4982bcd","packagetype":"sdist","python_version":"source","requires_python":null,"size":15670,"upload_time":"2022-08-14T22:39:25","upload_time_iso_8601":"2022-08-14T22:39:25.959344Z","url":"https://files.pythonhosted.org/packages/a2/b0/bbef26a7b96847c607630537357a1040282183f58261918640a7efba67fd/jk_prettyprintobj-0.2022.8.15.tar.gz","yanked":false,"yanked_reason":null}],"0.2023.3.11":[{"comment_text":"","digests":{"blake2b_256":"f65e87eae873913f4c84d7e78cafb8d7c8892ce88a03b57fbd2532cd61d966aa","md5":"cd0bae48379df7a0fe4bd8717b16e8e6","sha256":"2ec0b217470599aef5b544c7f8100cb0797cc65f20d3c0de5b1aa02ea6f4c386"},"downloads":-1,"filename":"jk_prettyprintobj-0.2023.3.11.tar.gz","has_sig":false,"md5_digest":"cd0bae48379df7a0fe4bd8717b16e8e6","packagetype":"sdist","python_version":"source","requires_python":null,"size":15761,"upload_time":"2023-03-12T15:24:20","upload_time_iso_8601":"2023-03-12T15:24:20.588961Z","url":"https://files.pythonhosted.org/packages/f6/5e/87eae873913f4c84d7e78cafb8d7c8892ce88a03b57fbd2532cd61d966aa/jk_prettyprintobj-0.2023.3.11.tar.gz","yanked":false,"yanked_reason":null}],"0.2024.2.18":[{"comment_text":null,"digests":{"blake2b_256":"3d86529c6fa41352c1b90c1eb82c3ea56f66cf91506924cc0860e3e0ad9761e4","md5":"2b83c0d98ea4b69710e6c163694ffe8e","sha256":"418d5e3d5c56667810c1ef40d0e4a829a429363a6599b9b83cc7f94bb4215efe"},"downloads":-1,"filename":"jk_prettyprintobj-0.2024.2.18-py3-none-any.whl","has_sig":false,"md5_digest":"2b83c0d98ea4b69710e6c163694ffe8e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":9530,"upload_time":"2024-02-19T07:15:07","upload_time_iso_8601":"2024-02-19T07:15:07.799460Z","url":"https://files.pythonhosted.org/packages/3d/86/529c6fa41352c1b90c1eb82c3ea56f66cf91506924cc0860e3e0ad9761e4/jk_prettyprintobj-0.2024.2.18-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":null,"digests":{"blake2b_256":"5985ee3f92b666db960499d8214622b0f8e9fdb4f6f252d1db29a2eccd753932","md5":"173c90a61bac92b1b7734aee17bc412b","sha256":"5057479eadcd566219e3a0aaa76f8e4ccb2b8a10040fce25401cba5232e222cc"},"downloads":-1,"filename":"jk_prettyprintobj-0.2024.2.18.tar.gz","has_sig":false,"md5_digest":"173c90a61bac92b1b7734aee17bc412b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":10934,"upload_time":"2024-02-19T07:15:09","upload_time_iso_8601":"2024-02-19T07:15:09.819462Z","url":"https://files.pythonhosted.org/packages/59/85/ee3f92b666db960499d8214622b0f8e9fdb4f6f252d1db29a2eccd753932/jk_prettyprintobj-0.2024.2.18.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":null,"digests":{"blake2b_256":"3d86529c6fa41352c1b90c1eb82c3ea56f66cf91506924cc0860e3e0ad9761e4","md5":"2b83c0d98ea4b69710e6c163694ffe8e","sha256":"418d5e3d5c56667810c1ef40d0e4a829a429363a6599b9b83cc7f94bb4215efe"},"downloads":-1,"filename":"jk_prettyprintobj-0.2024.2.18-py3-none-any.whl","has_sig":false,"md5_digest":"2b83c0d98ea4b69710e6c163694ffe8e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":9530,"upload_time":"2024-02-19T07:15:07","upload_time_iso_8601":"2024-02-19T07:15:07.799460Z","url":"https://files.pythonhosted.org/packages/3d/86/529c6fa41352c1b90c1eb82c3ea56f66cf91506924cc0860e3e0ad9761e4/jk_prettyprintobj-0.2024.2.18-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":null,"digests":{"blake2b_256":"5985ee3f92b666db960499d8214622b0f8e9fdb4f6f252d1db29a2eccd753932","md5":"173c90a61bac92b1b7734aee17bc412b","sha256":"5057479eadcd566219e3a0aaa76f8e4ccb2b8a10040fce25401cba5232e222cc"},"downloads":-1,"filename":"jk_prettyprintobj-0.2024.2.18.tar.gz","has_sig":false,"md5_digest":"173c90a61bac92b1b7734aee17bc412b","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":10934,"upload_time":"2024-02-19T07:15:09","upload_time_iso_8601":"2024-02-19T07:15:09.819462Z","url":"https://files.pythonhosted.org/packages/59/85/ee3f92b666db960499d8214622b0f8e9fdb4f6f252d1db29a2eccd753932/jk_prettyprintobj-0.2024.2.18.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
