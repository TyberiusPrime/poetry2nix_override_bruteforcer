{"info":{"author":"Simon Knibbs","author_email":"simon.knibbs@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Programming Language :: Python","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Topic :: Software Development :: Libraries"],"description":"Dataclasses JSON Schema (rerelease)\n===================================\n\nA library to generate JSON Schema from python 3.7 dataclasses. Python 3.6 is supported through the `dataclasses backport <https://github.com/ericvsmith/dataclasses>`_. Aims to be a more lightweight alternative to similar projects such as `marshmallow <https://github.com/marshmallow-code/marshmallow>`_ & `pydantic <https://github.com/samuelcolvin/pydantic>`_.\n\nFeature Overview\n----------------\n\n* Support for draft-04, draft-06, Swagger 2.0 & OpenAPI 3 schema types\n* Serialisation and deserialisation\n* Data validation against the generated schema\n* `APISpec <https://github.com/marshmallow-code/apispec>`_ support. Example below_:\n\nInstallation\n------------\n\n.. code:: bash\n\n    ~$ pip install dataclasses-jsonschema\n\nFor improved validation performance using `fastjsonschema <https://github.com/horejsek/python-fastjsonschema>`_, install with:\n\n.. code:: bash\n\n    ~$ pip install dataclasses-jsonschema[fast-validation]\n\nExamples\n--------\n\n.. code:: python\n\n    from dataclasses import dataclass\n\n    from dataclasses_jsonschema import JsonSchemaMixin\n\n\n    @dataclass\n    class Point(JsonSchemaMixin):\n        \"A 2D point\"\n        x: float\n        y: float\n\n\nSchema Generation\n^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> pprint(Point.json_schema())\n    {\n        'description': 'A 2D point',\n        'type': 'object',\n        'properties': {\n            'x': {'format': 'float', 'type': 'number'},\n            'y': {'format': 'float', 'type': 'number'}\n        },\n        'required': ['x', 'y']\n    }\n\nData Serialisation\n^^^^^^^^^^^^^^^^^^\n.. code:: python\n\n    >>> Point(x=3.5, y=10.1).to_dict()\n    {'x': 3.5, 'y': 10.1}\n\nDeserialisation\n^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> Point.from_dict({'x': 3.14, 'y': 1.5})\n    Point(x=3.14, y=1.5)\n    >>> Point.from_dict({'x': 3.14, y: 'wrong'})\n    dataclasses_jsonschema.ValidationError: 'wrong' is not of type 'number'\n\nGenerating multiple schemas\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    from dataclasses_jsonschema import JsonSchemaMixin, SchemaType\n\n    @dataclass\n    class Address(JsonSchemaMixin):\n        \"\"\"Postal Address\"\"\"\n        building: str\n        street: str\n        city: str\n\n    @dataclass\n    class Company(JsonSchemaMixin):\n        \"\"\"Company Details\"\"\"\n        name: str\n        address: Address\n\n    >>> pprint(JsonSchemaMixin.all_json_schemas(schema_type=SchemaType.SWAGGER_V3))\n    {'Address': {'description': 'Postal Address',\n                 'properties': {'building': {'type': 'string'},\n                                'city': {'type': 'string'},\n                                'street': {'type': 'string'}},\n                 'required': ['building', 'street', 'city'],\n                 'type': 'object'},\n     'Company': {'description': 'Company Details',\n                 'properties': {'address': {'$ref': '#/components/schemas/Address'},\n                                'name': {'type': 'string'}},\n                 'required': ['name', 'address'],\n                 'type': 'object'}}\n\n\nCustom validation using `NewType <https://docs.python.org/3/library/typing.html#newtype>`_\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    from dataclasses_jsonschema import JsonSchemaMixin, FieldEncoder\n\n    PhoneNumber = NewType('PhoneNumber', str)\n\n    class PhoneNumberField(FieldEncoder):\n\n        @property\n        def json_schema(self):\n            return {'type': 'string', 'pattern': r'^(\\([0-9]{3}\\))?[0-9]{3}-[0-9]{4}$'}\n\n    JsonSchemaMixin.register_field_encoders({PhoneNumber: PhoneNumberField()})\n\n    @dataclass\n    class Person(JsonSchemaMixin):\n        name: str\n        phone_number: PhoneNumber\n\nFor more examples `see the tests <https://github.com/s-knibbs/dataclasses-jsonschema/blob/master/tests/conftest.py>`_\n\n.. _below:\n\nAPISpec Plugin\n--------------\n**New in v2.5.0**\n\nOpenAPI & Swagger specs can be generated using the apispec plugin:\n\n.. code:: python\n\n    from typing import Optional, List\n    from dataclasses import dataclass\n\n    from apispec import APISpec\n    from apispec_webframeworks.flask import FlaskPlugin\n    from flask import Flask, jsonify\n    import pytest\n\n    from dataclasses_jsonschema.apispec import DataclassesPlugin\n    from dataclasses_jsonschema import JsonSchemaMixin\n\n\n    # Create an APISpec\n    spec = APISpec(\n        title=\"Swagger Petstore\",\n        version=\"1.0.0\",\n        openapi_version=\"3.0.2\",\n        plugins=[FlaskPlugin(), DataclassesPlugin()],\n    )\n\n\n    @dataclass\n    class Category(JsonSchemaMixin):\n        \"\"\"Pet category\"\"\"\n        name: str\n        id: Optional[int]\n\n    @dataclass\n    class Pet(JsonSchemaMixin):\n        \"\"\"A pet\"\"\"\n        categories: List[Category]\n        name: str\n\n\n    app = Flask(__name__)\n\n\n    @app.route(\"/random\")\n    def random_pet():\n        \"\"\"A cute furry animal endpoint.\n        ---\n        get:\n          description: Get a random pet\n          responses:\n            200:\n              content:\n                application/json:\n                  schema:\n                    $ref: Pet\n        \"\"\"\n        pet = get_random_pet()\n        return jsonify(pet.to_dict())\n\n    # Dependant schemas (e.g. 'Category') are added automatically\n    spec.components.schema(\"Pet\", schema=Pet)\n    with app.test_request_context():\n        spec.path(view=random_pet)\n\nTODO\n----\n\n* Add benchmarks against alternatives such as `pydantic <https://github.com/samuelcolvin/pydantic>`_ and `marshmallow <https://github.com/marshmallow-code/marshmallow>`_\n\n\n","description_content_type":"","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/s-knibbs/dataclasses-jsonschema","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"dataclasses-jsonschema-rereleased","package_url":"https://pypi.org/project/dataclasses-jsonschema-rereleased/","platform":"","project_url":"https://pypi.org/project/dataclasses-jsonschema-rereleased/","project_urls":{"Homepage":"https://github.com/s-knibbs/dataclasses-jsonschema"},"provides_extra":null,"release_url":"https://pypi.org/project/dataclasses-jsonschema-rereleased/2.12.2/","requires_dist":["python-dateutil","jsonschema","mypy-extensions","typing-extensions","dataclasses ; python_version < \"3.7\"","apispec (==3.3.2) ; extra == 'apispec'","fastjsonschema (==2.14.5) ; extra == 'fast-validation'"],"requires_python":"","summary":"JSON schema generation from dataclasses","version":"2.12.2","yanked":false,"yanked_reason":null},"last_serial":8235065,"releases":{"2.12.2":[{"comment_text":"","digests":{"blake2b_256":"9aa0517477ac4f0972484e05161f5ec4de4e8209ce606b249f25b246f334648f","md5":"de23a4b75ebe278fd81a7d28317c5a39","sha256":"73a8ca281dea719d1282187f6f718ebad31aa8923ec7bbe173d65b2d335b2585"},"downloads":-1,"filename":"dataclasses_jsonschema_rereleased-2.12.2-py3-none-any.whl","has_sig":false,"md5_digest":"de23a4b75ebe278fd81a7d28317c5a39","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":15917,"upload_time":"2020-09-21T12:48:06","upload_time_iso_8601":"2020-09-21T12:48:06.915381Z","url":"https://files.pythonhosted.org/packages/9a/a0/517477ac4f0972484e05161f5ec4de4e8209ce606b249f25b246f334648f/dataclasses_jsonschema_rereleased-2.12.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2e46f517db7364b8250996e95e26e04f889de0275844d0b6c56b0938dce24101","md5":"71bdd36e293ef6fc95d232abdf87b286","sha256":"a75791f3f1caf1acbc0699ab2988d0613f27a1661fb721fa6aaecc44e6c714c8"},"downloads":-1,"filename":"dataclasses-jsonschema-rereleased-2.12.2.tar.gz","has_sig":false,"md5_digest":"71bdd36e293ef6fc95d232abdf87b286","packagetype":"sdist","python_version":"source","requires_python":null,"size":25330,"upload_time":"2020-09-21T12:48:10","upload_time_iso_8601":"2020-09-21T12:48:10.126138Z","url":"https://files.pythonhosted.org/packages/2e/46/f517db7364b8250996e95e26e04f889de0275844d0b6c56b0938dce24101/dataclasses-jsonschema-rereleased-2.12.2.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"9aa0517477ac4f0972484e05161f5ec4de4e8209ce606b249f25b246f334648f","md5":"de23a4b75ebe278fd81a7d28317c5a39","sha256":"73a8ca281dea719d1282187f6f718ebad31aa8923ec7bbe173d65b2d335b2585"},"downloads":-1,"filename":"dataclasses_jsonschema_rereleased-2.12.2-py3-none-any.whl","has_sig":false,"md5_digest":"de23a4b75ebe278fd81a7d28317c5a39","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":15917,"upload_time":"2020-09-21T12:48:06","upload_time_iso_8601":"2020-09-21T12:48:06.915381Z","url":"https://files.pythonhosted.org/packages/9a/a0/517477ac4f0972484e05161f5ec4de4e8209ce606b249f25b246f334648f/dataclasses_jsonschema_rereleased-2.12.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2e46f517db7364b8250996e95e26e04f889de0275844d0b6c56b0938dce24101","md5":"71bdd36e293ef6fc95d232abdf87b286","sha256":"a75791f3f1caf1acbc0699ab2988d0613f27a1661fb721fa6aaecc44e6c714c8"},"downloads":-1,"filename":"dataclasses-jsonschema-rereleased-2.12.2.tar.gz","has_sig":false,"md5_digest":"71bdd36e293ef6fc95d232abdf87b286","packagetype":"sdist","python_version":"source","requires_python":null,"size":25330,"upload_time":"2020-09-21T12:48:10","upload_time_iso_8601":"2020-09-21T12:48:10.126138Z","url":"https://files.pythonhosted.org/packages/2e/46/f517db7364b8250996e95e26e04f889de0275844d0b6c56b0938dce24101/dataclasses-jsonschema-rereleased-2.12.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
