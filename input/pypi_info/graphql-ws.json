{"info":{"author":"Syrus Akbary","author_email":"me@syrusakbary.com","bugtrack_url":null,"classifiers":["Development Status :: 2 - Pre-Alpha","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Natural Language :: English","Programming Language :: Python :: 2","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description":"==========\nGraphQL WS\n==========\n\nWebsocket backend for GraphQL subscriptions.\n\nSupports the following application servers:\n\nPython 3 application servers, using asyncio:\n\n    * `aiohttp`_\n    * `websockets compatible servers`_ such as Sanic\n      (via `websockets <https://github.com/aaugustin/websockets/>`__ library)\n    * `Django v2+`_\n\nPython 2 application servers:\n\n    * `Gevent compatible servers`_ such as Flask\n    * `Django v1.x`_\n      (via `channels v1.x <https://channels.readthedocs.io/en/1.x/inshort.html>`__)\n\n\nInstallation instructions\n=========================\n\nFor instaling graphql-ws, just run this command in your shell\n\n.. code:: bash\n\n    pip install graphql-ws\n\n\nExamples\n========\n\nPython 3 servers\n----------------\n\nCreate a subscribable schema like this:\n\n.. code:: python\n\n    import asyncio\n    import graphene\n\n\n    class Query(graphene.ObjectType):\n        hello = graphene.String()\n\n        @staticmethod\n        def resolve_hello(obj, info, **kwargs):\n            return \"world\"\n\n\n    class Subscription(graphene.ObjectType):\n        count_seconds = graphene.Float(up_to=graphene.Int())\n\n        async def resolve_count_seconds(root, info, up_to):\n            for i in range(up_to):\n                yield i\n                await asyncio.sleep(1.)\n            yield up_to\n\n\n    schema = graphene.Schema(query=Query, subscription=Subscription)\n\naiohttp\n~~~~~~~\n\nThen just plug into your aiohttp server.\n\n.. code:: python\n\n    from graphql_ws.aiohttp import AiohttpSubscriptionServer\n    from .schema import schema\n\n    subscription_server = AiohttpSubscriptionServer(schema)\n\n\n    async def subscriptions(request):\n        ws = web.WebSocketResponse(protocols=('graphql-ws',))\n        await ws.prepare(request)\n\n        await subscription_server.handle(ws)\n        return ws\n\n\n    app = web.Application()\n    app.router.add_get('/subscriptions', subscriptions)\n\n    web.run_app(app, port=8000)\n\nYou can see a full example here:\nhttps://github.com/graphql-python/graphql-ws/tree/master/examples/aiohttp\n\n\nwebsockets compatible servers\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWorks with any framework that uses the websockets library for its websocket\nimplementation. For this example, plug in your Sanic server.\n\n.. code:: python\n\n    from graphql_ws.websockets_lib import WsLibSubscriptionServer\n    from . import schema\n\n    app = Sanic(__name__)\n\n    subscription_server = WsLibSubscriptionServer(schema)\n\n    @app.websocket('/subscriptions', subprotocols=['graphql-ws'])\n    async def subscriptions(request, ws):\n        await subscription_server.handle(ws)\n        return ws\n\n\n    app.run(host=\"0.0.0.0\", port=8000)\n\n\nDjango v2+\n~~~~~~~~~~\n\n\nDjango Channels 2\n~~~~~~~~~~~~~~~~~\n\nSet up with Django Channels just takes three steps:\n\n1. Install the apps\n2. Set up your schema\n3. Configure the channels router application\n\nFirst ``pip install channels`` and it to your ``INSTALLED_APPS``. If you\nwant graphiQL, install the ``graphql_ws.django`` app before\n``graphene_django`` to serve a graphiQL template that will work with\nwebsockets:\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        \"channels\",\n        \"graphql_ws.django\",\n        \"graphene_django\",\n        # ...\n    ]\n\nPoint to your schema in Django settings:\n\n.. code:: python\n\n    GRAPHENE = {\n        'SCHEMA': 'yourproject.schema.schema'\n    }\n\nFinally, you can set up channels routing yourself (maybe using\n``graphql_ws.django.routing.websocket_urlpatterns`` in your\n``URLRouter``), or you can just use one of the preset channels\napplications:\n\n.. code:: python\n\n    ASGI_APPLICATION = 'graphql_ws.django.routing.application'\n    # or\n    ASGI_APPLICATION = 'graphql_ws.django.routing.auth_application'\n\nRun ``./manage.py runserver`` and go to\n`http://localhost:8000/graphql <http://localhost:8000/graphql>`__ to test!\n\n\nPython 2  servers\n-----------------\n\nCreate a subscribable schema like this:\n\n.. code:: python\n\n    import graphene\n    from rx import Observable\n\n\n    class Query(graphene.ObjectType):\n        hello = graphene.String()\n\n        @staticmethod\n        def resolve_hello(obj, info, **kwargs):\n            return \"world\"\n\n\n    class Subscription(graphene.ObjectType):\n        count_seconds = graphene.Float(up_to=graphene.Int())\n\n        async def resolve_count_seconds(root, info, up_to=5):\n            return Observable.interval(1000)\\\n                             .map(lambda i: \"{0}\".format(i))\\\n                             .take_while(lambda i: int(i) <= up_to)\n\n\n    schema = graphene.Schema(query=Query, subscription=Subscription)\n\nGevent compatible servers\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThen just plug into your Gevent server, for example, Flask:\n\n.. code:: python\n\n    from flask_sockets import Sockets\n    from graphql_ws.gevent import GeventSubscriptionServer\n    from schema import schema\n\n    subscription_server = GeventSubscriptionServer(schema)\n    app.app_protocol = lambda environ_path_info: 'graphql-ws'\n\n\n    @sockets.route('/subscriptions')\n    def echo_socket(ws):\n        subscription_server.handle(ws)\n        return []\n\nYou can see a full example here:\nhttps://github.com/graphql-python/graphql-ws/tree/master/examples/flask_gevent\n\nDjango v1.x\n~~~~~~~~~~~\n\nFor Django v1.x and Django Channels v1.x, setup your schema in ``settings.py``\n\n.. code:: python\n\n    GRAPHENE = {\n        'SCHEMA': 'yourproject.schema.schema'\n    }\n\nThen ``pip install \"channels<1\"`` and it to your django apps, adding the\nfollowing to your ``settings.py``\n\n.. code:: python\n\n    CHANNELS_WS_PROTOCOLS = [\"graphql-ws\", ]\n    CHANNEL_LAYERS = {\n        \"default\": {\n            \"BACKEND\": \"asgiref.inmemory.ChannelLayer\",\n            \"ROUTING\": \"django_subscriptions.urls.channel_routing\",\n        },\n    }\n\nAnd finally add the channel routes\n\n.. code:: python\n\n    from channels.routing import route_class\n    from graphql_ws.django_channels import GraphQLSubscriptionConsumer\n\n    channel_routing = [\n        route_class(GraphQLSubscriptionConsumer, path=r\"^/subscriptions\"),\n    ]\n\nYou can see a full example here:\nhttps://github.com/graphql-python/graphql-ws/tree/master/examples/django_subscriptions\n\n\n","description_content_type":"text/x-rst","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/graphql-python/graphql-ws","keywords":"graphql,subscriptions,graphene,websockets","license":"MIT","maintainer":"","maintainer_email":"","name":"graphql-ws","package_url":"https://pypi.org/project/graphql-ws/","platform":"","project_url":"https://pypi.org/project/graphql-ws/","project_urls":{"Homepage":"https://github.com/graphql-python/graphql-ws"},"provides_extra":null,"release_url":"https://pypi.org/project/graphql-ws/0.4.4/","requires_dist":["graphql-core (==2.*)","flake8 (<4,>=3.7) ; extra == 'dev'","black ; extra == 'dev'","tox (<4,>=3) ; extra == 'dev'","Sphinx (<2,>=1.8) ; extra == 'dev'","bumpversion (>=0.5.3) ; extra == 'maintainer'","wheel (>=0.33.6) ; extra == 'maintainer'","PyYAML (<6,>=5.3) ; extra == 'maintainer'","pytest-cov ; extra == 'test'","graphene (<3,>=2.0) ; extra == 'test'","gevent ; extra == 'test'","graphene-django ; extra == 'test'","pytest (<5,>=4) ; (python_version < \"3\") and extra == 'test'","mock ; (python_version < \"3\") and extra == 'test'","django (==1.11.*) ; (python_version < \"3\") and extra == 'test'","channels (==1.*) ; (python_version < \"3\") and extra == 'test'","pytest (>5) ; (python_version >= \"3\") and extra == 'test'","django (==3.*) ; (python_version >= \"3\") and extra == 'test'","channels (==3.*) ; (python_version >= \"3\") and extra == 'test'","pytest-asyncio ; (python_version >= \"3.4\") and extra == 'test'","aiohttp ; (python_version >= \"3.5\") and extra == 'test'"],"requires_python":"","summary":"Websocket backend for GraphQL subscriptions","version":"0.4.4","yanked":false,"yanked_reason":null},"last_serial":11260752,"releases":{"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"fb0d4ced942d16fef8579b74f2231ffb337efa0cbadf7d469c461258e2cc70d2","md5":"9f878395205e8e38f290438e3b7b4a44","sha256":"9dc49062fdd5b38717a4874500dde3a59e5132a4b202838d43d41ad2f6bc4b3d"},"downloads":-1,"filename":"graphql_ws-0.2.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9f878395205e8e38f290438e3b7b4a44","packagetype":"bdist_wheel","python_version":"3.6","requires_python":null,"size":7960,"upload_time":"2017-11-17T08:13:08","upload_time_iso_8601":"2017-11-17T08:13:08.328569Z","url":"https://files.pythonhosted.org/packages/fb/0d/4ced942d16fef8579b74f2231ffb337efa0cbadf7d469c461258e2cc70d2/graphql_ws-0.2.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5c12984fe55c9099f4394b7ae29c1d515a69cc81558c107aa5c2a6f3478b9a78","md5":"29f09ffb6dc4ac1edb1e09c0d040c5ae","sha256":"94a98495390952d11c2986c0b05f00d0d5d79881ed3ae9f28928d3531b6a8ca0"},"downloads":-1,"filename":"graphql-ws-0.2.0.tar.gz","has_sig":false,"md5_digest":"29f09ffb6dc4ac1edb1e09c0d040c5ae","packagetype":"sdist","python_version":"source","requires_python":null,"size":15749,"upload_time":"2017-11-17T08:12:53","upload_time_iso_8601":"2017-11-17T08:12:53.218104Z","url":"https://files.pythonhosted.org/packages/5c/12/984fe55c9099f4394b7ae29c1d515a69cc81558c107aa5c2a6f3478b9a78/graphql-ws-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"4b3285a8c99131149b1657347baca5528867046453272296452513da5d9d21ef","md5":"8ee3afdc123f1d6ed815493d6b8d81e9","sha256":"13449f7caac404323f1ddad5d3b0f8fe89241cfac5192dd8f62e78f155be2dd0"},"downloads":-1,"filename":"graphql_ws-0.3.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"8ee3afdc123f1d6ed815493d6b8d81e9","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":10820,"upload_time":"2018-09-25T11:31:18","upload_time_iso_8601":"2018-09-25T11:31:18.155340Z","url":"https://files.pythonhosted.org/packages/4b/32/85a8c99131149b1657347baca5528867046453272296452513da5d9d21ef/graphql_ws-0.3.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"33b41330c300e603cc1a9b7d5644811481e5e4d94245146fc19b8f57579ac69c","md5":"23727cbd497bbe79fc447a75ed9a3d7f","sha256":"b4e80b6bc50c29cfa27f3d63e8a289c91d3cffb49022a7dbe96dababcf763159"},"downloads":-1,"filename":"graphql-ws-0.3.0.tar.gz","has_sig":false,"md5_digest":"23727cbd497bbe79fc447a75ed9a3d7f","packagetype":"sdist","python_version":"source","requires_python":null,"size":16545,"upload_time":"2018-09-25T11:31:09","upload_time_iso_8601":"2018-09-25T11:31:09.929445Z","url":"https://files.pythonhosted.org/packages/33/b4/1330c300e603cc1a9b7d5644811481e5e4d94245146fc19b8f57579ac69c/graphql-ws-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.1":[{"comment_text":"","digests":{"blake2b_256":"f310bb47948010e24d2eeead3131ef29bb157345a86d22cc408f46786397c924","md5":"418e07668c6478756f8e23cc6bda40d0","sha256":"2ce29b2dad178f288a469bc6e06b74b4a02edccfcc968c4b5cfaa820e6136b95"},"downloads":-1,"filename":"graphql_ws-0.3.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"418e07668c6478756f8e23cc6bda40d0","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":10944,"upload_time":"2020-05-19T02:23:50","upload_time_iso_8601":"2020-05-19T02:23:50.969746Z","url":"https://files.pythonhosted.org/packages/f3/10/bb47948010e24d2eeead3131ef29bb157345a86d22cc408f46786397c924/graphql_ws-0.3.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"81805a34a1ca32f356b3a7efd3d8f22490eaedf6d97eef9e64fda46c2aa6b8c7","md5":"96bbe16834450972b2e2f9d879ba988a","sha256":"ad711b974511b229cbc0aabff6ed6dda0706a91df8892cc9e2fce21a827e69f0"},"downloads":-1,"filename":"graphql-ws-0.3.1.tar.gz","has_sig":false,"md5_digest":"96bbe16834450972b2e2f9d879ba988a","packagetype":"sdist","python_version":"source","requires_python":null,"size":16287,"upload_time":"2020-05-19T02:23:51","upload_time_iso_8601":"2020-05-19T02:23:51.977876Z","url":"https://files.pythonhosted.org/packages/81/80/5a34a1ca32f356b3a7efd3d8f22490eaedf6d97eef9e64fda46c2aa6b8c7/graphql-ws-0.3.1.tar.gz","yanked":false,"yanked_reason":null}],"0.4.3":[{"comment_text":"","digests":{"blake2b_256":"117db208175bef7821d47e3925bc21bfccca6f8c16c8bda670f300c81eb74455","md5":"eead181719ce1bce7d93942c56c5e25c","sha256":"e18fa28bdd605cf07e4c1f374881a79e6489e0c3c23f394cee95d58ab04da155"},"downloads":-1,"filename":"graphql_ws-0.4.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"eead181719ce1bce7d93942c56c5e25c","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":17331,"upload_time":"2021-08-24T08:50:33","upload_time_iso_8601":"2021-08-24T08:50:33.252146Z","url":"https://files.pythonhosted.org/packages/11/7d/b208175bef7821d47e3925bc21bfccca6f8c16c8bda670f300c81eb74455/graphql_ws-0.4.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d6f8ce3620e6550ca03cd0b99ad474564a22cf90de110b5d48b204629480ba70","md5":"86880b08492756ed116cb793e8ad04b7","sha256":"56373c4769a31fba6eabb9487caa94f3018ab650c53945c0447ac2693cb6e693"},"downloads":-1,"filename":"graphql-ws-0.4.3.tar.gz","has_sig":false,"md5_digest":"86880b08492756ed116cb793e8ad04b7","packagetype":"sdist","python_version":"source","requires_python":null,"size":47815,"upload_time":"2021-08-24T08:50:34","upload_time_iso_8601":"2021-08-24T08:50:34.378783Z","url":"https://files.pythonhosted.org/packages/d6/f8/ce3620e6550ca03cd0b99ad474564a22cf90de110b5d48b204629480ba70/graphql-ws-0.4.3.tar.gz","yanked":false,"yanked_reason":null}],"0.4.4":[{"comment_text":"","digests":{"blake2b_256":"9719fd64b7972099032bfa88358ad41e95c3348a73661a23727ba2981d43d2af","md5":"ece19d51f24c4d55e567823b55983cd8","sha256":"b6f4c9f6968feba80762354068a2a36538a48ac72e4253971be43e0cba020506"},"downloads":-1,"filename":"graphql_ws-0.4.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ece19d51f24c4d55e567823b55983cd8","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":17330,"upload_time":"2021-08-24T09:08:39","upload_time_iso_8601":"2021-08-24T09:08:39.760158Z","url":"https://files.pythonhosted.org/packages/97/19/fd64b7972099032bfa88358ad41e95c3348a73661a23727ba2981d43d2af/graphql_ws-0.4.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c41f7987d85bdd997e01637d9135cf9896131614f3322f1cd40b0e125633c894","md5":"2e7a73123ac41cf81dd33785865da1c4","sha256":"2ad38db70f37964f54d7eb3e2ede86dbe3f2a1ed7ea0a9f9a3b8b17162a22852"},"downloads":-1,"filename":"graphql-ws-0.4.4.tar.gz","has_sig":false,"md5_digest":"2e7a73123ac41cf81dd33785865da1c4","packagetype":"sdist","python_version":"source","requires_python":null,"size":47860,"upload_time":"2021-08-24T09:08:41","upload_time_iso_8601":"2021-08-24T09:08:41.591255Z","url":"https://files.pythonhosted.org/packages/c4/1f/7987d85bdd997e01637d9135cf9896131614f3322f1cd40b0e125633c894/graphql-ws-0.4.4.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"9719fd64b7972099032bfa88358ad41e95c3348a73661a23727ba2981d43d2af","md5":"ece19d51f24c4d55e567823b55983cd8","sha256":"b6f4c9f6968feba80762354068a2a36538a48ac72e4253971be43e0cba020506"},"downloads":-1,"filename":"graphql_ws-0.4.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ece19d51f24c4d55e567823b55983cd8","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":17330,"upload_time":"2021-08-24T09:08:39","upload_time_iso_8601":"2021-08-24T09:08:39.760158Z","url":"https://files.pythonhosted.org/packages/97/19/fd64b7972099032bfa88358ad41e95c3348a73661a23727ba2981d43d2af/graphql_ws-0.4.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c41f7987d85bdd997e01637d9135cf9896131614f3322f1cd40b0e125633c894","md5":"2e7a73123ac41cf81dd33785865da1c4","sha256":"2ad38db70f37964f54d7eb3e2ede86dbe3f2a1ed7ea0a9f9a3b8b17162a22852"},"downloads":-1,"filename":"graphql-ws-0.4.4.tar.gz","has_sig":false,"md5_digest":"2e7a73123ac41cf81dd33785865da1c4","packagetype":"sdist","python_version":"source","requires_python":null,"size":47860,"upload_time":"2021-08-24T09:08:41","upload_time_iso_8601":"2021-08-24T09:08:41.591255Z","url":"https://files.pythonhosted.org/packages/c4/1f/7987d85bdd997e01637d9135cf9896131614f3322f1cd40b0e125633c894/graphql-ws-0.4.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
