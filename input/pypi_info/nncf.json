{"info":{"author":"Intel","author_email":"alexander.kozlov@intel.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3"],"description":"<div align=\"center\">\n\n# Neural Network Compression Framework (NNCF)\n\n[Key Features](#key-features) •\n[Installation](#installation-guide) •\n[Documentation](#documentation) •\n[Usage](#usage) •\n[Tutorials and Samples](#demos-tutorials-and-samples) •\n[Third-party integration](#third-party-repository-integration) •\n[Model Zoo](./docs/ModelZoo.md)\n\n[![GitHub Release](https://img.shields.io/github/v/release/openvinotoolkit/nncf?color=green)](https://github.com/openvinotoolkit/nncf/releases)\n[![Website](https://img.shields.io/website?up_color=blue&up_message=docs&url=https%3A%2F%2Fdocs.openvino.ai%2Flatest%2Fopenvino_docs_model_optimization_guide.html)](https://docs.openvino.ai/latest/openvino_docs_model_optimization_guide.html)\n[![Apache License Version 2.0](https://img.shields.io/badge/license-Apache_2.0-green.svg)](LICENSE)\n[![PyPI Downloads](https://static.pepy.tech/badge/nncf)](https://pypi.org/project/nncf/)\n\n</div>\n\nNeural Network Compression Framework (NNCF) provides a suite of post-training and training-time algorithms for neural networks inference optimization in [OpenVINO&trade;](https://docs.openvino.ai) with minimal accuracy drop.\n\nNNCF is designed to work with models from [PyTorch](https://pytorch.org/), [TensorFlow](https://www.tensorflow.org/), [ONNX](https://onnx.ai/) and [OpenVINO&trade;](https://docs.openvino.ai/latest/home.html).\n\nNNCF provides [samples](#demos-tutorials-and-samples) that demonstrate the usage of compression algorithms for different use cases and models. See compression results achievable with the NNCF-powered samples at [Model Zoo page](./docs/ModelZoo.md).\n\nThe framework is organized as a Python\\* package that can be built and used in a standalone mode. The framework\narchitecture is unified to make it easy to add different compression algorithms for both PyTorch and TensorFlow deep\nlearning frameworks.\n\n## Key Features\n\n### Post-Training Compression Algorithms\n\n| Compression algorithm                                                       |OpenVINO|PyTorch|   TensorFlow   |     ONNX       |\n|:----------------------------------------------------------------------------| :---: | :---: |:--------:|:------------------:|\n| [Post-Training Quantization](./docs/usage/post_training_compression/post_training_quantization/Usage.md) | Supported | Supported |Supported| Supported |\n| [Weights Compression](./docs/usage/post_training_compression/weights_compression/Usage.md) | Supported | Supported |Not supported| Not supported |\n\n### Training-Time Compression Algorithms\n\n|Compression algorithm|PyTorch|TensorFlow|\n| :--- | :---: | :---: |\n|[Quantization Aware Training](./docs/usage/training_time_compression/quantization_aware_training/Usage.md) | Supported | Supported |\n|[Mixed-Precision Quantization](./docs/usage/training_time_compression/other_algorithms/LegacyQuantization.md#mixed-precision-quantization) | Supported | Not supported |\n|[Sparsity](./docs/usage/training_time_compression/other_algorithms/Sparsity.md) | Supported | Supported |\n|[Filter pruning](./docs/usage/training_time_compression/other_algorithms/Pruning.md) | Supported | Supported |\n|[Movement pruning](./nncf/experimental/torch/sparsity/movement/MovementSparsity.md) | Experimental | Not supported |\n\n- Automatic, configurable model graph transformation to obtain the compressed model.\n  > **NOTE**: Limited support for TensorFlow models. The models created using Sequential or Keras Functional API are only supported.\n- Common interface for compression methods.\n- GPU-accelerated layers for faster compressed model fine-tuning.\n- Distributed training support.\n- Git patch for prominent third-party repository ([huggingface-transformers](https://github.com/huggingface/transformers)) demonstrating the process of integrating NNCF into custom training pipelines\n- Seamless combination of pruning, sparsity and quantization algorithms. Please refer to [optimum-intel](https://github.com/huggingface/optimum-intel/tree/main/examples/openvino) for examples of\njoint (movement) pruning, quantization and distillation (JPQD), end-to-end from NNCF optimization to compressed OpenVINO IR.\n- Exporting PyTorch compressed models to ONNX\\* checkpoints and TensorFlow compressed models to SavedModel or Frozen Graph format, ready to use with [OpenVINO&trade; toolkit](https://docs.openvino.ai).\n- Support for [Accuracy-Aware model training](./docs/usage/training_time_compression/other_algorithms/Usage.md#accuracy-aware-model-training) pipelines via the [Adaptive Compression Level Training](./docs/accuracy_aware_model_training/AdaptiveCompressionLevelTraining.md) and [Early Exit Training](./docs/accuracy_aware_model_training/EarlyExitTraining.md).\n\n## Documentation\n\nThis documentation covers detailed information about NNCF algorithms and functions needed for the contribution to NNCF.\n\nThe latest user documentation for NNCF is available [here](https://docs.openvino.ai/latest/openvino_docs_model_optimization_guide.html).\n\nNNCF API documentation can be found [here](https://openvinotoolkit.github.io/nncf/autoapi/nncf/).\n\n## Usage\n\n### Post-Training Quantization\n\nThe NNCF PTQ is the simplest way to apply 8-bit quantization. To run the algorithm you only need your model and a small (~300 samples) calibration dataset.\n\n[OpenVINO](https://github.com/openvinotoolkit/openvino) is the preferred backend to run PTQ with, and PyTorch, TensorFlow and ONNX are also supported.\n\n<details open><summary><b>OpenVINO</b></summary>\n\n```python\nimport nncf\nimport openvino.runtime as ov\nimport torch\nfrom torchvision import datasets, transforms\n\n# Instantiate your uncompressed model\nmodel = ov.Core().read_model(\"/model_path\")\n\n# Provide validation part of the dataset to collect statistics needed for the compression algorithm\nval_dataset = datasets.ImageFolder(\"/path\", transform=transforms.Compose([transforms.ToTensor()]))\ndataset_loader = torch.utils.data.DataLoader(val_dataset, batch_size=1)\n\n# Step 1: Initialize transformation function\ndef transform_fn(data_item):\n    images, _ = data_item\n    return images\n\n# Step 2: Initialize NNCF Dataset\ncalibration_dataset = nncf.Dataset(dataset_loader, transform_fn)\n# Step 3: Run the quantization pipeline\nquantized_model = nncf.quantize(model, calibration_dataset)\n```\n\n</details>\n\n<details><summary><b>PyTorch</b></summary>\n\n```python\nimport nncf\nimport torch\nfrom torchvision import datasets, models\n\n# Instantiate your uncompressed model\nmodel = models.mobilenet_v2()\n\n# Provide validation part of the dataset to collect statistics needed for the compression algorithm\nval_dataset = datasets.ImageFolder(\"/path\", transform=transforms.Compose([transforms.ToTensor()]))\ndataset_loader = torch.utils.data.DataLoader(val_dataset)\n\n# Step 1: Initialize the transformation function\ndef transform_fn(data_item):\n    images, _ = data_item\n    return images\n\n# Step 2: Initialize NNCF Dataset\ncalibration_dataset = nncf.Dataset(dataset_loader, transform_fn)\n# Step 3: Run the quantization pipeline\nquantized_model = nncf.quantize(model, calibration_dataset)\n\n```\n\n**NOTE**  In case the Post-Training Quantization algorithm could not reach quality requirements you can fine-tune the quantized pytorch model. Example of the Quantization-Aware training pipeline for a pytorch model could be found [here](examples/quantization_aware_training/torch/resnet18/README.md).\n\n</details>\n\n<details><summary><b>TensorFlow</b></summary>\n\n```python\nimport nncf\nimport tensorflow as tf\nimport tensorflow_datasets as tfds\n\n# Instantiate your uncompressed model\nmodel = tf.keras.applications.MobileNetV2()\n\n# Provide validation part of the dataset to collect statistics needed for the compression algorithm\nval_dataset = tfds.load(\"/path\", split=\"validation\",\n                        shuffle_files=False, as_supervised=True)\n\n# Step 1: Initialize transformation function\ndef transform_fn(data_item):\n    images, _ = data_item\n    return images\n\n# Step 2: Initialize NNCF Dataset\ncalibration_dataset = nncf.Dataset(val_dataset, transform_fn)\n# Step 3: Run the quantization pipeline\nquantized_model = nncf.quantize(model, calibration_dataset)\n```\n\n</details>\n\n<details><summary><b>ONNX</b></summary>\n\n```python\nimport onnx\nimport nncf\nimport torch\nfrom torchvision import datasets\n\n# Instantiate your uncompressed model\nonnx_model = onnx.load_model(\"/model_path\")\n\n# Provide validation part of the dataset to collect statistics needed for the compression algorithm\nval_dataset = datasets.ImageFolder(\"/path\", transform=transforms.Compose([transforms.ToTensor()]))\ndataset_loader = torch.utils.data.DataLoader(val_dataset, batch_size=1)\n\n# Step 1: Initialize transformation function\ninput_name = onnx_model.graph.input[0].name\ndef transform_fn(data_item):\n    images, _ = data_item\n    return {input_name: images.numpy()}\n\n# Step 2: Initialize NNCF Dataset\ncalibration_dataset = nncf.Dataset(dataset_loader, transform_fn)\n# Step 3: Run the quantization pipeline\nquantized_model = nncf.quantize(onnx_model, calibration_dataset)\n```\n\n</details>\n\n[//]: # (NNCF provides full  [samples]&#40;#post-training-quantization-samples&#41;, which demonstrate Post-Training Quantization usage for PyTorch, TensorFlow, ONNX, OpenVINO.)\n\n### Training-Time Quantization\n\nBelow is an example of Accuracy Aware Quantization pipeline where model weights and compression parameters may be fine-tuned to achieve a higher accuracy.\n\n<details><summary><b>PyTorch</b></summary>\n\n```python\nimport nncf\nimport torch\nfrom torchvision import datasets, models\n\n# Instantiate your uncompressed model\nmodel = models.mobilenet_v2()\n\n# Provide validation part of the dataset to collect statistics needed for the compression algorithm\nval_dataset = datasets.ImageFolder(\"/path\", transform=transforms.Compose([transforms.ToTensor()]))\ndataset_loader = torch.utils.data.DataLoader(val_dataset)\n\n# Step 1: Initialize the transformation function\ndef transform_fn(data_item):\n    images, _ = data_item\n    return images\n\n# Step 2: Initialize NNCF Dataset\ncalibration_dataset = nncf.Dataset(dataset_loader, transform_fn)\n# Step 3: Run the quantization pipeline\nquantized_model = nncf.quantize(model, calibration_dataset)\n\n# Now use compressed_model as a usual torch.nn.Module\n# to fine-tune compression parameters along with the model weights\n\n# Save quantization modules and the quantized model parameters\ncheckpoint = {\n    'state_dict': model.state_dict(),\n    'nncf_config': model.nncf.get_config(),\n    ... # the rest of the user-defined objects to save\n}\ntorch.save(checkpoint, path_to_checkpoint)\n\n# ...\n\n# Load quantization modules and the quantized model parameters\nresuming_checkpoint = torch.load(path_to_checkpoint)\nnncf_config = resuming_checkpoint['nncf_config']\nstate_dict = resuming_checkpoint['state_dict']\n\nquantized_model = nncf.torch.load_from_config(model, nncf_config, example_input)\nmodel.load_state_dict(state_dict)\n# ... the rest of the usual PyTorch-powered training pipeline\n```\n\n</details>\n\n### Training-Time Compression\n\nBelow is an example of Accuracy Aware RB Sparsification pipeline where model weights and compression parameters may be fine-tuned to achieve a higher accuracy.\n\n<details><summary><b>PyTorch</b></summary>\n\n```python\nimport torch\nimport nncf.torch  # Important - must be imported before any other external package that depends on torch\n\nfrom nncf import NNCFConfig\nfrom nncf.torch import create_compressed_model, register_default_init_args\n\n# Instantiate your uncompressed model\nfrom torchvision.models.resnet import resnet50\nmodel = resnet50()\n\n# Load a configuration file to specify compression\nnncf_config = NNCFConfig.from_json(\"resnet50_imagenet_rb_sparsity.json\")\n\n# Provide data loaders for compression algorithm initialization, if necessary\nimport torchvision.datasets as datasets\nrepresentative_dataset = datasets.ImageFolder(\"/path\", transform=transforms.Compose([transforms.ToTensor()]))\ninit_loader = torch.utils.data.DataLoader(representative_dataset)\nnncf_config = register_default_init_args(nncf_config, init_loader)\n\n# Apply the specified compression algorithms to the model\ncompression_ctrl, compressed_model = create_compressed_model(model, nncf_config)\n\n# Now use compressed_model as a usual torch.nn.Module\n# to fine-tune compression parameters along with the model weights\n\n# ... the rest of the usual PyTorch-powered training pipeline\n\n# Export to ONNX or .pth when done fine-tuning\ncompression_ctrl.export_model(\"compressed_model.onnx\")\ntorch.save(compressed_model.state_dict(), \"compressed_model.pth\")\n```\n\n**NOTE (PyTorch)**: Due to the way NNCF works within the PyTorch backend, `import nncf` must be done before any other import of `torch` in your package _or_ in third-party packages that your code utilizes, otherwise the compression may be applied incompletely.\n\n</details>\n\n<details><summary><b>Tensorflow</b></summary>\n\n```python\nimport tensorflow as tf\n\nfrom nncf import NNCFConfig\nfrom nncf.tensorflow import create_compressed_model, register_default_init_args\n\n# Instantiate your uncompressed model\nfrom tensorflow.keras.applications import ResNet50\nmodel = ResNet50()\n\n# Load a configuration file to specify compression\nnncf_config = NNCFConfig.from_json(\"resnet50_imagenet_rb_sparsity.json\")\n\n# Provide dataset for compression algorithm initialization\nrepresentative_dataset = tf.data.Dataset.list_files(\"/path/*.jpeg\")\nnncf_config = register_default_init_args(nncf_config, representative_dataset, batch_size=1)\n\n# Apply the specified compression algorithms to the model\ncompression_ctrl, compressed_model = create_compressed_model(model, nncf_config)\n\n# Now use compressed_model as a usual Keras model\n# to fine-tune compression parameters along with the model weights\n\n# ... the rest of the usual TensorFlow-powered training pipeline\n\n# Export to Frozen Graph, TensorFlow SavedModel or .h5  when done fine-tuning\ncompression_ctrl.export_model(\"compressed_model.pb\", save_format=\"frozen_graph\")\n```\n\n</details>\n\nFor a more detailed description of NNCF usage in your training code, see [this tutorial](docs/usage/training_time_compression/other_algorithms/Usage.md).\n\n## Demos, Tutorials and Samples\n\nFor a quicker start with NNCF-powered compression, try sample notebooks and scripts presented below.\n\n### Jupyter* Notebook Tutorials and Demos\n\nA collection of ready-to-run Jupyter* notebooks tutorials and demos are available to explain and display NNCF compression algorithms for optimizing models for inference with the OpenVINO Toolkit.\n\n| Notebook Tutorial Name                                                                                                                                                                                                                                                                                                                                 |                                  Compression Algorithm                                  |  Backend   |               Domain                |\n|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------:|:----------:|:-----------------------------------:|\n| [BERT Quantization](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/language-quantize-bert)<br>[![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/openvinotoolkit/openvino_notebooks/blob/latest/notebooks/language-quantize-bert/language-quantize-bert.ipynb) |                               Post-Training Quantization                                |  OpenVINO  |                 NLP                 |\n| [MONAI Segmentation Model Quantization](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/ct-segmentation-quantize)<br>[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/openvinotoolkit/openvino_notebooks/HEAD?filepath=notebooks%2Fct-segmentation-quantize%2Fct-scan-live-inference.ipynb)     |                               Post-Training Quantization                                |  OpenVINO  |            Segmentation             |\n| [PyTorch Model Quantization](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/pytorch-post-training-quantization-nncf)                                                                                                                                                                                                      |                               Post-Training Quantization                                |  PyTorch   |        Image Classification         |\n| [Quantization with Accuracy Control](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/quantizing-model-with-accuracy-control)                                                                                                                                                                                               |                    Post-Training Quantization with Accuracy Control                     |  OpenVINO  | Speech-to-Text,<br>Object Detection |\n| [PyTorch Training-Time Compression](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/pytorch-quantization-aware-training)                                                                                                                                                                                                   |                                Training-Time Compression                                |  PyTorch   |        Image Classification         |\n| [TensorFlow Training-Time Compression](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/tensorflow-quantization-aware-training)                                                                                                                                                                                                       |                                Training-Time Compression                                | Tensorflow |        Image Classification         |\n| [Joint Pruning, Quantization and Distillation for BERT](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/sparsity-optimization)                                                                                                                                                                                             |                      Joint Pruning, Quantization and Distillation                       |  OpenVINO  |                 NLP                 |\n\nBelow is a list of notebooks demonstrating OpenVINO conversion and inference together with NNCF compression for models from various domains.\n\n| Demo Model                                                                                                                                                                                                                                                                                                                                        |               Compression Algorithm               |  Backend  |                                Domain                                |\n|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------:|:---------:|:--------------------------------------------------------------------:|\n| [YOLOv8](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/yolov8-optimization)<br>[![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/openvinotoolkit/openvino_notebooks/blob/latest/notebooks/yolov8-optimization/yolov8-object-detection.ipynb)            |            Post-Training Quantization             | OpenVINO  |  Object Detection,<br>KeyPoint Detection,<br>Instance Segmentation   |\n| [YOLOv7](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/yolov7-optimization)                                                                                                                                                                                                                                         |            Post-Training Quantization             | OpenVINO  |                           Object Detection                           |\n| [EfficientSAM](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/efficient-sam)                                                                                                                                                                                                                                         |            Post-Training Quantization             | OpenVINO  |                          Image Segmentation                          |\n| [Segment Anything Model](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/segment-anything)                                                                                                                                                                                                                            |            Post-Training Quantization             | OpenVINO  |                          Image Segmentation                          |\n| [OneFormer](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/oneformer-segmentation)                                                                                                                                                                                                                                   |            Post-Training Quantization             | OpenVINO  |                          Image Segmentation                          |\n| [InstructPix2Pix](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/instruct-pix2pix-image-editing)                                                                                                                                                                                                                     |            Post-Training Quantization             | OpenVINO  |                            Image-to-Image                            |\n| [CLIP](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/clip-zero-shot-image-classification)                                                                                                                                                                                                                           |            Post-Training Quantization             | OpenVINO  |                            Image-to-Text                             |\n| [BLIP](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/blip-visual-language-processing)                                                                                                                                                                                                                               |            Post-Training Quantization             | OpenVINO  |                            Image-to-Text                             |\n| [Segmind-VegaRT](https://github.com/openvinotoolkit/openvino_notebooks/blob/latest/notebooks/stable-diffusion-xl/segmind-vegart.ipynb)                                                                                                                                                                                                            |            Post-Training Quantization             | OpenVINO  |                            Text-to-Image                             |\n| [Latent Consistency Model](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/latent-consistency-models-image-generation)                                                                                                                                                                                                |            Post-Training Quantization             | OpenVINO  |                            Text-to-Image                             |\n| [Würstchen](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/wuerstchen-image-generation)                                                                                                                                                                                                                              |            Post-Training Quantization             | OpenVINO  |                            Text-to-Image                             |\n| [ControlNet QR Code Monster](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/qrcode-monster)                                                                                                                                                                                                                          |            Post-Training Quantization             | OpenVINO  |                            Text-to-Image                             |\n| [SDXL-turbo](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/sdxl-turbo)                                                                                                                                                                                                                                              |            Post-Training Quantization             | OpenVINO  |                   Text-to-Image,<br>Image-to-Image                   |\n| [ImageBind](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/image-bind)                                                                                                                                                                                                                                               |            Post-Training Quantization             | OpenVINO  |                        Multi-Modal Retrieval                         |\n| [Distil-Whisper](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/distil-whisper-asr)                                                                                                                                                                                                                                  |            Post-Training Quantization             | OpenVINO  |                            Speech-to-Text                            |\n| [Whisper](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/whisper-subtitles-generation)<br>[![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/openvinotoolkit/openvino_notebooks/blob/latest/notebooks/whisper-subtitles-generation/whisper-convert.ipynb) |            Post-Training Quantization             | OpenVINO  |                            Speech-to-Text                            |\n| [MMS Speech Recognition](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/mms-massively-multilingual-speech)                                                                                                                                                                                                           |            Post-Training Quantization             | OpenVINO  |                            Speech-to-Text                            |\n| [Grammar Error Correction](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/grammar-correction)                                                                                                                                                                                                                        |            Post-Training Quantization             | OpenVINO  |                       NLP, Grammar Correction                        |\n| [LLM Instruction Following](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/llm-question-answering)                                                                                                                                                                                                                   |                Weight Compression                 | OpenVINO  |                      NLP, Instruction Following                      |\n| [Dolly 2.0](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/dolly-2-instruction-following)                                                                                                                                                                                                                            |                Weight Compression                 | OpenVINO  |                      NLP, Instruction Following                      |\n| [Stable-Zephyr-3b](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/stable-zephyr-3b-chatbot)                                                                                                                                                                                                                          |                Weight Compression                 | OpenVINO  |                            NLP, Chat Bot                             |\n| [LLM Chat Bots](https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks/llm-chatbot)                                                                                                                                                                                                                                          |                Weight Compression                 | OpenVINO  |                            NLP, Chat Bot                             |\n\n### Post-Training Quantization Examples\n\nCompact scripts demonstrating quantization and corresponding inference speed boost:\n\n| Example Name                                                                                                                             |              Compression Algorithm               |  Backend   |         Domain         |\n|:-----------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------:|:----------:|:----------------------:|\n| [OpenVINO MobileNetV2](./examples/post_training_quantization/openvino/mobilenet_v2/README.md)                                            |            Post-Training Quantization            |  OpenVINO  |  Image Classification  |\n| [OpenVINO YOLOv8](./examples/post_training_quantization/openvino/yolov8/README.md)                                                       |            Post-Training Quantization            |  OpenVINO  |    Object Detection    |\n| [OpenVINO YOLOv8 QwAС](./examples/post_training_quantization/openvino/yolov8_quantize_with_accuracy_control/README.md)                   | Post-Training Quantization with Accuracy Control |  OpenVINO  |    Object Detection    |\n| [OpenVINO Anomaly Classification](./examples/post_training_quantization/openvino/anomaly_stfpm_quantize_with_accuracy_control/README.md) | Post-Training Quantization with Accuracy Control |  OpenVINO  | Anomaly Classification |\n| [PyTorch MobileNetV2](./examples/post_training_quantization/torch/mobilenet_v2/README.md)                                                |            Post-Training Quantization            |  PyTorch   |  Image Classification  |\n| [PyTorch SSD](./examples/post_training_quantization/torch/ssd300_vgg16/README.md)                                                        |            Post-Training Quantization            |  PyTorch   |    Object Detection    |\n| [TensorFlow MobileNetV2](./examples/post_training_quantization/tensorflow/mobilenet_v2/README.md)                                        |            Post-Training Quantization            | TensorFlow |  Image Classification  |\n| [ONNX MobileNetV2](./examples/post_training_quantization/onnx/mobilenet_v2/README.md)                                                    |            Post-Training Quantization            |    ONNX    |  Image Classification  |\n\n### Training-Time Compression Examples\n\nThese examples provide full pipelines including compression, training and inference for classification, detection and segmentation tasks.\n\n| Example Name                                                                                               |   Compression Algorithm   |  Backend   |        Domain         |\n|:-----------------------------------------------------------------------------------------------------------|:-------------------------:|:----------:|:---------------------:|\n| [PyTorch Image Classification](./examples/torch/classification/README.md)                                  | Training-Time Compression |  PyTorch   | Image Classification  |\n| [PyTorch Object Detection](./examples/torch/object_detection/README.md)                                    | Training-Time Compression |  PyTorch   |   Object Detection    |\n| [PyTorch Semantic Segmentation](./examples/torch/semantic_segmentation/README.md)                          | Training-Time Compression |  PyTorch   | Semantic Segmentation |\n| [TensorFlow Image Classification](./examples/tensorflow/classification/README.md)                          | Training-Time Compression | TensorFlow | Image Classification  |\n| [TensorFlow Object Detection](./examples/tensorflow/object_detection/README.md)                            | Training-Time Compression | TensorFlow |   Object Detection    |\n| [TensorFlow Instance Segmentation](./examples/tensorflow/segmentation/README.md)                           | Training-Time Compression | TensorFlow | Instance Segmentation |\n\n## Third-party repository integration\n\nNNCF may be straightforwardly integrated into training/evaluation pipelines of third-party repositories.\n\n### Used by\n\n- [OpenVINO Training Extensions](https://github.com/openvinotoolkit/training_extensions)\n\n  NNCF is integrated into OpenVINO Training Extensions as model optimization backend. So you can train, optimize and export new models based on the available model templates as well as run exported models with OpenVINO.\n\n- [HuggingFace Optimum Intel](https://huggingface.co/docs/optimum/intel/optimization_ov)\n\n  NNCF is used as a compression backend within the renowned `transformers` repository in HuggingFace Optimum Intel.\n\n## Installation Guide\n\nFor detailed installation instructions please refer to the [Installation](./docs/Installation.md) page.\n\nNNCF can be installed as a regular PyPI package via pip:\n\n```bash\npip install nncf\n```\n\nNNCF is also available via [conda](https://anaconda.org/conda-forge/nncf):\n\n```bash\nconda install -c conda-forge nncf\n```\n\n### System requirements\n\n- Ubuntu\\* 18.04 or later (64-bit)\n- Python\\* 3.8 or later\n- Supported frameworks:\n  - PyTorch\\* >=2.2, <2.4\n  - TensorFlow\\* >=2.8.4, <=2.12.1\n  - ONNX\\* ==1.16.0\n  - OpenVINO\\* >=2022.3.0\n\nThis repository is tested on Python* 3.8.10, PyTorch* 2.3.0 (NVidia CUDA\\* Toolkit 12.1) and TensorFlow* 2.12.1 (NVidia CUDA\\* Toolkit 11.8).\n\n## NNCF Compressed Model Zoo\n\nList of models and compression results for them can be found at our [Model Zoo page](./docs/ModelZoo.md).\n\n## Citing\n\n```bi\n@article{kozlov2020neural,\n    title =   {Neural network compression framework for fast model inference},\n    author =  {Kozlov, Alexander and Lazarevich, Ivan and Shamporov, Vasily and Lyalyushkin, Nikolay and Gorbachev, Yury},\n    journal = {arXiv preprint arXiv:2002.08679},\n    year =    {2020}\n}\n```\n\n## Contributing Guide\n\nRefer to the [CONTRIBUTING.md](./CONTRIBUTING.md) file for guidelines on contributions to the NNCF repository.\n\n## Useful links\n\n- [Documentation](./docs)\n- Example scripts (model objects available through links in respective README.md files):\n  - [PyTorch](./examples/torch)\n  - [TensorFlow](./examples/tensorflow)\n- [FAQ](./docs/FAQ.md)\n- [Notebooks](https://github.com/openvinotoolkit/openvino_notebooks#-model-training)\n- [HuggingFace Optimum Intel](https://huggingface.co/docs/optimum/intel/optimization_ov)\n- [OpenVINO Model Optimization Guide](https://docs.openvino.ai/latest/openvino_docs_model_optimization_guide.html)\n\n## Telemetry\n\nNNCF as part of the OpenVINO™ toolkit collects anonymous usage data for the purpose of improving OpenVINO™ tools.\nYou can opt-out at any time by running the following command in the Python environment where you have NNCF installed:\n\n`opt_in_out --opt_out`\n\nMore information is available at https://docs.openvino.ai/latest/openvino_docs_telemetry_information.html.\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/openvinotoolkit/nncf","keywords":"compression, quantization, sparsity, mixed-precision-training, quantization-aware-training, hawq, classification, pruning, object-detection, semantic-segmentation, nas, nlp, bert, transformers, mmdetection","license":"Apache-2.0","maintainer":null,"maintainer_email":null,"name":"nncf","package_url":"https://pypi.org/project/nncf/","platform":null,"project_url":"https://pypi.org/project/nncf/","project_urls":{"Homepage":"https://github.com/openvinotoolkit/nncf"},"provides_extra":["plots"],"release_url":"https://pypi.org/project/nncf/2.11.0/","requires_dist":["jsonschema>=3.2.0","jstyleson>=0.0.2","natsort>=7.1.0","networkx<=3.3,>=2.6","ninja<1.12,>=1.10.0.post2","numpy<1.27,>=1.19.1","openvino-telemetry>=2023.2.0","packaging>=20.0","pandas<2.3,>=1.1.5","psutil","pydot>=1.4.1","pymoo>=0.6.0.1","rich>=13.5.2","scikit-learn>=0.24.0","scipy>=1.3.2","tabulate>=0.9.0","tqdm>=4.54.1","kaleido>=0.2.1; extra == \"plots\"","matplotlib<3.6,>=3.3.4; extra == \"plots\"","pillow>=9.0.0; extra == \"plots\"","plotly-express>=0.4.1; extra == \"plots\""],"requires_python":null,"summary":"Neural Networks Compression Framework","version":"2.11.0","yanked":false,"yanked_reason":null},"last_serial":23709529,"releases":{"1.4":[{"comment_text":"","digests":{"blake2b_256":"6b8986b339b8ce0671b26e9c85e539485f6edf2011ca68f1619848156cd37edd","md5":"b7e31daa968cbab3e5b0075fd7c0d8b9","sha256":"f4fc64e486f9ca7aec8783a310833afd037b4f2bbe80a5945f5b0ae3a0965c81"},"downloads":-1,"filename":"nncf-1.4-py3-none-any.whl","has_sig":false,"md5_digest":"b7e31daa968cbab3e5b0075fd7c0d8b9","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":422232,"upload_time":"2020-07-28T14:04:29","upload_time_iso_8601":"2020-07-28T14:04:29.797610Z","url":"https://files.pythonhosted.org/packages/6b/89/86b339b8ce0671b26e9c85e539485f6edf2011ca68f1619848156cd37edd/nncf-1.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f49370f6fcf4c65908fb19dc44d3e94d8f8da433cef133d432e73203ae63838a","md5":"68957566f48346f1b812036b9dcdfc3a","sha256":"b9be993a7ef647c7dc5d8f330b04e611e9eed6ba3a37ccef89ceb2bb2c86b1af"},"downloads":-1,"filename":"nncf-1.4.tar.gz","has_sig":false,"md5_digest":"68957566f48346f1b812036b9dcdfc3a","packagetype":"sdist","python_version":"source","requires_python":null,"size":146193,"upload_time":"2020-07-28T14:04:37","upload_time_iso_8601":"2020-07-28T14:04:37.482783Z","url":"https://files.pythonhosted.org/packages/f4/93/70f6fcf4c65908fb19dc44d3e94d8f8da433cef133d432e73203ae63838a/nncf-1.4.tar.gz","yanked":false,"yanked_reason":null}],"1.4.1":[{"comment_text":"","digests":{"blake2b_256":"874817b899afaccdd6a2928cafd9a52f91cf183f5d8ff60ae8d925552cc0f890","md5":"aa5b995ca94524d967ce02854c93edaf","sha256":"9d0fa61e74d0bb9e60ff309e0bf988f42dc5dae85b88d01bc14c9dcffbab1d7a"},"downloads":-1,"filename":"nncf-1.4.1-py3-none-any.whl","has_sig":false,"md5_digest":"aa5b995ca94524d967ce02854c93edaf","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":193051,"upload_time":"2020-07-28T17:11:51","upload_time_iso_8601":"2020-07-28T17:11:51.251611Z","url":"https://files.pythonhosted.org/packages/87/48/17b899afaccdd6a2928cafd9a52f91cf183f5d8ff60ae8d925552cc0f890/nncf-1.4.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"db5f2fce90f0b9b36af7a9061435a03d3b2c075f22a91a1cd620a4a42d4eeae2","md5":"c7bd8d18691210a1978de7f075a0c082","sha256":"a2cf25e4fabc3049887769d22f5d66a41c3e9b9093efb96159e4475fc209d814"},"downloads":-1,"filename":"nncf-1.4.1.tar.gz","has_sig":false,"md5_digest":"c7bd8d18691210a1978de7f075a0c082","packagetype":"sdist","python_version":"source","requires_python":null,"size":146341,"upload_time":"2020-07-28T17:11:52","upload_time_iso_8601":"2020-07-28T17:11:52.607719Z","url":"https://files.pythonhosted.org/packages/db/5f/2fce90f0b9b36af7a9061435a03d3b2c075f22a91a1cd620a4a42d4eeae2/nncf-1.4.1.tar.gz","yanked":false,"yanked_reason":null}],"1.5.0":[{"comment_text":"","digests":{"blake2b_256":"d5989f1bcfc974ba1d4707147fce7ada396f44e113742c3b51512054195cec61","md5":"0251312a53c1c67b0b1eeff28fe26e04","sha256":"d0f7b17b5f4b6e6db6337a75af9841ff0a06cdfc78f6b4f7fe575ca6e20e080c"},"downloads":-1,"filename":"nncf-1.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"0251312a53c1c67b0b1eeff28fe26e04","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":224721,"upload_time":"2020-11-06T14:39:35","upload_time_iso_8601":"2020-11-06T14:39:35.686822Z","url":"https://files.pythonhosted.org/packages/d5/98/9f1bcfc974ba1d4707147fce7ada396f44e113742c3b51512054195cec61/nncf-1.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"31058a13dfc9b02ffa9413bb04455c9f37fac84a0cca8e432d34ea5f5422ea96","md5":"6dd8d9b961abe46a76913e9ae837ad5f","sha256":"8db63ff0a2ac7689272641417b9db7e7d22e6e3da10495c7154d03cc303649b1"},"downloads":-1,"filename":"nncf-1.5.0.tar.gz","has_sig":false,"md5_digest":"6dd8d9b961abe46a76913e9ae837ad5f","packagetype":"sdist","python_version":"source","requires_python":null,"size":171373,"upload_time":"2020-11-06T14:39:37","upload_time_iso_8601":"2020-11-06T14:39:37.718867Z","url":"https://files.pythonhosted.org/packages/31/05/8a13dfc9b02ffa9413bb04455c9f37fac84a0cca8e432d34ea5f5422ea96/nncf-1.5.0.tar.gz","yanked":false,"yanked_reason":null}],"1.6.0":[{"comment_text":"","digests":{"blake2b_256":"85ecd691580add785e1f4f07479412af8e172dd4f196b6b6e4de661516b68220","md5":"071545087d1a2046abb944f9e94df9a7","sha256":"4707317d95acd93019e455b462d8c322c25e684b6b2c53b7f59561a28cf7285c"},"downloads":-1,"filename":"nncf-1.6.0-py3-none-any.whl","has_sig":false,"md5_digest":"071545087d1a2046abb944f9e94df9a7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":279169,"upload_time":"2021-01-29T14:26:03","upload_time_iso_8601":"2021-01-29T14:26:03.504324Z","url":"https://files.pythonhosted.org/packages/85/ec/d691580add785e1f4f07479412af8e172dd4f196b6b6e4de661516b68220/nncf-1.6.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2f0e33fe530dc69bdb232eb25b6e979754024fe1dae8077df7b8cc7841e1df06","md5":"04fb0ed50a9ed81dddd63fb7909158bd","sha256":"9cc0452756c1f8cc603ee5b1161dd5bc0f8dbe28e63420121a8cdb6b4d5cd76f"},"downloads":-1,"filename":"nncf-1.6.0.tar.gz","has_sig":false,"md5_digest":"04fb0ed50a9ed81dddd63fb7909158bd","packagetype":"sdist","python_version":"source","requires_python":null,"size":216736,"upload_time":"2021-01-29T14:26:04","upload_time_iso_8601":"2021-01-29T14:26:04.755171Z","url":"https://files.pythonhosted.org/packages/2f/0e/33fe530dc69bdb232eb25b6e979754024fe1dae8077df7b8cc7841e1df06/nncf-1.6.0.tar.gz","yanked":false,"yanked_reason":null}],"1.7.0":[{"comment_text":"","digests":{"blake2b_256":"63ff30293a04b642a86c4bc059ec5a4d77ca9b4aaf4660952e68ba285e96f84c","md5":"ba50f52866f7a03d43b4ecc3ecec897b","sha256":"6b45bed03c9eaf7bfff4ed16c23926ae4f3af95ddd073785b74bcbae2fefe6e3"},"downloads":-1,"filename":"nncf-1.7.0-py3-none-any.whl","has_sig":false,"md5_digest":"ba50f52866f7a03d43b4ecc3ecec897b","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":326585,"upload_time":"2021-04-19T12:31:27","upload_time_iso_8601":"2021-04-19T12:31:27.570858Z","url":"https://files.pythonhosted.org/packages/63/ff/30293a04b642a86c4bc059ec5a4d77ca9b4aaf4660952e68ba285e96f84c/nncf-1.7.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"280bd0247f505f9925759ecd3c69d3cb6ca5fc5bb5ca68d9b3cbb7001b6fd28b","md5":"b009b94cc862aa8018214916de88746f","sha256":"cad6b7c0726bc7feeced4eb9e4bc73563370b87bf8445b9b398fabf53263400c"},"downloads":-1,"filename":"nncf-1.7.0.tar.gz","has_sig":false,"md5_digest":"b009b94cc862aa8018214916de88746f","packagetype":"sdist","python_version":"source","requires_python":null,"size":248153,"upload_time":"2021-04-19T12:31:29","upload_time_iso_8601":"2021-04-19T12:31:29.336174Z","url":"https://files.pythonhosted.org/packages/28/0b/d0247f505f9925759ecd3c69d3cb6ca5fc5bb5ca68d9b3cbb7001b6fd28b/nncf-1.7.0.tar.gz","yanked":false,"yanked_reason":null}],"1.7.1":[{"comment_text":"","digests":{"blake2b_256":"ef77d1fad8316a5f40edac1f5bdf375275030ea917132ffbdee0c0a51747e866","md5":"fff4d2893f3a1d09dfc089ec75d91397","sha256":"63aade3b14aaf152b1b065f162d35c09dac2b34648bd8d9b08a6f1d89db36a7a"},"downloads":-1,"filename":"nncf-1.7.1-py3-none-any.whl","has_sig":false,"md5_digest":"fff4d2893f3a1d09dfc089ec75d91397","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":327571,"upload_time":"2021-05-06T11:03:19","upload_time_iso_8601":"2021-05-06T11:03:19.056144Z","url":"https://files.pythonhosted.org/packages/ef/77/d1fad8316a5f40edac1f5bdf375275030ea917132ffbdee0c0a51747e866/nncf-1.7.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0026d3f696d49427e95f132f49d48a88f6e0e45a0602032bd11d09108c023b1e","md5":"08b389459a5e480c254bff9a416ff869","sha256":"ccbacab5ce06e1afe861ff8254acdccc71efc65a02a05e4d38c126a92b5499f3"},"downloads":-1,"filename":"nncf-1.7.1.tar.gz","has_sig":false,"md5_digest":"08b389459a5e480c254bff9a416ff869","packagetype":"sdist","python_version":"source","requires_python":null,"size":249100,"upload_time":"2021-05-06T11:03:20","upload_time_iso_8601":"2021-05-06T11:03:20.079852Z","url":"https://files.pythonhosted.org/packages/00/26/d3f696d49427e95f132f49d48a88f6e0e45a0602032bd11d09108c023b1e/nncf-1.7.1.tar.gz","yanked":false,"yanked_reason":null}],"2.0.0":[{"comment_text":"","digests":{"blake2b_256":"e2a45c908b72886d46b51a423aae58524f8ec4fdc0ab587a8c997fe6f035b762","md5":"7039c0d17f4871a485c35390e647e008","sha256":"faf1217c5dd162bf70ae018bbe9db689879f498c8b7b7b056a613504c0bf6ba2"},"downloads":-1,"filename":"nncf-2.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"7039c0d17f4871a485c35390e647e008","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":559549,"upload_time":"2021-07-20T08:49:50","upload_time_iso_8601":"2021-07-20T08:49:50.818780Z","url":"https://files.pythonhosted.org/packages/e2/a4/5c908b72886d46b51a423aae58524f8ec4fdc0ab587a8c997fe6f035b762/nncf-2.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"86a553a87a222a0bd1d69275589a14110315aa5ac1aa73f14916fd8fb90cbc94","md5":"8f5365b5ee569a3d575e8c400ee9ff4a","sha256":"8bdfabaf1b163da6e80dc2d7906c2c8342567cff28c40e97c2cb65929a750736"},"downloads":-1,"filename":"nncf-2.0.0.tar.gz","has_sig":false,"md5_digest":"8f5365b5ee569a3d575e8c400ee9ff4a","packagetype":"sdist","python_version":"source","requires_python":null,"size":386383,"upload_time":"2021-07-20T08:49:52","upload_time_iso_8601":"2021-07-20T08:49:52.237626Z","url":"https://files.pythonhosted.org/packages/86/a5/53a87a222a0bd1d69275589a14110315aa5ac1aa73f14916fd8fb90cbc94/nncf-2.0.0.tar.gz","yanked":false,"yanked_reason":null}],"2.0.1":[{"comment_text":"","digests":{"blake2b_256":"d8fe30793f1b0d22a34e17d539f8d4a04a2072d5ba7137bcd5be8020f54e6868","md5":"7f4b88f7ab7db4cf24414a2cdd30d5d2","sha256":"d7df513b1b7b63d6827c15c8939c891cceaab161d7fb54e8d160071e85ae1611"},"downloads":-1,"filename":"nncf-2.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"7f4b88f7ab7db4cf24414a2cdd30d5d2","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":562645,"upload_time":"2021-10-26T09:19:00","upload_time_iso_8601":"2021-10-26T09:19:00.499419Z","url":"https://files.pythonhosted.org/packages/d8/fe/30793f1b0d22a34e17d539f8d4a04a2072d5ba7137bcd5be8020f54e6868/nncf-2.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0ecb68d4016fa7accb5fa28d6c1956137a64220f64290efe126cd23607dcf5fa","md5":"827a5a578105b9d929fc40d269c62fed","sha256":"38c60c9e3f2b84d82dd6dbdb2ef6fde3eb0ff9822d204e6ff94b10f7230e0db2"},"downloads":-1,"filename":"nncf-2.0.1.tar.gz","has_sig":false,"md5_digest":"827a5a578105b9d929fc40d269c62fed","packagetype":"sdist","python_version":"source","requires_python":null,"size":388027,"upload_time":"2021-10-26T09:19:02","upload_time_iso_8601":"2021-10-26T09:19:02.032050Z","url":"https://files.pythonhosted.org/packages/0e/cb/68d4016fa7accb5fa28d6c1956137a64220f64290efe126cd23607dcf5fa/nncf-2.0.1.tar.gz","yanked":false,"yanked_reason":null}],"2.0.2":[{"comment_text":"","digests":{"blake2b_256":"f0a7cf0f3cf9b75b174cca5404cf50216d3468b95090efa7cae5a39a08aa01d4","md5":"6d60aa1b1ba7423cbcabd29c2d5fed5c","sha256":"e7f6288507bc413d04de1e1807d11823163dbcac05d3710802f642da2bb46712"},"downloads":-1,"filename":"nncf-2.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"6d60aa1b1ba7423cbcabd29c2d5fed5c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":562721,"upload_time":"2021-12-01T08:15:35","upload_time_iso_8601":"2021-12-01T08:15:35.022583Z","url":"https://files.pythonhosted.org/packages/f0/a7/cf0f3cf9b75b174cca5404cf50216d3468b95090efa7cae5a39a08aa01d4/nncf-2.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2ec434917576ab779f8f6a2bcb8fadc99f9e45d5bdb4a0ad5a247c76af145aec","md5":"6c0495bc6bc48d8e6b65e49489ca8c6d","sha256":"4e6fea339d46d77291c5f197ed8e839f099923a3a88943ad4fd41ea7b3e9812a"},"downloads":-1,"filename":"nncf-2.0.2.tar.gz","has_sig":false,"md5_digest":"6c0495bc6bc48d8e6b65e49489ca8c6d","packagetype":"sdist","python_version":"source","requires_python":null,"size":388280,"upload_time":"2021-12-01T08:15:36","upload_time_iso_8601":"2021-12-01T08:15:36.190644Z","url":"https://files.pythonhosted.org/packages/2e/c4/34917576ab779f8f6a2bcb8fadc99f9e45d5bdb4a0ad5a247c76af145aec/nncf-2.0.2.tar.gz","yanked":false,"yanked_reason":null}],"2.1.0":[{"comment_text":"","digests":{"blake2b_256":"667c1e7339fe212658d7bb8f0cf602044e093a7ff435214aa18d44e1f8b4b6a6","md5":"5c1b39164cb934b4242b21c3934b5842","sha256":"6b632221e3007e23602dd53bb39705d1d795f49cf8d385b02be15e399ff16fed"},"downloads":-1,"filename":"nncf-2.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"5c1b39164cb934b4242b21c3934b5842","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":594123,"upload_time":"2022-01-12T11:29:52","upload_time_iso_8601":"2022-01-12T11:29:52.434003Z","url":"https://files.pythonhosted.org/packages/66/7c/1e7339fe212658d7bb8f0cf602044e093a7ff435214aa18d44e1f8b4b6a6/nncf-2.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dab6ab875e9dbc9de10b21b10ef9c243c4a7e3fb13f46455b8f20c36a2722164","md5":"1a3891844c233d37b7bc475146ebce69","sha256":"fefcdff65ae292eec78e5c7df06423234553971f6da8d6aabaac5bc4ec9fdea4"},"downloads":-1,"filename":"nncf-2.1.0.tar.gz","has_sig":false,"md5_digest":"1a3891844c233d37b7bc475146ebce69","packagetype":"sdist","python_version":"source","requires_python":null,"size":412018,"upload_time":"2022-01-12T11:29:53","upload_time_iso_8601":"2022-01-12T11:29:53.781027Z","url":"https://files.pythonhosted.org/packages/da/b6/ab875e9dbc9de10b21b10ef9c243c4a7e3fb13f46455b8f20c36a2722164/nncf-2.1.0.tar.gz","yanked":false,"yanked_reason":null}],"2.10.0":[{"comment_text":"","digests":{"blake2b_256":"d02722dd19237848a6ff498b98189ce08fee7c393a46ec42a0d675fdfe6a69b3","md5":"96ec64262225f158e79bfce620145c7c","sha256":"c621727330543908f2c024d858d5d0383a3586bf3311b20cb9ce5d2c91190634"},"downloads":-1,"filename":"nncf-2.10.0-py3-none-any.whl","has_sig":false,"md5_digest":"96ec64262225f158e79bfce620145c7c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1208076,"upload_time":"2024-04-25T12:01:51","upload_time_iso_8601":"2024-04-25T12:01:51.250921Z","url":"https://files.pythonhosted.org/packages/d0/27/22dd19237848a6ff498b98189ce08fee7c393a46ec42a0d675fdfe6a69b3/nncf-2.10.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"449475e3edf730f97aa2b42fa9f8e4a2aeda6823aabf783f6705eca1ee6a3008","md5":"a980e8e6147070aa2bcc4277c58878a3","sha256":"5187a4d23d707a888de374774b3613456771d16ac38bcba102e3f98c7a3df1bf"},"downloads":-1,"filename":"nncf-2.10.0.tar.gz","has_sig":false,"md5_digest":"a980e8e6147070aa2bcc4277c58878a3","packagetype":"sdist","python_version":"source","requires_python":null,"size":828198,"upload_time":"2024-04-25T12:01:53","upload_time_iso_8601":"2024-04-25T12:01:53.611577Z","url":"https://files.pythonhosted.org/packages/44/94/75e3edf730f97aa2b42fa9f8e4a2aeda6823aabf783f6705eca1ee6a3008/nncf-2.10.0.tar.gz","yanked":false,"yanked_reason":null}],"2.11.0":[{"comment_text":"","digests":{"blake2b_256":"cbdd7298f30b95341a6df847c19b68c27b1c87904193793f63784518f36cea96","md5":"4fe679781661505e23606f87c71955fc","sha256":"176b69335c6a092a356bcf8c0c00b8051ab5cc40a59354a0df1fcc00e2c990bd"},"downloads":-1,"filename":"nncf-2.11.0-py3-none-any.whl","has_sig":false,"md5_digest":"4fe679781661505e23606f87c71955fc","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1242640,"upload_time":"2024-06-17T11:02:50","upload_time_iso_8601":"2024-06-17T11:02:50.234656Z","url":"https://files.pythonhosted.org/packages/cb/dd/7298f30b95341a6df847c19b68c27b1c87904193793f63784518f36cea96/nncf-2.11.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"31b2a6bce5ab47727747e17f8dff961f66ed588343d52131b80a64698303fa23","md5":"44af5a1078ea3a72700479dc7d6e5127","sha256":"5378e6bb29a69e540d7d2d5440f561622424c460d43f27514957c49b9828542f"},"downloads":-1,"filename":"nncf-2.11.0.tar.gz","has_sig":false,"md5_digest":"44af5a1078ea3a72700479dc7d6e5127","packagetype":"sdist","python_version":"source","requires_python":null,"size":852442,"upload_time":"2024-06-17T11:02:52","upload_time_iso_8601":"2024-06-17T11:02:52.013461Z","url":"https://files.pythonhosted.org/packages/31/b2/a6bce5ab47727747e17f8dff961f66ed588343d52131b80a64698303fa23/nncf-2.11.0.tar.gz","yanked":false,"yanked_reason":null}],"2.2.0":[{"comment_text":"","digests":{"blake2b_256":"8aaa19f20d984011e5d75ed1de0772f96a305ff7cf8056498e9a3bcda5e9d85c","md5":"97d099387c062d648bbe343d66faed31","sha256":"16f503b5319054d38d2153b921cafcbb1e19eabd40119c45ddb5b151478fc43a"},"downloads":-1,"filename":"nncf-2.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"97d099387c062d648bbe343d66faed31","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":747303,"upload_time":"2022-05-20T07:29:04","upload_time_iso_8601":"2022-05-20T07:29:04.646787Z","url":"https://files.pythonhosted.org/packages/8a/aa/19f20d984011e5d75ed1de0772f96a305ff7cf8056498e9a3bcda5e9d85c/nncf-2.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"84dd3c41d440d17d54c3647649c82a2079acec403e7362705dd36e759066d1de","md5":"b119fba20c5fd948b8c6fe630bd5e47f","sha256":"8014726fee29dc38a3cea46fd2bd8af310b4fe5f98738e4d0d299433e50fb131"},"downloads":-1,"filename":"nncf-2.2.0.tar.gz","has_sig":false,"md5_digest":"b119fba20c5fd948b8c6fe630bd5e47f","packagetype":"sdist","python_version":"source","requires_python":null,"size":502732,"upload_time":"2022-05-20T07:14:42","upload_time_iso_8601":"2022-05-20T07:14:42.198335Z","url":"https://files.pythonhosted.org/packages/84/dd/3c41d440d17d54c3647649c82a2079acec403e7362705dd36e759066d1de/nncf-2.2.0.tar.gz","yanked":false,"yanked_reason":null}],"2.3.0":[{"comment_text":"","digests":{"blake2b_256":"5ea3b451149caf45564e3f2984ddf5d5fb50f7447101eef7a617bb4b7b986bd4","md5":"d0bbccabb245017ec39f10d2685f3bdb","sha256":"13e56cf78d6a68ea4318f1c60c1091c97c0c31dc7d572e579ee476cbeadf7098"},"downloads":-1,"filename":"nncf-2.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"d0bbccabb245017ec39f10d2685f3bdb","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":770102,"upload_time":"2022-07-05T01:00:33","upload_time_iso_8601":"2022-07-05T01:00:33.613522Z","url":"https://files.pythonhosted.org/packages/5e/a3/b451149caf45564e3f2984ddf5d5fb50f7447101eef7a617bb4b7b986bd4/nncf-2.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7639a7797371399a60fcc8ca9362c94776bcfe36f96c9a8d29b564ae0adb0add","md5":"b9e183e4da63d7fb8086b51a5b9cff60","sha256":"922f33420205c98ed0dce08e910771dd081e1b716e9ed9d6e9fe1fd1caa850b0"},"downloads":-1,"filename":"nncf-2.3.0.tar.gz","has_sig":false,"md5_digest":"b9e183e4da63d7fb8086b51a5b9cff60","packagetype":"sdist","python_version":"source","requires_python":null,"size":519825,"upload_time":"2022-07-05T01:00:35","upload_time_iso_8601":"2022-07-05T01:00:35.812421Z","url":"https://files.pythonhosted.org/packages/76/39/a7797371399a60fcc8ca9362c94776bcfe36f96c9a8d29b564ae0adb0add/nncf-2.3.0.tar.gz","yanked":false,"yanked_reason":null}],"2.4.0":[{"comment_text":"","digests":{"blake2b_256":"dc65e7a7ca4d17edd9ce703e07ce5f21219ef1c43bfff29a468c8be9268fc85e","md5":"2f316354ec6d76e6067ecb1af8b40829","sha256":"b2d9fd26c4637a4aaa44a41bcf5f3d7e27f5059e5173eb46f860a2c82022e56c"},"downloads":-1,"filename":"nncf-2.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"2f316354ec6d76e6067ecb1af8b40829","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":904543,"upload_time":"2023-02-01T11:09:10","upload_time_iso_8601":"2023-02-01T11:09:10.240242Z","url":"https://files.pythonhosted.org/packages/dc/65/e7a7ca4d17edd9ce703e07ce5f21219ef1c43bfff29a468c8be9268fc85e/nncf-2.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c4817c4cb0e7be07a68d5a25716032b0f129e78697b97ca9e90a563cf344d9d1","md5":"2eb0bfd1191b578b580fb35f7694db80","sha256":"5c954cacc207e0d5615d4494e0ea71c5fd3d268750d371f99741109ae373d780"},"downloads":-1,"filename":"nncf-2.4.0.tar.gz","has_sig":false,"md5_digest":"2eb0bfd1191b578b580fb35f7694db80","packagetype":"sdist","python_version":"source","requires_python":null,"size":608722,"upload_time":"2023-02-01T11:09:12","upload_time_iso_8601":"2023-02-01T11:09:12.197690Z","url":"https://files.pythonhosted.org/packages/c4/81/7c4cb0e7be07a68d5a25716032b0f129e78697b97ca9e90a563cf344d9d1/nncf-2.4.0.tar.gz","yanked":false,"yanked_reason":null}],"2.5.0":[{"comment_text":"","digests":{"blake2b_256":"0067da4c44d198bf719a1360e55b29666f95d74f43b945ebf5bf977181db982f","md5":"acdc868f5057a01e3cc564e7e3505c01","sha256":"85bc5f9307acfdbc67a39e340f32f2dab5eac138a7a9e90d96d14c8f0877cd80"},"downloads":-1,"filename":"nncf-2.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"acdc868f5057a01e3cc564e7e3505c01","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1062916,"upload_time":"2023-06-06T16:41:09","upload_time_iso_8601":"2023-06-06T16:41:09.761832Z","url":"https://files.pythonhosted.org/packages/00/67/da4c44d198bf719a1360e55b29666f95d74f43b945ebf5bf977181db982f/nncf-2.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f821da0cedb2618c5cdc6df0c3b340f27f31de6f4261ed9e2e699daecf22a4c5","md5":"20e0f9a3f7cdb64d432a9c345e3f73e8","sha256":"d1877192b44d36055f39fe212ca0abf04416bac1ff81be1b6cda0fbe82c12ac5"},"downloads":-1,"filename":"nncf-2.5.0.tar.gz","has_sig":false,"md5_digest":"20e0f9a3f7cdb64d432a9c345e3f73e8","packagetype":"sdist","python_version":"source","requires_python":null,"size":717365,"upload_time":"2023-06-06T16:41:12","upload_time_iso_8601":"2023-06-06T16:41:12.300697Z","url":"https://files.pythonhosted.org/packages/f8/21/da0cedb2618c5cdc6df0c3b340f27f31de6f4261ed9e2e699daecf22a4c5/nncf-2.5.0.tar.gz","yanked":false,"yanked_reason":null}],"2.6.0":[{"comment_text":"","digests":{"blake2b_256":"280bcd681352c21dbd4e7c66c00959aa8332bf1af7638eb2bc77e8f48511d17e","md5":"2f550557d6fdae1525ce0476e746660c","sha256":"6d898ce94d81f4fa1f7cac757be0f52b1db25c78d37acf17967db178bf07004e"},"downloads":-1,"filename":"nncf-2.6.0-py3-none-any.whl","has_sig":false,"md5_digest":"2f550557d6fdae1525ce0476e746660c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1140445,"upload_time":"2023-09-18T15:59:47","upload_time_iso_8601":"2023-09-18T15:59:47.327287Z","url":"https://files.pythonhosted.org/packages/28/0b/cd681352c21dbd4e7c66c00959aa8332bf1af7638eb2bc77e8f48511d17e/nncf-2.6.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5c67492732c52a337262696727b86a0485ed0d60dd3c5d4383b7e2b7c9a9c9d7","md5":"2d44d8cb9be3e91be2fa8836b3564edb","sha256":"3d425f5f24824659eee5314782d5a836fe72615baf67be6ac2b706c363739fbf"},"downloads":-1,"filename":"nncf-2.6.0.tar.gz","has_sig":false,"md5_digest":"2d44d8cb9be3e91be2fa8836b3564edb","packagetype":"sdist","python_version":"source","requires_python":null,"size":767627,"upload_time":"2023-09-18T15:59:49","upload_time_iso_8601":"2023-09-18T15:59:49.450227Z","url":"https://files.pythonhosted.org/packages/5c/67/492732c52a337262696727b86a0485ed0d60dd3c5d4383b7e2b7c9a9c9d7/nncf-2.6.0.tar.gz","yanked":false,"yanked_reason":null}],"2.7.0":[{"comment_text":"","digests":{"blake2b_256":"e2a88f400c7264d4ac917668c3a0f00dfd22ff7537d499f2b5591e4afdc777f1","md5":"f7daf2720b8450151ed95a8e37df3340","sha256":"95cdf43032964f292311d40003d1004a6f94c4560c09c6537e534fb3a38c1483"},"downloads":-1,"filename":"nncf-2.7.0-py3-none-any.whl","has_sig":false,"md5_digest":"f7daf2720b8450151ed95a8e37df3340","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1167353,"upload_time":"2023-11-16T14:59:36","upload_time_iso_8601":"2023-11-16T14:59:36.959092Z","url":"https://files.pythonhosted.org/packages/e2/a8/8f400c7264d4ac917668c3a0f00dfd22ff7537d499f2b5591e4afdc777f1/nncf-2.7.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"be175bff8c024e97df1462b6cf0b4d845646da40c8f2b10e7631c07902dce17c","md5":"48c03607be8fad3cfe6db5bf4ce63e1c","sha256":"645cb21a3a6a252b95770f4565f5cd83cd8bc465287f92a798731edc73304414"},"downloads":-1,"filename":"nncf-2.7.0.tar.gz","has_sig":false,"md5_digest":"48c03607be8fad3cfe6db5bf4ce63e1c","packagetype":"sdist","python_version":"source","requires_python":null,"size":788202,"upload_time":"2023-11-16T14:59:39","upload_time_iso_8601":"2023-11-16T14:59:39.142122Z","url":"https://files.pythonhosted.org/packages/be/17/5bff8c024e97df1462b6cf0b4d845646da40c8f2b10e7631c07902dce17c/nncf-2.7.0.tar.gz","yanked":false,"yanked_reason":null}],"2.8.0":[{"comment_text":"","digests":{"blake2b_256":"5f9a474ac39a7b08f80eb96a668bc36b5d6d89fcd907cbd8dc410e389fd2c525","md5":"694675cf5146bea72f8c63a2f4106024","sha256":"a8e1d3091b530810de598ba557dcfb40ab6cdb0127ff62ba3b173e219a9082b4"},"downloads":-1,"filename":"nncf-2.8.0-py3-none-any.whl","has_sig":false,"md5_digest":"694675cf5146bea72f8c63a2f4106024","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1204173,"upload_time":"2024-01-24T13:06:39","upload_time_iso_8601":"2024-01-24T13:06:39.778074Z","url":"https://files.pythonhosted.org/packages/5f/9a/474ac39a7b08f80eb96a668bc36b5d6d89fcd907cbd8dc410e389fd2c525/nncf-2.8.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4994d5aadf4a425cf0bcaf84d4c07f2423ac7e01b0d454e0f1a511f45af355d8","md5":"06969940acc8473fda0227f0038151a3","sha256":"5affe2c33d00feef54f1fc80184e5b79c16afcb8e28f07d71e89aa10cc11f046"},"downloads":-1,"filename":"nncf-2.8.0.tar.gz","has_sig":false,"md5_digest":"06969940acc8473fda0227f0038151a3","packagetype":"sdist","python_version":"source","requires_python":null,"size":823072,"upload_time":"2024-01-24T13:06:42","upload_time_iso_8601":"2024-01-24T13:06:42.396951Z","url":"https://files.pythonhosted.org/packages/49/94/d5aadf4a425cf0bcaf84d4c07f2423ac7e01b0d454e0f1a511f45af355d8/nncf-2.8.0.tar.gz","yanked":false,"yanked_reason":null}],"2.8.1":[{"comment_text":"","digests":{"blake2b_256":"e4949395c1f9663206d889db4f26c4f3e01ce143bfffe717e39184b079a461a1","md5":"e03c6418d66a640ef6a1b2299cc05fbe","sha256":"ec7fd90657ae6a03d63d1e5ff6510aa511be3cedcb834bcc90043850ba380a2f"},"downloads":-1,"filename":"nncf-2.8.1-py3-none-any.whl","has_sig":false,"md5_digest":"e03c6418d66a640ef6a1b2299cc05fbe","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1204775,"upload_time":"2024-02-09T09:46:00","upload_time_iso_8601":"2024-02-09T09:46:00.263651Z","url":"https://files.pythonhosted.org/packages/e4/94/9395c1f9663206d889db4f26c4f3e01ce143bfffe717e39184b079a461a1/nncf-2.8.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ef4dcd9010386ed8568c238f9de5fe8d0b214f14355bcce34e8d3f42a07c10fc","md5":"4879c32ee228b0d93db6070158f1bc16","sha256":"9611920c0cdb1a9af78d43f98de899a3140754d1600e87f36efae143114c74fc"},"downloads":-1,"filename":"nncf-2.8.1.tar.gz","has_sig":false,"md5_digest":"4879c32ee228b0d93db6070158f1bc16","packagetype":"sdist","python_version":"source","requires_python":null,"size":823560,"upload_time":"2024-02-09T09:46:02","upload_time_iso_8601":"2024-02-09T09:46:02.795691Z","url":"https://files.pythonhosted.org/packages/ef/4d/cd9010386ed8568c238f9de5fe8d0b214f14355bcce34e8d3f42a07c10fc/nncf-2.8.1.tar.gz","yanked":false,"yanked_reason":null}],"2.9.0":[{"comment_text":"","digests":{"blake2b_256":"c1b3028a1c4d8ee72ed7c402c813e70de483bac1718faeb8902c4dcf8b41106b","md5":"0ecdb760e8eb1e3b0adea9134e4c1f1d","sha256":"aedd6f35038297218f23c2f799c0f3d29ac078126d65b79a9fdca1e5c49ecb49"},"downloads":-1,"filename":"nncf-2.9.0-py3-none-any.whl","has_sig":false,"md5_digest":"0ecdb760e8eb1e3b0adea9134e4c1f1d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1212397,"upload_time":"2024-03-06T11:39:32","upload_time_iso_8601":"2024-03-06T11:39:32.396986Z","url":"https://files.pythonhosted.org/packages/c1/b3/028a1c4d8ee72ed7c402c813e70de483bac1718faeb8902c4dcf8b41106b/nncf-2.9.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cc4a3d275dd0b3d13c6d51c32b0bb071c6ee18b6bcb93750d49b1876aed7b809","md5":"80fedacf406942191aa872d9a768bff4","sha256":"13d92cdda7f326af1ae1e4a31e4e5778c0b1712474c4b58a46d8bbe3b91ff3a7"},"downloads":-1,"filename":"nncf-2.9.0.tar.gz","has_sig":false,"md5_digest":"80fedacf406942191aa872d9a768bff4","packagetype":"sdist","python_version":"source","requires_python":null,"size":828140,"upload_time":"2024-03-06T11:39:35","upload_time_iso_8601":"2024-03-06T11:39:35.035466Z","url":"https://files.pythonhosted.org/packages/cc/4a/3d275dd0b3d13c6d51c32b0bb071c6ee18b6bcb93750d49b1876aed7b809/nncf-2.9.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"cbdd7298f30b95341a6df847c19b68c27b1c87904193793f63784518f36cea96","md5":"4fe679781661505e23606f87c71955fc","sha256":"176b69335c6a092a356bcf8c0c00b8051ab5cc40a59354a0df1fcc00e2c990bd"},"downloads":-1,"filename":"nncf-2.11.0-py3-none-any.whl","has_sig":false,"md5_digest":"4fe679781661505e23606f87c71955fc","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":1242640,"upload_time":"2024-06-17T11:02:50","upload_time_iso_8601":"2024-06-17T11:02:50.234656Z","url":"https://files.pythonhosted.org/packages/cb/dd/7298f30b95341a6df847c19b68c27b1c87904193793f63784518f36cea96/nncf-2.11.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"31b2a6bce5ab47727747e17f8dff961f66ed588343d52131b80a64698303fa23","md5":"44af5a1078ea3a72700479dc7d6e5127","sha256":"5378e6bb29a69e540d7d2d5440f561622424c460d43f27514957c49b9828542f"},"downloads":-1,"filename":"nncf-2.11.0.tar.gz","has_sig":false,"md5_digest":"44af5a1078ea3a72700479dc7d6e5127","packagetype":"sdist","python_version":"source","requires_python":null,"size":852442,"upload_time":"2024-06-17T11:02:52","upload_time_iso_8601":"2024-06-17T11:02:52.013461Z","url":"https://files.pythonhosted.org/packages/31/b2/a6bce5ab47727747e17f8dff961f66ed588343d52131b80a64698303fa23/nncf-2.11.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
