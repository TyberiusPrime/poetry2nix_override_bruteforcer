{"info":{"author":"Robert Singer","author_email":"robertgsinger@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.2","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7"],"description":"# Django REST - FlexFields\n\n[![Package version](https://badge.fury.io/py/drf-flex-fields.svg)](https://pypi.python.org/pypi/drf-flex-fields)\n[![Python versions](https://img.shields.io/pypi/status/drf-flex-fields.svg)](https://img.shields.io/pypi/status/django-lifecycle.svg/)\n\nFlexible, dynamic fields and nested models for Django REST Framework serializers.\n\n# Overview\n\nFlexFields (DRF-FF) for [Django REST Framework](https://django-rest-framework.org) is a package designed to provide a common baseline of functionality for dynamically setting fields and nested models within DRF serializers. This package is designed for simplicity, with minimal magic and entanglement with DRF's foundational classes.\n\nKey benefits:\n\n- Easily set up fields that be expanded to their fully serialized counterparts via query parameters (`users/?expand=organization,friends`)\n- Select a subset of fields by either:\n  - specifying which ones should be included (`users/?fields=id,first_name`)\n  - specifying which ones should be excluded (`users/?omit=id,first_name`)\n- Use dot notation to dynamically modify fields at arbitrary depths (`users/?expand=organization.owner.roles`)\n- Flexible API - options can also be passed directly to a serializer: `UserSerializer(obj, expand=['organization'])`\n\n# Quick Start\n\n```python\nfrom rest_flex_fields import FlexFieldsModelSerializer\n\nclass StateSerializer(FlexFieldsModelSerializer):\n    class Meta:\n        model = State\n        fields = ('id', 'name')\n\nclass CountrySerializer(FlexFieldsModelSerializer):\n    class Meta:\n        model = Country\n        fields = ('id', 'name', 'population', 'states')\n        expandable_fields = {\n          'states': (StateSerializer, {'many': True})\n        }\n\nclass PersonSerializer(FlexFieldsModelSerializer):\n    class Meta:\n        model = Person\n        fields = ('id', 'name', 'country', 'occupation')\n        expandable_fields = {'country': CountrySerializer}\n```\n\n```\nGET /people/142/\n```\n\n```json\n{\n  \"id\": 142,\n  \"name\": \"Jim Halpert\",\n  \"country\": 1\n}\n```\n\n```\nGET /people/142/?expand=country.states\n```\n\n```json\n{\n  \"id\": 142,\n  \"name\": \"Jim Halpert\",\n  \"country\": {\n    \"id\": 1,\n    \"name\": \"United States\",\n    \"states\": [\n      {\n        \"id\": 23,\n        \"name\": \"Ohio\"\n      },\n      {\n        \"id\": 2,\n        \"name\": \"Pennsylvania\"\n      }\n    ]\n  }\n}\n```\n\n# Table of Contents:\n\n- [Django REST - FlexFields](#django-rest---flexfields)\n- [Overview](#overview)\n- [Quick Start](#quick-start)\n- [Table of Contents:](#table-of-contents)\n- [Setup](#setup)\n- [Usage](#usage)\n  - [Dynamic Field Expansion](#dynamic-field-expansion)\n  - [Deferred Fields](#deferred-fields)\n  - [Deep, Nested Expansion](#deep-nested-expansion)\n  - [Field Expansion on \"List\" Views <a id=\"list-views\"></a>](#field-expansion-on-list-views-)\n  - [Expanding a \"Many\" Relationship <a id=\"expanding-many\"></a>](#expanding-a-many-relationship-)\n  - [Dynamically Setting Fields (Sparse Fields) <a id=\"dynamically-setting-fields\"></a>](#dynamically-setting-fields-sparse-fields-)\n  - [Reference serializer as a string (lazy evaluation) <a id=\"lazy-ref\"></a>](#reference-serializer-as-a-string-lazy-evaluation-)\n  - [Increased re-usability of serializers <a id=\"increased-reuse\"></a>](#increased-re-usability-of-serializers-)\n- [Serializer Options](#serializer-options)\n- [Advanced](#advanced)\n  - [Customization](#customization)\n  - [Serializer Introspection](#serializer-introspection)\n  - [Use Wildcards to Match Multiple Fields](#wildcards)\n  - [Combining Sparse Fields and Field Expansion <a id=\"combining-sparse-and-expanded\"></a>](#combining-sparse-fields-and-field-expansion-)\n  - [Utility Functions <a id=\"utils\"></a>](#utility-functions-)\n    - [rest_flex_fields.is_expanded(request, field: str)](#rest_flex_fieldsis_expandedrequest-field-str)\n    - [rest_flex_fields.is_included(request, field: str)](#rest_flex_fieldsis_includedrequest-field-str)\n  - [Query optimization (experimental)](#query-optimization-experimental)\n- [Changelog <a id=\"changelog\"></a>](#changelog-)\n- [Testing](#testing)\n- [License](#license)\n\n# Setup\n\nFirst install:\n\n```\npip install drf-flex-fields\n```\n\nThen have your serializers subclass `FlexFieldsModelSerializer`:\n\n```python\nfrom rest_flex_fields import FlexFieldsModelSerializer\n\nclass StateSerializer(FlexFieldsModelSerializer):\n    class Meta:\n        model = Country\n        fields = ('id', 'name')\n\nclass CountrySerializer(FlexFieldsModelSerializer):\n    class Meta:\n        model = Country\n        fields = ('id', 'name', 'population', 'states')\n        expandable_fields = {\n          'states': (StateSerializer, {'many': True})\n        }\n```\n\nAlternatively, you can add the `FlexFieldsSerializerMixin` mixin to a model serializer.\n\n# Usage\n\n## Dynamic Field Expansion\n\nTo define expandable fields, add an `expandable_fields` dictionary to your serializer's `Meta` class. Key the dictionary with the name of the field that you want to dynamically expand, and set its value to either the expanded serializer or a tuple where the first element is the serializer and the second is a dictionary of options that will be used to instantiate the serializer.\n\n```python\nclass CountrySerializer(FlexFieldsModelSerializer):\n    class Meta:\n        model = Country\n        fields = ['name', 'population']\n\n\nclass PersonSerializer(FlexFieldsModelSerializer):\n    country = serializers.PrimaryKeyRelatedField(read_only=True)\n\n    class Meta:\n        model = Person\n        fields = ['id', 'name', 'country', 'occupation']\n\n        expandable_fields = {\n            'country': CountrySerializer\n        }\n```\n\nIf the default serialized response is the following:\n\n```json\n{\n  \"id\": 13322,\n  \"name\": \"John Doe\",\n  \"country\": 12,\n  \"occupation\": \"Programmer\"\n}\n```\n\nWhen you do a `GET /person/13322?expand=country`, the response will change to:\n\n```json\n{\n  \"id\": 13322,\n  \"name\": \"John Doe\",\n  \"country\": {\n    \"name\": \"United States\",\n    \"population\": 330000000\n  },\n  \"occupation\": \"Programmer\"\n}\n```\n\n## Deferred Fields\n\nAlternatively, you could treat `country` as a \"deferred\" field by not defining it among the default fields. To make a field deferred, only define it within the serializer's `expandable_fields`.\n\n## Deep, Nested Expansion\n\nLet's say you add `StateSerializer` as a serializer nested inside the country serializer above:\n\n```python\nclass StateSerializer(FlexFieldsModelSerializer):\n    class Meta:\n        model = State\n        fields = ['name', 'population']\n\n\nclass CountrySerializer(FlexFieldsModelSerializer):\n    class Meta:\n        model = Country\n        fields = ['name', 'population']\n\n        expandable_fields = {\n            'states': (StateSerializer, {'many': True})\n        }\n\nclass PersonSerializer(FlexFieldsModelSerializer):\n    country = serializers.PrimaryKeyRelatedField(read_only=True)\n\n    class Meta:\n        model = Person\n        fields = ['id', 'name', 'country', 'occupation']\n\n        expandable_fields = {\n            'country': CountrySerializer\n        }\n```\n\nYour default serialized response might be the following for `person` and `country`, respectively:\n\n```json\n{\n  \"id\" : 13322,\n  \"name\" : \"John Doe\",\n  \"country\" : 12,\n  \"occupation\" : \"Programmer\",\n}\n\n{\n  \"id\" : 12,\n  \"name\" : \"United States\",\n  \"states\" : \"http://www.api.com/countries/12/states\"\n}\n```\n\nBut if you do a `GET /person/13322?expand=country.states`, it would be:\n\n```json\n{\n  \"id\": 13322,\n  \"name\": \"John Doe\",\n  \"occupation\": \"Programmer\",\n  \"country\": {\n    \"id\": 12,\n    \"name\": \"United States\",\n    \"states\": [\n      {\n        \"name\": \"Ohio\",\n        \"population\": 11000000\n      }\n    ]\n  }\n}\n```\n\nPlease be kind to your database, as this could incur many additional queries. Though, you can mitigate this impact through judicious use of `prefetch_related` and `select_related` when defining the queryset for your viewset.\n\n## Field Expansion on \"List\" Views <a id=\"list-views\"></a>\n\nIf you request many objects, expanding fields could lead to many additional database queries. Subclass `FlexFieldsModelViewSet` if you want to prevent expanding fields by default when calling a ViewSet's `list` method. Place those fields that you would like to expand in a `permit_list_expands` property on the ViewSet:\n\n```python\nfrom rest_flex_fields import is_expanded\n\nclass PersonViewSet(FlexFieldsModelViewSet):\n    permit_list_expands = ['employer']\n    serializer_class = PersonSerializer\n\n    def get_queryset(self):\n        queryset = models.Person.objects.all()\n        if is_expanded(self.request, 'employer'):\n            queryset = queryset.select_related('employer')\n        return queryset\n```\n\nNotice how this example is using the `is_expanded` utility method as well as `select_related` and `prefetch_related` to efficiently query the database if the field is expanded.\n\n## Expanding a \"Many\" Relationship <a id=\"expanding-many\"></a>\n\nSet `many` to `True` in the serializer options to make sure \"to many\" fields are expanded correctly.\n\n```python\nclass StateSerializer(FlexFieldsModelSerializer):\n    class Meta:\n        model = State\n        fields = ['name', 'population']\n\n\nclass CountrySerializer(FlexFieldsModelSerializer):\n    class Meta:\n        model = Country\n        fields = ['name', 'population']\n\n        expandable_fields = {\n            'states': (StateSerializer, {'many': True})\n        }\n```\n\nA request to `GET /countries?expand=states` will return:\n\n```python\n{\n    \"id\" : 12,\n    \"name\" : \"United States\",\n    \"states\" : [\n      {\n        \"name\" : \"Alabama\",\n        \"population\": 11000000\n      },\n      //... more states ... //\n      {\n        \"name\" : \"Ohio\",\n        \"population\": 11000000\n      }\n    ]\n}\n```\n\n## Dynamically Setting Fields (Sparse Fields) <a id=\"dynamically-setting-fields\"></a>\n\nYou can use either the `fields` or `omit` keywords to declare only the fields you want to include or to specify fields that should be excluded.\n\nConsider this as a default serialized response:\n\n```json\n{\n  \"id\": 13322,\n  \"name\": \"John Doe\",\n  \"country\": {\n    \"name\": \"United States\",\n    \"population\": 330000000\n  },\n  \"occupation\": \"Programmer\",\n  \"hobbies\": [\"rock climbing\", \"sipping coffee\"]\n}\n```\n\nTo whittle down the fields via URL parameters, simply add `?fields=id,name,country` to your requests to get back:\n\n```json\n{\n  \"id\": 13322,\n  \"name\": \"John Doe\",\n  \"country\": {\n    \"name\": \"United States\",\n    \"population\": 330000000\n  }\n}\n```\n\nOr, for more specificity, you can use dot-notation, `?fields=id,name,country.name`:\n\n```json\n{\n  \"id\": 13322,\n  \"name\": \"John Doe\",\n  \"country\": {\n    \"name\": \"United States\"\n  }\n}\n```\n\nOr, if you want to leave out the nested country object, do `?omit=country`:\n\n```json\n{\n  \"id\": 13322,\n  \"name\": \"John Doe\",\n  \"occupation\": \"Programmer\",\n  \"hobbies\": [\"rock climbing\", \"sipping coffee\"]\n}\n```\n\n## Reference serializer as a string (lazy evaluation) <a id=\"lazy-ref\"></a>\n\nTo avoid circular import problems, it's possible to lazily evaluate a string reference to you serializer class using this syntax:\n\n```python\nexpandable_fields = {\n    'record_set': ('<module_path_to_serializer_class>.RelatedSerializer', {'many': True})\n}\n```\n\n**Note**:\nPrior to version `0.9.0`, it was assumed your serializer classes would be in a module with the following path:\n`<app_name>.serializers`.\n\nThis import style will still work, but you can also now specify fully-qualified import paths to any locations.\n\n## Increased re-usability of serializers <a id=\"increased-reuse\"></a>\n\nThe `omit` and `fields` options can be passed directly to serializers. Rather than defining a separate, slimmer version of a regular serializer, you can re-use the same serializer and declare which fields you want.\n\n```python\nfrom rest_flex_fields import FlexFieldsModelSerializer\n\nclass CountrySerializer(FlexFieldsModelSerializer):\n    class Meta:\n        model = Country\n        fields = ['id', 'name', 'population', 'capital', 'square_miles']\n\nclass PersonSerializer(FlexFieldsModelSerializer):\n    country = CountrySerializer(fields=['id', 'name'])\n\n    class Meta:\n        model = Person\n        fields = ['id', 'name', 'country']\n\n\nserializer = PersonSerializer(person)\nprint(serializer.data)\n\n>>>{\n  \"id\": 13322,\n  \"name\": \"John Doe\",\n  \"country\": {\n    \"id\": 1,\n    \"name\": \"United States\",\n  }\n}\n```\n\n# Serializer Options\n\nDynamic field options can be passed in the following ways:\n\n- from the request's query parameters; separate multiple values with a commma\n- as keyword arguments directly to the serializer class when its constructed\n- from a dictionary placed as the second element in a tuple when defining `expandable_fields`\n\nApproach #1\n\n```\nGET /people?expand=friends.hobbies,employer&omit=age\n```\n\nApproach #2\n\n```python\nserializer = PersonSerializer(\n  person,\n  expand=[\"friends.hobbies\", \"employer\"],\n  omit=\"friends.age\"\n)\n```\n\nApproach #3\n\n```python\n\nclass PersonSerializer(FlexFieldsModelSerializer):\n  // Your field definitions\n\n  class Meta:\n    model = Person\n    fields = [\"age\", \"hobbies\", \"name\"]\n    expandable_fields = {\n      'friends': (\n        'serializer.FriendSerializer',\n        {'many': True, \"expand\": [\"hobbies\"], \"omit\": [\"age\"]}\n      )\n    }\n```\n\n| Option |                                 Description                                  |\n| ------ | :--------------------------------------------------------------------------: |\n| expand | Fields to expand; must be configured in the serializer's `expandable_fields` |\n| fields |         Fields that should be included; all others will be excluded          |\n| omit   |         Fields that should be excluded; all others will be included          |\n\n# Advanced\n\n## Customization\n\nParameter names and wildcard values can be configured within a Django setting, named `REST_FLEX_FIELDS`.\n\n| Option                        |                                                                                                                                                                                                                                                                         Description                                                                                                                                                                                                                                                                          | Default         |\n|-------------------------------||-----------------|\n| EXPAND_PARAM                  |                                                                                                                                                                                                                                                   The name of the parameter with the fields to be expanded                                                                                                                                                                                                                                                   | `\"expand\"`      |\n| MAXIMUM_EXPANSION_DEPTH       |                                                                                                                                                                                                                                                      The max allowed expansion depth. By default it's unlimited. Expanding `state.towns` would equal a depth of 2                                                                                                                                                                                                                                            | `None`          |\n| FIELDS_PARAM                  |                                                                                                                                                                                                                                      The name of the parameter with the fields to be included (others will be omitted)                                                                                                                                                                                                                                       | `\"fields\"`      |\n| OMIT_PARAM                    |                                                                                                                                                                                                                                                   The name of the parameter with the fields to be omitted                                                                                                                                                                                                                                                    | `\"omit\"`        |\n| RECURSIVE_EXPANSION_PERMITTED |                                                                                                                                                                                                                                             If `False`, an exception is raised when a recursive pattern is found                                                                                                                                                                                                                                             | `True`          |\n| WILDCARD_VALUES               | List of values that stand in for all field names. Can be used with the `fields` and `expand` parameters. <br><br>When used with `expand`, a wildcard value will trigger the expansion of all `expandable_fields` at a given level.<br><br>When used with `fields`, all fields are included at a given level. For example, you could pass `fields=name,state.*` if you have a city resource with a nested state in order to expand only the city's name field and all of the state's fields. <br><br>To disable use of wildcards, set this setting to `None`. | `[\"*\", \"~all\"]` |\n\nFor example, if you want your API to work a bit more like [JSON API](https://jsonapi.org/format/#fetching-includes), you could do:\n\n```python\nREST_FLEX_FIELDS = {\"EXPAND_PARAM\": \"include\"}\n```\n\n### Defining Expansion and Recursive Limits on Serializer Classes\n\nA `maximum_expansion_depth` integer property can be set on a serializer class.\n\n`recursive_expansion_permitted` boolean property can be set on a serializer class.\n\nBoth settings raise `serializers.ValidationError` when conditions are met but exceptions can be customized by overriding the `recursive_expansion_not_permitted` and `expansion_depth_exceeded` methods. \n\n\n## Serializer Introspection\n\nWhen using an instance of `FlexFieldsModelSerializer`, you can examine the property `expanded_fields` to discover which fields, if any, have been dynamically expanded.\n\n## Use of Wildcard to Match All Fields <a id=\"wildcards\"></a>\n\nYou can pass `expand=*` ([or another value of your choosing](#customization)) to automatically expand all fields that are available for expansion at a given level. To refer to nested resources, you can use dot-notation. For example, requesting `expand=menu.sections` for a restaurant resource would expand its nested `menu` resource, as well as that menu's nested `sections` resource.\n\nOr, when requesting sparse fields, you can pass `fields=*` to include only the specified fields at a given level. To refer to nested resources, you can use dot-notation. For example, if you have an `order` resource, you could request all of its fields as well as only two fields on its nested `restaurant` resource with the following: `fields=*,restaurent.name,restaurant.address&expand=restaurant`.\n\n## Combining Sparse Fields and Field Expansion <a id=\"combining-sparse-and-expanded\"></a>\n\nYou may be wondering how things work if you use both the `expand` and `fields` option, and there is overlap. For example, your serialized person model may look like the following by default:\n\n```json\n{\n  \"id\": 13322,\n  \"name\": \"John Doe\",\n  \"country\": {\n    \"name\": \"United States\"\n  }\n}\n```\n\nHowever, you make the following request `HTTP GET /person/13322?include=id,name&expand=country`. You will get the following back:\n\n```json\n{\n  \"id\": 13322,\n  \"name\": \"John Doe\"\n}\n```\n\nThe `fields` parameter takes precedence over `expand`. That is, if a field is not among the set that is explicitly alllowed, it cannot be expanded. If such a conflict occurs, you will not pay for the extra database queries - the expanded field will be silently abandoned.\n\n## Utility Functions <a id=\"utils\"></a>\n\n### rest_flex_fields.is_expanded(request, field: str)\n\nChecks whether a field has been expanded via the request's query parameters.\n\n**Parameters**\n\n- **request**: The request object\n- **field**: The name of the field to check\n\n### rest_flex_fields.is_included(request, field: str)\n\nChecks whether a field has NOT been excluded via either the `omit` parameter or the `fields` parameter.\n\n**Parameters**\n\n- **request**: The request object\n- **field**: The name of the field to check\n\n## Query optimization (experimental)\n\nAn experimental filter backend is available to help you automatically reduce the number of SQL queries and their transfer size. _This feature has not been tested thorougly and any help testing and reporting bugs is greatly appreciated._ You can add FlexFieldFilterBackend to `DEFAULT_FILTER_BACKENDS` in the settings:\n\n```python\n# settings.py\n\nREST_FRAMEWORK = {\n    'DEFAULT_FILTER_BACKENDS': (\n        'rest_flex_fields.filter_backends.FlexFieldsFilterBackend',\n        # ...\n    ),\n    # ...\n}\n```\n\nIt will automatically call `select_related` and `prefetch_related` on the current QuerySet by determining which fields are needed from many-to-many and foreign key-related models. For sparse fields requests (`?omit=fieldX,fieldY` or `?fields=fieldX,fieldY`), the backend will automatically call `only(*field_names)` using only the fields needed for serialization.\n\n**WARNING:** The optimization currently works only for one nesting level.\n\n# Changelog <a id=\"changelog\"></a>\n\n## 1.0.2 (March 2023)\n\n- Adds control over whether recursive expansions are allowed and allows setting the max expansion depth. Thanks @andruten!\n\n## 1.0.1 (March 2023)\n\n- Various bug fixes. Thanks @michaelschem, @andruten, and @erielias!\n\n## 1.0.0 (August 2022)\n\n- Improvements to the filter backends for generic foreign key handling and docs generation. Thanks @KrYpTeD974 and @michaelschem!\n\n## 0.9.9 (July 2022)\n\n- Fixes bug in `FlexFieldsFilterBackend`. Thanks @michaelschem!\n- Adds `FlexFieldsDocsFilterBackend` for schema population. Thanks @Rjevski!\n\n## 0.9.8 (April 2022)\n\n- Set expandable fields as the default example for expand query parameters in `coreapi.Field`. Thanks @JasperSui!\n\n## 0.9.7 (January 2022)\n\n- Includes m2m in prefetch_related clause even if they're not expanded. Thanks @pablolmedorado and @ADR-007!\n\n## 0.9.6 (November 2021)\n\n- Make it possible to use wildcard values with sparse fields requests.\n\n## 0.9.5 (October 2021)\n\n- Adds OpenAPI support. Thanks @soroush-tabesh!\n- Updates tests for Django 3.2 and fixes deprecation warning. Thanks @giovannicimolin!\n\n## 0.9.3 (August 2021)\n\n- Fixes bug where custom parameter names were not passed when constructing nested serializers. Thanks @Kandeel4411!\n\n## 0.9.2 (June 2021)\n\n- Ensures `context` dict is passed down to expanded serializers. Thanks @nikeshyad!\n\n## 0.9.1 (June 2021)\n\n- No longer auto removes `source` argument if it's equal to the field name.\n\n## 0.9.0 (April 2021)\n\n- Allows fully qualified import strings for lazy serializer classes.\n\n## 0.8.9 (February 2021)\n\n- Adds OpenAPI support to experimental filter backend. Thanks @LukasBerka!\n\n## 0.8.8 (September 2020)\n\n- Django 3.1.1 fix. Thansks @NiyazNz!\n- Docs typo fix. Thanks @zakjholt!\n\n## 0.8.6 (September 2020)\n\n- Adds `is_included` utility function.\n\n## 0.8.5 (May 2020)\n\n- Adds options to customize parameter names and wildcard values. Closes #10.\n\n## 0.8.1 (May 2020)\n\n- Fixes #44, related to the experimental filter backend. Thanks @jsatt!\n\n## 0.8.0 (April 2020)\n\n- Adds support for `expand`, `omit` and `fields` query parameters for non-GET requests.\n  - The common use case is creating/updating a model instance and returning a serialized response with expanded fields\n  - Thanks @kotepillar for raising the issue (#25) and @Crocmagnon for the idea of delaying field modification to `to_representation()`.\n\n## 0.7.5 (February 2020)\n\n- Simplifies declaration of `expandable_fields`\n  - If using a tuple, the second element - to define the serializer settings - is now optional.\n  - Instead of a tuple, you can now just use the serializer class or a string to lazily reference that class.\n  - Updates documentation.\n\n## 0.7.0 (February 2020)\n\n- Adds support for different ways of passing arrays in query strings. Thanks @sentyaev!\n- Fixes attribute error when map is supplied to split levels utility function. Thanks @hemache!\n\n## 0.6.1 (September 2019)\n\n- Adds experimental support for automatically SQL query optimization via a `FlexFieldsFilterBackend`. Thanks ADR-007!\n- Adds CircleCI config file. Thanks mikeIFTS!\n- Moves declaration of `expandable_fields` to `Meta` class on serialzer for consistency with DRF (will continue to support declaration as class property)\n- Python 2 is no longer supported. If you need Python 2 support, you can continue to use older versions of this package.\n\n## 0.5.0 (April 2019)\n\n- Added support for `omit` keyword for field exclusion. Code clean up and improved test coverage.\n\n## 0.3.4 (May 2018)\n\n- Handle case where `request` is `None` when accessing request object from serializer. Thanks @jsatt!\n\n## 0.3.3 (April 2018)\n\n- Exposes `FlexFieldsSerializerMixin` in addition to `FlexFieldsModelSerializer`. Thanks @jsatt!\n\n# Testing\n\nTests are found in a simplified DRF project in the `/tests` folder. Install the project requirements and do `./manage.py test` to run them.\n\n# License\n\nSee [License](LICENSE.md).\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/rsinger86/drf-flex-fields","keywords":"django rest api dynamic fields","license":"MIT","maintainer":"","maintainer_email":"","name":"drf-flex-fields","package_url":"https://pypi.org/project/drf-flex-fields/","platform":null,"project_url":"https://pypi.org/project/drf-flex-fields/","project_urls":{"Homepage":"https://github.com/rsinger86/drf-flex-fields"},"provides_extra":null,"release_url":"https://pypi.org/project/drf-flex-fields/1.0.2/","requires_dist":null,"requires_python":"","summary":"Flexible, dynamic fields and nested resources for Django REST Framework serializers.","version":"1.0.2","yanked":false,"yanked_reason":null},"last_serial":17253348,"releases":{"0.1.8":[{"comment_text":"","digests":{"blake2b_256":"ff299a5d700de7811885761c5745774dfa4f812fb671d4f4b0c27d3db5f5af19","md5":"e0cf080331471bf5cf2769fdf44d3857","sha256":"11eafc216a64ececa49c0312c8f5f6db88aff1750ce44c83614a34e86dad74aa"},"downloads":-1,"filename":"drf-flex-fields-0.1.8.tar.gz","has_sig":false,"md5_digest":"e0cf080331471bf5cf2769fdf44d3857","packagetype":"sdist","python_version":"source","requires_python":null,"size":6691,"upload_time":"2016-12-31T21:21:06","upload_time_iso_8601":"2016-12-31T21:21:06.629060Z","url":"https://files.pythonhosted.org/packages/ff/29/9a5d700de7811885761c5745774dfa4f812fb671d4f4b0c27d3db5f5af19/drf-flex-fields-0.1.8.tar.gz","yanked":false,"yanked_reason":null}],"0.1.9":[{"comment_text":"","digests":{"blake2b_256":"26c8879c510f808c45b5230a4626d55379cb67886c80f92cddf92cf4c15d53a6","md5":"e182e5ef1cb9680e07cb7041b79d8289","sha256":"b715205af967c5368a3478651211420b95c2ca44c2e4b2ff6296e36a35608cd7"},"downloads":-1,"filename":"drf-flex-fields-0.1.9.tar.gz","has_sig":false,"md5_digest":"e182e5ef1cb9680e07cb7041b79d8289","packagetype":"sdist","python_version":"source","requires_python":null,"size":7249,"upload_time":"2017-03-12T05:08:07","upload_time_iso_8601":"2017-03-12T05:08:07.170978Z","url":"https://files.pythonhosted.org/packages/26/c8/879c510f808c45b5230a4626d55379cb67886c80f92cddf92cf4c15d53a6/drf-flex-fields-0.1.9.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"6292ec57d062d33be6c1d9b57495156bd54421f2dea7712aa0c2a7392b8b7db4","md5":"4180340d3770c1e9d0e30f3b98eccc8a","sha256":"cc3c1633f29c8fa8073e59204157477eede83ef50aa2359489e408960bf53627"},"downloads":-1,"filename":"drf-flex-fields-0.2.0.tar.gz","has_sig":false,"md5_digest":"4180340d3770c1e9d0e30f3b98eccc8a","packagetype":"sdist","python_version":"source","requires_python":null,"size":7262,"upload_time":"2017-03-14T00:14:28","upload_time_iso_8601":"2017-03-14T00:14:28.213531Z","url":"https://files.pythonhosted.org/packages/62/92/ec57d062d33be6c1d9b57495156bd54421f2dea7712aa0c2a7392b8b7db4/drf-flex-fields-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.2.1":[{"comment_text":"","digests":{"blake2b_256":"5b8edaccc72f49e8dc5dfca8487ebe8062ea09b1f17b735d6e818531f70f5f8b","md5":"eb23df65e9177b8b53eb4b0f8848d564","sha256":"38d4295b8d956d7d68f9d55d8a79f0d7715826aa13b2d18b9a766aab6e33902b"},"downloads":-1,"filename":"drf-flex-fields-0.2.1.tar.gz","has_sig":false,"md5_digest":"eb23df65e9177b8b53eb4b0f8848d564","packagetype":"sdist","python_version":"source","requires_python":null,"size":7274,"upload_time":"2017-03-15T13:07:43","upload_time_iso_8601":"2017-03-15T13:07:43.510420Z","url":"https://files.pythonhosted.org/packages/5b/8e/daccc72f49e8dc5dfca8487ebe8062ea09b1f17b735d6e818531f70f5f8b/drf-flex-fields-0.2.1.tar.gz","yanked":false,"yanked_reason":null}],"0.2.2":[{"comment_text":"","digests":{"blake2b_256":"232536273894ae77540db7567b175c4ce06fe52c9d66fc0d958dff2720ca3c39","md5":"7cfde6dfdeca8a1ec700c624c9d2503f","sha256":"a61f3f45712386b5363d1907817777fd65ee83915b2c8864a37ef6f53c9ba16a"},"downloads":-1,"filename":"drf-flex-fields-0.2.2.tar.gz","has_sig":false,"md5_digest":"7cfde6dfdeca8a1ec700c624c9d2503f","packagetype":"sdist","python_version":"source","requires_python":null,"size":7691,"upload_time":"2017-03-19T15:08:55","upload_time_iso_8601":"2017-03-19T15:08:55.680140Z","url":"https://files.pythonhosted.org/packages/23/25/36273894ae77540db7567b175c4ce06fe52c9d66fc0d958dff2720ca3c39/drf-flex-fields-0.2.2.tar.gz","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"135042fc42d641c44c23d7b1821ce5ab0bdb5fa9ebaca1255c7c677e699c5b53","md5":"9ac2dccfbbc29887c700868e4d7c3c7b","sha256":"d8f8cb7c0888386f68ba8ac08411164eb49ba0d5d132d6ac4a26894574502ba5"},"downloads":-1,"filename":"drf-flex-fields-0.3.0.tar.gz","has_sig":false,"md5_digest":"9ac2dccfbbc29887c700868e4d7c3c7b","packagetype":"sdist","python_version":"source","requires_python":null,"size":7707,"upload_time":"2018-02-12T01:56:56","upload_time_iso_8601":"2018-02-12T01:56:56.353531Z","url":"https://files.pythonhosted.org/packages/13/50/42fc42d641c44c23d7b1821ce5ab0bdb5fa9ebaca1255c7c677e699c5b53/drf-flex-fields-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.1":[{"comment_text":"","digests":{"blake2b_256":"2bcda72e73f64d59e7c4128201d9b3f30b730b32592850ee6f1723d6c16c9e36","md5":"5af2c781de2f8cea756268c34990348f","sha256":"f8bce88cdc977ec04c6a97ca1a2b2192e48b503e1546810772b5d488e737e364"},"downloads":-1,"filename":"drf-flex-fields-0.3.1.tar.gz","has_sig":false,"md5_digest":"5af2c781de2f8cea756268c34990348f","packagetype":"sdist","python_version":"source","requires_python":null,"size":7693,"upload_time":"2018-02-12T02:14:42","upload_time_iso_8601":"2018-02-12T02:14:42.704187Z","url":"https://files.pythonhosted.org/packages/2b/cd/a72e73f64d59e7c4128201d9b3f30b730b32592850ee6f1723d6c16c9e36/drf-flex-fields-0.3.1.tar.gz","yanked":false,"yanked_reason":null}],"0.3.2":[{"comment_text":"","digests":{"blake2b_256":"a1b6e83e07ad7f034988959155eca0e87680d1e17ca9ed95831508ceda05fc42","md5":"80ad605b6b33700a1ce42c3b224fec3d","sha256":"9e1ad3e1dddbcfa8e8caea8b0074342eb52f9a283db94080c12ca324a028f5c4"},"downloads":-1,"filename":"drf-flex-fields-0.3.2.tar.gz","has_sig":false,"md5_digest":"80ad605b6b33700a1ce42c3b224fec3d","packagetype":"sdist","python_version":"source","requires_python":null,"size":7804,"upload_time":"2018-02-12T02:21:28","upload_time_iso_8601":"2018-02-12T02:21:28.405797Z","url":"https://files.pythonhosted.org/packages/a1/b6/e83e07ad7f034988959155eca0e87680d1e17ca9ed95831508ceda05fc42/drf-flex-fields-0.3.2.tar.gz","yanked":false,"yanked_reason":null}],"0.3.3":[{"comment_text":"","digests":{"blake2b_256":"d3331e0f3012d3b6d009e23af80f32dd4610c99e39ddc869a37d7e18051ebde0","md5":"4ce5f9e31ed614e5942f956d24047519","sha256":"d7f752888bd22d17df342a46212c8b37dcfbfdecd20eaabe2b55585f6cb807c4"},"downloads":-1,"filename":"drf-flex-fields-0.3.3.tar.gz","has_sig":false,"md5_digest":"4ce5f9e31ed614e5942f956d24047519","packagetype":"sdist","python_version":"source","requires_python":null,"size":8153,"upload_time":"2018-04-30T01:36:00","upload_time_iso_8601":"2018-04-30T01:36:00.326003Z","url":"https://files.pythonhosted.org/packages/d3/33/1e0f3012d3b6d009e23af80f32dd4610c99e39ddc869a37d7e18051ebde0/drf-flex-fields-0.3.3.tar.gz","yanked":false,"yanked_reason":null}],"0.3.4":[{"comment_text":"","digests":{"blake2b_256":"535fb4492e9ffbf54c46d346669300d55b6b2aa249cb2d03139b0e9b7cd61f98","md5":"4c5e5c288f0fe58b8b7bd3d20a484947","sha256":"0dbadc5c52db07838fb8ed58a62882951f3772817ea765052a5f4819c08de7a8"},"downloads":-1,"filename":"drf-flex-fields-0.3.4.tar.gz","has_sig":false,"md5_digest":"4c5e5c288f0fe58b8b7bd3d20a484947","packagetype":"sdist","python_version":"source","requires_python":null,"size":8218,"upload_time":"2018-05-04T12:11:39","upload_time_iso_8601":"2018-05-04T12:11:39.568927Z","url":"https://files.pythonhosted.org/packages/53/5f/b4492e9ffbf54c46d346669300d55b6b2aa249cb2d03139b0e9b7cd61f98/drf-flex-fields-0.3.4.tar.gz","yanked":false,"yanked_reason":null}],"0.3.5":[{"comment_text":"","digests":{"blake2b_256":"590721d321e4549da7f322d608796043ba63b0b392d0fb1992e858ec59f24703","md5":"2e78b6458aab17244e98a4033e01614d","sha256":"445ce1c24b6f881e246dbb437b3cc4ab4ed29ee51e6bb00fd9d4ed64ea609041"},"downloads":-1,"filename":"drf-flex-fields-0.3.5.tar.gz","has_sig":false,"md5_digest":"2e78b6458aab17244e98a4033e01614d","packagetype":"sdist","python_version":"source","requires_python":null,"size":13156,"upload_time":"2018-12-08T21:00:21","upload_time_iso_8601":"2018-12-08T21:00:21.700969Z","url":"https://files.pythonhosted.org/packages/59/07/21d321e4549da7f322d608796043ba63b0b392d0fb1992e858ec59f24703/drf-flex-fields-0.3.5.tar.gz","yanked":false,"yanked_reason":null}],"0.5.0":[{"comment_text":"","digests":{"blake2b_256":"ab5ae5af74064842253d005ee54104ab1bd1f49147c75650ddf6a27e7b13a863","md5":"a4b83b5ca6773b55027dc6dd767fca91","sha256":"e3e19fb5711b38cd5cfc5428e24687502e72544f42b3bbe2438feb1f5d7991aa"},"downloads":-1,"filename":"drf-flex-fields-0.5.0.tar.gz","has_sig":false,"md5_digest":"a4b83b5ca6773b55027dc6dd767fca91","packagetype":"sdist","python_version":"source","requires_python":null,"size":14658,"upload_time":"2019-04-28T13:52:48","upload_time_iso_8601":"2019-04-28T13:52:48.650783Z","url":"https://files.pythonhosted.org/packages/ab/5a/e5af74064842253d005ee54104ab1bd1f49147c75650ddf6a27e7b13a863/drf-flex-fields-0.5.0.tar.gz","yanked":false,"yanked_reason":null}],"0.6.0":[{"comment_text":"","digests":{"blake2b_256":"192b0a0c622f5dd5ab68ba450989eb03911c1b09c3be78e83d98d5350b54015d","md5":"e992a1d3f7819ba4fa3cd5eb1dc80ab5","sha256":"9f5289b1ccd5d772630ae672dc707ba4bf7602e8019c8af38578385e86412bcd"},"downloads":-1,"filename":"drf-flex-fields-0.6.0.tar.gz","has_sig":false,"md5_digest":"e992a1d3f7819ba4fa3cd5eb1dc80ab5","packagetype":"sdist","python_version":"source","requires_python":null,"size":18821,"upload_time":"2019-09-07T17:58:25","upload_time_iso_8601":"2019-09-07T17:58:25.592568Z","url":"https://files.pythonhosted.org/packages/19/2b/0a0c622f5dd5ab68ba450989eb03911c1b09c3be78e83d98d5350b54015d/drf-flex-fields-0.6.0.tar.gz","yanked":false,"yanked_reason":null}],"0.6.1":[{"comment_text":"","digests":{"blake2b_256":"07319df7b00cd2e650da25909f4106eaae0cb8f2e12fa7f4f5d137aedefba6f4","md5":"ecc0d1e2c1cc0bb1af9bc29024f22354","sha256":"6a27d3efe3cdf9334e2cf0fab2c1fd18baa4c79e789228aef5b296152904929f"},"downloads":-1,"filename":"drf-flex-fields-0.6.1.tar.gz","has_sig":false,"md5_digest":"ecc0d1e2c1cc0bb1af9bc29024f22354","packagetype":"sdist","python_version":"source","requires_python":null,"size":19141,"upload_time":"2019-09-07T18:12:45","upload_time_iso_8601":"2019-09-07T18:12:45.037742Z","url":"https://files.pythonhosted.org/packages/07/31/9df7b00cd2e650da25909f4106eaae0cb8f2e12fa7f4f5d137aedefba6f4/drf-flex-fields-0.6.1.tar.gz","yanked":false,"yanked_reason":null}],"0.7.0":[{"comment_text":"","digests":{"blake2b_256":"20a3c005e72fa375b3603a07f8fd0e2c7fba280c9c5e319553f09a671dd85e08","md5":"f8c4a3b673c49173375768ba7e20194b","sha256":"57677460615863df8f1a713cfc47f257d7c2d316544a0ae4c575202bb60b32b4"},"downloads":-1,"filename":"drf-flex-fields-0.7.0.tar.gz","has_sig":false,"md5_digest":"f8c4a3b673c49173375768ba7e20194b","packagetype":"sdist","python_version":"source","requires_python":null,"size":19713,"upload_time":"2020-02-08T21:24:16","upload_time_iso_8601":"2020-02-08T21:24:16.202341Z","url":"https://files.pythonhosted.org/packages/20/a3/c005e72fa375b3603a07f8fd0e2c7fba280c9c5e319553f09a671dd85e08/drf-flex-fields-0.7.0.tar.gz","yanked":false,"yanked_reason":null}],"0.7.5":[{"comment_text":"","digests":{"blake2b_256":"3405bd8218b2e6d0e32207a8ff634aaf9de9d26e533fdacd170c2f7ec1e5186f","md5":"1f2d8b1f5a4a1992660f7c6089fa3405","sha256":"727d7b68adde4c20c8beb1d317baf250239a92e244a5dd977cde486246a399ef"},"downloads":-1,"filename":"drf-flex-fields-0.7.5.tar.gz","has_sig":false,"md5_digest":"1f2d8b1f5a4a1992660f7c6089fa3405","packagetype":"sdist","python_version":"source","requires_python":null,"size":20540,"upload_time":"2020-02-09T18:24:23","upload_time_iso_8601":"2020-02-09T18:24:23.980695Z","url":"https://files.pythonhosted.org/packages/34/05/bd8218b2e6d0e32207a8ff634aaf9de9d26e533fdacd170c2f7ec1e5186f/drf-flex-fields-0.7.5.tar.gz","yanked":false,"yanked_reason":null}],"0.8.0":[{"comment_text":"","digests":{"blake2b_256":"b13698b7dacd353e532c9d6897558fc43b85a33f9002f7c562a87549d0786435","md5":"d52aceb11da165d07927c449040520a3","sha256":"52379f7a3b894e245ac6d40ab0579bc9953449b7ddae6f61b2ccab5b1ae65031"},"downloads":-1,"filename":"drf-flex-fields-0.8.0.tar.gz","has_sig":false,"md5_digest":"d52aceb11da165d07927c449040520a3","packagetype":"sdist","python_version":"source","requires_python":null,"size":20846,"upload_time":"2020-04-26T16:34:22","upload_time_iso_8601":"2020-04-26T16:34:22.752923Z","url":"https://files.pythonhosted.org/packages/b1/36/98b7dacd353e532c9d6897558fc43b85a33f9002f7c562a87549d0786435/drf-flex-fields-0.8.0.tar.gz","yanked":false,"yanked_reason":null}],"0.8.1":[{"comment_text":"","digests":{"blake2b_256":"144cc06ad7b87f09f7d7f3624d2e57050aa5ccf11cfd3c6d4ce35d407b536e30","md5":"14fbbd21178b57a96e28bafc03581148","sha256":"8802c1840d3ff30049e05dbdf79dd837cc7ab8f3fbc8799618465dac2d1bdea8"},"downloads":-1,"filename":"drf-flex-fields-0.8.1.tar.gz","has_sig":false,"md5_digest":"14fbbd21178b57a96e28bafc03581148","packagetype":"sdist","python_version":"source","requires_python":null,"size":20901,"upload_time":"2020-05-16T20:52:34","upload_time_iso_8601":"2020-05-16T20:52:34.946810Z","url":"https://files.pythonhosted.org/packages/14/4c/c06ad7b87f09f7d7f3624d2e57050aa5ccf11cfd3c6d4ce35d407b536e30/drf-flex-fields-0.8.1.tar.gz","yanked":false,"yanked_reason":null}],"0.8.5":[{"comment_text":"","digests":{"blake2b_256":"e4b888bafe50b421d0ca0a72bb7748c5c600726553c28909c99ee12af4ce2104","md5":"8b4a8bffc441689368d18ef0531d633f","sha256":"04b11ad443d819717041afd29ea4c962592cbcc780fe975be4ed1a0ab617b402"},"downloads":-1,"filename":"drf-flex-fields-0.8.5.tar.gz","has_sig":false,"md5_digest":"8b4a8bffc441689368d18ef0531d633f","packagetype":"sdist","python_version":"source","requires_python":null,"size":21742,"upload_time":"2020-05-23T17:52:52","upload_time_iso_8601":"2020-05-23T17:52:52.709879Z","url":"https://files.pythonhosted.org/packages/e4/b8/88bafe50b421d0ca0a72bb7748c5c600726553c28909c99ee12af4ce2104/drf-flex-fields-0.8.5.tar.gz","yanked":false,"yanked_reason":null}],"0.8.6":[{"comment_text":"","digests":{"blake2b_256":"a3ffe920fff3bd737e06d862c85f4cc41a10b2969ffe3b10874cad550673e3ef","md5":"ea87587ae63f023740ab8c82445fc56c","sha256":"13cd1e4371d0ca9580b8e71282b6cabd7a4e4a57e10298321b312c300eabf2b7"},"downloads":-1,"filename":"drf-flex-fields-0.8.6.tar.gz","has_sig":false,"md5_digest":"ea87587ae63f023740ab8c82445fc56c","packagetype":"sdist","python_version":"source","requires_python":null,"size":22455,"upload_time":"2020-09-12T19:10:53","upload_time_iso_8601":"2020-09-12T19:10:53.426512Z","url":"https://files.pythonhosted.org/packages/a3/ff/e920fff3bd737e06d862c85f4cc41a10b2969ffe3b10874cad550673e3ef/drf-flex-fields-0.8.6.tar.gz","yanked":false,"yanked_reason":null}],"0.8.8":[{"comment_text":"","digests":{"blake2b_256":"0c209130ab5b0de51149e67bd983dcc97d137642dbf9b9f3e922db2120faf130","md5":"bff6a7f3956f5a8a918ae0d6d857c249","sha256":"f4c8d2b768c607ed62efc45369ae5a5e8f632e45d09083fd66ef8537aaa24189"},"downloads":-1,"filename":"drf-flex-fields-0.8.8.tar.gz","has_sig":false,"md5_digest":"bff6a7f3956f5a8a918ae0d6d857c249","packagetype":"sdist","python_version":"source","requires_python":null,"size":22543,"upload_time":"2020-11-23T03:45:50","upload_time_iso_8601":"2020-11-23T03:45:50.725176Z","url":"https://files.pythonhosted.org/packages/0c/20/9130ab5b0de51149e67bd983dcc97d137642dbf9b9f3e922db2120faf130/drf-flex-fields-0.8.8.tar.gz","yanked":false,"yanked_reason":null}],"0.8.9":[{"comment_text":"","digests":{"blake2b_256":"02810369e2772695be3a29eb46426471ab4e371dbad1c10842c5a47ba0b65ced","md5":"0d57c17135588a26632869d765ede269","sha256":"f68174ee294c7597933989522e87e2c69bbafde922fb353e27b3bc53487fc7de"},"downloads":-1,"filename":"drf-flex-fields-0.8.9.tar.gz","has_sig":false,"md5_digest":"0d57c17135588a26632869d765ede269","packagetype":"sdist","python_version":"source","requires_python":null,"size":25451,"upload_time":"2021-02-14T23:17:25","upload_time_iso_8601":"2021-02-14T23:17:25.561279Z","url":"https://files.pythonhosted.org/packages/02/81/0369e2772695be3a29eb46426471ab4e371dbad1c10842c5a47ba0b65ced/drf-flex-fields-0.8.9.tar.gz","yanked":false,"yanked_reason":null}],"0.9.0":[{"comment_text":"","digests":{"blake2b_256":"8f9ca31265906c8b46268d1fe306beafd1f246570e02815196be96ecb070d7fb","md5":"b5a698257781ee81b51880bc46508ac5","sha256":"987a1ed29adf9c0468bf345b0a7284ce48f7b642083e13e2b2a30eb90d42dfa8"},"downloads":-1,"filename":"drf-flex-fields-0.9.0.tar.gz","has_sig":false,"md5_digest":"b5a698257781ee81b51880bc46508ac5","packagetype":"sdist","python_version":"source","requires_python":null,"size":26054,"upload_time":"2021-05-02T18:01:10","upload_time_iso_8601":"2021-05-02T18:01:10.975827Z","url":"https://files.pythonhosted.org/packages/8f/9c/a31265906c8b46268d1fe306beafd1f246570e02815196be96ecb070d7fb/drf-flex-fields-0.9.0.tar.gz","yanked":false,"yanked_reason":null}],"0.9.1":[{"comment_text":"","digests":{"blake2b_256":"5f613274c0e04d14cba0dd9b718e82a997d66e7fe03655cacf0c8ed0aec57a78","md5":"92dff723b22d08dbb28cbbf5eaf5b9fa","sha256":"13b34608685eaeccb00e044a40cab8c99f0aa79bdf5a8af297dddb7806b858c4"},"downloads":-1,"filename":"drf-flex-fields-0.9.1.tar.gz","has_sig":false,"md5_digest":"92dff723b22d08dbb28cbbf5eaf5b9fa","packagetype":"sdist","python_version":"source","requires_python":null,"size":26504,"upload_time":"2021-06-19T15:52:18","upload_time_iso_8601":"2021-06-19T15:52:18.597205Z","url":"https://files.pythonhosted.org/packages/5f/61/3274c0e04d14cba0dd9b718e82a997d66e7fe03655cacf0c8ed0aec57a78/drf-flex-fields-0.9.1.tar.gz","yanked":false,"yanked_reason":null}],"0.9.2":[{"comment_text":"","digests":{"blake2b_256":"f44c95e74bbe485c5492fac060d356cc0cabe031f3b1d53746f011dcb0c57102","md5":"1242e621fbd8e1eb9d3de4c59d73688d","sha256":"8a8aa490415cc3b500a00e3f4d48af541aca23693ea3fc2b899ea2512ae96a44"},"downloads":-1,"filename":"drf-flex-fields-0.9.2.tar.gz","has_sig":false,"md5_digest":"1242e621fbd8e1eb9d3de4c59d73688d","packagetype":"sdist","python_version":"source","requires_python":null,"size":26738,"upload_time":"2021-08-06T14:39:20","upload_time_iso_8601":"2021-08-06T14:39:20.523874Z","url":"https://files.pythonhosted.org/packages/f4/4c/95e74bbe485c5492fac060d356cc0cabe031f3b1d53746f011dcb0c57102/drf-flex-fields-0.9.2.tar.gz","yanked":false,"yanked_reason":null}],"0.9.3":[{"comment_text":"","digests":{"blake2b_256":"8ac2f50f56b116a840154a82c541f954a6e226fb47599699e67cc378150715b8","md5":"7dab5802c657ca2f9e7560169e8afbec","sha256":"587e0d92e5ed1d40975e840549497537a205de56b15f29de5fa4552137591f14"},"downloads":-1,"filename":"drf-flex-fields-0.9.3.tar.gz","has_sig":false,"md5_digest":"7dab5802c657ca2f9e7560169e8afbec","packagetype":"sdist","python_version":"source","requires_python":null,"size":26819,"upload_time":"2021-08-15T19:48:36","upload_time_iso_8601":"2021-08-15T19:48:36.846901Z","url":"https://files.pythonhosted.org/packages/8a/c2/f50f56b116a840154a82c541f954a6e226fb47599699e67cc378150715b8/drf-flex-fields-0.9.3.tar.gz","yanked":false,"yanked_reason":null}],"0.9.4":[{"comment_text":"","digests":{"blake2b_256":"fa21bb7d155ef1af7b5853df56821494690c6dc26c8b60bec702a66977853332","md5":"18ef555b5544948a178e9c672d56b7dc","sha256":"179297bfd2e0f37248bf36ab689574f3be7c6fb15cc299734ba7b147e3388af0"},"downloads":-1,"filename":"drf-flex-fields-0.9.4.tar.gz","has_sig":false,"md5_digest":"18ef555b5544948a178e9c672d56b7dc","packagetype":"sdist","python_version":"source","requires_python":null,"size":27181,"upload_time":"2021-09-21T13:07:47","upload_time_iso_8601":"2021-09-21T13:07:47.253000Z","url":"https://files.pythonhosted.org/packages/fa/21/bb7d155ef1af7b5853df56821494690c6dc26c8b60bec702a66977853332/drf-flex-fields-0.9.4.tar.gz","yanked":false,"yanked_reason":null}],"0.9.5":[{"comment_text":"","digests":{"blake2b_256":"5e1f1bb84adc99cd1682520b60a29b857af4ffad35dda41feac3967bcd552b72","md5":"fbcffe5a15f869e78f7f60ee71593c2f","sha256":"4551a80e60fa505c947bd17cfc3a06f74d5baa3e6905b7447f18c2f8f088661d"},"downloads":-1,"filename":"drf-flex-fields-0.9.5.tar.gz","has_sig":false,"md5_digest":"fbcffe5a15f869e78f7f60ee71593c2f","packagetype":"sdist","python_version":"source","requires_python":null,"size":27728,"upload_time":"2021-10-06T04:01:15","upload_time_iso_8601":"2021-10-06T04:01:15.891076Z","url":"https://files.pythonhosted.org/packages/5e/1f/1bb84adc99cd1682520b60a29b857af4ffad35dda41feac3967bcd552b72/drf-flex-fields-0.9.5.tar.gz","yanked":false,"yanked_reason":null}],"0.9.6":[{"comment_text":"","digests":{"blake2b_256":"38b4129cc33cdb174d3c43354adfa4ef7fd9123cc6dbb4a81158e1b6d01f7923","md5":"8dff791ac91aa98bd39ccfbc3a486bad","sha256":"07ef01a6c0b887de3cb97a673465de77ce7019cfd8c3e498ca7cd49ed03cf550"},"downloads":-1,"filename":"drf-flex-fields-0.9.6.tar.gz","has_sig":false,"md5_digest":"8dff791ac91aa98bd39ccfbc3a486bad","packagetype":"sdist","python_version":"source","requires_python":null,"size":28281,"upload_time":"2021-11-14T23:22:12","upload_time_iso_8601":"2021-11-14T23:22:12.898960Z","url":"https://files.pythonhosted.org/packages/38/b4/129cc33cdb174d3c43354adfa4ef7fd9123cc6dbb4a81158e1b6d01f7923/drf-flex-fields-0.9.6.tar.gz","yanked":false,"yanked_reason":null}],"0.9.7":[{"comment_text":"","digests":{"blake2b_256":"8a692cd8224c015f0ec3ae7ffabfa3ee1b9f3e0f8ce5cea1434715fc360e67dd","md5":"658f003e171a6be972ed85bf75dd99e1","sha256":"d1d9ebcb6c6227a36021695ef1f7301b7255dfb01e8581602d48e62704c72b19"},"downloads":-1,"filename":"drf-flex-fields-0.9.7.tar.gz","has_sig":false,"md5_digest":"658f003e171a6be972ed85bf75dd99e1","packagetype":"sdist","python_version":"source","requires_python":null,"size":28440,"upload_time":"2022-01-07T21:59:12","upload_time_iso_8601":"2022-01-07T21:59:12.031198Z","url":"https://files.pythonhosted.org/packages/8a/69/2cd8224c015f0ec3ae7ffabfa3ee1b9f3e0f8ce5cea1434715fc360e67dd/drf-flex-fields-0.9.7.tar.gz","yanked":false,"yanked_reason":null}],"0.9.8":[{"comment_text":"","digests":{"blake2b_256":"2cfec75a3c69e4a32ead0edfc8e689920588a448bef31b71ac6a3accf1d0ed8d","md5":"0e85737d1645e9f7f6f8cd8f9ad01236","sha256":"6479f7c869254954967091586fec2158e76b36df80c10a9916eed9750d80ab0f"},"downloads":-1,"filename":"drf-flex-fields-0.9.8.tar.gz","has_sig":false,"md5_digest":"0e85737d1645e9f7f6f8cd8f9ad01236","packagetype":"sdist","python_version":"source","requires_python":null,"size":28595,"upload_time":"2022-04-05T04:07:38","upload_time_iso_8601":"2022-04-05T04:07:38.712463Z","url":"https://files.pythonhosted.org/packages/2c/fe/c75a3c69e4a32ead0edfc8e689920588a448bef31b71ac6a3accf1d0ed8d/drf-flex-fields-0.9.8.tar.gz","yanked":false,"yanked_reason":null}],"0.9.9":[{"comment_text":"","digests":{"blake2b_256":"d21b7efc232522b3ea9b63ea0e63ae55055c868673fe9e77ba2a3b910cc128ec","md5":"6cfa3b174e6909a5103d5b2a8c5ba2b2","sha256":"dbbfbdbdc17da79dd10fdf7a4e493913699d2c08321d331afc3fca67522f4334"},"downloads":-1,"filename":"drf-flex-fields-0.9.9.tar.gz","has_sig":false,"md5_digest":"6cfa3b174e6909a5103d5b2a8c5ba2b2","packagetype":"sdist","python_version":"source","requires_python":null,"size":29173,"upload_time":"2022-08-28T20:35:19","upload_time_iso_8601":"2022-08-28T20:35:19.592436Z","url":"https://files.pythonhosted.org/packages/d2/1b/7efc232522b3ea9b63ea0e63ae55055c868673fe9e77ba2a3b910cc128ec/drf-flex-fields-0.9.9.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"65e15e7060489feba381bb57a6339bc261644566da7bc351830d83171a973840","md5":"81f76241cf9bddfc3bbc9f2c8573bb9f","sha256":"e3e823386ac0103307d6fb0812ee39a443ece0e0f90a649e1cc739462499335d"},"downloads":-1,"filename":"drf-flex-fields-1.0.0.tar.gz","has_sig":false,"md5_digest":"81f76241cf9bddfc3bbc9f2c8573bb9f","packagetype":"sdist","python_version":"source","requires_python":null,"size":30342,"upload_time":"2022-08-28T20:34:09","upload_time_iso_8601":"2022-08-28T20:34:09.220430Z","url":"https://files.pythonhosted.org/packages/65/e1/5e7060489feba381bb57a6339bc261644566da7bc351830d83171a973840/drf-flex-fields-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"fb1f8304469453c8f248fd2e8f9d92063f2c100e56c84dc8649f551639923ebd","md5":"0d1ed82ab88122db840d19efe8c22cd3","sha256":"bee9794dcb507e6baefcbe4490ceb4fc5ca034676966bfcd90a19eeef2f2266b"},"downloads":-1,"filename":"drf-flex-fields-1.0.1.tar.gz","has_sig":false,"md5_digest":"0d1ed82ab88122db840d19efe8c22cd3","packagetype":"sdist","python_version":"source","requires_python":null,"size":28736,"upload_time":"2023-03-03T07:03:27","upload_time_iso_8601":"2023-03-03T07:03:27.223142Z","url":"https://files.pythonhosted.org/packages/fb/1f/8304469453c8f248fd2e8f9d92063f2c100e56c84dc8649f551639923ebd/drf-flex-fields-1.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.0.2":[{"comment_text":"","digests":{"blake2b_256":"f9afe4819b8ffe4f00694e79810a33c2afc46ee6df98c0bc045a65c5b275678c","md5":"dfab2406eddc4fd723871078facba765","sha256":"48139eeff0b1232fc05a9f353c3c2b570b225985043dedda6ab0d5e8b7a1d7af"},"downloads":-1,"filename":"drf-flex-fields-1.0.2.tar.gz","has_sig":false,"md5_digest":"dfab2406eddc4fd723871078facba765","packagetype":"sdist","python_version":"source","requires_python":null,"size":30476,"upload_time":"2023-03-11T13:30:29","upload_time_iso_8601":"2023-03-11T13:30:29.787398Z","url":"https://files.pythonhosted.org/packages/f9/af/e4819b8ffe4f00694e79810a33c2afc46ee6df98c0bc045a65c5b275678c/drf-flex-fields-1.0.2.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"f9afe4819b8ffe4f00694e79810a33c2afc46ee6df98c0bc045a65c5b275678c","md5":"dfab2406eddc4fd723871078facba765","sha256":"48139eeff0b1232fc05a9f353c3c2b570b225985043dedda6ab0d5e8b7a1d7af"},"downloads":-1,"filename":"drf-flex-fields-1.0.2.tar.gz","has_sig":false,"md5_digest":"dfab2406eddc4fd723871078facba765","packagetype":"sdist","python_version":"source","requires_python":null,"size":30476,"upload_time":"2023-03-11T13:30:29","upload_time_iso_8601":"2023-03-11T13:30:29.787398Z","url":"https://files.pythonhosted.org/packages/f9/af/e4819b8ffe4f00694e79810a33c2afc46ee6df98c0bc045a65c5b275678c/drf-flex-fields-1.0.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
