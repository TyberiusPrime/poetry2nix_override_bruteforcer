{"info":{"author":"Alex Hall","author_email":"alex.mojaki@gmail.com","bugtrack_url":null,"classifiers":["Intended Audience :: Developers","License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description":"# `pure_eval`\n\n[![Build Status](https://travis-ci.org/alexmojaki/pure_eval.svg?branch=master)](https://travis-ci.org/alexmojaki/pure_eval) [![Coverage Status](https://coveralls.io/repos/github/alexmojaki/pure_eval/badge.svg?branch=master)](https://coveralls.io/github/alexmojaki/pure_eval?branch=master) [![Supports Python versions 3.5+](https://img.shields.io/pypi/pyversions/pure_eval.svg)](https://pypi.python.org/pypi/pure_eval)\n\nThis is a Python package that lets you safely evaluate certain AST nodes without triggering arbitrary code that may have unwanted side effects.\n\nIt can be installed from PyPI:\n\n    pip install pure_eval\n\nTo demonstrate usage, suppose we have an object defined as follows:\n\n```python\nclass Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    @property\n    def area(self):\n        print(\"Calculating area...\")\n        return self.width * self.height\n\n\nrect = Rectangle(3, 5)\n```\n\nGiven the `rect` object, we want to evaluate whatever expressions we can in this source code:\n\n```python\nsource = \"(rect.width, rect.height, rect.area)\"\n```\n\nThis library works with the AST, so let's parse the source code and peek inside:\n\n```python\nimport ast\n\ntree = ast.parse(source)\nthe_tuple = tree.body[0].value\nfor node in the_tuple.elts:\n    print(ast.dump(node))\n```\n\nOutput:\n\n```python\nAttribute(value=Name(id='rect', ctx=Load()), attr='width', ctx=Load())\nAttribute(value=Name(id='rect', ctx=Load()), attr='height', ctx=Load())\nAttribute(value=Name(id='rect', ctx=Load()), attr='area', ctx=Load())\n```\n\nNow to actually use the library. First construct an Evaluator:\n\n```python\nfrom pure_eval import Evaluator\n\nevaluator = Evaluator({\"rect\": rect})\n```\n\nThe argument to `Evaluator` should be a mapping from variable names to their values. Or if you have access to the stack frame where `rect` is defined, you can instead use:\n\n```python\nevaluator = Evaluator.from_frame(frame)\n```\n\nNow to evaluate some nodes, using `evaluator[node]`:\n\n```python\nprint(\"rect.width:\", evaluator[the_tuple.elts[0]])\nprint(\"rect:\", evaluator[the_tuple.elts[0].value])\n```\n\nOutput:\n\n```\nrect.width: 3\nrect: <__main__.Rectangle object at 0x105b0dd30>\n```\n\nOK, but you could have done the same thing with `eval`. The useful part is that it will refuse to evaluate the property `rect.area` because that would trigger unknown code. If we try, it'll raise a `CannotEval` exception.\n\n```python\nfrom pure_eval import CannotEval\n\ntry:\n    print(\"rect.area:\", evaluator[the_tuple.elts[2]])  # fails\nexcept CannotEval as e:\n    print(e)  # prints CannotEval\n```\n\nTo find all the expressions that can be evaluated in a tree:\n\n```python\nfor node, value in evaluator.find_expressions(tree):\n    print(ast.dump(node), value)\n```\n\nOutput:\n\n```python\nAttribute(value=Name(id='rect', ctx=Load()), attr='width', ctx=Load()) 3\nAttribute(value=Name(id='rect', ctx=Load()), attr='height', ctx=Load()) 5\nName(id='rect', ctx=Load()) <__main__.Rectangle object at 0x105568d30>\nName(id='rect', ctx=Load()) <__main__.Rectangle object at 0x105568d30>\nName(id='rect', ctx=Load()) <__main__.Rectangle object at 0x105568d30>\n```\n\nNote that this includes `rect` three times, once for each appearance in the source code. Since all these nodes are equivalent, we can group them together:\n\n```python\nfrom pure_eval import group_expressions\n\nfor nodes, values in group_expressions(evaluator.find_expressions(tree)):\n    print(len(nodes), \"nodes with value:\", values)\n```\n\nOutput:\n\n```\n1 nodes with value: 3\n1 nodes with value: 5\n3 nodes with value: <__main__.Rectangle object at 0x10d374d30>\n```\n\nIf we want to list all the expressions in a tree, we may want to filter out certain expressions whose values are obvious. For example, suppose we have a function `foo`:\n\n```python\ndef foo():\n    pass\n```\n\nIf we refer to `foo` by its name as usual, then that's not interesting:\n\n```python\nfrom pure_eval import is_expression_interesting\n\nnode = ast.parse('foo').body[0].value\nprint(ast.dump(node))\nprint(is_expression_interesting(node, foo))\n```\n\nOutput:\n\n```python\nName(id='foo', ctx=Load())\nFalse\n```\n\nBut if we refer to it by a different name, then it's interesting:\n\n```python\nnode = ast.parse('bar').body[0].value\nprint(ast.dump(node))\nprint(is_expression_interesting(node, foo))\n```\n\nOutput:\n\n```python\nName(id='bar', ctx=Load())\nTrue\n```\n\nIn general `is_expression_interesting` returns False for the following values:\n- Literals (e.g. `123`, `'abc'`, `[1, 2, 3]`, `{'a': (), 'b': ([1, 2], [3])}`)\n- Variables or attributes whose name is equal to the value's `__name__`, such as `foo` above or `self.foo` if it was a method.\n- Builtins (e.g. `len`) referred to by their usual name.\n\nTo make things easier, you can combine finding expressions, grouping them, and filtering out the obvious ones with:\n\n```python\nevaluator.interesting_expressions_grouped(root)\n```\n\nTo get the source code of an AST node, I recommend [asttokens](https://github.com/gristlabs/asttokens).\n\nHere's a complete example that brings it all together:\n\n```python\nfrom asttokens import ASTTokens\nfrom pure_eval import Evaluator\n\nsource = \"\"\"\nx = 1\nd = {x: 2}\ny = d[x]\n\"\"\"\n\nnames = {}\nexec(source, names)\natok = ASTTokens(source, parse=True)\nfor nodes, value in Evaluator(names).interesting_expressions_grouped(atok.tree):\n    print(atok.get_text(nodes[0]), \"=\", value)\n```\n\nOutput:\n\n```python\nx = 1\nd = {1: 2}\ny = 2\nd[x] = 2\n```\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/alexmojaki/pure_eval","keywords":"","license":"MIT","maintainer":"","maintainer_email":"","name":"pure-eval","package_url":"https://pypi.org/project/pure-eval/","platform":"","project_url":"https://pypi.org/project/pure-eval/","project_urls":{"Homepage":"http://github.com/alexmojaki/pure_eval"},"provides_extra":null,"release_url":"https://pypi.org/project/pure-eval/0.2.2/","requires_dist":["pytest ; extra == 'tests'"],"requires_python":"","summary":"Safely evaluate AST nodes without side effects","version":"0.2.2","yanked":false,"yanked_reason":null},"last_serial":21617419,"releases":{"0.0.1":[{"comment_text":"","digests":{"blake2b_256":"a95f8d780012dc270ae07337acce3ebb5fea5a76fe46b8c169248cadff9c038c","md5":"3db4e434b724c7e7dca509add6a0e7e7","sha256":"10a67dd1cfa2d0d11e22fef33033328d6a68a5d75ac666a18f37236615328248"},"downloads":-1,"filename":"pure_eval-0.0.1.tar.gz","has_sig":false,"md5_digest":"3db4e434b724c7e7dca509add6a0e7e7","packagetype":"sdist","python_version":"source","requires_python":null,"size":4144,"upload_time":"2019-12-17T19:14:38","upload_time_iso_8601":"2019-12-17T19:14:38.130521Z","url":"https://files.pythonhosted.org/packages/a9/5f/8d780012dc270ae07337acce3ebb5fea5a76fe46b8c169248cadff9c038c/pure_eval-0.0.1.tar.gz","yanked":false,"yanked_reason":null}],"0.0.2":[{"comment_text":"","digests":{"blake2b_256":"7241dfa5f90c6f64570dc2c173622e9f39a289468d0cd4f6e9bcdc261ceb0587","md5":"3ddf58d983943d1704d5b5a3d3ca29d4","sha256":"9e148137e9198c2b43537ee222bbd9f26007891d87f18687c2bd375e11061ed3"},"downloads":-1,"filename":"pure_eval-0.0.2.tar.gz","has_sig":false,"md5_digest":"3ddf58d983943d1704d5b5a3d3ca29d4","packagetype":"sdist","python_version":"source","requires_python":null,"size":4163,"upload_time":"2019-12-18T21:24:54","upload_time_iso_8601":"2019-12-18T21:24:54.958612Z","url":"https://files.pythonhosted.org/packages/72/41/dfa5f90c6f64570dc2c173622e9f39a289468d0cd4f6e9bcdc261ceb0587/pure_eval-0.0.2.tar.gz","yanked":false,"yanked_reason":null}],"0.0.3":[{"comment_text":"","digests":{"blake2b_256":"1ea976c39472f04febae535a85d0a54bcf0519a20877b986749f30d652e3cdde","md5":"3cef6fd3b3bb490f14d4c36ad1d01b69","sha256":"207facfb53f183e740be37d3e13f25968e16e7799d7725940b3ee008266903c1"},"downloads":-1,"filename":"pure_eval-0.0.3.tar.gz","has_sig":false,"md5_digest":"3cef6fd3b3bb490f14d4c36ad1d01b69","packagetype":"sdist","python_version":"source","requires_python":null,"size":7780,"upload_time":"2019-12-25T16:41:08","upload_time_iso_8601":"2019-12-25T16:41:08.896524Z","url":"https://files.pythonhosted.org/packages/1e/a9/76c39472f04febae535a85d0a54bcf0519a20877b986749f30d652e3cdde/pure_eval-0.0.3.tar.gz","yanked":false,"yanked_reason":null}],"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"fac9e89955dbe264b01dcfcb0879913f299b26c218c850a46686a8ea124e11b4","md5":"e09bdb925f6a00db5b645017d5ef90a3","sha256":"84f92f34b48c5fff189c883d3a5715472d8b2c39fefc57b0a68b584a6c626731"},"downloads":-1,"filename":"pure_eval-0.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"e09bdb925f6a00db5b645017d5ef90a3","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":9373,"upload_time":"2020-05-30T20:35:56","upload_time_iso_8601":"2020-05-30T20:35:56.063917Z","url":"https://files.pythonhosted.org/packages/fa/c9/e89955dbe264b01dcfcb0879913f299b26c218c850a46686a8ea124e11b4/pure_eval-0.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"01000271d05d7fee339496544b03ffa6230455684e7b3e1276552049b2524004","md5":"f14a7bb86b8b20c4e31023aae61612b4","sha256":"fae61a26700298a0910e975f5c694b9200b1877ea67ff47cdb783c0b7d7bab78"},"downloads":-1,"filename":"pure_eval-0.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"f14a7bb86b8b20c4e31023aae61612b4","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":9380,"upload_time":"2020-10-13T19:57:58","upload_time_iso_8601":"2020-10-13T19:57:58.351596Z","url":"https://files.pythonhosted.org/packages/01/00/0271d05d7fee339496544b03ffa6230455684e7b3e1276552049b2524004/pure_eval-0.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"7117235785e8fbb7068f0b818f55cc21c3b8417d4d42d236a20ddb52ac63d6ac","md5":"0f23a0be44b17768cd8f97c0f6171f80","sha256":"25e8a08e1b7b9831a9bdd7288644f70fa1c506841628cb4698d730acaed46a44"},"downloads":-1,"filename":"pure_eval-0.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"0f23a0be44b17768cd8f97c0f6171f80","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":11366,"upload_time":"2021-03-26T13:25:30","upload_time_iso_8601":"2021-03-26T13:25:30.223557Z","url":"https://files.pythonhosted.org/packages/71/17/235785e8fbb7068f0b818f55cc21c3b8417d4d42d236a20ddb52ac63d6ac/pure_eval-0.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.2.1":[{"comment_text":"","digests":{"blake2b_256":"843bb26d9daa15c2319e2df7158dc9597a36039a3ebf5aaeb51e2505eaddd645","md5":"652d12c7f65a332150a9405cccb6c945","sha256":"94eeb505a88721bec7bb21a4ac49758b8b1a01530da1a70d4ffc1d9937689d71"},"downloads":-1,"filename":"pure_eval-0.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"652d12c7f65a332150a9405cccb6c945","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":11381,"upload_time":"2021-03-26T15:17:04","upload_time_iso_8601":"2021-03-26T15:17:04.130844Z","url":"https://files.pythonhosted.org/packages/84/3b/b26d9daa15c2319e2df7158dc9597a36039a3ebf5aaeb51e2505eaddd645/pure_eval-0.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0d445cedbf05cce044385eec8f88777325259610963abbeb3c1e80f93741d17a","md5":"74090d70ec5393edb9204b4d0d53bee1","sha256":"0f04483b16c9429532d2c0ddc96e2b3bb6b2dc37a2bfb0e986248dbfd0b78873"},"downloads":-1,"filename":"pure_eval-0.2.1.tar.gz","has_sig":false,"md5_digest":"74090d70ec5393edb9204b4d0d53bee1","packagetype":"sdist","python_version":"source","requires_python":null,"size":19430,"upload_time":"2021-03-26T15:18:43","upload_time_iso_8601":"2021-03-26T15:18:43.083904Z","url":"https://files.pythonhosted.org/packages/0d/44/5cedbf05cce044385eec8f88777325259610963abbeb3c1e80f93741d17a/pure_eval-0.2.1.tar.gz","yanked":false,"yanked_reason":null}],"0.2.2":[{"comment_text":"","digests":{"blake2b_256":"2b2777f9d5684e6bce929f5cfe18d6cfbe5133013c06cb2fbf5933670e60761d","md5":"9763cb67380548da5b3e5b7916f16f39","sha256":"01eaab343580944bc56080ebe0a674b39ec44a945e6d09ba7db3cb8cec289350"},"downloads":-1,"filename":"pure_eval-0.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"9763cb67380548da5b3e5b7916f16f39","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":11693,"upload_time":"2022-01-22T15:41:27","upload_time_iso_8601":"2022-01-22T15:41:27.814849Z","url":"https://files.pythonhosted.org/packages/2b/27/77f9d5684e6bce929f5cfe18d6cfbe5133013c06cb2fbf5933670e60761d/pure_eval-0.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"975a0bc937c25d3ce4e0a74335222aee05455d6afa2888032185f8ab50cdf6fd","md5":"212fd27ca2c58d9effddec69748d738a","sha256":"2b45320af6dfaa1750f543d714b6d1c520a1688dec6fd24d339063ce0aaa9ac3"},"downloads":-1,"filename":"pure_eval-0.2.2.tar.gz","has_sig":false,"md5_digest":"212fd27ca2c58d9effddec69748d738a","packagetype":"sdist","python_version":"source","requires_python":null,"size":19395,"upload_time":"2022-01-22T15:41:29","upload_time_iso_8601":"2022-01-22T15:41:29.465682Z","url":"https://files.pythonhosted.org/packages/97/5a/0bc937c25d3ce4e0a74335222aee05455d6afa2888032185f8ab50cdf6fd/pure_eval-0.2.2.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"2b2777f9d5684e6bce929f5cfe18d6cfbe5133013c06cb2fbf5933670e60761d","md5":"9763cb67380548da5b3e5b7916f16f39","sha256":"01eaab343580944bc56080ebe0a674b39ec44a945e6d09ba7db3cb8cec289350"},"downloads":-1,"filename":"pure_eval-0.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"9763cb67380548da5b3e5b7916f16f39","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":11693,"upload_time":"2022-01-22T15:41:27","upload_time_iso_8601":"2022-01-22T15:41:27.814849Z","url":"https://files.pythonhosted.org/packages/2b/27/77f9d5684e6bce929f5cfe18d6cfbe5133013c06cb2fbf5933670e60761d/pure_eval-0.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"975a0bc937c25d3ce4e0a74335222aee05455d6afa2888032185f8ab50cdf6fd","md5":"212fd27ca2c58d9effddec69748d738a","sha256":"2b45320af6dfaa1750f543d714b6d1c520a1688dec6fd24d339063ce0aaa9ac3"},"downloads":-1,"filename":"pure_eval-0.2.2.tar.gz","has_sig":false,"md5_digest":"212fd27ca2c58d9effddec69748d738a","packagetype":"sdist","python_version":"source","requires_python":null,"size":19395,"upload_time":"2022-01-22T15:41:29","upload_time_iso_8601":"2022-01-22T15:41:29.465682Z","url":"https://files.pythonhosted.org/packages/97/5a/0bc937c25d3ce4e0a74335222aee05455d6afa2888032185f8ab50cdf6fd/pure_eval-0.2.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
