{"info":{"author":"Ken Kundert","author_email":"quantiphy@nurdletech.com","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","Intended Audience :: Science/Research","License :: OSI Approved :: MIT License","Natural Language :: English","Operating System :: POSIX :: Linux","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Topic :: Scientific/Engineering","Topic :: Utilities"],"description":"QuantiPhy Eval — Computations with Physical Quantities\n======================================================\n\n.. image:: https://pepy.tech/badge/quantiphy_eval/month\n    :target: https://pepy.tech/project/quantiphy_eval\n\n..  image:: https://github.com/KenKundert/quantiphy_eval/actions/workflows/build.yaml/badge.svg\n    :target: https://github.com/KenKundert/quantiphy_eval/actions/workflows/build.yaml\n\n.. image:: https://coveralls.io/repos/github/KenKundert/quantiphy_eval/badge.svg?branch=master\n    :target: https://coveralls.io/github/KenKundert/quantiphy_eval?branch=master\n\n.. image:: https://img.shields.io/pypi/v/quantiphy_eval.svg\n    :target: https://pypi.python.org/pypi/quantiphy_eval\n\n.. image:: https://img.shields.io/pypi/pyversions/quantiphy_eval.svg\n    :target: https://pypi.python.org/pypi/quantiphy_eval/\n\n:Author: Ken Kundert\n:Version: 0.5.0\n:Released: 2022-09-02\n\n\nA companion to `QuantiPhy <https://quantiphy.readthedocs.io>`_, *quantiphy_eval* \nevaluates strings containing simple algebraic expressions that involve \nquantities. It returns a quantity.  For example::\n\n    >>> from quantiphy_eval import evaluate\n\n    >>> avg_price = evaluate('($1.2M + $1.3M)/2', '$')\n    >>> print(avg_price)\n    $1.25M\n\n    >>> avg_freq = evaluate('(122.317MHz + 129.349MHz)/2', 'Hz')\n    >>> print(avg_freq)\n    125.83 MHz\n\n*QuantiPhy Eval* is used in `networth <https://github.com/KenKundert/networth>`_ \nto allow you to give your estimated values using expressions that include \nnumbers that have units, SI scale factors, and commas.  That allows you the \nconvenience of copy-and-pasting your numbers from websites without being forced \nto reformat them.\n\nWith *QuantiPhy* the units do not survive operations, so you can specify the \nresolved units using the second argument.  In fact, the second argument is \npassed to *QuantiPhy* as the `model \n<https://quantiphy.readthedocs.io/en/stable/user.html#the-second-argument-the-model>`_, \nwhich allows you to give the return value a name and description along with \nunits, as demonstrated in the next example.\n\nBy default *QuantiPhy Eval* provides no built-in constants.\nHowever, you can add your own constants::\n\n    >>> from quantiphy import Quantity\n    >>> from quantiphy_eval import evaluate, initialize\n    >>> import math\n\n    >>> my_constants = dict(\n    ...     k = Quantity('k'),\n    ...     q = Quantity('q'),\n    ...     T = Quantity('25°C', scale='K'),\n    ...     π = Quantity(math.pi),\n    ...     τ = Quantity(math.tau),\n    ... )\n    >>> initialize(variables=my_constants)\n\n    >>> Vt = evaluate('k*T/q', 'Vt V thermal voltage')\n    >>> print(Vt.render(show_label='f'))\n    Vt = 25.693 mV — thermal voltage\n\nAlternatively, you can specify the model directly in the text passed to \n*evaluate*. Simply append it in the form of a double-quoted string::\n\n    >>> Vt = evaluate('k*T/q \"Vt V thermal voltage\"')\n    >>> print(Vt.render(show_label='f'))\n    Vt = 25.693 mV — thermal voltage\n\nYou can also use *evaluate* to assign values to names directly, *QuantiPhy Eval* \nremembers these values between calls to *evaluate*::\n\n    >>> f_0 = evaluate('f₀ = 1MHz')\n    >>> omega_0 = evaluate('ω₀ = τ*f₀ \"rads/s\"')\n    >>> print(omega_0.render(show_label=True))\n    ω₀ = 6.2832 Mrads/s\n\nSimilarly, *QuantiPhy Eval* provides no built-in functions by default, but you \ncan add any you need::\n\n    >>> def median(*args):\n    ...    args = sorted(args)\n    ...    l = len(args)\n    ...    m = l//2\n    ...    if l % 2:\n    ...        return args[m]\n    ...    return (args[m] + args[m-1])/2\n\n    >>> initialize(functions = dict(median=median))\n    >>> median_price = evaluate('median($636122, $749151, $706781)', '$')\n    >>> print(median_price.fixed(show_commas=True))\n    $706,781\n\n*initialize* takes three arguments, *variables*, *functions* and *quantity*.  \nBoth *arguments* and *functions* take dictionaries that overwrite any previously \nsaved values. *quantity* takes a *quantiphy* *Quantity* class. The return value \nof *evaluate* will be an object of this class.\n\n*rm_commas* is a function for removing commas from an expression. This is used \nif your number contain commas. Simply stripping the commas it would prevent you \nfrom using multi-argument functions.  However after removing the commas \n*rm_commas* also converts semicolons to commas.  So the previous example could \nbe rewritten as::\n\n    >>> from quantiphy_eval import evaluate, rm_commas\n\n    >>> median_price = evaluate(\n    ...     rm_commas('median($636,122; $749,151; $706,781)'),\n    ...     '$',\n    ... )\n    >>> print(median_price.fixed(show_commas=True))\n    $706,781\n\n*QuantiPhy Eval* supports comments. A ``#`` and anything that follows it to the \nend of the line is ignored::\n\n    >>> average_price = evaluate(\n    ...     rm_commas('''\n    ...         median(\n    ...             $636,122 +   # Zillow\n    ...             $749,151 +   # Redfin\n    ...             $706,781     # Trulia\n    ...         )/3\n    ...     '''),\n    ...     '$'\n    ... )\n    >>> print(average_price.fixed(show_commas=True, prec=2, strip_zeros=False))\n    $697,351.33\n\nFinally, *QuantiPhy Eval* uses `inform.Error <https://inform.readthedocs.io>`_ \nfor error reporting::\n\n    >>> from inform import Error\n\n    >>> try:\n    ...     Vt = evaluate('kT/q', 'V')\n    ...     print(Vt)\n    ... except Error as e:\n    ...     print(str(e))\n    kT: variable unknown.\n\n\nReleases\n--------\n\n**Latest development release**:\n    | Version: 0.5.0\n    | Released: 2022-09-02\n\n**0.5 (2022-09-02)**:\n    - refactor the project structure\n    - provide *qe* example, a simple calculator\n\n**0.4 (2021-01-27)**:\n    - Add ability to explicitly specify units (or model) in evaluated string.\n\n**0.3 (2020-08-12)**:\n    - complete re-write, parser now implemented with ply rather than pyparsing.\n    - all built-in constants and functions have been removed.\n    - split *evaluate* into two: *evaluate* and *initialize*.\n\n**0.2 (2020-03-06)**:\n    - *rm_commas* now converts semicolons to commas\n    - support comments\n\n**0.1 (2020-03-05)**:\n    - Add support for user-defined constants and functions.\n    - add *rm_commas* function.\n\n**0.0 (2020-02-14)**:\n    Initial version.\n\n","description_content_type":"text/x-rst","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"quantities,physical,quantity,units,SI,scale factors,engineering,notation,mks,cgs","license":"","maintainer":"Ken Kundert","maintainer_email":"quantiphy@nurdletech.com","name":"quantiphy-eval","package_url":"https://pypi.org/project/quantiphy-eval/","platform":null,"project_url":"https://pypi.org/project/quantiphy-eval/","project_urls":{"changelog":"https://github.com/kenkundert/quantiphy_eval#releases","documentation":"https://github.com/kenkundert/quantiphy_eval","homepage":"https://github.com/kenkundert/quantiphy_eval","repository":"https://github.com/kenkundert/quantiphy_eval"},"provides_extra":null,"release_url":"https://pypi.org/project/quantiphy-eval/0.5.0/","requires_dist":["inform>=1.23","quantiphy>=2.13","sly>=0.4","pytest ; extra == \"test\"","pytest-cov ; extra == \"test\"","tox ; extra == \"test\"","pylama ; extra == \"test\""],"requires_python":">=3.6","summary":"calculations with physical quantities","version":"0.5.0","yanked":false,"yanked_reason":null},"last_serial":14979714,"releases":{"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"d7523286f97087a2ce78e69ba36b60ac1f629c3711604762ca32430738b16b23","md5":"be39ca82ad91850297650db8a591948d","sha256":"3d650f37f2783db31cbd23c7b50b642242d3d8b740838ce98aa1cfb00ace39f8"},"downloads":-1,"filename":"quantiphy_eval-0.1.0.tar.gz","has_sig":false,"md5_digest":"be39ca82ad91850297650db8a591948d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":5544,"upload_time":"2020-03-06T09:30:47","upload_time_iso_8601":"2020-03-06T09:30:47.160806Z","url":"https://files.pythonhosted.org/packages/d7/52/3286f97087a2ce78e69ba36b60ac1f629c3711604762ca32430738b16b23/quantiphy_eval-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"10da09696bce10c00e84c1d90b052f5fb8a44c2ccd25ffc4f5a5a7c4819901cb","md5":"87290092b031d2a3a95c05dd1495b7cf","sha256":"2172936c799952ef049022b70beaacd097638a22fae43b65792b3f956ead2b4c"},"downloads":-1,"filename":"quantiphy_eval-0.2.0.tar.gz","has_sig":false,"md5_digest":"87290092b031d2a3a95c05dd1495b7cf","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":6115,"upload_time":"2020-03-06T22:46:22","upload_time_iso_8601":"2020-03-06T22:46:22.746639Z","url":"https://files.pythonhosted.org/packages/10/da/09696bce10c00e84c1d90b052f5fb8a44c2ccd25ffc4f5a5a7c4819901cb/quantiphy_eval-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"05af712219023293f23f7f94027353bbc9c47df8aded4453a654da7df2399cb7","md5":"206e72935de2e96f14483264fe307f3f","sha256":"fb4b30bee27473c4a336d6ebe839aecefd7f624afd07042cd475be62ea536316"},"downloads":-1,"filename":"quantiphy_eval-0.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"206e72935de2e96f14483264fe307f3f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":50631,"upload_time":"2020-08-12T17:09:55","upload_time_iso_8601":"2020-08-12T17:09:55.510346Z","url":"https://files.pythonhosted.org/packages/05/af/712219023293f23f7f94027353bbc9c47df8aded4453a654da7df2399cb7/quantiphy_eval-0.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f0445eb39177a985e7400324c4597eded36c6ca98e47bae723c3bf5cd494c7c3","md5":"5393e694232222714780d9d73720e9ee","sha256":"39dcd5d6679f3fac9b20ef65b8d845062c4a50185fc096b270add7bdff0a4011"},"downloads":-1,"filename":"quantiphy_eval-0.3.0.tar.gz","has_sig":false,"md5_digest":"5393e694232222714780d9d73720e9ee","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":39891,"upload_time":"2020-08-12T17:09:57","upload_time_iso_8601":"2020-08-12T17:09:57.582781Z","url":"https://files.pythonhosted.org/packages/f0/44/5eb39177a985e7400324c4597eded36c6ca98e47bae723c3bf5cd494c7c3/quantiphy_eval-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"0.5.0":[{"comment_text":"","digests":{"blake2b_256":"82f358d89ab1a145cdb95d7dfd9e535b3e57a33bec2c9f1c698d8ef20d1ec137","md5":"b6a7fe2fd3cb7a2f7450417d701c3c69","sha256":"b1a7d0151196dea6bde316741273b57eac42c7beaf0148a60209791d55de9519"},"downloads":-1,"filename":"quantiphy_eval-0.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"b6a7fe2fd3cb7a2f7450417d701c3c69","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":8294,"upload_time":"2022-09-03T02:27:13","upload_time_iso_8601":"2022-09-03T02:27:13.987832Z","url":"https://files.pythonhosted.org/packages/82/f3/58d89ab1a145cdb95d7dfd9e535b3e57a33bec2c9f1c698d8ef20d1ec137/quantiphy_eval-0.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b4a7446e382f0984f25e09c2a3b3611927791d78add80d79ff6a43926f5d5c32","md5":"f8468f5f9a15b4a08d7d381fb395a4b0","sha256":"cff2d7c2666ff4292ee3bb15b920932f79053d95f536ae11f512d6810e32cb0a"},"downloads":-1,"filename":"quantiphy_eval-0.5.0.tar.gz","has_sig":false,"md5_digest":"f8468f5f9a15b4a08d7d381fb395a4b0","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":7360,"upload_time":"2022-09-03T02:27:15","upload_time_iso_8601":"2022-09-03T02:27:15.989484Z","url":"https://files.pythonhosted.org/packages/b4/a7/446e382f0984f25e09c2a3b3611927791d78add80d79ff6a43926f5d5c32/quantiphy_eval-0.5.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"82f358d89ab1a145cdb95d7dfd9e535b3e57a33bec2c9f1c698d8ef20d1ec137","md5":"b6a7fe2fd3cb7a2f7450417d701c3c69","sha256":"b1a7d0151196dea6bde316741273b57eac42c7beaf0148a60209791d55de9519"},"downloads":-1,"filename":"quantiphy_eval-0.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"b6a7fe2fd3cb7a2f7450417d701c3c69","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":8294,"upload_time":"2022-09-03T02:27:13","upload_time_iso_8601":"2022-09-03T02:27:13.987832Z","url":"https://files.pythonhosted.org/packages/82/f3/58d89ab1a145cdb95d7dfd9e535b3e57a33bec2c9f1c698d8ef20d1ec137/quantiphy_eval-0.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b4a7446e382f0984f25e09c2a3b3611927791d78add80d79ff6a43926f5d5c32","md5":"f8468f5f9a15b4a08d7d381fb395a4b0","sha256":"cff2d7c2666ff4292ee3bb15b920932f79053d95f536ae11f512d6810e32cb0a"},"downloads":-1,"filename":"quantiphy_eval-0.5.0.tar.gz","has_sig":false,"md5_digest":"f8468f5f9a15b4a08d7d381fb395a4b0","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":7360,"upload_time":"2022-09-03T02:27:15","upload_time_iso_8601":"2022-09-03T02:27:15.989484Z","url":"https://files.pythonhosted.org/packages/b4/a7/446e382f0984f25e09c2a3b3611927791d78add80d79ff6a43926f5d5c32/quantiphy_eval-0.5.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
