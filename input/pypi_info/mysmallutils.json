{"info":{"author":"José Manuel Gómez Soriano","author_email":"jmgomez.soriano@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python :: 3"],"description":"# MySmallUtils\r\nSmall Python utils to do life easier.\r\n\r\nThis includes tools to execute external commands, compress files,\r\nmanage configuration files, open different types of files (JSON, YAML and Pickle) compressed or not,\r\nconfigure logging, obtain metrics, download files, etc.\r\n\r\nThis module is divided into the following categories:\r\n\r\n* [Install](#install)\r\n* [Collections](#collections)\r\n  * [Head of a set or dict](#head-of-a-set-or-dict)\r\n  * [List union](#list-union)\r\n  * [Concat lists](#concat-lists)\r\n  * [Dictionary operations](#dictionary-operations)\r\n  * [Filter lists](#filter-lists)\r\n  * [Tuples](#tuples)\r\n  * [OrderedSet](#orderedset)\r\n  * [LRUDict](#lrudict)\r\n* [Text](#text)\r\n  * [Find URLs](#find-urls)\r\n  * [Get URLs](#get-urls)\r\n  * [Remove URLs](#remove-urls)\r\n  * [Replace URLs](#replace-urls)\r\n  * [Check URLs in a text](#check-urls-in-a-text)\r\n  * [Clean text](#clean-text)\r\n  * [Text markup](#text-markup)\r\n  * [Hash a text](#hash-a-text)\r\n  * [Is float](#is-float)\r\n* [File access, load and save files](#file-access-load-and-save-files)\r\n  * [Open files](#open-files)\r\n  * [Read file](#read-file)\r\n  * [Write in a file](#write-in-a-file)\r\n  * [Load and save json files](#load-and-save-json-files)\r\n  * [Load and save pickle files](#load-and-save-pickle-files)\r\n  * [Load and save Yaml files](#load-and-save-yaml-files)\r\n  * [Copy files](#copy-files)\r\n  * [Move files](#move-files)\r\n  * [Remove files](#remove-files)\r\n  * [Check if exists several files](#check-if-exists-several-files)\r\n  * [Count lines](#count-lines)\r\n  * [Touch](#touch)\r\n  * [Cat](#cat)\r\n  * [Make directories](#make-directories)\r\n  * [List files](#list-files)\r\n  * [Generate output file paths](#generate-output-file-paths)\r\n  * [Check file encoding](#check-file-encoding)\r\n  * [Expand wildcards](#expand-wildcards)\r\n* [Removable files](#remove-files)\r\n* [Compressing files](#compressing-files)\r\n  * [Gzip](#gzip)\r\n  * [Tar](#tar)\r\n* [Hashing](#hashing)\r\n* [External commands](#external-commands)\r\n* [Configuration files](#configuration-files)\r\n* [Logging](#logging)\r\n* [Method synchronization](#method-synchronization)\r\n* [Services and Web](#services-and-web)\r\n  * [Download a file](#download-a-file)\r\n  * [Endpoint](#endpoint)\r\n  * [Generate service help](#generate-service-help)\r\n  * [JSON post](#json-post)\r\n* [File unit tests](#unit-tests)\r\n* [Miscellany](#miscellany)\r\n\r\n# Install\r\n\r\nIt is very easy to install:\r\n\r\n```bash\r\n# With pip\r\npip install mysmallutils\r\n\r\n# With conda\r\nconda install mysmallutils\r\n```\r\n  \r\n# Collections<a id=\"collections\"></a>\r\nSome util functions for list, set or dict collections.\r\n\r\n## Head of a set or dict<a id=\"head-of-a-set-or-dict\"></a>\r\nGet the first n elements of a dictionary or a set.\r\n\r\n```python\r\nfrom mysutils.collections import head\r\n\r\n# A set of latin characters\r\nset1 = {chr(97 + i) for i in range(26)}\r\n# Select the first 5 elements of the set\r\nhead(set1, 5)  # returns {'d', 'a', 'b', 'e', 'c'}\r\n# By default select 10 elements\r\nhead(set1)  # returns {'f', 'd', 'j', 'a', 'b', 'e', 'h', 'i', 'c', 'g'}\r\n\r\n# A dictionary of latin characters\r\ndict1 = {i: chr(97 + i) for i in range(26)}\r\n# Select the first 5 items of the dictionary\r\nhead(dict1, 5)  # Returns {0: 'a', 1: 'b', 2: 'c', 3: 'd', 4: 'e'}\r\n# By default select 10 items\r\nhead(dict1)  # Returns {0: 'a', 1: 'b', 2: 'c', 3: 'd', 4: 'e', 5: 'f', 6: 'g', 7: 'h', 8: 'i', 9: 'j'}\r\n```\r\n\r\nAlso, you can use the specific functions for set and dictionaries: **sh()** for set head and **dh()** for dictionaries.\r\n\r\n```python\r\nfrom mysutils.collections import sh\r\n\r\n# A set of latin characters\r\nset1 = {chr(97 + i) for i in range(26)}\r\n# Select the first 5 elements of the set\r\nsh(set1, 5)\r\n# By default select 10 elements\r\nsh(set1)\r\n```\r\n\r\n```python\r\nfrom mysutils.collections import dh\r\n\r\n# A dictionary of latin characters\r\ndict1 = {i: chr(97 + i) for i in range(26)}\r\n# Select the first 5 items of the dictionary\r\ndh(dict1, 5)\r\n# By default select 10 items\r\ndh(dict1)\r\n```\r\n\r\n## List union<a id=\"list-union\" name=\"list-union\"></a>\r\nCreate the union of two or more lists maintaining the order of elements.\r\n\r\n```python\r\nfrom mysutils.collections import list_union\r\n\r\nl1 = [1, 2, 3]\r\nl2 = [4, 5, 6, 1]\r\nl3 = [2, 6, 24]\r\n# This will return  [1, 2, 3, 4, 5, 6, 24]\r\nlist_union(l1, l2, l3)\r\n# This will return [1, 2, 3, 6, 24, 4, 5]\r\nlist_union(l1, l3, l2)\r\n```\r\n\r\n## Concat lists<a id=\"concat-lists\" name=\"concat-lists\"></a>\r\nConcatenate a list of lists and return other list with the results.\r\nThis is different from the list_union() function because the final list can contain repeated elements.\r\n\r\n```python\r\nfrom mysutils.collections import concat_lists\r\n\r\nl1 = [1, 2, 3]\r\nl2 = [4, 5, 6, 1]\r\nl3 = [2, 6, 24]\r\n# This will return  [1, 2, 3, 4, 5, 6, 1, 2, 6, 24]\r\nconcat_lists(l1, l2, l3)\r\n# This will return  [4, 5, 6, 1, 2, 6, 24, 1, 2, 3]\r\nconcat_lists(l2, l3, l1)\r\n```\r\n\r\n## Dictionary operations<a id=\"dictionary-operations\" name=\"dictionary-operations\"></a>\r\n\r\nWith these functions you can do several operation over dictionaries in just one code line. \r\nFor example, if you want to add a dictionary item, remove other, and modify the keys and values of the dictionary,\r\nyou can do the following:\r\n\r\n```python\r\nfrom mysutils.collections import add_keys, del_keys, mod_key, mod_value\r\n\r\nd = {'name': 'Pablo', 'lastname': 'Escobar', 'email': 'pabloescobar@example.com'}\r\n# Add the key 'country', remove 'email', change 'name' by 'firstname' and change the 'lastname' value:\r\nmod_value(mod_key(del_keys(add_keys(d, country='Colombia'), 'email'), 'name', 'firstname'), 'lastname', 'Smith')\r\n```\r\n\r\nMore information about these and other functions in the following subsections.\r\n\r\n### Add keys\r\nYou can add several dictionary items in just one sentence and return the results.\r\n\r\n```python\r\nfrom mysutils.collections import add_keys\r\n\r\nd = {'b': 2}\r\n# Print {'a': 1, 'b': 2, 'c': 3}\r\nprint(add_keys(d, a=1, c=3))\r\n# You can modify an existing item\r\nprint(add_keys(d, a=1, b=4, c=3))\r\n# Or you can raise an error if the key already exists.\r\nprint(add_keys(d, modify=False, a=1, b=4, c=3))\r\n```\r\n\r\n### Delete keys\r\n\r\nYou can remove one or more dictionary items by their keys and return the result with only one line.\r\n\r\n```python\r\nfrom mysutils.collections import del_keys\r\n\r\nd = {'a': 1, 'b': 2, 'c': 3}\r\n\r\n# Remove the element c from the dictionary and print the results\r\nprint(del_keys(d.copy(), 'c'))\r\n# Remove the elements a and c from the dictionary and print the results\r\nprint(del_keys(d.copy(), 'a', 'c'))\r\n# If an element does not exist, ignore the key error\r\nprint(del_keys(d.copy(), 'a', 'd'))\r\n# If an element does not exist, raise the KeyError exception\r\nprint(del_keys(d.copy(), 'a', 'd', ignore_errors=False))\r\n```\r\n\r\n### Modify keys\r\n\r\nWith just one sentence you can modify one or more keys without changing their values.\r\n\r\n```python\r\nfrom mysutils.collections import mod_key, mod_keys \r\n\r\n# Modify just one key: name by firstname\r\nd = {'name': 'Pablo', 'lastname': 'Escobar', 'email': 'pabloescobar@example.com'}\r\nmod_key(d, 'name', 'firstname')\r\n# Modify several keys: name by firstname and lastname by familyname\r\nd = {'name': 'Pablo', 'lastname': 'Escobar', 'email': 'pabloescobar@example.com'}\r\nmod_keys(d, name='firstname', lastname='familyname')\r\n```\r\n\r\n### Modify values\r\n\r\nWith just one sentence you can modify one or more values.\r\n\r\n```python\r\nfrom mysutils.collections import mod_value, mod_values \r\n\r\n# Modify two values concatenating commands\r\nd = {'name': 'Pablo', 'lastname': 'Escobar', 'email': 'pabloescobar@example.com'}\r\nmod_value(mod_value(d, 'name', 'Jhon'), 'lastname', 'Smith')\r\n# Modify two values with just one sentence\r\nd = {'name': 'Pablo', 'lastname': 'Escobar', 'email': 'pabloescobar@example.com'}\r\nmod_values(d, name='Jhon', lastname='Smith')\r\n```\r\n\r\n### Merge a list of dictionaries<a id=\"merge-a-list-of-directories\" name=\"merge-a-list-of-dictionaries\"></a>\r\n\r\nConvert a list of dictionaries with the same keys in a dictionary which each key contain the list of values of each \r\ndictionary. For example:\r\n\r\n```python\r\nfrom mysutils.collections import merge_dicts\r\n\r\nlst = [{'a': 1, 'b': 10}, {'a': 2, 'b': 11}, {'a': 3, 'b': 12}]\r\nd = merge_dicts(lst)  # The value of d is {'a': [1, 2, 3], 'b': [10, 11, 12]}\r\n```\r\n\r\n### Get dictionary items\r\n\r\nSeveral function to get different items of a dictionary apart from its key.\r\n\r\n```python\r\nfrom mysutils.collections import first_item, last_item, first_key, last_key, first_value, last_value, item, key, value\r\n\r\nd = {'a': 1, 'b': 2, 'c': 3}\r\n\r\n# Get the first dictionary item\r\nfirst_item(d)  # Returns ('a', 1)\r\n# Get the last dictionary item\r\nlast_item(d)  # Returns ('c', 3)\r\n# Get the first key of the dictionary\r\nfirst_key(d)  # Returns 'a'\r\n# Get the last key of the dictionary\r\nlast_key(d)  # Returns 'c'\r\n# Get the first value of the dictionary\r\nfirst_value(d)  # Returns 1\r\n# Get the last value of the dictionary\r\nlast_value(d)  # Returns 3\r\n# Get the item in the position 1 of the dictionary\r\nitem(d, 1)  # Returns ('b', 2)\r\n# Get the key in the position 1 of the dictionary\r\nkey(d, 1)  # Returns 'b'\r\n# Get the value in the position 1 of the dictionary\r\nvalue(d, 1)  # Returns 2\r\n```\r\n\r\n### Search the first key in a list of dictionaries.\r\n\r\nIn an iterable of dicts (like a list) this function return the value of the first dictionary that contains the key.\r\n\r\n```python\r\nfrom mysutils.collections import first_key_value\r\n\r\nlst = [{'a': 1, 'b': 2}, {'a': 10, 'c': 3}, {'a': 100, 'c': 30}]\r\nfirst_key_value(lst, 'a')  # Returns 1\r\nfirst_key_value(lst, 'b')  # Returns 2\r\nfirst_key_value(lst, 'c')  # Returns 3\r\nfirst_key_value(lst, 'd')  # Raises a KeyError exception\r\n```\r\n\r\n## Filter lists<a id=\"filter-lists\" name=\"filter-lists\"></a>\r\nFilter a list by a condition.\r\n\r\n```python\r\nfrom mysutils.collections import filter_lst\r\n\r\nlst = [i for i in range(1, 20)]\r\n\r\n# Returns [1, 2, 3, 4]\r\nfilter_lst(lst, 4)\r\n# Returns [2, 3, 4]\r\nfilter_lst(lst, 3, 1)\r\n# Returns [3, 5]\r\nfilter_lst(lst, 5, 1, lambda x: x % 2 == 1)\r\n```\r\n\r\n## Tuples<a id=\"tuples\" name=\"tuples\"></a>\r\n\r\nConvert a list of tuples into a tuple of lists. For example:\r\n\r\n```python\r\nfrom mysutils.collections import merge_tuples\r\n\r\nlst = [(1, 10), (2, 11), (3, 12)]\r\nt = merge_tuples(lst)  # The value of t is ([1, 2, 3], [10, 11, 12])\r\n```\r\n\r\nConvert the values of a tuple using conversion functions. For example:\r\n\r\n```python\r\nfrom mysutils.collections import convert_tuple_values\r\n\r\nrow = ('5', '9.99', 'USB device')\r\n\r\n# Convert the first element in integer, the second in float and the third in string\r\nquantity, price, item = convert_tuple_values(row, int, float, str)\r\n```\r\n\r\n## OrderedSet<a id=\"orderedset\" name=\"orderedset\"></a>\r\n\r\nThe OrderedSet class is an implementation of an ordered set in Python. An ordered set is a data structure that allows \r\nyou to store unique elements in an ordered manner, meaning that they are maintained in the order in which they were\r\ninserted. This class is based on the Set class from the collections library and also implements the iteration protocol.\r\nBasic Set Operations.\r\n\r\nThe OrderedSet class provides the basic set operations that are defined by the Set class from the collections library.\r\nThese operations include:\r\n\r\n* **add()**: This method allows you to add a single element to the set.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s = OrderedSet({5, 4, 3})\r\n  s.add(8)\r\n  print(s)  # Prints {8, 3, 4, 5}\r\n  ```\r\n* **time()**: Get the time when an element was added. You can also use [item] operator, for example:\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  import time\r\n  \r\n  s = OrderedSet()\r\n  s.add(1)\r\n  time.sleep(0.5)\r\n  s.add(8)\r\n  print(s[1])  # Prints a datatime object with the time when the element 1 was added\r\n  print(s[8])  # Prints a datatime object with the time when the element 1 was added\r\n  print(s[1] < s[8])  # Prints True\r\n  print(s[1] > s[8])  # Prints False\r\n  ```\r\n* **before()**: Get a copy of the OrderedSet with items were introduced before the given date.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  from datetime import datetime\r\n  import time\r\n  \r\n  s = OrderedSet()\r\n  s.add(1)\r\n  time.sleep(0.5)\r\n  s.add(8)\r\n  t1 = datetime.now()\r\n  s.update({2, 3, 4, 5, 6})\r\n  print(s.before(t1))  # Prints {8, 1}\r\n  ```\r\n* **after()**: \r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  from datetime import datetime\r\n  import time\r\n  \r\n  s = OrderedSet()\r\n  s.add(1)\r\n  time.sleep(0.5)\r\n  s.add(8)\r\n  t1 = datetime.now()\r\n  s.update({2, 3, 4, 5, 6})\r\n  print(s.after(t1))  # Prints {2, 3, 4, 5, 6}\r\n  ```\r\n* **until()**: Get a copy of the OrderedSet with items were introduced since the given date, including the same date).\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  from datetime import datetime\r\n  import time\r\n  \r\n  s = OrderedSet()\r\n  s.add(1)\r\n  time.sleep(0.5)\r\n  s.add(8)\r\n  t1 = datetime.now()\r\n  s.update({2, 3, 4, 5, 6})\r\n  print(s.until(s[8]))  # Prints {8, 1}\r\n  ```\r\n* **since()**: Get a copy of the OrderedSet with items were introduced since the given date, including the same date).\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  from datetime import datetime\r\n  import time\r\n  \r\n  s = OrderedSet()\r\n  s.add(1)\r\n  time.sleep(0.5)\r\n  s.add(8)\r\n  t1 = datetime.now()\r\n  s.update({2, 3, 4, 5, 6})\r\n  print(s.since(s[3]))  # Print {3, 4, 5, 6}\r\n  ```\r\n* **remove()**: This method allows you to remove an element from the set.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s = OrderedSet([1, 2, 3])\r\n  s.remove(2)\r\n  print(s)  # Prints {1, 3}\r\n  s.remove(2)  # Throws a KeyError exception.\r\n  ```\r\n* **remove_items()**: Remove the given items from the set.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s = OrderedSet([1, 2, 3, 4, 5])\r\n  s.remove_items([2, 3, 4])\r\n  print(s)  # Prints {1, 5}\r\n  ```\r\n* **remove_before()**: Remove all the introduced items before the given date.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  from time import sleep\r\n  \r\n  s = OrderedSet([1, 3])\r\n  sleep(0.1)\r\n  s.add(4)\r\n  time.sleep(0.1)\r\n  s.add(5)\r\n  s.remove_before(s[4])\r\n  print(s)  # Prints {4, 5}      \r\n  ```\r\n* **remove_until()**: Remove all the introduced items  until the given date, including the same date.\r\n  ```python \r\n  from mysutils.collections import OrderedSet\r\n  from time import sleep\r\n  \r\n  s = OrderedSet([1, 3])\r\n  sleep(0.1)\r\n  s.add(4)\r\n  time.sleep(0.1)\r\n  s.add(5)\r\n  s.remove_until(s[4])\r\n  print(s)  # Prints {5}\r\n  ```\r\n* **remove_after()**: Remove all the introduced items after the given date.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  from time import sleep\r\n  \r\n  s = OrderedSet([1, 3])\r\n  sleep(0.1)\r\n  s.add(4)\r\n  time.sleep(0.1)\r\n  s.add(5)\r\n  s.remove_after(s[4])\r\n  print(s)  # Prints {1, 3, 4}\r\n  ```\r\n* **remove_since()**: Remove all the introduced items since the given date, including the same date.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  from time import sleep\r\n  \r\n  s = OrderedSet([1, 3])\r\n  sleep(0.1)\r\n  s.add(4)\r\n  time.sleep(0.1)\r\n  s.add(5)\r\n  s.remove_since(s[4])\r\n  print(s)  # Prints {1, 3}\r\n  ```\r\n* **discard()**: This method allows you to remove an element from the set.\r\n  It is similar to the remove() method, but it does not raise an error if the element is not present in the set.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s = OrderedSet([1, 2, 3])\r\n  s.discard(2)\r\n  print(s)  # Prints {1, 3}\r\n  s.discard(2)  # Throws a KeyError exception.\r\n  ```\r\n* **pop()**: This method allows you to extract an element from the set.\r\n  By default, it removes the first element that was added to the set,\r\n  but you can also specify that it should remove the last element instead.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s = OrderedSet([24, 32, 18, 1, 6])\r\n  print(s.pop())  # Prints 24\r\n  print(s)  # Prints {32, 18, 1, 6}\r\n  print(s.pop(last=True))  # Prints 6\r\n  print(s)  # Prints {32, 18, 1}\r\n  ```\r\n* **first()**: Get the first element of the OrderedDict without removing it.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s = OrderedSet({1, 2, 3})\r\n  print(s.first())  # Prints 1\r\n  print(s.pop())  # Prints 1\r\n  print(s.first())  # Prints 2\r\n  ```\r\n* **update()**: This method allows you to add a sequence of elements to the set.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s = OrderedSet([24, 32, 18, 1, 6])\r\n  s.update([1, 2, 3])\r\n  print(s)  # Prints {32, 1, 2, 3, 6, 18, 24}\r\n  ```\r\n* **clear()**: This method allows you to remove all elements from the set, effectively clearing the set.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s = OrderedSet([1, 2, 3])\r\n  s.clear()\r\n  pritn(s)  # Prints {}  \r\n  ```\r\n* **copy()**: This method allows you to create a copy of the set.\r\n  The copy will have the same elements as the original set, but it will be a separate object.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s1 = OrderedSet([1, 2, 3])\r\n  s2 = s1.copy()\r\n  print(s1, s2)  # {1, 2, 3} {1, 2, 3}\r\n  ```\r\n\r\n### Additional Set Operations\r\n\r\n* **difference()**: This method allows you to find the elements in the set that are not present in another set.\r\n  It returns a new OrderedSet object that contains only the elements that are unique to the original set.\r\n  You can also use the operator -, for example:\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s1 = OrderedSet([1, 2, 3])\r\n  s2 = OrderedSet([2, 3, 4])\r\n  print(s1.difference(s2))  # Prints {1}\r\n  print(s1 - s2)  # Prints {1}\r\n  ```\r\n* **difference_update()**: This method allows you to remove the elements in the set that are not present in another set.\r\n  It modifies the original set in-place, removing the elements that are not present in the other set.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s1 = OrderedSet([1, 2, 3])\r\n  s2 = OrderedSet([2, 3, 4])\r\n  s1.difference_update(s2)\r\n  print(s1)  # Prints {1}\r\n  ```\r\n* **intersection()**: This method allows you to find the elements in the set that are present in another set.\r\n  It returns a new OrderedSet object. You can also use the operator &, for example:\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s1 = OrderedSet([1, 2, 3])\r\n  s2 = OrderedSet([2, 3, 4])\r\n  print(s1.intersection(s2))  # Prints {2, 3}\r\n  print(s1 & s2)  # Prints {2, 3}\r\n  ```\r\n* **intersection_update()**: This method allows you to remove the elements in the set that are not present in another \r\n  set. It modifies the original set in-place, removing the elements that are not present in the other set.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s1 = OrderedSet([1, 2, 3])\r\n  s2 = OrderedSet([2, 3, 4])\r\n  s1.intersection_update(s2)\r\n  print(s1)  # Prints {2, 3}\r\n  ```\r\n* **union()**: This is an operator method that allows you to use the | operator to find the union of two sets.\r\n  It returns a new OrderedSet object that contains all elements from both sets.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s1 = OrderedSet([1, 2, 3])\r\n  s2 = OrderedSet([3, 4, 5])\r\n  print(s1.union(s2))  # Print {1, 2, 3, 4, 5})\r\n  print(s1 | s2)  # Print {1, 2, 3, 4, 5})\r\n  ```\r\n* **issubset()**: This method allows you to check if the set is a subset of another set.\r\n  It returns True if all elements in the set are also present in the other set, and False otherwise.\r\n  You can also use the operator <=, for example:\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s1 = OrderedSet([1, 2, 3])\r\n  s2 = OrderedSet([1, 2, 3, 4, 5, 6])\r\n  print(s1.issubset(s2))  # Prints True\r\n  print(s2.issubset(s1))  # Prints False\r\n  print(s1 <= s2)   # Prints True\r\n  print(s2 <= s1)   # Prints False\r\n  ```\r\n* **issuperset()**: This method allows you to check if the set is a superset of another set.\r\n  It returns True if all elements in the other set are also present in the set, and False otherwise.\r\n  You can also use the operator >=, for example:\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s1 = OrderedSet([1, 2, 3, 4, 5, 6])\r\n  s2 = OrderedSet([1, 2, 3])\r\n  print(s1.issuperset(s2))  # Prints True\r\n  print(s2.issuperset(s1))  # Prints False\r\n  print(s1 >= s2)  # Prints True\r\n  print(s2 >= s1)  # Prints False\r\n  ```\r\n* **isdisjoint()**: This method allows you to check if the set has no elements in common with another set.\r\n  It returns True if the sets have no elements in common, and False otherwise.\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s1 = OrderedSet([1, 2, 3])\r\n  s2 = OrderedSet([4, 5, 6])\r\n  s3 = OrderedSet([1, 5, 6])\r\n  print(s1.isdisjoint(s2))  # Prints True\r\n  print(s3.isdisjoint(s2))  # Prints False\r\n  ```\r\n* **symmetric_difference()**: This method returns the symmetric difference of two sets as a new `OrderedSet`.\r\n  You can also use the operator ^, for example:\r\n  ```python\r\n  from mysutils.collections import OrderedSet\r\n  \r\n  s1 = OrderedSet([1, 2, 3])\r\n  s2 = OrderedSet([3, 4, 5])\r\n  s3 = set(iter([1, 2, 3]))\r\n  s4 = set(iter([3, 4, 5]))\r\n  print(s1.symmetric_difference(s2))   # Prints {1, 2, 4, 5}\r\n  print(s1 ^ s2)  # Prints {1, 2, 4, 5}\r\n  ```\r\n## LRUDict<a id=\"lrudict\" name=\"lrudict\"></a>\r\n\r\nA dictionary with a maximum capacity. \r\nWhen it is reached, the first element added or acceded is removed to be able to add the new ones.\r\n\r\nExamples:\r\n\r\n```python\r\nfrom mysutils.collections import LRUDict\r\n\r\nlru_dict = LRUDict(max_size=3)\r\nlru_dict['a'] = 1\r\nlru_dict['b'] = 2\r\nlru_dict['c'] = 3\r\nprint(list(lru_dict.items()))  # Prints [('a', 1), ('b', 2), ('c', 3)]\r\n\r\n# Add a new element and remove the old one\r\nlru_dict['d'] = 4\r\nprint(list(lru_dict.items()))  # Prints [('b', 2), ('c', 3), ('d', 4)]\r\n\r\n# Access to item 'b' and put it at the end\r\n_ = lru_dict['b']\r\nprint(list(lru_dict.items()))  # Prints [('c', 3), ('a', 1), ('b', 2)]\r\n\r\n# Create a dict without limit (equivalent to OrderedDict)\r\nlru_dict = LRUDict()\r\n```\r\n\r\n# Text<a id=\"text\" name=\"text\"></a>\r\nSimple functions related to text.\r\n\r\n## Find URLs<a id=\"find-urls\" name=\"find-urls\"></a>\r\nFind URLs in a text.\r\n\r\n```python\r\nfrom mysutils.text import find_urls\r\n\r\ntext = \"\"\"This is a test!\r\n     Clean punctuation symbols and urls like this: https://example.com/my_space/user?a=b&c=3#first https://example.com/your_space/user#first\r\nMore urls:\r\nhttps://example.com/my_space/user\r\nhttps://example.com/your_space\r\n\"\"\"\r\n\r\nmatches = find_urls(text)\r\nfor match in matches:\r\n    start, end = match.span()[0], match.span()[1]\r\n    print(text[start:end])\r\n\r\n# The same but only with URLs that end with a slash\r\nmatches = find_urls(text, '/')\r\n```\r\n\r\n## Get URLs<a id=\"get-urls\" name=\"get-urls\"></a>\r\nGet the URLs from a text.\r\n\r\n```python\r\nfrom mysutils.text import get_urls\r\n\r\ntext = \"\"\"This is a test!\r\n     Clean punctuation symbols and urls like this: https://example.com/my_space/user?a=b&c=3#first https://example.com/your_space/user#first\r\nMore urls:\r\nhttps://example.com/my_space/user\r\nhttps://example.com/your_space\r\n\"\"\"\r\n\r\n# Get all the URLs from the text\r\nurls = get_urls(text)\r\n\r\n# Get all the URLs from the text that end with a slash\r\nurls = get_urls(text, '/')\r\n```\r\n\r\n## Remove URLs<a id=\"remove-urls\" name=\"remove-urls\"></a>\r\nRemove the URLs from a text.\r\n\r\n```python\r\nfrom mysutils.text import remove_urls\r\n\r\ntext = \"\"\"This is a test!\r\nClean urls like this:\r\nhttps://example.com/my_space/user?a=b&c=3#first\r\nhttps://example.com/your_space/user#first\"\"\"\r\nremove_urls(text)\r\n# Result: \r\n# 'This is a test!\\nClean URLs like this:'\r\n\r\n# You can filter by path:\r\nremove_urls(text, r'my_space/user\\?a=b&c=3#first')\r\n# Result:\r\n# 'This is a test!\\n\r\n#     Clean punctuation symbols and URLs like this:  https://example.com/your_space/user#first')\r\n```\r\n\r\n## Replace URLs<a id=\"replace-urls\" name=\"replace-urls\"></a>\r\n\r\nReplace all the URLs which have a given path.\r\n\r\n```python\r\nfrom mysutils.text import replace_urls\r\n\r\ntext = \"\"\"This is a test!\r\nClean some urls like this:\r\nhttps://example.com/my_space/user?a=b&c=3#first\r\nhttps://example.com/your_space/user#first\"\"\"\r\n\r\n# Replace only the url with the path /my_space/user\r\nreplace_urls(text, 'https://hello.com')\r\n# Result:\r\n# 'This is a test!\\n\r\n#      Clean punctuation symbols and urls like this: https://hello.com https://hello.com'\r\n\r\n# Replace only the url with the path /my_space/user\r\nreplace_urls(text, 'https://hello.com', r'my_space/user')\r\n# Result:\r\n# 'This is a test!\\n\r\n#      Clean punctuation symbols and urls like this: https://hello.com https://example.com/your_space')\r\n```\r\n\r\n## Check URLs in a text<a id=\"check-urls-in-a-text\" name=\"check-urls-in-a-text\"></a>\r\nCheck if a text is a URL or contain one.\r\n\r\n```python\r\nfrom mysutils.text import is_url, has_url\r\n\r\ntext = '...'\r\n# Check if a text is a URL\r\nif is_url(text):\r\n  print('It is a URL!')\r\n# Check if a text contains a URL\r\nif has_url(text):\r\n  print('It contains, at least, a URL!')\r\n```\r\n\r\n## Clean text<a id=\"clean-text\" name=\"clean-text\"></a>\r\nRemove punctuation symbols, urls and convert to lower.\r\n\r\n```python\r\nfrom mysutils.text import clean_text\r\n\r\ntext = 'This is a test!\\n     Clean punctuation symbols and urls like this: ' \\\r\n       'https://example.com/my_space/user?a=b&c=3#first ' \\\r\n       'https://example.com/my_space/user#first'\r\n\r\n# Remove punctuation, urls and convert to lower\r\nclean_text(text)\r\n\r\n# Remove punctuation and urls but do not convert to lower\r\nclean_text(text, lower=False)\r\n\r\n# Only remove punctuation\r\nclean_text(text, lower=False, url=False)\r\n```\r\n## Text markup<a id='text-markup' name='text-markup'></a>\r\n\r\nCreate text effects in the console.\r\n\r\n```python\r\nfrom mysutils.text import AnsiCodes, markup\r\n\r\n# Print a yellow, italic and blinked text.\r\nprint(markup('This is a text with effects', \r\n             AnsiCodes.YELLOW, AnsiCodes.ITALIC, \r\n             AnsiCodes.SLOW_BLINK))\r\n# This is the same but using string names\r\nprint(markup('This is a text with effects', \r\n             'yellow', 'italic', \r\n             'SLOW_BLINK'))\r\n```\r\n\r\nYou can see the list of effects in the mysutils.text.AnsiCode enumeration.\r\n\r\nFurthermore, you can set your own font, background and underline colors based on R, G, B scale.\r\n\r\n```python\r\nfrom mysutils.text import AnsiCodes, markup, color, bg_color, un_color\r\n\r\n# Print 'text' in yellow with gray background and blue underline color.\r\nprint('This is a ' + \\ \r\n      markup('text', AnsiCodes.UNDERLINE, \r\n             color(255, 255, 20), \r\n             bg_color(60, 60, 60),\r\n             un_color(80, 80, 255)) + 'with effects.')\r\n```\r\n**Important note:** All these font variants, styles and color do not work in all the consoles/terminals.\r\n\r\n## Hash a text<a id=\"hash-a-text\" name=\"hash-a-text\"></a>\r\n\r\nA very easy way to hash a text.\r\n\r\n```python\r\nfrom mysutils.text import hash_text\r\n\r\n# Print the SHA256 hash of that text in utf-8\r\nprint(hash_text('This is a text'))\r\n\r\n# Print the SHA256 hash of that text in iso8859-1\r\nprint(hash_text('This is a text', encoding='iso8859-1'))\r\n```\r\n\r\n## Is float<a id=\"is-float\" name=\"is-float\"></a>\r\n\r\nCheck when a string is a float valid number or not.\r\n\r\n```python\r\nfrom mysutils.text import is_float\r\n\r\nprint(is_float('1.23'))  # Print True\r\nprint(is_float('3.14159'))  # Print True\r\nprint(is_float('1.23e6'))  # Print True\r\nprint(is_float('3.45e-2'))  # Print True\r\nprint(is_float(Fraction(22, 7)))  # Print True\r\nprint(is_float('123'))  # Print True\r\nprint(is_float('1,234'))  # Print  False\r\nprint(is_float('a1234'))  # Print False\r\n```\r\n\r\n# File access, load and save files<a id=\"file-access-load-and-save-files\" name=\"file-access-load-and-save-files\"></a>\r\nWith these functions you can open files, create json and pickle files, and execute external commands very easily.\r\nMoreover, only changing the file extension you can store the information in a compressed file with gzip.\r\n\r\n## Open files<a id=\"open-files\" name=\"open-files\"></a>\r\n```python\r\nfrom mysutils.file import open_file, force_open\r\n\r\n# Open a text file to read\r\nwith open_file('file.txt') as file:\r\n    pass\r\n\r\n# Open a compressed text file to write\r\nwith open_file('file.txt.gz', 'w') as file:\r\n    pass\r\n\r\n# Open a file in a directory, if the directory does not exist, \r\n# then create the parent directories.\r\nwith force_open('file.txt', 'w') as file:\r\n    pass\r\n\r\n# The same as previously, but with a compressed file.\r\nwith force_open('file.txt.gz', 'w') as file:\r\n    pass\r\n```\r\n\r\n## Load and save json files<a id=\"load-and-save-json-files\" name=\"load-and-save-json-files\"></a>\r\nThis save and load json files, even if they are compressed, with just one line.\r\n```python\r\nfrom mysutils.file import load_json, save_json\r\n\r\nd = {\r\n    'version': 1.0,\r\n    'file_list': ['1.txt', '2.txt']\r\n}\r\n\r\n# Save the json in a text file\r\nsave_json(d, 'file.json')\r\n\r\n# Load the json file from a text file\r\nd = load_json('file.json')\r\n\r\n# Save the json in a compressed file\r\nsave_json(d, 'file.json.gz')\r\n\r\n# Load the json file from a compressed file\r\nd = load_json('file.json.gz')\r\n\r\n# Save the json into a text file in a given directory, \r\n# if the directory does not exist, then create it\r\nsave_json(d, 'data/file.json', force=True)\r\n\r\n# The same but wit a compressed file\r\nsave_json(d, 'data/file.json.gz', force=True)\r\n\r\n# Load a json file and if it doesn't exists, \r\n# then it returns a default value\r\nd = load_json('file.json', default={})\r\n\r\n# Load from a tar file\r\nfrom mysutils.tar import load_tar_json\r\n\r\n# Load a json (data.json) from a compressed tar file (file.tar.bz2)\r\nd = load_tar_json('data/file.tar.bz2', 'data.json')\r\n```\r\n\r\nYou can also load a JSON file from a [compressed tar file](#open-and-load-files-inside-a-tar-archive).\r\n\r\n## Load and save pickle files<a id=\"load-and-save-pickle-files\" name=\"load-and-save-pickle-files\"></a>\r\n```python\r\nfrom mysutils.file import load_pickle, save_pickle\r\n\r\nd = {\r\n    'version': 1.0,\r\n    'file_list': ['1.txt', '2.txt']\r\n}\r\n\r\n# Save a object in a pickle file\r\nsave_pickle(d, 'test1.pkl')\r\n\r\n# Load the object from a pickle file\r\nd = load_pickle('test1.pkl')\r\n\r\n# Save the object into a compressed pickle file\r\nsave_pickle(d, 'test1.pkl.gz')\r\n\r\n# Load the object from a compressed pickle file\r\nd = load_pickle('test1.pkl.gz')\r\n\r\n# Load the object but if the file does not exist, \r\n# then return the default vaule.\r\nd = load_pickle('test1.pkl', default={})\r\n\r\n# Save the object into a pickle file in a given directory, \r\n# if the directory does not exist, then create it\r\nsave_pickle(d, 'data/test1.pkl', force=True)\r\n\r\n# The same but wit a compressed pickle file\r\nsave_pickle(d, 'data/test1.pkl.gz', force=True)\r\n\r\n# Load from a tar file\r\nfrom mysutils.tar import load_tar_pickle\r\n\r\n# Load a compressed pickle (data.pkl.gz) from a compressed tar file (file.tar.bz2)\r\nd = load_tar_pickle('data/file.tar.bz2', 'data.pkl.gz')\r\n```\r\nYou can also load a pickle file from a [compressed tar file](#open-and-load-files-inside-a-tar-archive).\r\n\r\n## Load and save Yaml files<a id=\"load-and-save-yaml-files\" name=\"load-and-save-yaml-files\"></a>\r\nThese functions require to install the PyYaml module with the following command:\r\n```bash\r\npip install PyYAML~=5.4.1\r\n```\r\nExamples of usage:\r\n```python\r\nfrom mysutils.yaml import load_yaml, save_yaml\r\n\r\nd = {\r\n    'version': 1.0,\r\n    'file_list': ['1.txt', '2.txt']\r\n}\r\n\r\n# Save a object in a yaml file\r\nsave_yaml(d, 'file.yml')\r\n\r\n# Load the object from a yaml file\r\nd = load_yaml('file.yml')\r\n\r\n# Save the object into a compressed yaml file\r\nsave_yaml(d, 'file.yml.gz')\r\n\r\n# Load the object from a compressed yaml file\r\nd = load_yaml('file.yml.gz')\r\n\r\n# Load the object from the yaml file if it exists,\r\n# otherwise it returns the default object\r\nd = load_yaml('file.yml.gz', {})\r\n\r\n# Save the object into a yaml file in a given directory, \r\n# if the directory does not exist, then create it\r\nsave_yaml(d, 'data/file.yml', force=True)\r\n\r\n# The same but wit a compressed yaml file\r\nsave_yaml(d, 'data/file.yml.gz', force=True)\r\n\r\n# Load from a tar file\r\nfrom mysutils.yaml import load_tar_yaml\r\n\r\n# Load a yaml (data.yaml) from a compressed tar file (file.tar.xz)\r\nd = load_tar_yaml('data/file.tar.xz', 'data.yaml')\r\n```\r\nYou can also load a YAML file from a [compressed tar file](#open-and-load-files-inside-a-tar-archive).\r\n\r\n## Copy files<a id=\"copy-files\" name=\"copy-files\"></a>\r\n\r\nA very simple way to copy several files into a directory. For example:\r\n\r\n```python\r\nfrom mysutils.file import copy_files\r\n\r\n# Copy the files 'file1.txt' and 'file2.txt' to the folder 'data/'. \r\n# If the directory does not exist, then create it.\r\ncopy_files('data/', 'file1.txt', 'file2.txt')\r\n\r\n# To avoid create the folder if it does not exist.\r\ncopy_files('data/', 'file1.txt', 'file2.txt', force=False)\r\n\r\n# Moreover, you can use file wildcards\r\ncopy_files('data/', '*.txt', '*.py')\r\n```\r\n\r\n## Move files<a id=\"move-files\" name=\"move-files\"></a>\r\nMove several files at once.\r\n\r\n```python\r\nfrom mysutils.file import move_files\r\n\r\n# Move several files to test/\r\nmove_files('test/', '1.txt', '2.txt', '3.txt')\r\n\r\n# Create the folder test/ if it does not exist\r\nmove_files('test/', '1.txt', '2.txt', '3.txt', force=True)\r\n\r\n# Replace the files if already exists in test/\r\nmove_files('test/', '1.txt', '2.txt', '3.txt', replace=True)\r\n\r\n# Moreover, you can use file wildcards\r\nmove_files('test/', '*.txt', '*.py')\r\n```\r\n\r\n## Remove files<a id=\"remove-files\" name=\"remove-files\"></a>\r\nYou can also remove several files and empty folders with just one sentence, using the remove_files() function:\r\n\r\n```python\r\nfrom mysutils.file import remove_files\r\n\r\n# Remove three files at once.\r\nremove_files('test2.json', 'data/test1.json', 'data/')\r\n\r\n# Remove three files at once ignoring if any does not exist.\r\nremove_files('test2.json', 'data/test1.json', 'data/', ignore_errors=True)\r\n\r\n# Remove three files or folders at once, if the folder contains more files, also will be removed.\r\nremove_files('test2.json', 'data/test1.json', 'data/', recursive=True)\r\n\r\n# Moreover, you can use file wildcards\r\nremove_files('*.json', 'data/*.json')\r\n```\r\n\r\nIf the file to remove is a directory, it has to be empty. If you want to remove directories with subdirectories or \r\nfiles, use shutil.rmtree().\r\n\r\nAlso,you can use removable_files() to remove files after their use:\r\n\r\n```python\r\nfrom mysutils.tmp import removable_files\r\n\r\n# These files will be removed when the with ends\r\nwith removable_files('test2.json', 'data/test1.json', 'data/'):\r\n    pass\r\n\r\n# These files will be removed when the with ends, ignoring possible errors\r\nwith removable_files('test2.json', 'data/test1.json', 'data/', ignore_errors=True):\r\n    pass\r\n\r\n# These files will be removed when the with ends, if any folder contains more files, also will be removed\r\nwith removable_files('test2.json', 'data/test1.json', 'data/', recursive=True):\r\n    pass\r\n\r\n# Get the variables for each removable file\r\nwith removable_files('test2.json') as (f1,):\r\n    pass\r\n\r\n# Even for several files\r\nwith removable_files('test2.json', 'data/test1.json', 'data/') as (f1, f2, f3):\r\n    pass\r\n```\r\n\r\n## Check if exists several files<a id=\"check-if-exists-several-files\" name=\"check-if-exists-several-files\"></a>\r\nWith the function exist_files() you can check if several files exist or not.\r\nIts usage is very simple, for example:\r\n\r\n```python\r\nfrom mysutils.file import exist_files, not_exist_files, are_dir, not_are_dir\r\n\r\n# Returns True if all of the files exist, otherwise False.\r\nexist_files('mysutils/collections.py', 'test/filetests.py', 'mysutils/file.py')\r\n\r\n# Return True if any of the files exist, if it exists at least one, then return False\r\nnot_exist_files('mysutils/collections.py', 'test/filetests.py', 'mysutils/file.py')\r\n\r\n# Returns True if all of the files are directories, otherwise False.\r\nare_dir('mysutils/collections.py', 'test/filetests.py', 'mysutils/file.py')\r\n\r\n# Return True if any of the files are directories, otherwise False.\r\nnot_are_dir('mysutils/collections.py', 'test/filetests.py', 'mysutils/file.py')\r\n```\r\n\r\n## Count lines<a id=\"count-lines\" name=\"count-lines\"></a> \r\nCount the number of lines of one or several files. If the file is gzip compressed, then decompress it first.\r\n\r\n```python\r\nfrom mysutils.file import open_file, count_lines\r\n# Create a file with two lines\r\nwith open_file('text.txt.gz', 'wt') as file:\r\n    print('First line', file=file)\r\n    print('Second line', file=file)\r\n# Return 2\r\ncount_lines('text.txt.gz')\r\n\r\n# Count lines of several files\r\ncount_lines('file.txt.gz', 'file.txt')\r\n```\r\n\r\n## Touch<a id=\"touch\" name=\"touch\"></a>\r\nCreate several empty files.\r\n\r\n```python\r\nfrom mysutils.file import touch\r\n\r\n# Create the text.txt file without content\r\ntouch('text.txt')\r\n\r\n# Create several empty files\r\ntouch('1.txt', '2.txt', '3.txt')\r\n```\r\n\r\n## Cat<a id=\"cat\" name=\"cat\"></a>\r\nPrint the content of a file.\r\n\r\n```python\r\nfrom mysutils.file import cat, open_file\r\n\r\n# Print the content of text.txt in the standard output\r\ncat('text.txt')\r\n# Print the content of the compressed file text.txt.gz in the standard output\r\ncat('text.txt.gz')\r\n# Print the content of text.txt into the file text_cat.txt\r\nwith open_file('text_cat.txt', 'wt') as file:\r\n    cat('text.txt', output=file)\r\n# Print the content of the compressed file text.txt.gz in the other compressed file text_cat.txt.gz.\r\nwith open_file('text_cat.txt.gz', 'wt') as file:\r\n    cat('text.txt.gz', file)\r\n```\r\n\r\n## Read file<a id=\"read-file\" name=\"read-file\"></a>\r\nHere is included functions to read a file of several forms.\r\n\r\n```python\r\nfrom mysutils.file import read_file, first_line, last_line, head, tail, body, \\\r\n  read_files, read_from, read_until, read_line, read_body\r\n\r\n# Read the file 'text.txt'\r\nlines = read_file('text.txt')\r\n# Read the compressed file 'text.txt.gz'\r\nlines = read_file('text.txt.gz')\r\n# Read the compressed file 'text.txt.gz' removing the newline character if it exists\r\nlines = read_file('text.txt.gz', False)\r\n\r\n# Read the first line of the file token.txt ignoring the character \\n at the end of the line.\r\ntoken = first_line('token.txt')\r\n# Read the last line of the file\r\nline = last_line('credits.txt')\r\n# Read the top 20 lines of the file\r\ntop_lines = head('README.md', 20)\r\n# Read the last 20 lines of the file\r\nlast_lines = tail('README.md', 20)\r\n# Read the lines between the 5 to 20\r\nbody_lines = body('README.md', 5, 20)\r\n# Read lines from the line that starts with \"# Text\" appears to the end of file\r\nlines_from = read_from('README.md', r'^# Text')\r\n# Read lines until the line that starts with \"# Text\" is found\r\nlines_until = read_until('README.md', r'^# Text')\r\n# Read lines from whose starts with E until the line that starts with G \r\nlines_from_to = read_body('test2.txt.gz', r'^E', r'^G')\r\n# Read only the line that matches with \"Web API\" \r\nline = read_line('test2.txt.gz', r'^# Web API')\r\n\r\n# Read several files at once and return a unique list with the content of all the files\r\nlines = read_files('README.md', 'requirements.txt')\r\n\r\n\r\n\r\n```\r\n\r\n## Write in a file<a id=\"write-in-a-file\" name=\"write-in-a-file\"></a>\r\nWrite a text in a file in just one instruction, even if the file is compressed.\r\n\r\n```python\r\nfrom mysutils.file import write_file\r\n\r\n# Write a text in a file\r\nwrite_file('text.txt', 'This an example of writing text in a file.')\r\n# Write a text in a compressed file\r\nwrite_file('text.txt.gz', 'This an example of writing text in a file.')\r\n\r\n# Write a list of strings in a file\r\ntext = ['This is another exmaple of writing text in a file.', 'This file has several lines.']\r\n# Write a text in a file\r\nwrite_file('text.txt', text)\r\n# Write a text in a compressed file\r\nwrite_file('text.txt.gz', text)\r\n```\r\n\r\n## Make directories<a id=\"make-directories\" name=\"make-directories\"></a>\r\nCreate one or more directories but if them already exist, then do nothing.\r\n\r\n```python\r\nfrom mysutils.file import mkdirs\r\n\r\n# Create the folder if not exists\r\nmkdirs('new_folder')\r\n\r\n# Do nothing because the folder was already created\r\nmkdirs('new_folder')\r\n\r\n# Create several folders at once\r\nmkdirs('folder1', 'folder2', 'folder3')\r\n```\r\n\r\n## List files<a id=\"list-files\" name=\"list-files\"></a>\r\nFunctions to list a folder and obtain the first or last file of a folder.\r\n\r\n```python\r\nfrom mysutils.file import first_file, last_file, list_dir\r\n\r\n# Return a sorted list of files of the current directory.\r\nlist_dir()\r\n\r\n# Return a sorted list of files of the 'test' directory.\r\nlist_dir('test')\r\n\r\n# # Return the list of files thant end with '.txt' of the 'test' directory.\r\n\r\n\r\n\r\n# Return the same list but with the inverted order\r\nlist_dir('test', '.*\\.txt$', reverse=True)\r\n\r\n# Return the path of the first file in the current folder\r\nfirst_file()\r\n\r\n# Return the path of the last file in the current folder\r\nlast_file()\r\n\r\n# Return the path of the first file in the 'test' folder\r\nfirst_file('test/')\r\n\r\n# Return the path of the last file in the 'test' folder\r\nlast_file('test/')\r\n\r\n# Return the path of the first file in the 'test' folder that ends with .txt\r\nfirst_file('test/', r'.*\\.txt$')\r\n\r\n# Return the path of the last file in the 'test' folder that ends with .txt\r\nlast_file('test/', r'.*\\.txt$')\r\n```\r\n\r\n## Generate output file paths<a id=\"generate-output-file-paths\" name=\"generate-output-file-paths\"></a>\r\nSometimes it is useful to generate a file name taken into account some parameters and the current timestamp.\r\nThis function generates this file paths.\r\n\r\n```python\r\nfrom mysutils.file import output_file_path\r\n\r\n# Generate a file name in the current folder with the timestamp\r\nfile_path = output_file_path()\r\n\r\n# Generate a file name in the 'model' folder with the timestamp\r\nfile_path = output_file_path('model')\r\n\r\n# Generate a file name in the 'model' folder with the timestamp and .tar.gz as suffix.\r\nfile_path = output_file_path('model', '.tar.gz')\r\n\r\n# Generate a file name in the 'model' folder with the timestamp, followed by the string \"-svm-0.7-300-lemma\",\r\n# and .tar.gz as suffix.\r\nfilepath = output_file_path('model', '.tar.gz', True, method='svm', k=0.7, passes=300, lemma=True, stopw=False)\r\n\r\n# Generate the same as previous but without timestamp\r\noutput_file_path('model', '.tar.gz', False, method='svm', k=0.7, passes=300, lemma=True, stopw=False)\r\n```\r\n\r\n## Check file encoding<a id=\"check-file-encoding\" name=\"check-file-encoding\"></a>\r\nCheck if a file content is compatible with a text encoding.\r\n\r\n```python\r\nfrom mysutils.file import has_encoding\r\n\r\n# Return True if the file 1.txt is compatible with utf-8\r\nhas_encoding('1.txt', 'utf-8')\r\n```\r\n\r\n## Expand wildcards<a id=\"expand-wildcards\" name=\"expand-wildcards\"></a>\r\nFrom strings or file paths which might contain wildcards, the function expand_wildcards() expands them, \r\nreturning a list of existing files that match with the wildcards.\r\n\r\n```python\r\nfrom mysutils.file import expand_wildcards, touch\r\n\r\n# Create 4 files with different extensions\r\ntouch('1.txt', '2.txt', '3.json', '4.yaml')\r\n# Return ['1.txt', '2.txt', '4.yaml']\r\nexpand_wildcards('*.txt', '*.yaml')\r\n```\r\n\r\n## Text to filename\r\n\r\nConvert a text into a filename, removing unsupported characters.\r\n\r\n```python\r\nfrom mysutils.file import to_filename\r\n\r\n# Print \"Hello World_ How are you_\"\r\nprint(to_filename('Hello World! How are you?'))\r\n\r\n# Print \"Hello World_ How are you_.srt\"\r\nprint(to_filename('Hello World! How are you?', '.srt'))\r\n```\r\n\r\n# Removable files<a id=\"removable-files\"></a>\r\nMany times it is necessary to remove temporal files after their use, even if there are any problem with the process.\r\nThese classes and functions allow you to self-removable files, temporally or not.\r\n\r\nFor example, with removable_tmp() function you can do:\r\n```python\r\nfrom mysutils.tmp import removable_tmp\r\n\r\n# Create removable temporal file\r\nwith removable_tmp() as tmp:\r\n    # Do something with the file tmp, for example:\r\n    with open(tmp, 'wt') as file:\r\n        print('Hello world', file=file)\r\n# The tmp file is removed\r\n\r\n# Create removable temporal folder\r\nwith removable_tmp(folder=True) as tmp:\r\n    # Do something with the folder tmp\r\n    ...\r\n# The temporal folder is removed\r\n\r\n# Create a file with suffix:\r\nwith removable_tmp(suffix='tar.gz') as tmp:\r\n    # Do something with the file tmp\r\n    ...\r\n# The temporal folder is removed\r\n\r\n# Create a file with suffix and prefix\r\nwith removable_tmp(suffix='tar.gz', prefix='prefix_') as tmp:\r\n    # Do something with the file tmp\r\n    ...\r\n# The temporal folder is removed\r\n```\r\n\r\nAlso, you can do the same with custom created files:\r\n```python\r\nfrom mysutils.tmp import removable_files\r\nfrom mysutils.file import mkdirs\r\n\r\n# Several files to remove\r\nwith removable_files('1.txt', '2.txt', '3.txt', 'x.out', 'y.out', 'z.out'):\r\n    # Do something with the defined files, for example:\r\n    with open('1.txt', 'wt') as file:\r\n        print('Hello world', file=file)\r\n# All the files are removed\r\n\r\n# Create a removable file and assign it to a variable\r\nwith removable_files('1.txt') as (filename,):\r\n  with open(filename, 'wt') as file:\r\n        print('Hello world', file=file)\r\n# The file is removed\r\n      \r\n# Several files to remove and assign them to variables\r\nwith removable_files('1.txt', '2.txt', '3.txt', 'x.out', 'y.out', 'z.out') as (f1, f2, f3, f4, f6):\r\n    # Do something with the defined files, for example:\r\n    with open(f1, 'wt') as file:\r\n        print('Hello world', file=file)\r\n    with open(f2, 'wt') as file:\r\n        print('Goodbye world', file=file)\r\n# All the files are removed\r\n\r\n# A removable folders\r\nwith removable_files('data1', 'data2', recursive=True) as (d1, d2):\r\n    mkdirs(d1, d2)\r\n    # Do something with the folders\r\n    ...\r\n# Remove automatically the folders and their files\r\n```\r\n\r\n# Compressing files<a id=\"compressing-files\" name=\"compressing-files\"></a>\r\nWith this library there are two ways to compress files: single gzip files and tar files.\r\n\r\n## Gzip<a id=\"gzip\" name=\"gzip\"></a>\r\n\r\n```python\r\nfrom mysutils.file import gzip_compress, gzip_decompress, save_json\r\n\r\n# Create a file\r\nd = {\r\n    'version': 1.0,\r\n    'file_list': ['1.txt', '2.txt']\r\n}\r\nsave_json(d, 'file.json')\r\n\r\n# Compress the file\r\ngzip_compress('file.json', 'file.json.gz')\r\n\r\n# Decompress the file\r\ngzip_decompress('file.json.gz', 'file2.json')\r\n```\r\n\r\n## Tar<a id=\"tar\" name=\"tar\"></a>\r\nSome utils to create, extract and use tar files.\r\n\r\nAll the examples of this section assume you have the files 'test.json' and 'test.json.gz', for instance, with\r\nthis code:\r\n\r\n```python\r\nfrom mysutils.file import save_json\r\n\r\nd = {\r\n    'version': 1.0,\r\n    'file_list': ['1.txt', '2.txt']\r\n}\r\nsave_json(d, 'test.json')\r\nsave_json(d, 'test.json.gz')\r\n```\r\n\r\n### Create a tar file<a id=\"create-a-tar-file\"></a>\r\nWith create_tar() you can create a tar file (compressed or not) and include a list of files.\r\n\r\n```python\r\nfrom mysutils.tar import create_tar\r\n\r\n# Create a normal tar file\r\ncreate_tar('test.tar', 'test.json', 'test.json.gz')\r\n\r\n# Create a gzip compressed tar file\r\ncreate_tar('test.tar.gz', 'test.json', 'test.json.gz')\r\n\r\n# Create a bzip2 compressed tar file\r\ncreate_tar('test.tar.bz2', 'test.json', 'test.json.gz')\r\n\r\n# create a xz compressed tar file\r\ncreate_tar('test.tar.xz', 'test.json', 'test.json.gz')\r\n\r\n# The compress method is selected automatically, but you can force it by the parameter compress_method\r\ncreate_tar('test.tar', 'test.json', 'test.json.gz', compress_method='gz')\r\n```\r\n\r\n### List the content of a tar file<a id=\"list-the-content-of-a-tar-file\"></a>\r\n\r\n```python\r\nfrom mysutils.tar import list_tar\r\n\r\nlst = list_tar('test.tar.gz')\r\nprint(lst[0].path)\r\n```\r\n\r\n### Extract a specific file<a id=\"extract-a-specific-file\"></a>\r\n```python\r\nfrom mysutils.tar import extract_tar_file\r\n\r\n# Extract the file 'test.json' to 'test2.json' from 'test.tar.gz'. \r\nextract_tar_file('test.tar.gz', 'test2.json', 'test.json')\r\n\r\n# Extract the file 'test.json' and save it into 'data/' folder from 'test.tar.gz'.\r\nextract_tar_file('test.tar.gz', 'data/', 'test.json')\r\n\r\n# The decompress method is selected automatically, but you can force it by the parameter compress_method\r\nextract_tar_file('test.tar', 'data/', 'test.json', compress_method='gz')\r\n```\r\n\r\n### Extract several files into a folder<a id=\"extract-several-files-into-a-folder\"></a>\r\n```python\r\nfrom mysutils.tar import extract_tar_files, extract_tar\r\n\r\n# Extract 'test.json' and 'test.json.gz' from 'test.tar.gz2' and store them into 'data/' if it exists.\r\nextract_tar_files('test.tar.bz2', 'data/', 'test.json', 'test.json.gz')\r\n\r\n# The same as before but creates the folder 'data/' if it does not exist.\r\nextract_tar_files('test.tar.bz2', 'data/', 'test.json', 'test.json.gz', force=True)\r\n\r\n# Extract files showing a progress bar\r\nextract_tar_files('test.tar.bz2', 'data/', 'test.json', 'test.json.gz', verbose=True)\r\n\r\n# Extract all the files into the folder 'data/' if it exists\r\nextract_tar('test.tar', 'data/', False)\r\n\r\n# Extract all the files forcing the folder creation\r\nextract_tar('test.tar', 'data/', True)\r\n\r\n# Show a progress bar\r\nextract_tar('test.tar', 'data/', verbose=True)\r\n```\r\n\r\nIn all the previous functions you can use __compress_method__ parameter to select manually which compression or \r\ndecompression method you want to use.\r\n\r\n### Add files to a TAR archive\r\n\r\n```python\r\nfrom mysutils.tar import create_tar, add_tar_files\r\n\r\n# Create a tar file with a compressed json file\r\ncreate_tar('test.tar', 'test.json.gz')\r\n# Add the files to the tar file\r\nadd_tar_files('test.tar', 'test.json', 'test1.txt')\r\n\r\n# This function also works with compressed tar files\r\ncreate_tar('test.tar.gz', 'test.json.gz')\r\nadd_tar_files('test.tar.gz', 'test.json', 'test1.txt')\r\n\r\n# The decompress method is selected automatically, but you can force it by the parameter compress_method\r\nadd_tar_files('test.tar', 'test.json', 'test1.txt', compress_method='gz')\r\n```\r\n\r\n### Open and load files inside a tar archive<a id=\"open-and-load-files-inside-a-tar-archive\" name=\"open-and-load-files-inside-a-tar-archive\"></a>\r\nWith these functions it is possible to open a stream to or load a yaml, json or pickle of a specific file inside a tar \r\narchive.\r\n\r\n```python\r\nfrom mysutils.tar import open_tar_file, load_tar_json, load_tar_pickle\r\nfrom mysutils.yaml import load_tar_yaml\r\nimport json\r\n\r\n# Open the file test.txt from test.tar.gz and print its content \r\nwith open_tar_file('test.tar.gz', 'test.txt') as file:\r\n    for line in file:\r\n      print(line, end='')\r\n\r\n# Load a json file inside a tar archive, even if it is also compressed\r\nd = load_tar_json('test.tar.gz', 'test.json.gz')\r\n\r\n# Load a pickle file inside a tar archive, even if it is also compressed\r\no = load_tar_pickle('test.tar.gz', 'test.pkl')\r\n\r\n# Load a yaml file inside a tar archive, even if it is also compressed\r\nd = load_tar_yaml('test.tar.gz', 'test.yaml.gz')\r\n```\r\n\r\n### Check if some files are inside a TAR file\r\n\r\n```python\r\nfrom mysutils.tar import create_tar, exist_tar_files\r\n\r\n# Create a TAR file\r\ncreate_tar('test.tar.gz', 'test.json', 'test.json.gz')\r\n# This will return True\r\nexist_tar_files('test.tar.gz', 'test.json', 'test.json.gz')\r\n# This will return False\r\nexist_tar_files('test.tar.gz', 'other.json', 'test.json.gz')\r\n```\r\n\r\n# Hashing<a id=\"hashing\" name=\"hashing\"></a>\r\nGenerate hash codes from the content of files in different formats and codifications.\r\n\r\n```python\r\nfrom mysutils.hash import file_md5, file_sha1, file_sha224, file_sha256, file_sha384, file_sha512\r\nfrom mysutils.file import write_file\r\nfrom mysutils.tmp import removable_tmp\r\n\r\nwith removable_tmp() as tmp:\r\n  # Write a text in a temporal file \r\n  write_file(tmp, 'Hello World!')\r\n  # Print in hexadecimal string representation\r\n  print(file_md5(tmp))  # The md5 of \"Hellow World!\"\r\n  print(file_sha1(tmp))  # The md5 of \"Hellow World!\"\r\n  print(file_sha224(tmp))  # The md5 of \"Hellow World!\"\r\n  print(file_sha256(tmp))  # The md5 of \"Hellow World!\"\r\n  print(file_sha384(tmp))  # The md5 of \"Hellow World!\"\r\n  print(file_sha512(tmp))  # The md5 of \"Hellow World!\"\r\n  # Print in binary\r\n  print(file_md5(tmp, False))  # The md5 of \"Hellow World!\"\r\n  print(file_sha1(tmp, False))  # The md5 of \"Hellow World!\"\r\n  print(file_sha224(tmp, False))  # The md5 of \"Hellow World!\"\r\n  print(file_sha256(tmp, False))  # The md5 of \"Hellow World!\"\r\n  print(file_sha384(tmp, False))  # The md5 of \"Hellow World!\"\r\n  print(file_sha512(tmp, False))  # The md5 of \"Hellow World!\"\r\n```\r\n\r\n# External commands<a id=\"external-commands\" name=\"external-commands\"></a>\r\nThis module only contains a function that execute an external command and return the standard and error outputs.\r\nIts execution is very simple:\r\n\r\n```python\r\nfrom mysutils.command import execute_command\r\n\r\n# Execute the Unix shell command 'ls data/'\r\nstd, err = execute_command(['ls', 'data/'])\r\n# Print the standard output\r\nprint(std)\r\n# Print the error output\r\nprint(err)\r\n\r\n# Also you can introduce an unique string\r\nstd, err = execute_command('echo -n \"This is a test\"')\r\n```\r\n\r\n# Configuration files<a id=\"configuration-files\" name=\"configuration-files\"></a>\r\n\r\nToo many times, when you deal with config files or some kind of configuration cluster server, you become crazy\r\nbecause there are a small spelling mistake in the name of a configuration parameter, and you code does not work \r\nproperly.\r\nWith the function parse_config() you can easily define an array with the configuration parameter that you need and\r\nthis function throws an exception if there are any error or the parameters in the configuration file does not match\r\nwith the defined ones. For example:\r\n\r\n```python\r\nfrom mysutils.config import parse_config\r\n\r\nPARAM_DEFINITION = [('server_host', False, 'http://0.0.0.0'), ('server_port', False, 8080),\r\n                    ('database_name', True, None)]\r\n# Check if all the required parameters are in the configuration file and there are anymore (double check)\r\nconfig = {\r\n  'database_name': 'Test'\r\n}\r\nvalues = parse_config(config, PARAM_DEFINITION, True)  # Returns the default values of the parameters\r\n\r\n# With double_check to False instead of True, the configuration file can have other no defined parameters\r\nconfig = {\r\n  'database_name': 'Test',\r\n  'new_parameter': 1\r\n}\r\nvalues = parse_config(config, PARAM_DEFINITION, False)\r\n\r\n# This will raise an error because double_check is activated and the configuration file has a non-defined value.\r\nconfig = {\r\n  'database_name': 'Test',\r\n  'new_parameter': 1\r\n}\r\nparse_config(config, PARAM_DEFINITION, True)\r\n```\r\n\r\n# Logging<a id=\"logging\" name=\"logging\"></a>\r\nSome functions to configure and to get information about logging. \r\n\r\n```python\r\nfrom mysutils.logging import get_log_level_names, get_log_levels, get_log_level, config_log\r\n\r\n# Configure the logging to show only error messages\r\nconfig_log('ERROR')\r\n\r\n# Configure the logging to show INFO or higher message level and store it in a file\r\nconfig_log('ERROR', 'file.log')\r\n\r\n# Get the log level names\r\nget_log_level_names()\r\n\r\n# Get the log level names and its number\r\nget_log_levels()\r\n\r\n# Get the log level number from its name\r\nget_log_level('DEBUG')\r\n```\r\n\r\nYou have also the log_curl_request() function to \r\n\r\n```python\r\nfrom logging import getLogger\r\nfrom mysutils.logging import log_curl_request\r\nfrom mysutils.text import AnsiCodes\r\n\r\nlogger = getLogger(__name__)\r\n\r\nlog_curl_request(logger.error,\r\n                 'http://localhost:5000/world_domination',\r\n                 'POST',\r\n                 {'Content-Type': 'application/json'},\r\n                 {'quantity_of_people': 'everybody'},\r\n                 AnsiCodes.RED)\r\n```\r\n\r\nThe previous code will print the following output but with the command in red color:\r\n\r\n```bash\r\ncurl -X POST -H \"Content-Type: application/json\" \"http://localhost:5000/world_domination\" --data '{\"quantity_of_people\": \"everybody\"}'\r\n```\r\n\r\n# Method synchronization<a id=\"method-synchronization\" name=\"method-synchronization\"></a>\r\nSometimes it is necessary to create a synchronized method.\r\nWith @synchronized you can create a synchronized method easily:\r\n\r\n```python\r\nfrom mysutils.method import synchronized\r\nfrom time import sleep\r\nfrom threading import Thread\r\n\r\nnum = 0\r\n\r\n# Create a class with a synchronized method\r\nclass MyClass(object):\r\n    @synchronized\r\n    def calculate(self):\r\n        global num\r\n        print(f'Starting calculation {num}.')\r\n        sleep(5)\r\n        num += 1\r\n        print(f'Ending calculation {num}.')\r\n\r\n# Create two instances of the same class\r\nobj1, obj2 = MyClass(), MyClass()\r\n# Execute the method of the first object as a thread \r\nthread = Thread(target=obj1.calculate)\r\nthread.start()\r\nsleep(1)\r\n# This method will wait 4 seconds more to finish the first calculate() method.\r\nobj1.calculate()\r\n```\r\n\r\n# Services and Web<a id=\"services-and-web\" name=\"services-and-web\"></a>\r\n\r\n## Download a file<a id=\"download-a-file\" name=\"download-a-file\"></a>\r\nThis function requires to install the Requests module with the following command:\r\n\r\n```bash\r\npip install requests~=2.25.1\r\n```\r\n\r\nAfter module requests is installed, you can download a file with this simple command:\r\n\r\n```python\r\nfrom mysutils.web import download\r\n\r\n# Download the file from the url to 'dest/file.txt'.\r\ndownload('<url-to-download>', 'dest/file.txt')\r\n```\r\n\r\n## Endpoint<a id=\"endpoint\" name=\"endpoint\"></a>\r\nIn the contexts of a web service, you can need the base real final url to a service, that means, \r\nthe protocol, IP or hostname and path to the service. \r\nYou can obtain this with endpoint() function. This function is based on javascript, \r\nthen it is necessary to use inside an HTML document.\r\n\r\nAn example, in all my services I create a start point (usually home page) to describe briefly how to use.\r\nDepending on if I deploy this service locally or in the job server, the path to the service changes.\r\nHowever, I would not like to remember to modify each time the service or any parameter. \r\nTo avoid this, I use the endpoint() function in the HTML instructions like this:\r\n\r\n```python\r\nfrom fastapi import FastAPI, HTTPException\r\nfrom mysutils.service import endpoint\r\n\r\napp = FastAPI()\r\n\r\n@app.get('/', response_class=HTMLResponse)\r\ndef home() -> str:\r\n    \"\"\" Show the help.\r\n    :return: The HTML code to show the help.\r\n    \"\"\"\r\n    return f'<h1>My service</h1>\\n' \\\r\n           '<p>With these services, you can do wonderful things. ' \\\r\n           'For example, with this one you can dominate the world:</p>\\n' \\\r\n           '<code>' + \\\r\n           f'curl -X GET -L -i \\'{endpoint(\"dominate\")}?num_countries=&lt;NUM&gt;\\'' \\\r\n           '</code>\\n' \\\r\n\r\n```\r\n\r\nIf your service is in the URL https://www.example.com/services/dominate, this will generate a page like this:\r\n\r\n> # My service\r\n> With this service, you can do wonderful things. For example, with this one you can dominate the world:\r\n> ```bash\r\n> curl -X GET -L -i 'https://www.example.com/services/dominate?num_countries=&lt;NUM&gt;'\r\n> ```\r\n\r\nHowever, if you execute this command locally in port 8080,\r\nthe last URL will be: http://localhost:8080/dominate?num_countries=<NUM>.\r\n\r\nThis method works in both, FastAPI or Flask, and it maybe can work also in other server environments.\r\n\r\n## Generate service help<a id=\"generate-service-help\" name=\"generate-service-help\"></a>\r\n\r\nYou can create a page with documentation about your service from a README.md or another Markdown file with the function\r\ngenerate_service_help(). For example:\r\n\r\n```python\r\nfrom mysutils.fastapi import gen_service_help\r\nfrom fastapi.responses import HTMLResponse\r\nfrom fastapi import FastAPI, HTTPException\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get('/help', response_class=HTMLResponse)\r\ndef home() -> str:\r\n  \"\"\" Show the help.\r\n  :return: The HTML code to show the help.\r\n  \"\"\"\r\n  # Specify paths manually\r\n  return gen_service_help('Page title', 'README.md', '# Web API',\r\n                          '/service1', '/service2', '/service3')\r\n  # Specify paths automatically\r\n  return gen_service_help('Page title', 'README.md', '# Web API', *app.routes)\r\n```\r\n\r\nThis way, it will generate a Web page with the title 'Page title', using the information in the README.md file\r\nfrom the section '# Web API' for the service endpoints 'service1', 'service2' and 'service3'.\r\n\r\nIf the endpoints are used, then, if in the readme threre are any url like 'https?://.*/serviceX', \r\nthen it will return the real URL of the service.\r\n\r\n*Note:* To use this function, you need to install markdown package, and, optionally, if you want colorful embedded code, you also need to install pygments:\r\n\r\n```bash\r\npip install \"Markdown>=3.3.6,<4\" \"Pygments>=2.10.0,<3\"\r\n```\r\n\r\n## JSON post<a id=\"json-post\" name=\"json-post\"></a>\r\nA very easy way to send a dictionary by means to http post, ot a json service.\r\n\r\n```python\r\nfrom mysutils.request import json_post\r\n\r\n# Send the dictionary '{\"msg\": \"Hello world!\"}' to the service with that url \r\njson_post('https://postman-echo.com/post', {\"msg\": \"Hello world!\"})\r\n```\r\n\r\n# File unit tests<a id=\"unit-tests\" name=\"unit-tests\"></a>\r\nA small class that inherits from TestCase and have methods to assert the typical file options like exists or isdir.\r\n\r\n```python\r\nfrom mysutils import unittest\r\nfrom mysutils.file import touch, move_files\r\n\r\nclass MyTestCase(unittest.FileTestCase):\r\n  # Check if some files exists and they have been moved successfully\r\n  def test_move_files(self) -> None:\r\n    touch('1.txt', '2.txt', '3.txt')\r\n    move_files('test/', '1.txt', '2.txt', '3.txt')\r\n    self.assertExists('test/1.txt', 'test/2.txt', 'test/3.txt')\r\n    self.assertNotExists('1.txt', '2.txt', '3.txt')\r\n\r\n  def test_encoding(self) -> None:\r\n    # Check if the content of 1.txt, 2.txt and 3.txt are compatible\r\n    # with iso8859-1 encoding.\r\n    self.assertEncoding('1.txt', '2.txt', '3.txt', encoding='iso8859-1')\r\n    # Check if the content of 1.txt, 2.txt and 3.txt are not compatible\r\n    # with iso8859-1 encoding.\r\n    self.assertEncoding('1.txt', '2.txt', '3.txt', encoding='iso8859-1')\r\n```\r\n\r\n# Miscellany<a id=\"miscellany\" name=\"miscellany\"></a>\r\n\r\nOther no classifiable functions, like conditional() function that executes a function if a condition is True.\r\nFor example, if you need to do the following:\r\n\r\n```python\r\nfrom mysutils.misc import conditional\r\n\r\n# The function to execute\r\ndef my_func(a: int, b: str, **kwargs) -> str:\r\n    return f'Intent {a} of {b} for {kwargs[\"c\"]}'\r\n\r\n# Instead of doing this:\r\nif a > b:\r\n  my_func(1, 'apple', c='Lucas')\r\n\r\n# You can do\r\nconditional(my_func, a > b, 1, 'apple', c='Lucas')\r\n```\r\n\r\n# How to collaborate\r\n\r\nI you want to collaborate with this project, please, <a href=\"mailto:jmgomez.soriano@gmail.com\">contact with me</a>.\r\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/jmgomezsoriano/mysmallutils","keywords":null,"license":"LGPL2","maintainer":null,"maintainer_email":null,"name":"mysmallutils","package_url":"https://pypi.org/project/mysmallutils/","platform":null,"project_url":"https://pypi.org/project/mysmallutils/","project_urls":{"Homepage":"https://github.com/jmgomezsoriano/mysmallutils"},"provides_extra":null,"release_url":"https://pypi.org/project/mysmallutils/2.0.20/","requires_dist":null,"requires_python":"<4,>=3.7","summary":"Small Python utils to do life easier.","version":"2.0.20","yanked":false,"yanked_reason":null},"last_serial":23323818,"releases":{"0.0.1":[{"comment_text":"","digests":{"blake2b_256":"eba0d07f5becdc6ae60bb1529e6373933980525f0f535ef6fb82338dcd79b91f","md5":"2bcbfe38509a45785e59ae1cc0856147","sha256":"cf0851dca29b18b6a13664da44377d2525cb18869327356f1e8d6b55f97b8871"},"downloads":-1,"filename":"mysmallutils-0.0.1.tar.gz","has_sig":false,"md5_digest":"2bcbfe38509a45785e59ae1cc0856147","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":9006,"upload_time":"2021-07-31T16:31:57","upload_time_iso_8601":"2021-07-31T16:31:57.310039Z","url":"https://files.pythonhosted.org/packages/eb/a0/d07f5becdc6ae60bb1529e6373933980525f0f535ef6fb82338dcd79b91f/mysmallutils-0.0.1.tar.gz","yanked":false,"yanked_reason":null}],"0.0.11":[{"comment_text":"","digests":{"blake2b_256":"9015965b467f583a2d945f7f35807bab4f496d22478afa79b23845ce15401444","md5":"264cb8298822ec9bb8b1ab9083ed9749","sha256":"cb9462311928385410ee5a909978ee79d04b4f8ebbfc17e01259af9628d41fb1"},"downloads":-1,"filename":"mysmallutils-0.0.11.tar.gz","has_sig":false,"md5_digest":"264cb8298822ec9bb8b1ab9083ed9749","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":15990,"upload_time":"2021-08-18T08:26:15","upload_time_iso_8601":"2021-08-18T08:26:15.013315Z","url":"https://files.pythonhosted.org/packages/90/15/965b467f583a2d945f7f35807bab4f496d22478afa79b23845ce15401444/mysmallutils-0.0.11.tar.gz","yanked":false,"yanked_reason":null}],"0.0.12":[{"comment_text":"","digests":{"blake2b_256":"711f2df2ff9b3caf475b55e80c1a2e1be26b4366e1f316b578fb0512ffd2d2bc","md5":"46874bf4e4f6725207ba921f50082e5a","sha256":"d605b35305c5442750bd10676d5535aa2fbd64abc5e3868143b0747aa5dfa5fa"},"downloads":-1,"filename":"mysmallutils-0.0.12.tar.gz","has_sig":false,"md5_digest":"46874bf4e4f6725207ba921f50082e5a","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":15853,"upload_time":"2021-08-19T09:04:57","upload_time_iso_8601":"2021-08-19T09:04:57.615373Z","url":"https://files.pythonhosted.org/packages/71/1f/2df2ff9b3caf475b55e80c1a2e1be26b4366e1f316b578fb0512ffd2d2bc/mysmallutils-0.0.12.tar.gz","yanked":false,"yanked_reason":null}],"0.0.13":[{"comment_text":"","digests":{"blake2b_256":"a94ab04c476e82fbae3bde44b3332e8021a51b7275af9d3976999648d4c45191","md5":"ef8e2651c14a1c22732d019fa8c6a563","sha256":"4555f6e26d8a0cb2dc559503c2c1b9fdc44ef3adebf0c5e30100653c66443a29"},"downloads":-1,"filename":"mysmallutils-0.0.13.tar.gz","has_sig":false,"md5_digest":"ef8e2651c14a1c22732d019fa8c6a563","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":15853,"upload_time":"2021-08-19T09:17:10","upload_time_iso_8601":"2021-08-19T09:17:10.252700Z","url":"https://files.pythonhosted.org/packages/a9/4a/b04c476e82fbae3bde44b3332e8021a51b7275af9d3976999648d4c45191/mysmallutils-0.0.13.tar.gz","yanked":false,"yanked_reason":null}],"0.0.14":[{"comment_text":"","digests":{"blake2b_256":"006d57ed38148f9b8c43b07f6fb55953c1e11d5967ccb4904adebca2ae82cd20","md5":"41abf94e8890226d1b348b9518669f21","sha256":"3c559972d97a4971c6b55c5f1b8c89230028a137cf9759c9c1f1fa9562de7849"},"downloads":-1,"filename":"mysmallutils-0.0.14.tar.gz","has_sig":false,"md5_digest":"41abf94e8890226d1b348b9518669f21","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":15856,"upload_time":"2021-08-19T09:38:31","upload_time_iso_8601":"2021-08-19T09:38:31.047424Z","url":"https://files.pythonhosted.org/packages/00/6d/57ed38148f9b8c43b07f6fb55953c1e11d5967ccb4904adebca2ae82cd20/mysmallutils-0.0.14.tar.gz","yanked":false,"yanked_reason":null}],"0.0.15":[{"comment_text":"","digests":{"blake2b_256":"29edfe5829c9ffda58fcbab8e01cc94eb1a79e49cf9d4fca65a3452bc021e655","md5":"d3adabd1b714684b15590b30b362e4fa","sha256":"40d8dab2085dbdfe1de830a3b1da204366e9268924fc128301c719a6befacf31"},"downloads":-1,"filename":"mysmallutils-0.0.15.tar.gz","has_sig":false,"md5_digest":"d3adabd1b714684b15590b30b362e4fa","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":17321,"upload_time":"2021-08-23T13:15:54","upload_time_iso_8601":"2021-08-23T13:15:54.942780Z","url":"https://files.pythonhosted.org/packages/29/ed/fe5829c9ffda58fcbab8e01cc94eb1a79e49cf9d4fca65a3452bc021e655/mysmallutils-0.0.15.tar.gz","yanked":false,"yanked_reason":null}],"0.0.16":[{"comment_text":"","digests":{"blake2b_256":"e8fa73f80825f375a255a527fade8e5d3d492d43e9ba4d4852e70c502415f87f","md5":"48866449d26e9c8702c9187b37e0a90c","sha256":"433f483931d0b8571adbc726e2f5e7a52702d4fb237ec1d8e4c8e6c410fac4e5"},"downloads":-1,"filename":"mysmallutils-0.0.16.tar.gz","has_sig":false,"md5_digest":"48866449d26e9c8702c9187b37e0a90c","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":17993,"upload_time":"2021-08-24T15:03:21","upload_time_iso_8601":"2021-08-24T15:03:21.094616Z","url":"https://files.pythonhosted.org/packages/e8/fa/73f80825f375a255a527fade8e5d3d492d43e9ba4d4852e70c502415f87f/mysmallutils-0.0.16.tar.gz","yanked":false,"yanked_reason":null}],"0.0.17":[{"comment_text":"","digests":{"blake2b_256":"8ad8f67d81ec5719ae5817db64cd711ee8ecd238f6964a86405c8d65c635763c","md5":"d9045b7b6a41a2503e5994e2b50c55c1","sha256":"48c3ce09015e23d14937eba606fbe4d215a83c45fa700d183791b87f46456d0d"},"downloads":-1,"filename":"mysmallutils-0.0.17.tar.gz","has_sig":false,"md5_digest":"d9045b7b6a41a2503e5994e2b50c55c1","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":18631,"upload_time":"2021-08-25T09:56:02","upload_time_iso_8601":"2021-08-25T09:56:02.795850Z","url":"https://files.pythonhosted.org/packages/8a/d8/f67d81ec5719ae5817db64cd711ee8ecd238f6964a86405c8d65c635763c/mysmallutils-0.0.17.tar.gz","yanked":false,"yanked_reason":null}],"0.0.18":[{"comment_text":"","digests":{"blake2b_256":"77aac98a0732877dab1467e9a63620b3bc15eb1c4dc0fd079f143cb58b5ef2de","md5":"5099c3fa4f61097a346f4f036c9e94d6","sha256":"6477f6e24f8a84950e026347077ede810decacb210cc55be68a56390777a17f3"},"downloads":-1,"filename":"mysmallutils-0.0.18.tar.gz","has_sig":false,"md5_digest":"5099c3fa4f61097a346f4f036c9e94d6","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":18620,"upload_time":"2021-08-25T13:01:12","upload_time_iso_8601":"2021-08-25T13:01:12.554873Z","url":"https://files.pythonhosted.org/packages/77/aa/c98a0732877dab1467e9a63620b3bc15eb1c4dc0fd079f143cb58b5ef2de/mysmallutils-0.0.18.tar.gz","yanked":false,"yanked_reason":null}],"0.0.2":[{"comment_text":"","digests":{"blake2b_256":"bb275529964c588677898aae24ba7b27d213f2c68a068f7a67635ae766354bc5","md5":"6badb591781e155fbface6ae84649d77","sha256":"f9bc8ecd3d5d9de7e129a13289f55aef9f7bf46c5dcdc07ab5c490a27b931485"},"downloads":-1,"filename":"mysmallutils-0.0.2.tar.gz","has_sig":false,"md5_digest":"6badb591781e155fbface6ae84649d77","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":12756,"upload_time":"2021-08-10T11:17:11","upload_time_iso_8601":"2021-08-10T11:17:11.395659Z","url":"https://files.pythonhosted.org/packages/bb/27/5529964c588677898aae24ba7b27d213f2c68a068f7a67635ae766354bc5/mysmallutils-0.0.2.tar.gz","yanked":false,"yanked_reason":null}],"0.0.4":[{"comment_text":"","digests":{"blake2b_256":"b9b4e8c51ae39e03e52700834ee3365b49d0c399f71bd9ae0e03c6f1229b75ba","md5":"e845ddd400dd115b881140f60e226806","sha256":"5ea826d3cbfb982b95e3a1c84f1a101f683aab6873576b36185ab72307096881"},"downloads":-1,"filename":"mysmallutils-0.0.4.tar.gz","has_sig":false,"md5_digest":"e845ddd400dd115b881140f60e226806","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":14998,"upload_time":"2021-08-11T09:16:48","upload_time_iso_8601":"2021-08-11T09:16:48.573453Z","url":"https://files.pythonhosted.org/packages/b9/b4/e8c51ae39e03e52700834ee3365b49d0c399f71bd9ae0e03c6f1229b75ba/mysmallutils-0.0.4.tar.gz","yanked":false,"yanked_reason":null}],"0.0.9":[{"comment_text":"","digests":{"blake2b_256":"b9a7e44b70b9b53cbe05e368e96b7d0b009e14dbe154aeb4af04bfc5378ec8c1","md5":"ea08e9347680ffc6118d837660d86bd5","sha256":"97c9cdf521f1af3eeb59f9e9e3336f5e7e170c347af849f9179b6c5eabc93a3a"},"downloads":-1,"filename":"mysmallutils-0.0.9.tar.gz","has_sig":false,"md5_digest":"ea08e9347680ffc6118d837660d86bd5","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":15508,"upload_time":"2021-08-17T15:21:18","upload_time_iso_8601":"2021-08-17T15:21:18.232034Z","url":"https://files.pythonhosted.org/packages/b9/a7/e44b70b9b53cbe05e368e96b7d0b009e14dbe154aeb4af04bfc5378ec8c1/mysmallutils-0.0.9.tar.gz","yanked":false,"yanked_reason":null}],"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"02dde125df29b6d7499cd552ee4334545f5b03d87431aa44c1ed0b5e9670c6d8","md5":"7f9821981d42157a2802490b9433467b","sha256":"d137e8b9e1b4e3afbe49e6b0e42d386c30dfa2396b92b949209fe2fa220e6cb5"},"downloads":-1,"filename":"mysmallutils-0.1.0.tar.gz","has_sig":false,"md5_digest":"7f9821981d42157a2802490b9433467b","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":18803,"upload_time":"2021-08-26T07:16:01","upload_time_iso_8601":"2021-08-26T07:16:01.472908Z","url":"https://files.pythonhosted.org/packages/02/dd/e125df29b6d7499cd552ee4334545f5b03d87431aa44c1ed0b5e9670c6d8/mysmallutils-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"fad7b2aa4b79850b9bf097ce54fc1f1ca0f743b5355b1d7a8614abb6db26230d","md5":"aef1d7aa7915e6e3f4ff046af2d70f28","sha256":"49636f7ae606c6350fb835df9eeb6ec9cbc0e9b38c38eb21f94b4eaaad9e04fe"},"downloads":-1,"filename":"mysmallutils-0.1.1.tar.gz","has_sig":false,"md5_digest":"aef1d7aa7915e6e3f4ff046af2d70f28","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":19026,"upload_time":"2021-08-26T13:18:55","upload_time_iso_8601":"2021-08-26T13:18:55.395450Z","url":"https://files.pythonhosted.org/packages/fa/d7/b2aa4b79850b9bf097ce54fc1f1ca0f743b5355b1d7a8614abb6db26230d/mysmallutils-0.1.1.tar.gz","yanked":false,"yanked_reason":null}],"0.1.10":[{"comment_text":"","digests":{"blake2b_256":"17c4e519c69cff49e1b7ab22660f9e1e9f5610f26a9333072beb5cf820470acb","md5":"4a74f471095407bc6d2a337461c84343","sha256":"f336ac54c629ebaa4759dcd8d8041107686d2441a766c58b4b55d9dd8ba4ca32"},"downloads":-1,"filename":"mysmallutils-0.1.10.tar.gz","has_sig":false,"md5_digest":"4a74f471095407bc6d2a337461c84343","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":21193,"upload_time":"2021-08-31T06:18:36","upload_time_iso_8601":"2021-08-31T06:18:36.342598Z","url":"https://files.pythonhosted.org/packages/17/c4/e519c69cff49e1b7ab22660f9e1e9f5610f26a9333072beb5cf820470acb/mysmallutils-0.1.10.tar.gz","yanked":false,"yanked_reason":null}],"0.1.11":[{"comment_text":"","digests":{"blake2b_256":"59fa76dbb5e5a4fd15647cab1ad5c1671682a0fb7f922b04e0c008867996cfec","md5":"bf43bda7d7e142221a26f9b89de5a28d","sha256":"2ad4aaee26ae39917e3ddb17747aac3e050a4ac260f5842675f75612536466e9"},"downloads":-1,"filename":"mysmallutils-0.1.11.tar.gz","has_sig":false,"md5_digest":"bf43bda7d7e142221a26f9b89de5a28d","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":21200,"upload_time":"2021-08-31T07:24:51","upload_time_iso_8601":"2021-08-31T07:24:51.899013Z","url":"https://files.pythonhosted.org/packages/59/fa/76dbb5e5a4fd15647cab1ad5c1671682a0fb7f922b04e0c008867996cfec/mysmallutils-0.1.11.tar.gz","yanked":false,"yanked_reason":null}],"0.1.12":[{"comment_text":"","digests":{"blake2b_256":"611d795b0e30aa7689a746e0ab1ec977dfe9a31b8d3a9c49e14ef76935ab2cad","md5":"966de0603df5fe3a53900bb6734ce95b","sha256":"6368a5262b4c881d17cffb44beb2719dc7716c7edabea1745ac6b50a145df72b"},"downloads":-1,"filename":"mysmallutils-0.1.12.tar.gz","has_sig":false,"md5_digest":"966de0603df5fe3a53900bb6734ce95b","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":21405,"upload_time":"2021-08-31T13:07:20","upload_time_iso_8601":"2021-08-31T13:07:20.652486Z","url":"https://files.pythonhosted.org/packages/61/1d/795b0e30aa7689a746e0ab1ec977dfe9a31b8d3a9c49e14ef76935ab2cad/mysmallutils-0.1.12.tar.gz","yanked":false,"yanked_reason":null}],"0.1.13":[{"comment_text":"","digests":{"blake2b_256":"e50925faa4b3c0cd9eb7be74fe6b314a180c184fd091fb7b6da4fea9a93d8fb2","md5":"f7571b47615bfeadbca54f3071ec8de2","sha256":"6d90b80e6481052f075cf0247e9afcdb2ac46082561ba2e7aa0ded3ef3228a99"},"downloads":-1,"filename":"mysmallutils-0.1.13.tar.gz","has_sig":false,"md5_digest":"f7571b47615bfeadbca54f3071ec8de2","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":21480,"upload_time":"2021-09-01T07:53:10","upload_time_iso_8601":"2021-09-01T07:53:10.486783Z","url":"https://files.pythonhosted.org/packages/e5/09/25faa4b3c0cd9eb7be74fe6b314a180c184fd091fb7b6da4fea9a93d8fb2/mysmallutils-0.1.13.tar.gz","yanked":false,"yanked_reason":null}],"0.1.14":[{"comment_text":"","digests":{"blake2b_256":"e015e1006b3198074e734b7b363e4e3a86d64f616f4ad4ce6092f9e96cb8c936","md5":"57279658f8f9601ef0d817e046bf19ea","sha256":"9a0a84da0be4ea46b8a3f725ffd46bb855cd86c2810f864219071d47ecbbf1e1"},"downloads":-1,"filename":"mysmallutils-0.1.14.tar.gz","has_sig":false,"md5_digest":"57279658f8f9601ef0d817e046bf19ea","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":21469,"upload_time":"2021-09-01T11:54:24","upload_time_iso_8601":"2021-09-01T11:54:24.980660Z","url":"https://files.pythonhosted.org/packages/e0/15/e1006b3198074e734b7b363e4e3a86d64f616f4ad4ce6092f9e96cb8c936/mysmallutils-0.1.14.tar.gz","yanked":false,"yanked_reason":null}],"0.1.2":[{"comment_text":"","digests":{"blake2b_256":"52ddaf2d25440b362fbd50adbf946feb5e387626d12eb0f3902d57d0febea417","md5":"431d13aac21e958a2b4c8fcd96ef858b","sha256":"b1775d290cc17e6ee4211ff686928324d480ce66de7340c2081881ad3ed22952"},"downloads":-1,"filename":"mysmallutils-0.1.2.tar.gz","has_sig":false,"md5_digest":"431d13aac21e958a2b4c8fcd96ef858b","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":19031,"upload_time":"2021-08-26T13:28:55","upload_time_iso_8601":"2021-08-26T13:28:55.337305Z","url":"https://files.pythonhosted.org/packages/52/dd/af2d25440b362fbd50adbf946feb5e387626d12eb0f3902d57d0febea417/mysmallutils-0.1.2.tar.gz","yanked":false,"yanked_reason":null}],"0.1.3":[{"comment_text":"","digests":{"blake2b_256":"603b5c5eb9699b0c12195b7e7ef7e1f751838d2842107a229d714c0d18abacbd","md5":"f09cf359ddb9f437e42cde4b5f1aced0","sha256":"3b4709381ec95996dca25da2ea599ef2b272421d57854cfcf7d68179da365676"},"downloads":-1,"filename":"mysmallutils-0.1.3.tar.gz","has_sig":false,"md5_digest":"f09cf359ddb9f437e42cde4b5f1aced0","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":19352,"upload_time":"2021-08-27T08:47:14","upload_time_iso_8601":"2021-08-27T08:47:14.240886Z","url":"https://files.pythonhosted.org/packages/60/3b/5c5eb9699b0c12195b7e7ef7e1f751838d2842107a229d714c0d18abacbd/mysmallutils-0.1.3.tar.gz","yanked":false,"yanked_reason":null}],"0.1.4":[{"comment_text":"","digests":{"blake2b_256":"64391072822a2894849db59886b07b40cb94bb341b651e85e674fe6e554d24fe","md5":"6dd49e963a519a133914ce8553c00a96","sha256":"73b30f920b718f659dcc413cff8b8604543c5ecbcc6fbd5be3cb3d52f34bff3a"},"downloads":-1,"filename":"mysmallutils-0.1.4.tar.gz","has_sig":false,"md5_digest":"6dd49e963a519a133914ce8553c00a96","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":19339,"upload_time":"2021-08-27T08:51:12","upload_time_iso_8601":"2021-08-27T08:51:12.292580Z","url":"https://files.pythonhosted.org/packages/64/39/1072822a2894849db59886b07b40cb94bb341b651e85e674fe6e554d24fe/mysmallutils-0.1.4.tar.gz","yanked":false,"yanked_reason":null}],"0.1.5":[{"comment_text":"","digests":{"blake2b_256":"2dd73abe3d5246ea56a74381f54f9dd1a9a2d6563e8e561ed0845d94ff37b730","md5":"20c779e57208da65689efacf0512da04","sha256":"82ce2ca86701561f48ad43749fcd8c1650893b972954dc1e4370092942a36760"},"downloads":-1,"filename":"mysmallutils-0.1.5.tar.gz","has_sig":false,"md5_digest":"20c779e57208da65689efacf0512da04","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":19692,"upload_time":"2021-08-27T10:28:42","upload_time_iso_8601":"2021-08-27T10:28:42.978328Z","url":"https://files.pythonhosted.org/packages/2d/d7/3abe3d5246ea56a74381f54f9dd1a9a2d6563e8e561ed0845d94ff37b730/mysmallutils-0.1.5.tar.gz","yanked":false,"yanked_reason":null}],"0.1.6":[{"comment_text":"","digests":{"blake2b_256":"b10fe8e1f8c01a9264e9d203d51eb91bf290eec69bcbe1441d455b84e4f04f80","md5":"1a26e2a28009719c7e49607423155f62","sha256":"e295e5d509a4b176e4100dfff4f7a3b6d00460b19adb497a89fa6ec84a8b3353"},"downloads":-1,"filename":"mysmallutils-0.1.6.tar.gz","has_sig":false,"md5_digest":"1a26e2a28009719c7e49607423155f62","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":19696,"upload_time":"2021-08-27T15:30:33","upload_time_iso_8601":"2021-08-27T15:30:33.654600Z","url":"https://files.pythonhosted.org/packages/b1/0f/e8e1f8c01a9264e9d203d51eb91bf290eec69bcbe1441d455b84e4f04f80/mysmallutils-0.1.6.tar.gz","yanked":false,"yanked_reason":null}],"0.1.7":[{"comment_text":"","digests":{"blake2b_256":"9f302b0e66404c736a9186ec09277a34da813a73e71e6997b022cdfc6c57f412","md5":"55076eea4f8d76310e037defb3939763","sha256":"e5f0979ea638f17070cee641ef5db01b6b028fa97f53b72585c336dae1afc2b6"},"downloads":-1,"filename":"mysmallutils-0.1.7.tar.gz","has_sig":false,"md5_digest":"55076eea4f8d76310e037defb3939763","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":21045,"upload_time":"2021-08-30T11:24:27","upload_time_iso_8601":"2021-08-30T11:24:27.763528Z","url":"https://files.pythonhosted.org/packages/9f/30/2b0e66404c736a9186ec09277a34da813a73e71e6997b022cdfc6c57f412/mysmallutils-0.1.7.tar.gz","yanked":false,"yanked_reason":null}],"0.1.8":[{"comment_text":"","digests":{"blake2b_256":"740f890fb3df665b86835d179415b643cf91f64c76f24a7eb3934a51fb8ed50b","md5":"b5271bc90d99011461d801bea138d7fc","sha256":"4a6b9b66862cb030682fa115b7369a4064e7349ab493a1f46f85dc641f809b2a"},"downloads":-1,"filename":"mysmallutils-0.1.8.tar.gz","has_sig":false,"md5_digest":"b5271bc90d99011461d801bea138d7fc","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":21063,"upload_time":"2021-08-30T12:32:52","upload_time_iso_8601":"2021-08-30T12:32:52.277346Z","url":"https://files.pythonhosted.org/packages/74/0f/890fb3df665b86835d179415b643cf91f64c76f24a7eb3934a51fb8ed50b/mysmallutils-0.1.8.tar.gz","yanked":false,"yanked_reason":null}],"0.1.9":[{"comment_text":"","digests":{"blake2b_256":"3a6766483a035edec149c393ca4dcb80cd16346a396b47b76489a009433bcc91","md5":"d5b523913677a2324bf5e51a2af074eb","sha256":"fba53c8846c5686461857224ca08efbea558ec74c474c6f06b39c4c00e0151b3"},"downloads":-1,"filename":"mysmallutils-0.1.9.tar.gz","has_sig":false,"md5_digest":"d5b523913677a2324bf5e51a2af074eb","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":21189,"upload_time":"2021-08-30T15:30:59","upload_time_iso_8601":"2021-08-30T15:30:59.530234Z","url":"https://files.pythonhosted.org/packages/3a/67/66483a035edec149c393ca4dcb80cd16346a396b47b76489a009433bcc91/mysmallutils-0.1.9.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"b85ad5093e358da52a2647560af01f2a0ba37772e7718d968587b7eba646c179","md5":"f6877ac843cd38034b25aef7da4a5586","sha256":"c6366ed018f150df0b8a3db0813f55a4a73f713556337119f1323fa80b6aaf21"},"downloads":-1,"filename":"mysmallutils-0.2.0.tar.gz","has_sig":false,"md5_digest":"f6877ac843cd38034b25aef7da4a5586","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":21904,"upload_time":"2021-09-03T09:58:43","upload_time_iso_8601":"2021-09-03T09:58:43.884436Z","url":"https://files.pythonhosted.org/packages/b8/5a/d5093e358da52a2647560af01f2a0ba37772e7718d968587b7eba646c179/mysmallutils-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.2.1":[{"comment_text":"","digests":{"blake2b_256":"c26e6c7695c370780d400790c8a4f80b07716a2c38e69713be362431eba63e33","md5":"1a5b3c8bb0c21a8e92cef305756d493f","sha256":"39335b84ed6dc6267cd76c518506a9fe8feb9bcf9b183f003da386738a26f451"},"downloads":-1,"filename":"mysmallutils-0.2.1.tar.gz","has_sig":false,"md5_digest":"1a5b3c8bb0c21a8e92cef305756d493f","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":22331,"upload_time":"2021-09-30T19:41:06","upload_time_iso_8601":"2021-09-30T19:41:06.142992Z","url":"https://files.pythonhosted.org/packages/c2/6e/6c7695c370780d400790c8a4f80b07716a2c38e69713be362431eba63e33/mysmallutils-0.2.1.tar.gz","yanked":false,"yanked_reason":null}],"0.2.10":[{"comment_text":"","digests":{"blake2b_256":"c05b28c5e013a77817560dbb895c4d424389ebf9ddb3f4b80592f0e6769287ce","md5":"2983ba206f9e7279199c237233a2b844","sha256":"84aa554732a3857a3e743ec1ab3a42939d3bf171a11f18c3b66fd39cef9220fe"},"downloads":-1,"filename":"mysmallutils-0.2.10.tar.gz","has_sig":false,"md5_digest":"2983ba206f9e7279199c237233a2b844","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":40372,"upload_time":"2021-11-08T10:17:04","upload_time_iso_8601":"2021-11-08T10:17:04.234907Z","url":"https://files.pythonhosted.org/packages/c0/5b/28c5e013a77817560dbb895c4d424389ebf9ddb3f4b80592f0e6769287ce/mysmallutils-0.2.10.tar.gz","yanked":false,"yanked_reason":null}],"0.2.2":[{"comment_text":"","digests":{"blake2b_256":"a8ca35f674690e4fd6ea6bc592ddee8da739319d23251e9d6bf9e22b99afbc2c","md5":"e00820b452bebe59103705227f277c84","sha256":"22acf1e2679cbaf0477bc4f841a94d4124c4c64122911e8c1577a8bc9d12aeec"},"downloads":-1,"filename":"mysmallutils-0.2.2.tar.gz","has_sig":false,"md5_digest":"e00820b452bebe59103705227f277c84","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":28578,"upload_time":"2021-10-06T17:15:43","upload_time_iso_8601":"2021-10-06T17:15:43.462661Z","url":"https://files.pythonhosted.org/packages/a8/ca/35f674690e4fd6ea6bc592ddee8da739319d23251e9d6bf9e22b99afbc2c/mysmallutils-0.2.2.tar.gz","yanked":false,"yanked_reason":null}],"0.2.3":[{"comment_text":"","digests":{"blake2b_256":"95d446fdbddb20f81595a850b75b373c27b6b705160f6519f783514bcb404da6","md5":"c083f67bbebd83cf4586fb954a4b2350","sha256":"c41347350b6511561fe38bf5f45b7d73dcb65163aa1606e68c9d7796103eb62d"},"downloads":-1,"filename":"mysmallutils-0.2.3.tar.gz","has_sig":false,"md5_digest":"c083f67bbebd83cf4586fb954a4b2350","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":29120,"upload_time":"2021-10-06T17:27:26","upload_time_iso_8601":"2021-10-06T17:27:26.967068Z","url":"https://files.pythonhosted.org/packages/95/d4/46fdbddb20f81595a850b75b373c27b6b705160f6519f783514bcb404da6/mysmallutils-0.2.3.tar.gz","yanked":false,"yanked_reason":null}],"0.2.4":[{"comment_text":"","digests":{"blake2b_256":"220b9dffdae048f533628e25c7c2775dba3cb20602b7ecc30479b03f3d5945c9","md5":"eb288e7abad8e82a5850c14f4ec25474","sha256":"cc7932b09e11394e7120c1eab4d911419eda117577f79494df0016c8c69d2b4e"},"downloads":-1,"filename":"mysmallutils-0.2.4.tar.gz","has_sig":false,"md5_digest":"eb288e7abad8e82a5850c14f4ec25474","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":29332,"upload_time":"2021-10-08T11:39:36","upload_time_iso_8601":"2021-10-08T11:39:36.836885Z","url":"https://files.pythonhosted.org/packages/22/0b/9dffdae048f533628e25c7c2775dba3cb20602b7ecc30479b03f3d5945c9/mysmallutils-0.2.4.tar.gz","yanked":false,"yanked_reason":null}],"0.2.5":[{"comment_text":"","digests":{"blake2b_256":"c23215182a938c988d1218be38a8135e5d20408da857a07cdbd05f247e21feb3","md5":"d0e71aaffd48c33a306489043521e738","sha256":"1bde400bbd8e8d3a35283b48d2c4988cd6aa9b5d3f1dc50e46bf5541b6d8fc4e"},"downloads":-1,"filename":"mysmallutils-0.2.5.tar.gz","has_sig":false,"md5_digest":"d0e71aaffd48c33a306489043521e738","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":30183,"upload_time":"2021-10-15T09:53:11","upload_time_iso_8601":"2021-10-15T09:53:11.909686Z","url":"https://files.pythonhosted.org/packages/c2/32/15182a938c988d1218be38a8135e5d20408da857a07cdbd05f247e21feb3/mysmallutils-0.2.5.tar.gz","yanked":false,"yanked_reason":null}],"0.2.6":[{"comment_text":"","digests":{"blake2b_256":"3f7b1dfef652e1ab1091c05e95862dbe1f9238e40cce203aed08a7f536e82533","md5":"916d49dc928f2137031cd3a8ef724a7b","sha256":"2fd36a18854910c33a72acfcf052117d7ab41234ab53ddb6fc66c0d93ac6ec03"},"downloads":-1,"filename":"mysmallutils-0.2.6.tar.gz","has_sig":false,"md5_digest":"916d49dc928f2137031cd3a8ef724a7b","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":30524,"upload_time":"2021-10-15T12:56:52","upload_time_iso_8601":"2021-10-15T12:56:52.659888Z","url":"https://files.pythonhosted.org/packages/3f/7b/1dfef652e1ab1091c05e95862dbe1f9238e40cce203aed08a7f536e82533/mysmallutils-0.2.6.tar.gz","yanked":false,"yanked_reason":null}],"0.2.7":[{"comment_text":"","digests":{"blake2b_256":"31d9ab47284fed5f784a59dae566cd2daa597b11cf9a24479534bf390c716c21","md5":"c92e59c8b91bb3fd528d2480b890019b","sha256":"8564f0fcdd081ef8dd3f28d034d7f022c75d0bdce356ac5019206489e9985fb4"},"downloads":-1,"filename":"mysmallutils-0.2.7.tar.gz","has_sig":false,"md5_digest":"c92e59c8b91bb3fd528d2480b890019b","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":36901,"upload_time":"2021-10-18T12:45:50","upload_time_iso_8601":"2021-10-18T12:45:50.253192Z","url":"https://files.pythonhosted.org/packages/31/d9/ab47284fed5f784a59dae566cd2daa597b11cf9a24479534bf390c716c21/mysmallutils-0.2.7.tar.gz","yanked":false,"yanked_reason":null}],"0.2.8":[{"comment_text":"","digests":{"blake2b_256":"87a767aa798004624bdbc68f9702ded05f2d616710d71e63e518eb5948ccf16d","md5":"db459eb799452f4a983da43aa85cecb1","sha256":"046303355396c90ecf31850509a2a2db9eb8629635f3c6ee4c9a948ec65220b1"},"downloads":-1,"filename":"mysmallutils-0.2.8.tar.gz","has_sig":false,"md5_digest":"db459eb799452f4a983da43aa85cecb1","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":40295,"upload_time":"2021-11-05T13:21:58","upload_time_iso_8601":"2021-11-05T13:21:58.313440Z","url":"https://files.pythonhosted.org/packages/87/a7/67aa798004624bdbc68f9702ded05f2d616710d71e63e518eb5948ccf16d/mysmallutils-0.2.8.tar.gz","yanked":false,"yanked_reason":null}],"0.2.9":[{"comment_text":"","digests":{"blake2b_256":"d10e1e6591d7f7059542c56c349ed7885b5c2c73f064906fdbb4dc0a88b064c6","md5":"19ad9545323e4eef65cdc480fdc45ce2","sha256":"6e077e2e43ccaac3999536add8d65eb896f35418902a64e2531a480fabe6b7e3"},"downloads":-1,"filename":"mysmallutils-0.2.9.tar.gz","has_sig":false,"md5_digest":"19ad9545323e4eef65cdc480fdc45ce2","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":40371,"upload_time":"2021-11-05T14:25:02","upload_time_iso_8601":"2021-11-05T14:25:02.448293Z","url":"https://files.pythonhosted.org/packages/d1/0e/1e6591d7f7059542c56c349ed7885b5c2c73f064906fdbb4dc0a88b064c6/mysmallutils-0.2.9.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"4bde2a2ab7107c5457626a7c173f42b78f02344b5e4024d93f3d8e84e7aa3eb2","md5":"4e248bb266f00c979b73cdac5e997dcf","sha256":"9218b620f9325482faccb1f51e4c690ead76bb7d89aa608323a34de2c1d2c4dc"},"downloads":-1,"filename":"mysmallutils-1.0.0.tar.gz","has_sig":false,"md5_digest":"4e248bb266f00c979b73cdac5e997dcf","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":43241,"upload_time":"2021-11-17T08:54:13","upload_time_iso_8601":"2021-11-17T08:54:13.229199Z","url":"https://files.pythonhosted.org/packages/4b/de/2a2ab7107c5457626a7c173f42b78f02344b5e4024d93f3d8e84e7aa3eb2/mysmallutils-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"9d8362b2fdf02294e218f23436438a34a6f91330669d1a7220670d98f57d8f86","md5":"6064cc9813fbee6dc6f21ffe08ce3dac","sha256":"d83972cba3c23a9669b86e4fecd406249ec8d3ee640b952c06544a9fabc82c9f"},"downloads":-1,"filename":"mysmallutils-1.0.1.tar.gz","has_sig":false,"md5_digest":"6064cc9813fbee6dc6f21ffe08ce3dac","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":43895,"upload_time":"2021-11-17T13:00:38","upload_time_iso_8601":"2021-11-17T13:00:38.510537Z","url":"https://files.pythonhosted.org/packages/9d/83/62b2fdf02294e218f23436438a34a6f91330669d1a7220670d98f57d8f86/mysmallutils-1.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.0.10":[{"comment_text":"","digests":{"blake2b_256":"73b6ae11c77b5559d02fe75aa2a10697ed844d0861053ab5d2587c656bc2035a","md5":"eb532e6514f7e404191061216962bdd4","sha256":"8def3aff4eccca13f39e7ba50f96c732a233f932dbb33d644ee5a040361afad6"},"downloads":-1,"filename":"mysmallutils-1.0.10.tar.gz","has_sig":false,"md5_digest":"eb532e6514f7e404191061216962bdd4","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":50891,"upload_time":"2022-02-07T12:12:52","upload_time_iso_8601":"2022-02-07T12:12:52.448845Z","url":"https://files.pythonhosted.org/packages/73/b6/ae11c77b5559d02fe75aa2a10697ed844d0861053ab5d2587c656bc2035a/mysmallutils-1.0.10.tar.gz","yanked":false,"yanked_reason":null}],"1.0.11":[{"comment_text":"","digests":{"blake2b_256":"ca9407d902c4122d8aa3ab7763f51b08201972cc4f54734246b0802fcc8ddba1","md5":"efe42ca25d772547da35b48dcf7079bb","sha256":"1d26421baed1fcb137a813db8c43e98199dcae65946053e490ab8bd24538356d"},"downloads":-1,"filename":"mysmallutils-1.0.11.tar.gz","has_sig":false,"md5_digest":"efe42ca25d772547da35b48dcf7079bb","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":51345,"upload_time":"2022-02-23T09:18:35","upload_time_iso_8601":"2022-02-23T09:18:35.314801Z","url":"https://files.pythonhosted.org/packages/ca/94/07d902c4122d8aa3ab7763f51b08201972cc4f54734246b0802fcc8ddba1/mysmallutils-1.0.11.tar.gz","yanked":false,"yanked_reason":null}],"1.0.12":[{"comment_text":"","digests":{"blake2b_256":"7b8daf04f094f41da7cff5141a01c6ae0c6ac55cbfde4a31e29bf47eebc5d315","md5":"652ef8fb46a1af582c18b6964b008bf9","sha256":"325119ad2bcd6dc971745b3e5aa58e9c10499b8ecf09d022d50eee1cdd22f3a9"},"downloads":-1,"filename":"mysmallutils-1.0.12.tar.gz","has_sig":false,"md5_digest":"652ef8fb46a1af582c18b6964b008bf9","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":52537,"upload_time":"2022-02-23T10:33:47","upload_time_iso_8601":"2022-02-23T10:33:47.785432Z","url":"https://files.pythonhosted.org/packages/7b/8d/af04f094f41da7cff5141a01c6ae0c6ac55cbfde4a31e29bf47eebc5d315/mysmallutils-1.0.12.tar.gz","yanked":false,"yanked_reason":null}],"1.0.13":[{"comment_text":"","digests":{"blake2b_256":"94884b3fc08aad2fbc9a9a709e3265602919828cff746f7a0f42a08d90d67437","md5":"38c9e8e0626fbddd8f28c380d8f90045","sha256":"f147203b9c8e3b0970e07c67b80143878c9638e2fd6f008b7491aab946dfb910"},"downloads":-1,"filename":"mysmallutils-1.0.13.tar.gz","has_sig":false,"md5_digest":"38c9e8e0626fbddd8f28c380d8f90045","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":52543,"upload_time":"2022-02-23T17:37:56","upload_time_iso_8601":"2022-02-23T17:37:56.038378Z","url":"https://files.pythonhosted.org/packages/94/88/4b3fc08aad2fbc9a9a709e3265602919828cff746f7a0f42a08d90d67437/mysmallutils-1.0.13.tar.gz","yanked":false,"yanked_reason":null}],"1.0.15":[{"comment_text":"","digests":{"blake2b_256":"14a3fd5d71c19617ce7ea480cb837dc118a7c43db503377787805736f26e9394","md5":"61d4fbcb4f775f35140d714b9b2947f2","sha256":"70baa79c6a971dde99da28ed7960d1639b03978cb3e220a0ee9b9f9a9535fb84"},"downloads":-1,"filename":"mysmallutils-1.0.15.tar.gz","has_sig":false,"md5_digest":"61d4fbcb4f775f35140d714b9b2947f2","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":52632,"upload_time":"2022-03-18T13:35:25","upload_time_iso_8601":"2022-03-18T13:35:25.421976Z","url":"https://files.pythonhosted.org/packages/14/a3/fd5d71c19617ce7ea480cb837dc118a7c43db503377787805736f26e9394/mysmallutils-1.0.15.tar.gz","yanked":false,"yanked_reason":null}],"1.0.16":[{"comment_text":"","digests":{"blake2b_256":"4216b67cfb22cf4202d4b4da7cae9a0d2c0889033ceead6a1a90be9495c92171","md5":"89468e5c2035ac65fe8133bea2a80f1e","sha256":"25f4d6a5ac11e97468bf6535479a6eeac7a4ff50178b91a691f1e010a1b09875"},"downloads":-1,"filename":"mysmallutils-1.0.16.tar.gz","has_sig":false,"md5_digest":"89468e5c2035ac65fe8133bea2a80f1e","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":53008,"upload_time":"2022-03-23T12:18:26","upload_time_iso_8601":"2022-03-23T12:18:26.639879Z","url":"https://files.pythonhosted.org/packages/42/16/b67cfb22cf4202d4b4da7cae9a0d2c0889033ceead6a1a90be9495c92171/mysmallutils-1.0.16.tar.gz","yanked":false,"yanked_reason":null}],"1.0.17":[{"comment_text":"","digests":{"blake2b_256":"0546de6096448c9f4fa43d7a6527f38f6e8e3c9a608738c7e438ee91b45a5428","md5":"7d4d6ce33d6925ad212df1e5e67e84c8","sha256":"5e8923af166a7ba333ea5a640454ad2c36c560e327be63ae0611dc0b4c968a11"},"downloads":-1,"filename":"mysmallutils-1.0.17.tar.gz","has_sig":false,"md5_digest":"7d4d6ce33d6925ad212df1e5e67e84c8","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":54549,"upload_time":"2022-04-06T16:08:01","upload_time_iso_8601":"2022-04-06T16:08:01.502303Z","url":"https://files.pythonhosted.org/packages/05/46/de6096448c9f4fa43d7a6527f38f6e8e3c9a608738c7e438ee91b45a5428/mysmallutils-1.0.17.tar.gz","yanked":false,"yanked_reason":null}],"1.0.18":[{"comment_text":"","digests":{"blake2b_256":"dec816325e1bb07c78ca48e042d3bfd75b69cfb4077c7af46458f32190c9edba","md5":"bbf95d675735af3b72065e9722da5456","sha256":"7b18a4b3b68d50100fdb3fc9a990e49dfb334c7a82148a49b83f3af8d9a4510c"},"downloads":-1,"filename":"mysmallutils-1.0.18.tar.gz","has_sig":false,"md5_digest":"bbf95d675735af3b72065e9722da5456","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":54756,"upload_time":"2022-05-23T17:24:43","upload_time_iso_8601":"2022-05-23T17:24:43.136505Z","url":"https://files.pythonhosted.org/packages/de/c8/16325e1bb07c78ca48e042d3bfd75b69cfb4077c7af46458f32190c9edba/mysmallutils-1.0.18.tar.gz","yanked":false,"yanked_reason":null}],"1.0.3":[{"comment_text":"","digests":{"blake2b_256":"1bdf788209203dab6bc43800e30b1ccb84acd668797a163001ef0a3fe2181520","md5":"0f23d5cb18dc5929944d8bac0f4b6e9f","sha256":"d559e03f7b2fe0da52fd73f398bb8f504eaf63a7c90ca85b70429aecd33ce375"},"downloads":-1,"filename":"mysmallutils-1.0.3.tar.gz","has_sig":false,"md5_digest":"0f23d5cb18dc5929944d8bac0f4b6e9f","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":45112,"upload_time":"2021-11-18T07:54:24","upload_time_iso_8601":"2021-11-18T07:54:24.091668Z","url":"https://files.pythonhosted.org/packages/1b/df/788209203dab6bc43800e30b1ccb84acd668797a163001ef0a3fe2181520/mysmallutils-1.0.3.tar.gz","yanked":false,"yanked_reason":null}],"1.0.4":[{"comment_text":"","digests":{"blake2b_256":"8ff3c72f9f97051863d90608636c8e3a284ef0d3e548690cd849ecb8b462ced6","md5":"e4aa911936119f53eba753bc84c61008","sha256":"79062ebdb380c832161d70aed4590d683b9d4b414abe0caf5e8875017ed9fd64"},"downloads":-1,"filename":"mysmallutils-1.0.4.tar.gz","has_sig":false,"md5_digest":"e4aa911936119f53eba753bc84c61008","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":45924,"upload_time":"2021-11-20T18:10:47","upload_time_iso_8601":"2021-11-20T18:10:47.375209Z","url":"https://files.pythonhosted.org/packages/8f/f3/c72f9f97051863d90608636c8e3a284ef0d3e548690cd849ecb8b462ced6/mysmallutils-1.0.4.tar.gz","yanked":false,"yanked_reason":null}],"1.0.5":[{"comment_text":"","digests":{"blake2b_256":"255e1abfc38ad2848930e4d7ac86c58738321af63215c5025cf12c9c6be50b39","md5":"66e622fdb98f4f03246a4a60822fa0a3","sha256":"7f4c38042964fd1e2f589bfbbdda2aa737e4ed41bae874b8b518fd7ec2e64c58"},"downloads":-1,"filename":"mysmallutils-1.0.5.tar.gz","has_sig":false,"md5_digest":"66e622fdb98f4f03246a4a60822fa0a3","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":46527,"upload_time":"2021-11-29T13:44:06","upload_time_iso_8601":"2021-11-29T13:44:06.851314Z","url":"https://files.pythonhosted.org/packages/25/5e/1abfc38ad2848930e4d7ac86c58738321af63215c5025cf12c9c6be50b39/mysmallutils-1.0.5.tar.gz","yanked":false,"yanked_reason":null}],"1.0.6":[{"comment_text":"","digests":{"blake2b_256":"88ade83c2ef2093707a0a4ac8c71b04a44259f73f7cf300ef1577837dacecc91","md5":"314ad1a67ecc6a6e4d95729edbfcd31e","sha256":"08b2b2dd4c2f897a1b07d93ccaa9d34c30a61158ce861c16432c063391ed5bf7"},"downloads":-1,"filename":"mysmallutils-1.0.6.tar.gz","has_sig":false,"md5_digest":"314ad1a67ecc6a6e4d95729edbfcd31e","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":47980,"upload_time":"2021-11-29T15:50:51","upload_time_iso_8601":"2021-11-29T15:50:51.610067Z","url":"https://files.pythonhosted.org/packages/88/ad/e83c2ef2093707a0a4ac8c71b04a44259f73f7cf300ef1577837dacecc91/mysmallutils-1.0.6.tar.gz","yanked":false,"yanked_reason":null}],"1.0.7":[{"comment_text":"","digests":{"blake2b_256":"75418374cf2214cd156b54bc651b8f722410bbf659137ee09a29abeed0b6eb53","md5":"f1f0e7e6cfec77e7c031ef2dc942823e","sha256":"c215deb572ae7bc2ce1e1df695989bf3d38fb90c899b24c7aa8896d90b600c6a"},"downloads":-1,"filename":"mysmallutils-1.0.7.tar.gz","has_sig":false,"md5_digest":"f1f0e7e6cfec77e7c031ef2dc942823e","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":49473,"upload_time":"2021-11-30T08:04:08","upload_time_iso_8601":"2021-11-30T08:04:08.599739Z","url":"https://files.pythonhosted.org/packages/75/41/8374cf2214cd156b54bc651b8f722410bbf659137ee09a29abeed0b6eb53/mysmallutils-1.0.7.tar.gz","yanked":false,"yanked_reason":null}],"1.0.8":[{"comment_text":"","digests":{"blake2b_256":"36700857fa12149e147327283fbdfdaf842ea674f1d7ff2425615f9bfd28c37a","md5":"c26daae9cece0bcfc831e28ae773d347","sha256":"ac426603db95b05f2e94b858cf772f2721bc22069b9f1cfbe32e5c69969b43f9"},"downloads":-1,"filename":"mysmallutils-1.0.8.tar.gz","has_sig":false,"md5_digest":"c26daae9cece0bcfc831e28ae773d347","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":50563,"upload_time":"2021-11-30T12:43:06","upload_time_iso_8601":"2021-11-30T12:43:06.989372Z","url":"https://files.pythonhosted.org/packages/36/70/0857fa12149e147327283fbdfdaf842ea674f1d7ff2425615f9bfd28c37a/mysmallutils-1.0.8.tar.gz","yanked":false,"yanked_reason":null}],"1.0.9":[{"comment_text":"","digests":{"blake2b_256":"4536cbe950ba3b0171681c1930adc0f1eb8d67438840795937daeb3464a73111","md5":"eeb4fb55a650e2e898e60e2bf5c63d94","sha256":"b8a7c8aa4b6d6d1ee58afea6093ddb6aade042710f1e1ca7cadf55ba8722c698"},"downloads":-1,"filename":"mysmallutils-1.0.9.tar.gz","has_sig":false,"md5_digest":"eeb4fb55a650e2e898e60e2bf5c63d94","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":50884,"upload_time":"2022-02-07T12:11:54","upload_time_iso_8601":"2022-02-07T12:11:54.392418Z","url":"https://files.pythonhosted.org/packages/45/36/cbe950ba3b0171681c1930adc0f1eb8d67438840795937daeb3464a73111/mysmallutils-1.0.9.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"f5d83afb7b99d0175c8e35762858b070945c56044f2770b7f08f8b3d13b9ad58","md5":"f81cb0edc29f9ac819f82e09b7cc4e17","sha256":"dc60b7d2ba9bac262129fce6f955d401a9da621d1599ec599e3036c9b335b417"},"downloads":-1,"filename":"mysmallutils-1.1.0.tar.gz","has_sig":false,"md5_digest":"f81cb0edc29f9ac819f82e09b7cc4e17","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":55676,"upload_time":"2022-05-24T14:35:26","upload_time_iso_8601":"2022-05-24T14:35:26.925701Z","url":"https://files.pythonhosted.org/packages/f5/d8/3afb7b99d0175c8e35762858b070945c56044f2770b7f08f8b3d13b9ad58/mysmallutils-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"6584864b662cc508f5c95d6e9d2cf155d1d0a75954b825dbf40b7022f63d3a73","md5":"34dae614456b54dd5bffb9587afcc2fb","sha256":"ef8b722fded66580ddd2b5e2724af997c09893b19c27e571d4578c20726e9f24"},"downloads":-1,"filename":"mysmallutils-1.1.1.tar.gz","has_sig":false,"md5_digest":"34dae614456b54dd5bffb9587afcc2fb","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":55678,"upload_time":"2022-05-24T20:06:34","upload_time_iso_8601":"2022-05-24T20:06:34.460326Z","url":"https://files.pythonhosted.org/packages/65/84/864b662cc508f5c95d6e9d2cf155d1d0a75954b825dbf40b7022f63d3a73/mysmallutils-1.1.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.2":[{"comment_text":"","digests":{"blake2b_256":"d7ee72ec4949f0640aa52fa76895f6b6e51201274fa33bef75b126bf09128e8a","md5":"15ee9573796ec771e73403b3a72b5115","sha256":"f54216ead11e2446d0d7d978b95ea5cb21a97fe0b492015b4b262843843cd304"},"downloads":-1,"filename":"mysmallutils-1.1.2.tar.gz","has_sig":false,"md5_digest":"15ee9573796ec771e73403b3a72b5115","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":55695,"upload_time":"2022-05-24T20:18:38","upload_time_iso_8601":"2022-05-24T20:18:38.884896Z","url":"https://files.pythonhosted.org/packages/d7/ee/72ec4949f0640aa52fa76895f6b6e51201274fa33bef75b126bf09128e8a/mysmallutils-1.1.2.tar.gz","yanked":false,"yanked_reason":null}],"1.1.3":[{"comment_text":"","digests":{"blake2b_256":"b752dee5f39ee65d029acce4609b3df1769cd199a531cea4b4c32a403eee89c6","md5":"35223ef0786434bc2f1131b559394965","sha256":"a75855d5dc7e6bc7b27ef82d21558076e9143f17ff80c2ce760d67bb43b3be27"},"downloads":-1,"filename":"mysmallutils-1.1.3.tar.gz","has_sig":false,"md5_digest":"35223ef0786434bc2f1131b559394965","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":56885,"upload_time":"2022-10-19T11:28:36","upload_time_iso_8601":"2022-10-19T11:28:36.222089Z","url":"https://files.pythonhosted.org/packages/b7/52/dee5f39ee65d029acce4609b3df1769cd199a531cea4b4c32a403eee89c6/mysmallutils-1.1.3.tar.gz","yanked":false,"yanked_reason":null}],"1.1.4":[{"comment_text":"","digests":{"blake2b_256":"cde3eacce9ab143c9dad3e9374efb8857cdbb4af7c03a1ce1ffa1c8b83ec022a","md5":"ed22ed290eba68b952723d37e87965f3","sha256":"dd92c8f7dd46706f569ec2c48d8c38885973aa07526be6d52960230ab1737d8a"},"downloads":-1,"filename":"mysmallutils-1.1.4.tar.gz","has_sig":false,"md5_digest":"ed22ed290eba68b952723d37e87965f3","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":56924,"upload_time":"2022-10-19T11:40:52","upload_time_iso_8601":"2022-10-19T11:40:52.297225Z","url":"https://files.pythonhosted.org/packages/cd/e3/eacce9ab143c9dad3e9374efb8857cdbb4af7c03a1ce1ffa1c8b83ec022a/mysmallutils-1.1.4.tar.gz","yanked":false,"yanked_reason":null}],"1.1.5":[{"comment_text":"","digests":{"blake2b_256":"401664c5797ad94142ebcd8158c1575f7a7c36e7f5de4cc20380ae730fc6952e","md5":"4ed6a8507709738b03e5ade0a20f93bc","sha256":"9fe4c3e3b616d0b14c7e67f18a6c6c611d872f222ad1e1826f4d6b19354c04ae"},"downloads":-1,"filename":"mysmallutils-1.1.5.tar.gz","has_sig":false,"md5_digest":"4ed6a8507709738b03e5ade0a20f93bc","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":56928,"upload_time":"2022-10-19T12:16:58","upload_time_iso_8601":"2022-10-19T12:16:58.551257Z","url":"https://files.pythonhosted.org/packages/40/16/64c5797ad94142ebcd8158c1575f7a7c36e7f5de4cc20380ae730fc6952e/mysmallutils-1.1.5.tar.gz","yanked":false,"yanked_reason":null}],"1.1.6":[{"comment_text":"","digests":{"blake2b_256":"b80a04b888709517f50e6a6f0f52b8b2c5fa56837efed9b5c5ec98da8a714e3e","md5":"72a6cc9f7758e06ce1f48d78a38511f1","sha256":"90520a6d57875100b97c13e08ec90dfcb88bb44d0639b1f017f7a490d690c496"},"downloads":-1,"filename":"mysmallutils-1.1.6.tar.gz","has_sig":false,"md5_digest":"72a6cc9f7758e06ce1f48d78a38511f1","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":56936,"upload_time":"2022-10-22T14:49:48","upload_time_iso_8601":"2022-10-22T14:49:48.774378Z","url":"https://files.pythonhosted.org/packages/b8/0a/04b888709517f50e6a6f0f52b8b2c5fa56837efed9b5c5ec98da8a714e3e/mysmallutils-1.1.6.tar.gz","yanked":false,"yanked_reason":null}],"1.1.7":[{"comment_text":"","digests":{"blake2b_256":"b4a90523f1a343c94b97d0d617d30420db213d390b5dfd0fd9660162e6c72582","md5":"c787448802819ada731c52cb2ca0c661","sha256":"35d88667b0c1e81dc5a22664179b9d0ca8890b595cceaf60c00e42fa94d42cc7"},"downloads":-1,"filename":"mysmallutils-1.1.7.tar.gz","has_sig":false,"md5_digest":"c787448802819ada731c52cb2ca0c661","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":57028,"upload_time":"2022-11-15T16:16:29","upload_time_iso_8601":"2022-11-15T16:16:29.001006Z","url":"https://files.pythonhosted.org/packages/b4/a9/0523f1a343c94b97d0d617d30420db213d390b5dfd0fd9660162e6c72582/mysmallutils-1.1.7.tar.gz","yanked":false,"yanked_reason":null}],"1.1.8":[{"comment_text":"","digests":{"blake2b_256":"69da8a71635b8aecaf8f2bf25f306434863c4c11815935ea0c95e90dce77c58c","md5":"5c1ace810257884e43c868cd9080ac22","sha256":"8c2d9e04ade0dda4d0c7259dbaf44dfc7bb97342e7a97c71230a2040664782d5"},"downloads":-1,"filename":"mysmallutils-1.1.8.tar.gz","has_sig":false,"md5_digest":"5c1ace810257884e43c868cd9080ac22","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":62441,"upload_time":"2022-12-05T09:07:36","upload_time_iso_8601":"2022-12-05T09:07:36.461608Z","url":"https://files.pythonhosted.org/packages/69/da/8a71635b8aecaf8f2bf25f306434863c4c11815935ea0c95e90dce77c58c/mysmallutils-1.1.8.tar.gz","yanked":false,"yanked_reason":null}],"1.1.9":[{"comment_text":"","digests":{"blake2b_256":"052ea83f87540887ca02f4a51fa72ad63db87683638ed7dd8befedcd426af409","md5":"64b1f58209a71b5f24d21c6c2adbf32d","sha256":"d8ee485d9748f58118fe449f0dee270bd529acfbdff0188b32c0fee916c779d7"},"downloads":-1,"filename":"mysmallutils-1.1.9.tar.gz","has_sig":false,"md5_digest":"64b1f58209a71b5f24d21c6c2adbf32d","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":63642,"upload_time":"2022-12-05T11:04:46","upload_time_iso_8601":"2022-12-05T11:04:46.671302Z","url":"https://files.pythonhosted.org/packages/05/2e/a83f87540887ca02f4a51fa72ad63db87683638ed7dd8befedcd426af409/mysmallutils-1.1.9.tar.gz","yanked":false,"yanked_reason":null}],"2.0.0":[{"comment_text":"","digests":{"blake2b_256":"540081570d8f148c28639b820aba45afd79066ecf789364573f3096893248e15","md5":"5131a2f2b2329b23bbf2c9e54f3fdad4","sha256":"4fa7e88ae7a79a030c9322b34ec5e4d664ec4bc29e9a75e5fdd0d4d6e849bb3e"},"downloads":-1,"filename":"mysmallutils-2.0.0-py3.11.egg","has_sig":false,"md5_digest":"5131a2f2b2329b23bbf2c9e54f3fdad4","packagetype":"bdist_egg","python_version":"2.0.0","requires_python":">=3.10,<4","size":97989,"upload_time":"2023-02-13T13:57:22","upload_time_iso_8601":"2023-02-13T13:57:22.797382Z","url":"https://files.pythonhosted.org/packages/54/00/81570d8f148c28639b820aba45afd79066ecf789364573f3096893248e15/mysmallutils-2.0.0-py3.11.egg","yanked":false,"yanked_reason":null}],"2.0.1":[{"comment_text":"","digests":{"blake2b_256":"4ba62dc7cd315cc2f6ddd4150ce2ac8e006b1adb06f64ffb3019a39cd89fd32c","md5":"85920058154935769d8e48bf98e9dbfd","sha256":"664e55184231f5247687fa71e59b17d344a0644c5adcfe4515283af7f97b5220"},"downloads":-1,"filename":"mysmallutils-2.0.1-py3.11.egg","has_sig":false,"md5_digest":"85920058154935769d8e48bf98e9dbfd","packagetype":"bdist_egg","python_version":"2.0.1","requires_python":">=3.10,<4","size":98374,"upload_time":"2023-02-13T15:07:19","upload_time_iso_8601":"2023-02-13T15:07:19.819501Z","url":"https://files.pythonhosted.org/packages/4b/a6/2dc7cd315cc2f6ddd4150ce2ac8e006b1adb06f64ffb3019a39cd89fd32c/mysmallutils-2.0.1-py3.11.egg","yanked":false,"yanked_reason":null}],"2.0.10":[{"comment_text":"","digests":{"blake2b_256":"66534b1210b10aac7b20264318e63f8a46f844efe58cb4e1f6c22d777c99c347","md5":"7228b1579efb9af34e8df144f7d0acf4","sha256":"c039f26c3d9924baea22dc1e73f09875ebd46cf178911ca0d6f8db9c16a9fbd3"},"downloads":-1,"filename":"mysmallutils-2.0.10.tar.gz","has_sig":false,"md5_digest":"7228b1579efb9af34e8df144f7d0acf4","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4","size":65318,"upload_time":"2023-07-11T15:09:41","upload_time_iso_8601":"2023-07-11T15:09:41.187202Z","url":"https://files.pythonhosted.org/packages/66/53/4b1210b10aac7b20264318e63f8a46f844efe58cb4e1f6c22d777c99c347/mysmallutils-2.0.10.tar.gz","yanked":false,"yanked_reason":null}],"2.0.12":[{"comment_text":"","digests":{"blake2b_256":"605fe07459311e4a01eb52d0300bd42e2eaa08393b56af978264c1448cb33c0e","md5":"684b884b4f5c77b04fba8ebc4e40d91b","sha256":"bcedab15861240439fc326e94ec505404baf2f8f77ff0e91159ef30d8a5117ae"},"downloads":-1,"filename":"mysmallutils-2.0.12.tar.gz","has_sig":false,"md5_digest":"684b884b4f5c77b04fba8ebc4e40d91b","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4","size":65433,"upload_time":"2023-07-12T13:56:49","upload_time_iso_8601":"2023-07-12T13:56:49.535599Z","url":"https://files.pythonhosted.org/packages/60/5f/e07459311e4a01eb52d0300bd42e2eaa08393b56af978264c1448cb33c0e/mysmallutils-2.0.12.tar.gz","yanked":false,"yanked_reason":null}],"2.0.13":[{"comment_text":"","digests":{"blake2b_256":"494034c7963b948bc1c8702f81d2cbf4127a059c5f8f728c4be63bbb63f92469","md5":"e7d17f2af87c2711de342e632affd7cf","sha256":"4860ad613c31b088f3f8614757ef3442e3979ed9c8366b38e1f47785b50ed4ba"},"downloads":-1,"filename":"mysmallutils-2.0.13.tar.gz","has_sig":false,"md5_digest":"e7d17f2af87c2711de342e632affd7cf","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4","size":65607,"upload_time":"2023-11-17T12:07:15","upload_time_iso_8601":"2023-11-17T12:07:15.042724Z","url":"https://files.pythonhosted.org/packages/49/40/34c7963b948bc1c8702f81d2cbf4127a059c5f8f728c4be63bbb63f92469/mysmallutils-2.0.13.tar.gz","yanked":false,"yanked_reason":null}],"2.0.14":[{"comment_text":"","digests":{"blake2b_256":"e769e79055d9ad1bc4dbdee5e1f3b5a8f9df098a0e745de71378d93fcebbd855","md5":"5b962a5485bcef564cad8c065f7fee5e","sha256":"054d7400259d1fd1d00bb22400befa6c73726c8cd1bb80b6ba2fe8e563a74ce3"},"downloads":-1,"filename":"mysmallutils-2.0.14.tar.gz","has_sig":false,"md5_digest":"5b962a5485bcef564cad8c065f7fee5e","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4","size":66062,"upload_time":"2024-01-25T15:14:49","upload_time_iso_8601":"2024-01-25T15:14:49.364501Z","url":"https://files.pythonhosted.org/packages/e7/69/e79055d9ad1bc4dbdee5e1f3b5a8f9df098a0e745de71378d93fcebbd855/mysmallutils-2.0.14.tar.gz","yanked":false,"yanked_reason":null}],"2.0.15":[{"comment_text":"","digests":{"blake2b_256":"88e51572b29c140b8eb3e135d56baff0258b78520e6ecedb94e5a81cdde3c3e8","md5":"ccfc2354a7c15a0f516d1aa90c2bdb79","sha256":"aec5f62db83bd879fc0d71885f9bf98e3c4a0dcea0cd0b9bfa984138632c5136"},"downloads":-1,"filename":"mysmallutils-2.0.15.tar.gz","has_sig":false,"md5_digest":"ccfc2354a7c15a0f516d1aa90c2bdb79","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4","size":67337,"upload_time":"2024-02-16T10:29:29","upload_time_iso_8601":"2024-02-16T10:29:29.441981Z","url":"https://files.pythonhosted.org/packages/88/e5/1572b29c140b8eb3e135d56baff0258b78520e6ecedb94e5a81cdde3c3e8/mysmallutils-2.0.15.tar.gz","yanked":false,"yanked_reason":null}],"2.0.16":[{"comment_text":"","digests":{"blake2b_256":"efc10231e2119cc5be508d9313a0cbf93cc62c4805f12411b63c0a76fc3a1829","md5":"cba080a08e4475658ff64dfda78060fb","sha256":"2cf70c5e8a4c894c85befb26692591f19027dca8d10d6c69a01df769d9cf396a"},"downloads":-1,"filename":"mysmallutils-2.0.16.tar.gz","has_sig":false,"md5_digest":"cba080a08e4475658ff64dfda78060fb","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4","size":67774,"upload_time":"2024-02-19T16:20:46","upload_time_iso_8601":"2024-02-19T16:20:46.803823Z","url":"https://files.pythonhosted.org/packages/ef/c1/0231e2119cc5be508d9313a0cbf93cc62c4805f12411b63c0a76fc3a1829/mysmallutils-2.0.16.tar.gz","yanked":false,"yanked_reason":null}],"2.0.17":[{"comment_text":"","digests":{"blake2b_256":"dea126c1a55ab0a5bfddabee304fa08803dfa3a1e6acb65089a9f350c911dc8a","md5":"59f4cc85552ef1dcb8ae58b8f953346e","sha256":"3e97fc6eee66c0f096f1580ee1e91463390b8c7c9cc4204e9b9a29dfbdc39e3d"},"downloads":-1,"filename":"mysmallutils-2.0.17.tar.gz","has_sig":false,"md5_digest":"59f4cc85552ef1dcb8ae58b8f953346e","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4","size":67772,"upload_time":"2024-03-01T08:12:04","upload_time_iso_8601":"2024-03-01T08:12:04.582763Z","url":"https://files.pythonhosted.org/packages/de/a1/26c1a55ab0a5bfddabee304fa08803dfa3a1e6acb65089a9f350c911dc8a/mysmallutils-2.0.17.tar.gz","yanked":false,"yanked_reason":null}],"2.0.18":[{"comment_text":"","digests":{"blake2b_256":"dcf01ebe5805a1bc2f04334fa2dbad5c80fe9537620da20b462e9fc6dafa74d8","md5":"cdff9ed82f5cfe064371578efa2a3e40","sha256":"ae0922251a2eb25a39e66fabcfe9c11f90c045422e5c09ce4f89871e867930d4"},"downloads":-1,"filename":"mysmallutils-2.0.18.tar.gz","has_sig":false,"md5_digest":"cdff9ed82f5cfe064371578efa2a3e40","packagetype":"sdist","python_version":"source","requires_python":"<4,>=3.7","size":68364,"upload_time":"2024-05-13T08:46:58","upload_time_iso_8601":"2024-05-13T08:46:58.835209Z","url":"https://files.pythonhosted.org/packages/dc/f0/1ebe5805a1bc2f04334fa2dbad5c80fe9537620da20b462e9fc6dafa74d8/mysmallutils-2.0.18.tar.gz","yanked":false,"yanked_reason":null}],"2.0.19":[{"comment_text":"","digests":{"blake2b_256":"d152ee3ea6961a37488cd61e2736b4083531f818ffffde83438a58497c67af68","md5":"1ff3d64c863b33a93795513438779c9f","sha256":"e9318e5a758119d1f1d5796c026c26e70db7f462216b243961a63a391239e6fd"},"downloads":-1,"filename":"mysmallutils-2.0.19.tar.gz","has_sig":false,"md5_digest":"1ff3d64c863b33a93795513438779c9f","packagetype":"sdist","python_version":"source","requires_python":"<4,>=3.7","size":69539,"upload_time":"2024-05-22T12:09:57","upload_time_iso_8601":"2024-05-22T12:09:57.436470Z","url":"https://files.pythonhosted.org/packages/d1/52/ee3ea6961a37488cd61e2736b4083531f818ffffde83438a58497c67af68/mysmallutils-2.0.19.tar.gz","yanked":false,"yanked_reason":null}],"2.0.2":[{"comment_text":"","digests":{"blake2b_256":"1b06fccd967e4776dfb25c5281c531d2fd2704fdecc2560a92bd0211edbc2351","md5":"e3125d373bb5b54195becb55a2b17a8f","sha256":"fa4fd82bc1c4ec4a91f6f27cd33e67cb18a417f98a136a8f29f4da4f6a2a4975"},"downloads":-1,"filename":"mysmallutils-2.0.2.tar.gz","has_sig":false,"md5_digest":"e3125d373bb5b54195becb55a2b17a8f","packagetype":"sdist","python_version":"source","requires_python":">=3.10,<4","size":62711,"upload_time":"2023-02-14T12:11:47","upload_time_iso_8601":"2023-02-14T12:11:47.093034Z","url":"https://files.pythonhosted.org/packages/1b/06/fccd967e4776dfb25c5281c531d2fd2704fdecc2560a92bd0211edbc2351/mysmallutils-2.0.2.tar.gz","yanked":false,"yanked_reason":null}],"2.0.20":[{"comment_text":"","digests":{"blake2b_256":"f952500179017d8cc9983d3797306fcbf3b439f7290952945364de286d504a5b","md5":"9d0509a6ec008f640476ae17b84cbc9a","sha256":"cba0ab4d2bf3da62644b885e0aabffa0ce21edba284f34cf8a3a3bb2ec0da1a4"},"downloads":-1,"filename":"mysmallutils-2.0.20.tar.gz","has_sig":false,"md5_digest":"9d0509a6ec008f640476ae17b84cbc9a","packagetype":"sdist","python_version":"source","requires_python":"<4,>=3.7","size":69745,"upload_time":"2024-05-22T12:20:41","upload_time_iso_8601":"2024-05-22T12:20:41.197317Z","url":"https://files.pythonhosted.org/packages/f9/52/500179017d8cc9983d3797306fcbf3b439f7290952945364de286d504a5b/mysmallutils-2.0.20.tar.gz","yanked":false,"yanked_reason":null}],"2.0.3":[{"comment_text":"","digests":{"blake2b_256":"f9e627eeb416c4aa2ea5b793da10c116c98dd7d0e92659f08b33fa75dc690919","md5":"71cdfb0401aefc12b301bed4807df1bc","sha256":"8756764e4df07d5863787e3cb0688a68d081ea6e62b2f298b5df067e02804eb6"},"downloads":-1,"filename":"mysmallutils-2.0.3.tar.gz","has_sig":false,"md5_digest":"71cdfb0401aefc12b301bed4807df1bc","packagetype":"sdist","python_version":"source","requires_python":">=3.10,<4","size":62837,"upload_time":"2023-05-23T11:15:10","upload_time_iso_8601":"2023-05-23T11:15:10.351496Z","url":"https://files.pythonhosted.org/packages/f9/e6/27eeb416c4aa2ea5b793da10c116c98dd7d0e92659f08b33fa75dc690919/mysmallutils-2.0.3.tar.gz","yanked":false,"yanked_reason":null}],"2.0.4":[{"comment_text":"","digests":{"blake2b_256":"4a0b0d79e5d9fd4ce871fee8fadd1b7bbe3e8b132b73526eed700ffa94b0c044","md5":"3dd04c0a83f1c42f4d4bedfbf23c0009","sha256":"f28a57fb2b84afcdf3d5339ecfcc65c9d445bd96f714a45d66bf960ba8a716aa"},"downloads":-1,"filename":"mysmallutils-2.0.4.tar.gz","has_sig":false,"md5_digest":"3dd04c0a83f1c42f4d4bedfbf23c0009","packagetype":"sdist","python_version":"source","requires_python":">=3.10,<4","size":63554,"upload_time":"2023-05-23T11:37:21","upload_time_iso_8601":"2023-05-23T11:37:21.083277Z","url":"https://files.pythonhosted.org/packages/4a/0b/0d79e5d9fd4ce871fee8fadd1b7bbe3e8b132b73526eed700ffa94b0c044/mysmallutils-2.0.4.tar.gz","yanked":false,"yanked_reason":null}],"2.0.5":[{"comment_text":"","digests":{"blake2b_256":"e7219afbd802827da0528cf13eabb5a3064daea6989557201053c682569f37c2","md5":"3b26722ecf6d001dd9eeaa17dd73fb71","sha256":"0a43450a52c5cc23f19eb107df0db64fd71f6943f5cbe587c4a17e27e55423e9"},"downloads":-1,"filename":"mysmallutils-2.0.5.tar.gz","has_sig":false,"md5_digest":"3b26722ecf6d001dd9eeaa17dd73fb71","packagetype":"sdist","python_version":"source","requires_python":">=3.10,<4","size":64010,"upload_time":"2023-05-24T12:30:30","upload_time_iso_8601":"2023-05-24T12:30:30.821155Z","url":"https://files.pythonhosted.org/packages/e7/21/9afbd802827da0528cf13eabb5a3064daea6989557201053c682569f37c2/mysmallutils-2.0.5.tar.gz","yanked":false,"yanked_reason":null}],"2.0.6":[{"comment_text":"","digests":{"blake2b_256":"bbf8daf03a31a8044aad618bc9da5efb1a1c2c0ae3cb2ea058f10c1e6c12d1a9","md5":"a3ac2919f10052b3dc995d368c60fdc8","sha256":"3ca82b7a6454cf505e88c94db6b2a7a4cd5255b48448bc8484d8f5a927a4037c"},"downloads":-1,"filename":"mysmallutils-2.0.6.tar.gz","has_sig":false,"md5_digest":"a3ac2919f10052b3dc995d368c60fdc8","packagetype":"sdist","python_version":"source","requires_python":">=3.10,<4","size":64201,"upload_time":"2023-05-24T14:00:32","upload_time_iso_8601":"2023-05-24T14:00:32.057404Z","url":"https://files.pythonhosted.org/packages/bb/f8/daf03a31a8044aad618bc9da5efb1a1c2c0ae3cb2ea058f10c1e6c12d1a9/mysmallutils-2.0.6.tar.gz","yanked":false,"yanked_reason":null}],"2.0.7":[{"comment_text":"","digests":{"blake2b_256":"c446976a3c4507cc24b4d8ed93445841cb6489b064d7c409b51a49343b0fa8ba","md5":"55dee01a34271f131e427493c06afa51","sha256":"f346e30acf68476bc2fa8a341b9594d04f8f8b23528bc082678cfb5554430098"},"downloads":-1,"filename":"mysmallutils-2.0.7.tar.gz","has_sig":false,"md5_digest":"55dee01a34271f131e427493c06afa51","packagetype":"sdist","python_version":"source","requires_python":">=3.10,<4","size":64854,"upload_time":"2023-06-03T12:55:43","upload_time_iso_8601":"2023-06-03T12:55:43.416599Z","url":"https://files.pythonhosted.org/packages/c4/46/976a3c4507cc24b4d8ed93445841cb6489b064d7c409b51a49343b0fa8ba/mysmallutils-2.0.7.tar.gz","yanked":false,"yanked_reason":null}],"2.0.8":[{"comment_text":"","digests":{"blake2b_256":"48b18a46ca1fa06c719ed68b08250f8905709af83fd450a370701fe8393ac88d","md5":"5417dc69d9ffc0473f3f1d96683d15ed","sha256":"dac46b62f329001e3abece4a68b5ff7ffdc5655e82c93ff4ff12dbdc858e920d"},"downloads":-1,"filename":"mysmallutils-2.0.8.tar.gz","has_sig":false,"md5_digest":"5417dc69d9ffc0473f3f1d96683d15ed","packagetype":"sdist","python_version":"source","requires_python":">=3.10,<4","size":65401,"upload_time":"2023-06-08T14:20:33","upload_time_iso_8601":"2023-06-08T14:20:33.771721Z","url":"https://files.pythonhosted.org/packages/48/b1/8a46ca1fa06c719ed68b08250f8905709af83fd450a370701fe8393ac88d/mysmallutils-2.0.8.tar.gz","yanked":false,"yanked_reason":null}],"2.0.9":[{"comment_text":"","digests":{"blake2b_256":"c17b9cb02517d3c26da15f250b0dad05380f9167b5e911b9dec6c2bc0a506a24","md5":"21a3d1c9832137165efce38a4594c740","sha256":"1e42ddf620f0be348560fdd7485a028b65cf4f2e4c20a397c75ead647d395379"},"downloads":-1,"filename":"mysmallutils-2.0.9.tar.gz","has_sig":false,"md5_digest":"21a3d1c9832137165efce38a4594c740","packagetype":"sdist","python_version":"source","requires_python":">=3.10,<4","size":65344,"upload_time":"2023-06-28T12:15:47","upload_time_iso_8601":"2023-06-28T12:15:47.237629Z","url":"https://files.pythonhosted.org/packages/c1/7b/9cb02517d3c26da15f250b0dad05380f9167b5e911b9dec6c2bc0a506a24/mysmallutils-2.0.9.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"f952500179017d8cc9983d3797306fcbf3b439f7290952945364de286d504a5b","md5":"9d0509a6ec008f640476ae17b84cbc9a","sha256":"cba0ab4d2bf3da62644b885e0aabffa0ce21edba284f34cf8a3a3bb2ec0da1a4"},"downloads":-1,"filename":"mysmallutils-2.0.20.tar.gz","has_sig":false,"md5_digest":"9d0509a6ec008f640476ae17b84cbc9a","packagetype":"sdist","python_version":"source","requires_python":"<4,>=3.7","size":69745,"upload_time":"2024-05-22T12:20:41","upload_time_iso_8601":"2024-05-22T12:20:41.197317Z","url":"https://files.pythonhosted.org/packages/f9/52/500179017d8cc9983d3797306fcbf3b439f7290952945364de286d504a5b/mysmallutils-2.0.20.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
