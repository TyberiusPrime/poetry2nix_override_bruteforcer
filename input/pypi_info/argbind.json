{"info":{"author":"Prem Seetharaman","author_email":"prem@descript.com","bugtrack_url":null,"classifiers":["Development Status :: 3 - Alpha","License :: OSI Approved :: MIT License","Operating System :: MacOS","Operating System :: Microsoft :: Windows","Operating System :: POSIX :: Linux","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8"],"description":"# ArgBind\n\n**Build CLIs via docstrings and type annotations, with YAML support.**\n\n![Build](https://github.com/pseeth/argbind/workflows/Build/badge.svg) \n[![PyPI version](https://badge.fury.io/py/argbind.svg)](https://badge.fury.io/py/argbind)\n[![codecov](https://codecov.io/gh/pseeth/argbind/branch/main/graph/badge.svg?token=BWI0FHZI5H)](undefined)\n![Lines of code](https://img.shields.io/tokei/lines/github/pseeth/argbind)\n[![Downloads](https://pepy.tech/badge/argbind)](https://pepy.tech/project/argbind)\n\n*ArgBind is a simple way to bind function or class arguments to the command line or to .yml files!* \nIt supports scoping of arguments, similar to other frameworks like \n[Hydra](https://github.com/facebookresearch/hydra) and\n[gin-config](https://github.com/google/gin-config).\nArgBind is *very* small (only ~400 lines of code, in one file), can be used to make complex and well-documented command line programs, and allows \nyou to configure program execution from .yml files.\n\nIf you're migrating from an ArgParse script to an ArgBind script, check out the\n[migration guide](./examples/migration). Scroll down to see some [examples](#examples). Please also look at the \ncurrent known [limitations](#limitations-and-known-issues) of ArgBind.\n\n## Why ArgBind?\n\nI built ArgBind mostly to help me configure my machine learning experiments. ML experiment\nconfiguration is often highly nested, and can get out of hand quick. I didn't want to switch\nmy workflow around too much to accommodate a new framework. Instead, I wanted the scripts\nthat I've written to be easily adapted so that I could achieve a few goals:\n\n1. Configure scripts using `.yml` files. Be able to save `.yml` files that can be used to rerun scripts the exact same way twice.\n2. Spend time writing actual functions needed to run experiments, not argument parsers.\n3. Be able to run my experiment code from other Python scripts, notebooks, or the command line.\n4. Be able to specify arguments from the command line directly to various functions.\n5. Be able to use scoping patterns, so I can run a function inside of a `train` scope and `test` scope, with different results (e.g. for getting a train dataset and a test dataset).\n\nNothing out there really fit the bill, so I wrote ArgBind. If you have \nan `argparse` based script, converting it to ArgBind should be very quick! ArgBind is simple, \nsmall, and easy to use. To get a feel for how it works, check out [usage](#usage), [design](#design), and [examples](#examples)!\n\n## Installation\n\nInstall via `pip`:\n\n```\npython -m pip install argbind\n```\n\nOr from source:\n\n```\ngit clone https://github.com/pseeth/argbind.git\ncd argbind\npython -m pip install -e .\n```\n\n## Examples\n\n- [Example 1: Hello World](./examples/hello_world/)\n- [Example 2: Scope patterns](./examples/scoping/)\n- [Example 3: Typing](./examples/typing/)\n- [Example 4: MNIST Script](./examples/mnist/)\n- [Example 5: Loading, saving, and using .yml files](./examples/yaml)\n- [Example 6: Multi-stage programs](./examples/multistage)\n- [Example 7: Mimic more traditional CLI, without `func.arg` notation](./examples/without_prefix)\n- [Example 8: Debug mode](./examples/debug)\n- [Example 9: Migrating from ArgParse](./examples/migration)\n- [Example 10: Binding existing functions and classes](./examples/bind_existing)\n- [Example 11: Binding entire modules](./examples/bind_module)\n- [Example 12: Binding functions to specific groups](./examples/groups)\n\n## Usage\n\nThere are six main functions.\n\n- `bind`: Binds keyword arguments (and positional arguments if `positional=True`) of a function or class to ArgBind.\n- `parse_args`: Actually parses command line arguments into a dictionary.\n- `scope`: Context manager that scopes a dictionary containing function arguments to be used by the functions.\n- `dump_args`: Dumps the args dictionary to a `.yml` file. Used internally when program is called with `--args.save path/to/save.yml`.\n- `load_args`: Loads args from a `.yml` file. Used internally when program is called with `--args.load path/to/load.yml`.\n- `get_used_args`: Gets arguments that have actually been used by call functions up to this point.\n\nYour code with ArgBind generally follows this pattern:\n\n1. Write a function with a good docstring, and typed arguments. If arguments are not typed, their type will be inferred from the type of the default.\n2. Bind it via `bind`.\n3. When program is called, parse the arguments via `parse_args`.\n4. Scope the arguments, and call the bound function within the context block.\n5. Optionally call program with `--args.save` to save the current execution configuration to a `.yml` file or `--args.load` to load arguments from a prior saved execution configuration to run it the same way twice.\n6. Optionally, run your script with `--args.debug=1` to see exactly how every bound function is called.\n\nIn your program, you can call `get_used_args` to inspect the state of the argument dictionary. Here's a minimal example:\n\n```python\nimport argbind\n\n@argbind.bind()\ndef hello(\n    name : str = 'world'\n):\n    \"\"\"Say hello to someone.\n\n    Parameters\n    ----------\n    name : str, optional\n        Who you're saying hello to, by default 'world'\n    \"\"\"\n    print(\"Hello \" + name)\n\nif __name__ == \"__main__\":\n    # Arguments for CLI automatically generated from bound functions under the pattern\n    # function_name.function_arg.\n    args = argbind.parse_args()\n    # When called within a scope, the keyword arguments map to those from CLI or \n    # from defaults.\n    with argbind.scope(args):\n        hello()\n```\n\nHelp text is automatically generated from the docstring:\n\n```\n❯ python examples/hello_world/with_argbind.py -h\nusage: with_argbind.py [-h] [--args.save ARGS.SAVE] [--args.load ARGS.LOAD] [--args.debug ARGS.DEBUG] [--hello.name HELLO.NAME]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --args.save ARGS.SAVE\n                        Path to save all arguments used to run script to.\n  --args.load ARGS.LOAD\n                        Path to load arguments from, stored as a .yml file.\n  --args.debug ARGS.DEBUG\n                        Print arguments as they are passed to each function.\n\nGenerated arguments for function hello:\n  Say hello to someone.\n\n  --hello.name HELLO.NAME\n                        Who you're saying hello to, by default 'world'\n```\n\nExecution of this could look like:\n\n```\n# Default arguments\n❯ python examples/hello_world/with_argbind.py\nHello world\n# Binding name from the command line and saving the args.\n❯ python examples/hello_world/with_argbind.py --hello.name=you --args.save=/tmp/args.yml\nHello you\n# Loading saved arguments.\n❯ python examples/hello_world/with_argbind.py --args.load=/tmp/args.yml\nHello you\n# Loading saved arguments, and overriding via command line.\n❯ python examples/hello_world/with_argbind.py --args.load=/tmp/args.yml --hello.name=me\nHello me\n# See how each function is called with args.debug=1.\n❯ python examples/hello_world/with_argbind.py --args.load=/tmp/args.yml --args.debug=1\nhello(\n  name : str = you\n)\nHello you\n```\n\nYou can also run the `hello` function from another Python script or a Jupyter notebook:\n\n```python\nimport argbind\n# Import the bound function\nfrom .hello_world import hello \n# Load the args\nargs = argbind.load_args('/tmp/args.yml')\n# Scope the args\nwith argbind.scope(args):\n    # Run the bound function\n    hello() # Prints 'Hello you'.\nhello() # Prints 'Hello world', as it's outside scope.\n# Can edit the args before scoping again.\nargs['hello.name'] = 'me'\nwith argbind.scope(args):\n    hello() # Prints 'Hello me'.\n```\n\nYou'll notice that ArgBind forces you to document and type your \nfunction arguments, which is always a good idea! \nPlease check out the [examples](#examples) for more details!\n\n\n## Design\n\nArgBind is designed around a decorator that can be used on\nfunctions the user wants to expose to command line or to a .yml file.\nThe arguments to that function are \nthen bound to a dictionary. When the function is called, \neach argument is looked up in the dictionary and its\nvalue is replaced with the corresponding value in the dictionary. The\ndictionary that the function looks for values in is controlled by\n`scope`:\n\n```python\nimport argbind \n\n@argbind.bind()\ndef func(arg : str = 'default'):\n    print(arg)\n\ndict1 = {\n    'func.arg': 1,\n}\ndict2 = {\n    'func.arg': 2\n}\n\nwith argbind.scope(dict1):\n    func() # prints 1\nwith argbind.scope(dict2):\n    func() # prints 2\nfunc(arg=3) # prints 3.\n```\n\nThe function arguments are bound to the command line. Continuing the \nsimple program from above:\n\n```python\nif __name__ == \"__main__\":\n    args = argbind.parse_args()\n    with argbind.scope(args):\n        func()\n    with argbind.scope(args):\n        func(arg=3)\n```\n\nYou can call this function like so:\n\n```bash\n❯ python examples/readme_example.py --func.arg 5\n1 # Looks up `arg` in dict1\n2 # Looks up `arg` in dict2\n3 # arg is passed in on python call `func(arg=3)`\n5 # Looks up `arg` from command line call `--func.arg 5`\n3 # arg is passed in from two places: `func(arg=3)` and `--func.arg 5`. Former overrides the latter.\n```\n\nThe logic here is that arguments that are bound that are closer to the actual function call get priority. From highest priority, to lowest, it goes:\n\n1. Bound explicitly in Python code\n2. Bound via command line\n3. Bound via .yml file\n4. Bound via default for kwarg\n\nYou can also use `bind` directly on classes - see [here](./examples/bind_existing).\n\n# Limitations and known issues\n\nThere are some limitations to ArgBind, some due to how Python function decorator works,\nand others out of a desire to keep ArgBind's code simple and straightforward.\n\n## Boolean keyword arguments\n\nIf a boolean is flipped to True in a `.yml` file, there's no\nway to override it from the command line. If you want a flag to\nbe flippable, make the argument an int instead of a bool and use\n0 and 1 for True and False. Then you can override from command\nline like `--func.arg 0` or `--func.arg 1`.\n\n## Bound function names should be unique\n\nFunctions that are bound must be unique, even if they are in different files. The \nfunction name is resolved in the argument parser only using the immediate name, not\na path to the function etc. \n\n## Supported docstring formats\n\nArgBind uses [docstring-parser](https://github.com/rr-/docstring_parser), and so\nthe only supported styles are: ReST, Google, and Numpydoc-style docstrings.\n\n## Not all types are supported\n\nArgBind supports most types that might pop up in your script, but not all. The supported types can be seen in the [typing example](./examples/typing/).\n\n## Positional arguments should not be saved into .yml files\n\nIf the a positional argument is saved into a .yml file, and loaded\nvia `--args.load`, then any positional argument passed in the\ncommand line will be overridden. Take care not to pass in \npositional arguments via `.yml` files.\n\n# Releasing\n\nDo the following steps:\n\n```\npython setup.py sdist\n```\n\nUpload it to test PyPI:\n\n```\npip install twine\ntwine upload --repository testpypi dist/*\npip install -U --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple -U argbind\n```\n\nMake sure you can install it and it works (e.g. run the examples). Now upload\nto actual PyPI:\n\n```\ntwine upload dist/*\n```\n\n# Issues? Questions?\n\nIf you've run into some issues with ArgBind, or have some questions, please ask \nvia Github Issues. Projects like ArgBind are pretty tricky to get right, so there\nmay be some edge cases that have been missed.\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pseeth/argbind/","keywords":"command-line configuration yaml argument parsing","license":null,"maintainer":null,"maintainer_email":null,"name":"argbind","package_url":"https://pypi.org/project/argbind/","platform":null,"project_url":"https://pypi.org/project/argbind/","project_urls":{"Homepage":"https://github.com/pseeth/argbind/"},"provides_extra":["tests","examples"],"release_url":"https://pypi.org/project/argbind/0.3.9/","requires_dist":["pyyaml","docstring-parser","pytest; extra == \"tests\"","pytest-cov; extra == \"tests\"","torch; extra == \"tests\"","torchvision; extra == \"tests\"","torch; extra == \"examples\"","torchvision; extra == \"examples\""],"requires_python":"<4,>=3.5","summary":"Simple way to bind function arguments to the command line.","version":"0.3.9","yanked":false,"yanked_reason":null},"last_serial":23368240,"releases":{"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"fb154eee0b560706c5ae5d1f76fc6f1df625de06e2dd81e7d9873c18c58b7daf","md5":"6b7039ecc6c023d29d3cea0ef55bce24","sha256":"05c8fbe7aa1e63d4c10923685e06ff69f37bfda522dc557eade80a59a75c1f16"},"downloads":-1,"filename":"argbind-0.1.0.tar.gz","has_sig":false,"md5_digest":"6b7039ecc6c023d29d3cea0ef55bce24","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":10300,"upload_time":"2020-10-14T06:53:53","upload_time_iso_8601":"2020-10-14T06:53:53.086054Z","url":"https://files.pythonhosted.org/packages/fb/15/4eee0b560706c5ae5d1f76fc6f1df625de06e2dd81e7d9873c18c58b7daf/argbind-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"248ad3fdf6a9ed8834d3f8db77dd7a87abdf716c0436516641adf9f4449eb8e8","md5":"c555fba2db981673f0a7315e73348cd3","sha256":"e88e3d125edf04b4a20d42c552e0d4654b347a2e555a4f65308f4d1b1889311d"},"downloads":-1,"filename":"argbind-0.1.1.tar.gz","has_sig":false,"md5_digest":"c555fba2db981673f0a7315e73348cd3","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":10216,"upload_time":"2020-10-14T07:12:07","upload_time_iso_8601":"2020-10-14T07:12:07.310584Z","url":"https://files.pythonhosted.org/packages/24/8a/d3fdf6a9ed8834d3f8db77dd7a87abdf716c0436516641adf9f4449eb8e8/argbind-0.1.1.tar.gz","yanked":false,"yanked_reason":null}],"0.1.2":[{"comment_text":"","digests":{"blake2b_256":"d07c300c7e79c02e1ea668a889bbc7e5c6f5c34eece37270de827a42d953d3d0","md5":"590a1c8ad83b40bea7dda13f800b8d70","sha256":"db08d9d21ad691fa354e4edac7a9e56a46f80b4cdad31e3e46346fac6fad892d"},"downloads":-1,"filename":"argbind-0.1.2.tar.gz","has_sig":false,"md5_digest":"590a1c8ad83b40bea7dda13f800b8d70","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":10358,"upload_time":"2020-10-14T07:59:39","upload_time_iso_8601":"2020-10-14T07:59:39.159775Z","url":"https://files.pythonhosted.org/packages/d0/7c/300c7e79c02e1ea668a889bbc7e5c6f5c34eece37270de827a42d953d3d0/argbind-0.1.2.tar.gz","yanked":false,"yanked_reason":null}],"0.1.3":[{"comment_text":"","digests":{"blake2b_256":"0b94c0d8b90943500cf5c161e7158d6ba5b8318c37a05cfe10277c3dee34a0e3","md5":"31f0b9797ebcf000a193080346807e69","sha256":"ebc087c59a84677cb1b0b4cbfea259decd3070238f1d1982885e1b13a0bbdc45"},"downloads":-1,"filename":"argbind-0.1.3.tar.gz","has_sig":false,"md5_digest":"31f0b9797ebcf000a193080346807e69","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":10481,"upload_time":"2020-10-14T09:13:08","upload_time_iso_8601":"2020-10-14T09:13:08.969029Z","url":"https://files.pythonhosted.org/packages/0b/94/c0d8b90943500cf5c161e7158d6ba5b8318c37a05cfe10277c3dee34a0e3/argbind-0.1.3.tar.gz","yanked":false,"yanked_reason":null}],"0.1.4":[{"comment_text":"","digests":{"blake2b_256":"d125ec2c7bc92711f051feae1a36faf7310acff167bdc677e038e6af960184a4","md5":"0525ce81cf272068e5739347bcc29c80","sha256":"060ac6c4f53e3ff2480539f8057fbd2123e535023bbcf58ae25824adc83a8bc8"},"downloads":-1,"filename":"argbind-0.1.4.tar.gz","has_sig":false,"md5_digest":"0525ce81cf272068e5739347bcc29c80","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":12484,"upload_time":"2020-10-16T05:13:35","upload_time_iso_8601":"2020-10-16T05:13:35.853588Z","url":"https://files.pythonhosted.org/packages/d1/25/ec2c7bc92711f051feae1a36faf7310acff167bdc677e038e6af960184a4/argbind-0.1.4.tar.gz","yanked":false,"yanked_reason":null}],"0.1.5":[{"comment_text":"","digests":{"blake2b_256":"0bbdf1ce15bf69b926324fe865ca9a3c6425a9e5de410218fa347f4034b0e719","md5":"6c9b21fa645582bb8576fc1f978bd186","sha256":"5bc77ab1aaeb5bd0369dea5cac32c77f4cfff2ad2340ccccf5ca30ac51f3e9c1"},"downloads":-1,"filename":"argbind-0.1.5.tar.gz","has_sig":false,"md5_digest":"6c9b21fa645582bb8576fc1f978bd186","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":11573,"upload_time":"2020-10-17T07:44:50","upload_time_iso_8601":"2020-10-17T07:44:50.082547Z","url":"https://files.pythonhosted.org/packages/0b/bd/f1ce15bf69b926324fe865ca9a3c6425a9e5de410218fa347f4034b0e719/argbind-0.1.5.tar.gz","yanked":false,"yanked_reason":null}],"0.1.6":[{"comment_text":"","digests":{"blake2b_256":"5b9b352c71c72602f06235b32438e67033f66128c696668da7bfb217d6c94b85","md5":"0e9cfd593e483e7c47e63d0585eab3f0","sha256":"729e940dbb63db43a6f838587a8164171f5cb20fe27910afab2e4b806e076314"},"downloads":-1,"filename":"argbind-0.1.6.tar.gz","has_sig":false,"md5_digest":"0e9cfd593e483e7c47e63d0585eab3f0","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":12235,"upload_time":"2021-01-20T03:14:16","upload_time_iso_8601":"2021-01-20T03:14:16.292473Z","url":"https://files.pythonhosted.org/packages/5b/9b/352c71c72602f06235b32438e67033f66128c696668da7bfb217d6c94b85/argbind-0.1.6.tar.gz","yanked":false,"yanked_reason":null}],"0.1.7":[{"comment_text":"","digests":{"blake2b_256":"31cfa16ac60e92d40eeaea22446a7b39a2c31b8a0c35f85448af6c412177ce00","md5":"51b41d1a31d3669c349a2a62f455ea76","sha256":"2634681e3f6b27a0579c6160f06a8041bfa80971a5dfeac0fd125a1aca6695cc"},"downloads":-1,"filename":"argbind-0.1.7.tar.gz","has_sig":false,"md5_digest":"51b41d1a31d3669c349a2a62f455ea76","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":12752,"upload_time":"2021-01-23T00:37:31","upload_time_iso_8601":"2021-01-23T00:37:31.533336Z","url":"https://files.pythonhosted.org/packages/31/cf/a16ac60e92d40eeaea22446a7b39a2c31b8a0c35f85448af6c412177ce00/argbind-0.1.7.tar.gz","yanked":false,"yanked_reason":null}],"0.1.8":[{"comment_text":"","digests":{"blake2b_256":"fe1e0a12c518ed67e2b725297a7126b15b7a0ec7a819fc8d3efb3fb7f823e25e","md5":"33b12e9d67074bd6a8e1feec46af0b36","sha256":"160b4aca3d1c0180349b5596dd69264a52c2dd49b676e6e0f8412f7e9993abd6"},"downloads":-1,"filename":"argbind-0.1.8.tar.gz","has_sig":false,"md5_digest":"33b12e9d67074bd6a8e1feec46af0b36","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":13307,"upload_time":"2021-02-02T04:13:14","upload_time_iso_8601":"2021-02-02T04:13:14.306138Z","url":"https://files.pythonhosted.org/packages/fe/1e/0a12c518ed67e2b725297a7126b15b7a0ec7a819fc8d3efb3fb7f823e25e/argbind-0.1.8.tar.gz","yanked":false,"yanked_reason":null}],"0.1.9":[{"comment_text":"","digests":{"blake2b_256":"358ab9615b1dc9c6aea35a55731c5ae95cb8bf5bf99314fdb3ed24b50974930f","md5":"c1eef64b62e2a8fb9428c4c8ea28a279","sha256":"e88b5d542e1ca3881fe37a9d0ae943164a64fe4b4b81bc0560bea273e50372ac"},"downloads":-1,"filename":"argbind-0.1.9.tar.gz","has_sig":false,"md5_digest":"c1eef64b62e2a8fb9428c4c8ea28a279","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":15516,"upload_time":"2021-02-02T07:57:58","upload_time_iso_8601":"2021-02-02T07:57:58.188653Z","url":"https://files.pythonhosted.org/packages/35/8a/b9615b1dc9c6aea35a55731c5ae95cb8bf5bf99314fdb3ed24b50974930f/argbind-0.1.9.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"f9649f8e0649a36b6034676fcfb58365f0b38d14de876a7b388d1b2c8bd20a07","md5":"220ad3ecbdc93c5dcd38ad8822b8484e","sha256":"2c57b3ef0394b1113c525ec95498417bc19061714a2792714f95951eab81cced"},"downloads":-1,"filename":"argbind-0.2.0.tar.gz","has_sig":false,"md5_digest":"220ad3ecbdc93c5dcd38ad8822b8484e","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":15525,"upload_time":"2021-02-02T18:41:13","upload_time_iso_8601":"2021-02-02T18:41:13.581317Z","url":"https://files.pythonhosted.org/packages/f9/64/9f8e0649a36b6034676fcfb58365f0b38d14de876a7b388d1b2c8bd20a07/argbind-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"f76572c2c086915d208b96fab24eb11a245e74c48cd53fdd085b5272e84a46e8","md5":"3d7169645a49d89fea181dcadae0ea87","sha256":"faf8f0d2f7e46d10824e3995ca6ef4406e71632a63f8665a7884c2829a032b81"},"downloads":-1,"filename":"argbind-0.3.0.tar.gz","has_sig":false,"md5_digest":"3d7169645a49d89fea181dcadae0ea87","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":16171,"upload_time":"2021-06-09T23:55:34","upload_time_iso_8601":"2021-06-09T23:55:34.161360Z","url":"https://files.pythonhosted.org/packages/f7/65/72c2c086915d208b96fab24eb11a245e74c48cd53fdd085b5272e84a46e8/argbind-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"0.3.1":[{"comment_text":"","digests":{"blake2b_256":"41508f3a272db977fdf648f30d8a541132cd7106883662b6c61e41f9ac9f2be2","md5":"f9d39a936df073355ec210505a490c25","sha256":"6c5965e871401e2ee7f12c8cb7a7c07b207031ee734d006c1ccc877fd4758a33"},"downloads":-1,"filename":"argbind-0.3.1.tar.gz","has_sig":false,"md5_digest":"f9d39a936df073355ec210505a490c25","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":16283,"upload_time":"2022-03-11T22:28:19","upload_time_iso_8601":"2022-03-11T22:28:19.372405Z","url":"https://files.pythonhosted.org/packages/41/50/8f3a272db977fdf648f30d8a541132cd7106883662b6c61e41f9ac9f2be2/argbind-0.3.1.tar.gz","yanked":false,"yanked_reason":null}],"0.3.2":[{"comment_text":"","digests":{"blake2b_256":"1f6d3cde926201f2c65e86ffbc27cff4e0e366683dee5e7217acb859c5fe1848","md5":"f619131eab078805086b317e768bcfb8","sha256":"6d358c84ee255757edee1bd75978249c4af3caa48479a24e68550082c0730865"},"downloads":-1,"filename":"argbind-0.3.2.tar.gz","has_sig":false,"md5_digest":"f619131eab078805086b317e768bcfb8","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":16346,"upload_time":"2022-03-21T20:54:17","upload_time_iso_8601":"2022-03-21T20:54:17.417670Z","url":"https://files.pythonhosted.org/packages/1f/6d/3cde926201f2c65e86ffbc27cff4e0e366683dee5e7217acb859c5fe1848/argbind-0.3.2.tar.gz","yanked":false,"yanked_reason":null}],"0.3.3":[{"comment_text":"","digests":{"blake2b_256":"89870127f031864e6b95a5f12b5c53e94dcc68146486ba558189772a513621de","md5":"2a743492bb8eece33b0ea7be5ae27c6d","sha256":"9a2518a25562520852c1be539f6085e29e68c4d7aa3e8bb48e137a9cd1530819"},"downloads":-1,"filename":"argbind-0.3.3.tar.gz","has_sig":false,"md5_digest":"2a743492bb8eece33b0ea7be5ae27c6d","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":16417,"upload_time":"2022-03-22T16:28:25","upload_time_iso_8601":"2022-03-22T16:28:25.533780Z","url":"https://files.pythonhosted.org/packages/89/87/0127f031864e6b95a5f12b5c53e94dcc68146486ba558189772a513621de/argbind-0.3.3.tar.gz","yanked":false,"yanked_reason":null}],"0.3.4":[{"comment_text":"","digests":{"blake2b_256":"c34a423de3cb045cb746b7fa267223b137c123e18df91e71a2a02362139336ef","md5":"354e6f0299efb96e3f9694ea822c1027","sha256":"ee38c03878b60bbed6ea8918737250228af514a0b777ed1c11037a1d8649420e"},"downloads":-1,"filename":"argbind-0.3.4.tar.gz","has_sig":false,"md5_digest":"354e6f0299efb96e3f9694ea822c1027","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":16585,"upload_time":"2022-04-05T21:01:13","upload_time_iso_8601":"2022-04-05T21:01:13.710919Z","url":"https://files.pythonhosted.org/packages/c3/4a/423de3cb045cb746b7fa267223b137c123e18df91e71a2a02362139336ef/argbind-0.3.4.tar.gz","yanked":false,"yanked_reason":null}],"0.3.6":[{"comment_text":"","digests":{"blake2b_256":"151fe5d4d3e7d7a0b5fd09d9d72811ea682f5e1b2421317a2bf7ba0b19306093","md5":"2525cb3034012e85f4ab9d5660351e45","sha256":"3437dece9a0f16b45641a56d4ec8691e11db505624d3ecf3d1898f1abc956be3"},"downloads":-1,"filename":"argbind-0.3.6.tar.gz","has_sig":false,"md5_digest":"2525cb3034012e85f4ab9d5660351e45","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":16651,"upload_time":"2022-09-09T06:40:03","upload_time_iso_8601":"2022-09-09T06:40:03.528043Z","url":"https://files.pythonhosted.org/packages/15/1f/e5d4d3e7d7a0b5fd09d9d72811ea682f5e1b2421317a2bf7ba0b19306093/argbind-0.3.6.tar.gz","yanked":false,"yanked_reason":null}],"0.3.7":[{"comment_text":"","digests":{"blake2b_256":"1b4a49d99dffebb74be905f92580556152aaa7ba611a6f2d2ad1187303a1bf7f","md5":"5bb954075dfebaf841363368694530e0","sha256":"ee19f0f2ac660491143a3c7c5abd3aac89d907452f00033c40baf063cea5fdf2"},"downloads":-1,"filename":"argbind-0.3.7.tar.gz","has_sig":false,"md5_digest":"5bb954075dfebaf841363368694530e0","packagetype":"sdist","python_version":"source","requires_python":">=3.5, <4","size":16792,"upload_time":"2023-06-12T17:50:35","upload_time_iso_8601":"2023-06-12T17:50:35.117690Z","url":"https://files.pythonhosted.org/packages/1b/4a/49d99dffebb74be905f92580556152aaa7ba611a6f2d2ad1187303a1bf7f/argbind-0.3.7.tar.gz","yanked":false,"yanked_reason":null}],"0.3.8":[{"comment_text":"","digests":{"blake2b_256":"924272debcc85b3496e8a255d25c85937ef3d0287ffa843d1ef56231867d9192","md5":"72f170b8ce318360d150af606c9fceda","sha256":"bfca5313895e87443fda26966c73809bbef3df72aee70e42c7f03f50430b4380"},"downloads":-1,"filename":"argbind-0.3.8.tar.gz","has_sig":false,"md5_digest":"72f170b8ce318360d150af606c9fceda","packagetype":"sdist","python_version":"source","requires_python":"<4,>=3.5","size":17592,"upload_time":"2024-05-24T06:56:50","upload_time_iso_8601":"2024-05-24T06:56:50.061889Z","url":"https://files.pythonhosted.org/packages/92/42/72debcc85b3496e8a255d25c85937ef3d0287ffa843d1ef56231867d9192/argbind-0.3.8.tar.gz","yanked":false,"yanked_reason":null}],"0.3.9":[{"comment_text":"","digests":{"blake2b_256":"8e254422cf7777c0cedd2fbcbdf8face786be76186e6d2e7b66f5f37e266b604","md5":"fe5fd574f319451b27c7c1d5dc9b3430","sha256":"1b159c04af56858a91d59c7a47bc9ea39d96adfce1d7fcfa38050d7ac9815745"},"downloads":-1,"filename":"argbind-0.3.9.tar.gz","has_sig":false,"md5_digest":"fe5fd574f319451b27c7c1d5dc9b3430","packagetype":"sdist","python_version":"source","requires_python":"<4,>=3.5","size":17567,"upload_time":"2024-05-24T21:33:21","upload_time_iso_8601":"2024-05-24T21:33:21.281620Z","url":"https://files.pythonhosted.org/packages/8e/25/4422cf7777c0cedd2fbcbdf8face786be76186e6d2e7b66f5f37e266b604/argbind-0.3.9.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"8e254422cf7777c0cedd2fbcbdf8face786be76186e6d2e7b66f5f37e266b604","md5":"fe5fd574f319451b27c7c1d5dc9b3430","sha256":"1b159c04af56858a91d59c7a47bc9ea39d96adfce1d7fcfa38050d7ac9815745"},"downloads":-1,"filename":"argbind-0.3.9.tar.gz","has_sig":false,"md5_digest":"fe5fd574f319451b27c7c1d5dc9b3430","packagetype":"sdist","python_version":"source","requires_python":"<4,>=3.5","size":17567,"upload_time":"2024-05-24T21:33:21","upload_time_iso_8601":"2024-05-24T21:33:21.281620Z","url":"https://files.pythonhosted.org/packages/8e/25/4422cf7777c0cedd2fbcbdf8face786be76186e6d2e7b66f5f37e266b604/argbind-0.3.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
