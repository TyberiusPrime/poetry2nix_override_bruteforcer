{"info":{"author":"","author_email":"\"Kevin P. Fleming\" <jinjanator@kevin.km6g.us>","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","Intended Audience :: Developers","Intended Audience :: System Administrators","Natural Language :: English","Operating System :: OS Independent","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Typing :: Typed"],"description":"# *jinjanator-plugins*: API package for Jinjanator plugins\n\n\n\nJinjanator can be extended through the use of plugins; these are\nPython packages installed into the same environment as the tool\nitself, which use special markers to 'hook' into various\nfeatures. There is a minimal example in the\n[plugin_example](https://github.com/kpfleming/jinjanator-plugins/tree/main/plugin_example) directory which demonstrates three of\nthe four possible hooks.\n\nFor a more complete example, intended for publication, check out the\n[jinjanator-plugin-ansible](https://github.com/kpfleming/jinjanator-plugin-ansible)\nrepository.\n\nPlugins can provide:\n\n* *formats*: data parsers used to extract data from input files.\n\n* *filters*: functions used in Jinja2 templates to transform data.\n\n* *tests*: functions used in Jinja2 templates to make decisions in\n  conditional logic.\n\n* *globals*: functions used in Jinja2 templates to obtain data from\n  external sources.\n\n* *extensions*: Jinja2 extensions that can add extra filters, tests,\n  globals or even extend the parser.\n\nFor more details on the functionality and requirements for 'filters',\n'tests', 'globals', and 'extensions', refer to the Jinja2 documentation.\n\n## Installation\n\nNormally there is no need to install this package; instead it should\nbe listed as one of the dependencies for the plugin package itself.\n\nNote: It is *strongly* recommended to pin the dependency for this\npackage to a specific version, or if not, a \"year.release\" version\nrange (like \"23.2.*\"). Failure to pin to a very narrow range of\nversions may result in breakage of a plugin when the API is changed in\na non-backward-compatible fashion.\n\nThis is somewhat similar to *semantic versioning*, except not that :)\n\n## Basic structure\n\nA minimal plugin consists of two files:\n\n* `pyproject.toml`: provides package and project information, and\n  build instructions\n\n* Python source: provides functions to implement the desired features,\n  and hook markers to plug them into Jinjanator\n\n### pyproject.toml\n\n```toml\n[build-system]\nbuild-backend = \"setuptools.build_meta\"\nrequires = [\n  \"setuptools>=61\",\n]\n\n[project]\nname = \"jinjanator-plugin-example\"\nversion = \"0.0.0\"\ndependencies = [\n  \"jinjanator-plugins==23.3.0\",\n]\n\n[tool.setuptools]\npy-modules = [\"jinjanator_plugin_example\"]\n\n[project.entry-points.jinjanator]\nexample = \"jinjanator_plugin_example\"\n```\n\n#### build-system\n\nAny PEP517-compatible build system can be used, for this simple\nexample `setuptools` is being used.\n\n#### project\n\nThe `name` and `version` are required to build a package containing\nthe plugin. Note the *specific version dependency* on the\n`jinjanator-plugins` package.\n\n#### tool.setuptools\n\nThis section tells `setuptools` to include a single source file (not a\npackage directory) into the distribution. Note that this is a *module\nname*, not a *file name*, so there is no `.py` extension.\n\n#### project.entry-points.jinjanator\n\nThis is the first part of the 'magic' mechanism which allows\nJinjanator to find the plugin. The entry here (which can use any name,\nbut should be related to the project name in order to avoid conflicts)\ncreates an 'entry point' which Jinjanator can use to find the plugin;\nthe value is the name of the module which Jinjanator should import to\nfind the plugin's hooks (and must match the name specified in the\n`tool.setuptools` section).\n\n### jinjanator_plugin_example.py\n\n```python\nimport codecs\n\nfrom jinjanator_plugins import (\n    FormatOptionUnknownError,\n    FormatOptionUnsupportedError,\n    FormatOptionValueError,\n    plugin_filters_hook,\n    plugin_formats_hook,\n    plugin_identity_hook,\n    plugin_tests_hook,\n    plugin_extensions_hook,\n)\n\n\ndef rot13_filter(value):\n    return codecs.encode(value, \"rot13\")\n\n\ndef is_len12_test(value):\n    return len(value) == 12\n\n\nclass SpamFormat:\n    name = \"spam\"\n    suffixes = (\".spam\",)\n    option_names = (\"ham\",)\n\n    def __init__(self, options):\n        self.ham = False\n\n        if options:\n            for option in options:\n                if option == \"ham\":\n                    self.ham = True\n\n    def parse(self, data_string):\n        if self.ham:\n            return {\n                \"ham\": \"ham\",\n                \"cheese\": \"ham and cheese\",\n                \"potatoes\": \"ham and potatoes\",\n            }\n\n        return {\n            \"spam\": \"spam\",\n            \"cheese\": \"spam and cheese\",\n            \"potatoes\": \"spam and potatoes\",\n        }\n\n\n@plugin_identity_hook\ndef plugin_identities():\n    return \"example\"\n\n\n@plugin_filters_hook\ndef plugin_filters():\n    return {\"rot13\": rot13_filter}\n\n\n@plugin_tests_hook\ndef plugin_tests():\n    return {\"len12\": is_len12_test}\n\n\n@plugin_formats_hook\ndef plugin_formats():\n    return {SpamFormat.name: SpamFormat}\n\n\n@plugin_extensions_hook\ndef plugin_extensions():\n    return ['jinja2.ext.debug']\n```\n\nNote that the real example makes use of type annotations, but they\nhave been removed here for simplicity.\n\n#### Imports\n\nThe imports from `jinjanator_plugins` are necessary for the plugin to:\n* Mark the hooks it wishes to use to provide additional features.\n* Construct one (or more) `Format` objects to describe the formats it\n  supports, if any.\n* Raise option-related exceptions from its format function, if any.\n\n#### rot13_filter\n\nA simple filter function which applies the `rot13` transformation to\nthe string value it receives.\n\n#### is_len12_test\n\nA simple test function which returns `True` if the value it receives\nhas length 12.\n\n#### SpamFormat\n\nA class providing a simple format function which ignores the content\nprovided (which Jinjanator would have read from a data file), and\ninstead returns one of two canned responses based on whether the `ham`\noption has been provided by the user.\n\nThe `parse` method is the function which does the work; the `__init__`\nmethod handles options provided by the user; the class attributes\nprovide details of the format.\n\n#### plugin_identities\n\nThe hook function which will be called by Jinjanator to allow this\nplugin to identify itself; the `@plugin_identities_hook` decorator\nmarks the function so that it will be found.\n\nThe function must return a string, which can contain any information\nneeded to identify the plugin. This should include the plugin's name\nand version, and can include versions of any packages on which it\ndepends.\n\nThis string will be included in the output generated by `jinjanate\n--version`, so it should not include any newlines or other formatting\ncharacters.\n\nNote that the function *must* be named `plugin_identities`; it is the\nsecond part of the 'magic' mechanism mentioned above.\n\n#### plugin_filters\n\nThe hook function which will be called by Jinjanator to allow this\nplugin to register any filter functions it provides; the\n`@plugin_filters_hook` decorator marks the function so that it will be\nfound.\n\nThe function must return a dictionary, with each key being a filter\nfunction name (the name which will be used in the Jinja2 template to\ninvoke the function) and the corresponding value being a reference to\nthe function itself.\n\nNote that the function *must* be named `plugin_filters`; it is the\nsecond part of the 'magic' mechanism mentioned above.\n\n#### plugin_tests\n\nThe hook function which will be called by Jinjanator to allow this\nplugin to register any test functions it provides; the\n`@plugin_tests_hook` decorator marks the function so that it will be\nfound.\n\nThe function must return a dictionary, with each key being a test\nfunction name (the name which will be used in the Jinja2 template to\ninvoke the function) and the corresponding value being a reference to\nthe function itself.\n\nNote that the function *must* be named `plugin_tests`; it is the\nsecond part of the 'magic' mechanism mentioned above.\n\n#### plugin_formats\n\nThe hook function which will be called by Jinjanator to allow this\nplugin to register any format functions it provides; the\n`@plugin_formats_hook` decorator marks the function so that it will be\nfound.\n\nThe function must return a dictionary, with each key being a format\nfunction name (the name which will be used in the `--format` argument\nto Jinjanator, if needed) and the corresponding value being a class\nwhich implements the requirements of the `Format` protocol (defined in\n[__init__.py](https://github.com/kpfleming/jinjanator-plugins/tree/main/src/jinjanator_plugins/__init__.py)).\n\nIn particular these requirements include:\n\n* a class attribute called `name` which contains the name of the\n  format (for use in error messages)\n\n* a class attribute called 'suffixes' which contains a (possibly\n  empty) list of file suffixes which can be matched to this format\n  during format auto-detection\n\n* a class attribute called 'option_names' which contains a (possibly\n  empty) list of options which the user can provide to modify the\n  parser's behavior\n\n* a constructor method (`__init__`) which accepts a (possibly empty)\n  list of options provided by the user, and performs any validation\n  needed on them, storing the results in the `self` object\n\n* a `parse` method which accepts a (possibly empty) string containing\n  the input data, and parses it according to the format's needs, using\n  any previously-validated options stored in the `self` object\n\nNote that the hook function *must* be named `plugin_formats`; it is the\nsecond part of the 'magic' mechanism mentioned above.\n\nFormat classes can accept 'options' to modify their behavior, and\nshould raise the exceptions listed below, when needed, to inform the\nuser if one of the provided options does not meet the format's\nrequirements.\n\n* `FormatOptionUnknownError` will be raised automatically by the\n  Jinjanator CLI based on the content of the `option_names` attribute of\n  the format class.\n\n* `FormatOptionUnsupportedError` should be raised when a provided\n  option is not supported in combination with the other provided\n  options or with the parsed data.\n\n* `FormatOptionValueError` should be raised when a provided option has\n  a value that is not valid.\n\n#### plugin_extensions\n\nThe hook function which will be called by Jinjanator to allow this\nplugin to register any additional Jinja2 extensions; the\n`@plugin_extensions_hook` decorator marks the function so that it will be\nfound.\n\nThe function must return a list, with each entry being a string (the name\nof a Jinja2 extension that should be added to the Jinja2 Environment).\n\nThose strings should correspond to extensions that themselves are available\nin your python installation and available for Jinja2 to locate.\n\nSome examples:\n* Jinja2 own debug extension: `jinja2.ext.debug`\n* [Jinja-Markdown](https://github.com/jpsca/jinja-markdown): `jinja_markdown.MarkdownExtension`\n* [jinja-markdown2](https://github.com/mkbabb/jinja-markdown2): `jinja2_markdown.MarkdownExtension`\n* https://github.com/topics/jinja2-extension etc...\n\nNote that the function *must* be named `plugin_extensions`; it is the\nsecond part of the 'magic' mechanism mentioned above.\n## Release Information\n### Additions\n\n- Support for 'extensions' plugins which enable Jinja2 extensions (contributed by @llange)\n  [[#14](https://github.com/kpfleming/jinjanator-plugins/issues/14)](https://github.com/kpfleming/jinjanator-plugins/issues/14)\n\n---\n[→ Full Changelog](https://github.com/kpfleming/jinjanator-plugins/blob/main/CHANGELOG.md)\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"","keywords":"","license":"Apache-2.0","maintainer":"","maintainer_email":"","name":"jinjanator-plugins","package_url":"https://pypi.org/project/jinjanator-plugins/","platform":null,"project_url":"https://pypi.org/project/jinjanator-plugins/","project_urls":{"Bug Tracker":"https://github.com/kpfleming/jinjanator-plugins/issues","Homepage":"https://github.com/kpfleming/jinjanator-plugins"},"provides_extra":null,"release_url":"https://pypi.org/project/jinjanator-plugins/24.1.0/","requires_dist":["attrs","pluggy"],"requires_python":">=3.8","summary":"Package which provides the plugin API for the Jinjanator tool","version":"24.1.0","yanked":false,"yanked_reason":null},"last_serial":22387355,"releases":{"23.1.0":[{"comment_text":"","digests":{"blake2b_256":"5b5227754b3a5647ee3aa08194ff68115f36565b9f006346f0f8d901c27aef09","md5":"26d766f837a35cb969ef38c2347e8188","sha256":"934742f329296b11774559f2c70c080a7053775285224f08a3c0dacb7ced9635"},"downloads":-1,"filename":"jinjanator_plugins-23.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"26d766f837a35cb969ef38c2347e8188","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":16966,"upload_time":"2023-07-24T18:10:26","upload_time_iso_8601":"2023-07-24T18:10:26.551474Z","url":"https://files.pythonhosted.org/packages/5b/52/27754b3a5647ee3aa08194ff68115f36565b9f006346f0f8d901c27aef09/jinjanator_plugins-23.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f01e3657eedbb174833339757edbdc91f6208435792ee841a239973e76107745","md5":"a407c8334ac65713abb53cd11000f39a","sha256":"c54e372af2c1342f24583dce18a9b8059f8b6d804cf7a6bac56565cb98adf309"},"downloads":-1,"filename":"jinjanator_plugins-23.1.0.tar.gz","has_sig":false,"md5_digest":"a407c8334ac65713abb53cd11000f39a","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":21545,"upload_time":"2023-07-24T18:10:28","upload_time_iso_8601":"2023-07-24T18:10:28.092368Z","url":"https://files.pythonhosted.org/packages/f0/1e/3657eedbb174833339757edbdc91f6208435792ee841a239973e76107745/jinjanator_plugins-23.1.0.tar.gz","yanked":false,"yanked_reason":null}],"23.2.0":[{"comment_text":"","digests":{"blake2b_256":"1ab4a928a5df1e5133b56f6442cd6f321f29232ae08a15db3ab69bb7191757ee","md5":"58638c87afac23de056b5f41a6d205a1","sha256":"591032174f136d9e47aa54f02a555a88fc6ed36e2c02c6cba90708f0358dc232"},"downloads":-1,"filename":"jinjanator_plugins-23.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"58638c87afac23de056b5f41a6d205a1","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":9048,"upload_time":"2023-07-30T10:33:26","upload_time_iso_8601":"2023-07-30T10:33:26.862399Z","url":"https://files.pythonhosted.org/packages/1a/b4/a928a5df1e5133b56f6442cd6f321f29232ae08a15db3ab69bb7191757ee/jinjanator_plugins-23.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e56f3b78329821f9b4a45dbd4b43ef24dfd4b30cf1d5e287f9c08c8cdfe086bf","md5":"2f8773578da3f57c50276ecd6f60ad56","sha256":"dc35f5ac326cd504a4dfb6050622c2d5b95a15c78c80b36747200e2c467c2f08"},"downloads":-1,"filename":"jinjanator_plugins-23.2.0.tar.gz","has_sig":false,"md5_digest":"2f8773578da3f57c50276ecd6f60ad56","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":14038,"upload_time":"2023-07-30T10:33:28","upload_time_iso_8601":"2023-07-30T10:33:28.302769Z","url":"https://files.pythonhosted.org/packages/e5/6f/3b78329821f9b4a45dbd4b43ef24dfd4b30cf1d5e287f9c08c8cdfe086bf/jinjanator_plugins-23.2.0.tar.gz","yanked":false,"yanked_reason":null}],"23.2.1":[{"comment_text":"","digests":{"blake2b_256":"f7ca73b89a5cf618d4c2e1bb1941f9db6affb09ff1c24e98d9cbdc24f296728a","md5":"8653f8610808b4e53cb39be0de6572b9","sha256":"207ef20ec99174fe17a49cade8b34240fcb9bc66b3a5e0a3130df2aad4e9a132"},"downloads":-1,"filename":"jinjanator_plugins-23.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"8653f8610808b4e53cb39be0de6572b9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":9423,"upload_time":"2023-07-31T13:38:55","upload_time_iso_8601":"2023-07-31T13:38:55.511006Z","url":"https://files.pythonhosted.org/packages/f7/ca/73b89a5cf618d4c2e1bb1941f9db6affb09ff1c24e98d9cbdc24f296728a/jinjanator_plugins-23.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9896b0f1642dd8dcbbb7bcc9348aa84a0fa93b91f2c3d28bce133be880b68a86","md5":"2efe7780d5c91eb0dd4cdd230c395158","sha256":"ff88b715ac5cc01a88090288ad13824be9c438cbd0705565300545e4831afe98"},"downloads":-1,"filename":"jinjanator_plugins-23.2.1.tar.gz","has_sig":false,"md5_digest":"2efe7780d5c91eb0dd4cdd230c395158","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":14717,"upload_time":"2023-07-31T13:38:56","upload_time_iso_8601":"2023-07-31T13:38:56.930958Z","url":"https://files.pythonhosted.org/packages/98/96/b0f1642dd8dcbbb7bcc9348aa84a0fa93b91f2c3d28bce133be880b68a86/jinjanator_plugins-23.2.1.tar.gz","yanked":false,"yanked_reason":null}],"23.3.0":[{"comment_text":"","digests":{"blake2b_256":"2ea5dbf84b49be728a17b0946aeb97714a956ef6faa646b2bf2c1c883725e74d","md5":"13d824c76bcf06f08cd3ab098246bb90","sha256":"59edd20ce52604439d8306c04d50a50b595f4922c40e8d6421cef1062aab1836"},"downloads":-1,"filename":"jinjanator_plugins-23.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"13d824c76bcf06f08cd3ab098246bb90","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":9864,"upload_time":"2023-08-01T13:20:16","upload_time_iso_8601":"2023-08-01T13:20:16.001317Z","url":"https://files.pythonhosted.org/packages/2e/a5/dbf84b49be728a17b0946aeb97714a956ef6faa646b2bf2c1c883725e74d/jinjanator_plugins-23.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5118527c3b62c86f4534df909c39be31f81bde85382e00ff5f1233cf109d625a","md5":"2e2108097bbf9c6ac5b97bd6e6ce0418","sha256":"146788cf18d60487c1e6631605744fd126f24b7cb79e70915a424a81f0d12e51"},"downloads":-1,"filename":"jinjanator_plugins-23.3.0.tar.gz","has_sig":false,"md5_digest":"2e2108097bbf9c6ac5b97bd6e6ce0418","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":15475,"upload_time":"2023-08-01T13:20:17","upload_time_iso_8601":"2023-08-01T13:20:17.491466Z","url":"https://files.pythonhosted.org/packages/51/18/527c3b62c86f4534df909c39be31f81bde85382e00ff5f1233cf109d625a/jinjanator_plugins-23.3.0.tar.gz","yanked":false,"yanked_reason":null}],"23.4.0":[{"comment_text":"","digests":{"blake2b_256":"e96f76110ed2f69471f38afbacd0bd9147d30c9987470dd930bc8c1c3374b784","md5":"c88e9523e5c74694a33bba164f0121e3","sha256":"609e3824fa74c5403d6e25907280a5be7334d79d5a8db3c4af67cd57735fecd3"},"downloads":-1,"filename":"jinjanator_plugins-23.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"c88e9523e5c74694a33bba164f0121e3","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":10103,"upload_time":"2023-08-01T19:50:36","upload_time_iso_8601":"2023-08-01T19:50:36.040668Z","url":"https://files.pythonhosted.org/packages/e9/6f/76110ed2f69471f38afbacd0bd9147d30c9987470dd930bc8c1c3374b784/jinjanator_plugins-23.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9b5dc7ef48f840679e5b6f3c3239d64620c7ba49316f1e725e473ebc7196554f","md5":"270a351f522f5c425769ef13ec34350d","sha256":"5d17ea19dce51baf9b2e73182a0c7c8c9ff2949e121c7f63cd05f94836e1cbc3"},"downloads":-1,"filename":"jinjanator_plugins-23.4.0.tar.gz","has_sig":false,"md5_digest":"270a351f522f5c425769ef13ec34350d","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":15989,"upload_time":"2023-08-01T19:50:36","upload_time_iso_8601":"2023-08-01T19:50:36.914232Z","url":"https://files.pythonhosted.org/packages/9b/5d/c7ef48f840679e5b6f3c3239d64620c7ba49316f1e725e473ebc7196554f/jinjanator_plugins-23.4.0.tar.gz","yanked":false,"yanked_reason":null}],"23.5.0":[{"comment_text":"","digests":{"blake2b_256":"48190675001109c6cd2a4e6c453bc3607cf61ed5beb5a07b5eaf6acee5cf8c60","md5":"d48b9d045fd7087dd48be9e7e9bbf8fa","sha256":"6002b751a69cee8137484dbad8948ae4ca0c90ff489860fafe347904795c95dc"},"downloads":-1,"filename":"jinjanator_plugins-23.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"d48b9d045fd7087dd48be9e7e9bbf8fa","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":10058,"upload_time":"2023-10-07T12:02:06","upload_time_iso_8601":"2023-10-07T12:02:06.132289Z","url":"https://files.pythonhosted.org/packages/48/19/0675001109c6cd2a4e6c453bc3607cf61ed5beb5a07b5eaf6acee5cf8c60/jinjanator_plugins-23.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"eec4cf7a59ced0ef974df61f290c16c178f94a0fc695dacf7f2e378f342ea0f3","md5":"21bc019a978ece5b8ddd6b0918778288","sha256":"892dbaec352e5cc3d7182e10425c11c0f5e7bac9fa74a4fad2c7c8b8ee38b3a2"},"downloads":-1,"filename":"jinjanator_plugins-23.5.0.tar.gz","has_sig":false,"md5_digest":"21bc019a978ece5b8ddd6b0918778288","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":16046,"upload_time":"2023-10-07T12:02:07","upload_time_iso_8601":"2023-10-07T12:02:07.964970Z","url":"https://files.pythonhosted.org/packages/ee/c4/cf7a59ced0ef974df61f290c16c178f94a0fc695dacf7f2e378f342ea0f3/jinjanator_plugins-23.5.0.tar.gz","yanked":false,"yanked_reason":null}],"24.1.0":[{"comment_text":"","digests":{"blake2b_256":"0e13935538f6d6400c2429aa11c5bdfc3e12c1c9cf285685eadf85fe49cc6e58","md5":"ace7913f506a999eabff1cb12670376b","sha256":"b3265f95123ef9afa10b671143c5d63ee4f1e8ba34d078e104b86848b46305e4"},"downloads":-1,"filename":"jinjanator_plugins-24.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"ace7913f506a999eabff1cb12670376b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":10438,"upload_time":"2024-03-19T11:00:32","upload_time_iso_8601":"2024-03-19T11:00:32.971831Z","url":"https://files.pythonhosted.org/packages/0e/13/935538f6d6400c2429aa11c5bdfc3e12c1c9cf285685eadf85fe49cc6e58/jinjanator_plugins-24.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4b7c29a6af5c4f93ec157144fd6f16c0d6d158c6ff9ae898b434e618bb368898","md5":"38f4a102e754871b0f44a70946b8c5dd","sha256":"6b215a8bcbbb0ee36ce1125a87e24e450a3eb1f27bc6597b85c6be80ed08afac"},"downloads":-1,"filename":"jinjanator_plugins-24.1.0.tar.gz","has_sig":false,"md5_digest":"38f4a102e754871b0f44a70946b8c5dd","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":16814,"upload_time":"2024-03-19T11:00:34","upload_time_iso_8601":"2024-03-19T11:00:34.683555Z","url":"https://files.pythonhosted.org/packages/4b/7c/29a6af5c4f93ec157144fd6f16c0d6d158c6ff9ae898b434e618bb368898/jinjanator_plugins-24.1.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"0e13935538f6d6400c2429aa11c5bdfc3e12c1c9cf285685eadf85fe49cc6e58","md5":"ace7913f506a999eabff1cb12670376b","sha256":"b3265f95123ef9afa10b671143c5d63ee4f1e8ba34d078e104b86848b46305e4"},"downloads":-1,"filename":"jinjanator_plugins-24.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"ace7913f506a999eabff1cb12670376b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":10438,"upload_time":"2024-03-19T11:00:32","upload_time_iso_8601":"2024-03-19T11:00:32.971831Z","url":"https://files.pythonhosted.org/packages/0e/13/935538f6d6400c2429aa11c5bdfc3e12c1c9cf285685eadf85fe49cc6e58/jinjanator_plugins-24.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4b7c29a6af5c4f93ec157144fd6f16c0d6d158c6ff9ae898b434e618bb368898","md5":"38f4a102e754871b0f44a70946b8c5dd","sha256":"6b215a8bcbbb0ee36ce1125a87e24e450a3eb1f27bc6597b85c6be80ed08afac"},"downloads":-1,"filename":"jinjanator_plugins-24.1.0.tar.gz","has_sig":false,"md5_digest":"38f4a102e754871b0f44a70946b8c5dd","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":16814,"upload_time":"2024-03-19T11:00:34","upload_time_iso_8601":"2024-03-19T11:00:34.683555Z","url":"https://files.pythonhosted.org/packages/4b/7c/29a6af5c4f93ec157144fd6f16c0d6d158c6ff9ae898b434e618bb368898/jinjanator_plugins-24.1.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
