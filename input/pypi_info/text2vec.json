{"info":{"author":"XuMing","author_email":"xuming624@qq.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","Intended Audience :: Education","Intended Audience :: Science/Research","License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3","Topic :: Scientific/Engineering :: Artificial Intelligence"],"description":"[**🇨🇳中文**](https://github.com/shibing624/text2vec/blob/master/README.md) | [**🌐English**](https://github.com/shibing624/text2vec/blob/master/README_EN.md) | [**📖文档/Docs**](https://github.com/shibing624/text2vec/wiki) | [**🤖模型/Models**](https://huggingface.co/shibing624) \n\n<div align=\"center\">\n  <a href=\"https://github.com/shibing624/text2vec\">\n    <img src=\"https://github.com/shibing624/text2vec/blob/master/docs/t2v-logo.png\" height=\"150\" alt=\"Logo\">\n  </a>\n</div>\n\n-----------------\n\n# Text2vec: Text to Vector\n[![PyPI version](https://badge.fury.io/py/text2vec.svg)](https://badge.fury.io/py/text2vec)\n[![Downloads](https://static.pepy.tech/badge/text2vec)](https://pepy.tech/project/text2vec)\n[![Contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg)](CONTRIBUTING.md)\n[![License Apache 2.0](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](LICENSE)\n[![python_version](https://img.shields.io/badge/Python-3.5%2B-green.svg)](requirements.txt)\n[![GitHub issues](https://img.shields.io/github/issues/shibing624/text2vec.svg)](https://github.com/shibing624/text2vec/issues)\n[![Wechat Group](http://vlog.sfyc.ltd/wechat_everyday/wxgroup_logo.png?imageView2/0/w/60/h/20)](#Contact)\n\n\n**Text2vec**: Text to Vector, Get Sentence Embeddings. 文本向量化，把文本(包括词、句子、段落)表征为向量矩阵。\n\n**text2vec**实现了Word2Vec、RankBM25、BERT、Sentence-BERT、CoSENT等多种文本表征、文本相似度计算模型，并在文本语义匹配（相似度计算）任务上比较了各模型的效果。\n\n### News\n[2023/09/19] v1.2.8版本: 支持多卡推理（多进程实现多GPU和多CPU推理），新增命令行工具（CLI），可以无需代码开发批量获取文本向量，详见[Release-v1.2.8](https://github.com/shibing624/text2vec/releases/tag/1.2.8)\n\n[2023/09/03] v1.2.4版本: 支持FlagEmbedding模型训练，发布了中文匹配模型[shibing624/text2vec-bge-large-chinese](https://huggingface.co/shibing624/text2vec-bge-large-chinese)，用CoSENT方法监督训练，基于`BAAI/bge-large-zh-noinstruct`用中文匹配数据集训练得到，并在中文测试集评估相对于原模型效果有提升，短文本区分度上提升明显，详见[Release-v1.2.4](https://github.com/shibing624/text2vec/releases/tag/1.2.4)\n\n[2023/07/17] v1.2.2版本: 支持多卡训练，发布了多语言匹配模型[shibing624/text2vec-base-multilingual](https://huggingface.co/shibing624/text2vec-base-multilingual)，用CoSENT方法训练，基于`sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2`用人工挑选后的多语言STS数据集[shibing624/nli-zh-all/text2vec-base-multilingual-dataset](https://huggingface.co/datasets/shibing624/nli-zh-all/tree/main/text2vec-base-multilingual-dataset)训练得到，并在中英文测试集评估相对于原模型效果有提升，详见[Release-v1.2.2](https://github.com/shibing624/text2vec/releases/tag/1.2.2)\n\n[2023/06/19] v1.2.1版本: 更新了中文匹配模型`shibing624/text2vec-base-chinese-nli`为新版[shibing624/text2vec-base-chinese-sentence](https://huggingface.co/shibing624/text2vec-base-chinese-sentence)，针对CoSENT的loss计算对排序敏感特点，人工挑选并整理出高质量的有相关性排序的STS数据集[shibing624/nli-zh-all/text2vec-base-chinese-sentence-dataset](https://huggingface.co/datasets/shibing624/nli-zh-all/tree/main/text2vec-base-chinese-sentence-dataset)，在各评估集表现相对之前有提升；发布了适用于s2p的中文匹配模型[shibing624/text2vec-base-chinese-paraphrase](https://huggingface.co/shibing624/text2vec-base-chinese-paraphrase)，详见[Release-v1.2.1](https://github.com/shibing624/text2vec/releases/tag/1.2.1)\n\n[2023/06/15] v1.2.0版本: 发布了中文匹配模型[shibing624/text2vec-base-chinese-nli](https://huggingface.co/shibing624/text2vec-base-chinese-nli)，基于`nghuyong/ernie-3.0-base-zh`模型，使用了中文NLI数据集[shibing624/nli_zh](https://huggingface.co/datasets/shibing624/nli_zh)全部语料训练的CoSENT文本匹配模型，在各评估集表现提升明显，详见[Release-v1.2.0](https://github.com/shibing624/text2vec/releases/tag/1.2.0)\n\n[2022/03/12] v1.1.4版本: 发布了中文匹配模型[shibing624/text2vec-base-chinese](https://huggingface.co/shibing624/text2vec-base-chinese)，基于中文STS训练集训练的CoSENT匹配模型。详见[Release-v1.1.4](https://github.com/shibing624/text2vec/releases/tag/1.1.4)\n\n\n**Guide**\n- [Features](#Features)\n- [Evaluation](#Evaluation)\n- [Install](#install)\n- [Usage](#usage)\n- [Contact](#Contact)\n- [References](#references)\n\n\n## Features\n### 文本向量表示模型\n- [Word2Vec](https://github.com/shibing624/text2vec/blob/master/text2vec/word2vec.py)：通过腾讯AI Lab开源的大规模高质量中文[词向量数据（800万中文词轻量版）](https://pan.baidu.com/s/1La4U4XNFe8s5BJqxPQpeiQ) (文件名：light_Tencent_AILab_ChineseEmbedding.bin 密码: tawe）实现词向量检索，本项目实现了句子（词向量求平均）的word2vec向量表示\n- [SBERT(Sentence-BERT)](https://github.com/shibing624/text2vec/blob/master/text2vec/sentencebert_model.py)：权衡性能和效率的句向量表示模型，训练时通过有监督训练BERT和softmax分类函数，文本匹配预测时直接取句子向量做余弦，句子表征方法，本项目基于PyTorch复现了Sentence-BERT模型的训练和预测\n- [CoSENT(Cosine Sentence)](https://github.com/shibing624/text2vec/blob/master/text2vec/cosent_model.py)：CoSENT模型提出了一种排序的损失函数，使训练过程更贴近预测，模型收敛速度和效果比Sentence-BERT更好，本项目基于PyTorch实现了CoSENT模型的训练和预测\n- [BGE(BAAI general embedding)](https://github.com/shibing624/text2vec/blob/master/text2vec/bge_model.py)：BGE模型按照[retromae](https://github.com/staoxiao/RetroMAE)方法进行预训练，[参考论文](https://aclanthology.org/2022.emnlp-main.35.pdf)，再使用对比学习finetune微调训练模型，本项目基于PyTorch实现了BGE模型的微调训练和预测\n\n\n详细文本向量表示方法见wiki: [文本向量表示方法](https://github.com/shibing624/text2vec/wiki/%E6%96%87%E6%9C%AC%E5%90%91%E9%87%8F%E8%A1%A8%E7%A4%BA%E6%96%B9%E6%B3%95)\n## Evaluation\n\n文本匹配\n\n#### 英文匹配数据集的评测结果：\n\n\n| Arch   | BaseModel                                        | Model                                                                                                                | English-STS-B | \n|:-------|:------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------|:-------------:|\n| GloVe  | glove                                           | Avg_word_embeddings_glove_6B_300d                                                                                    |     61.77     |\n| BERT   | bert-base-uncased                               | BERT-base-cls                                                                                                        |     20.29     |\n| BERT   | bert-base-uncased                               | BERT-base-first_last_avg                                                                                             |     59.04     |\n| BERT   | bert-base-uncased                               | BERT-base-first_last_avg-whiten(NLI)                                                                                 |     63.65     |\n| SBERT  | sentence-transformers/bert-base-nli-mean-tokens | SBERT-base-nli-cls                                                                                                   |     73.65     |\n| SBERT  | sentence-transformers/bert-base-nli-mean-tokens | SBERT-base-nli-first_last_avg                                                                                        |     77.96     |\n| CoSENT | bert-base-uncased                               | CoSENT-base-first_last_avg                                                                                           |     69.93     |\n| CoSENT | sentence-transformers/bert-base-nli-mean-tokens | CoSENT-base-nli-first_last_avg                                                                                       |     79.68     |\n| CoSENT | sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2 | [shibing624/text2vec-base-multilingual](https://huggingface.co/shibing624/text2vec-base-multilingual)                |     80.12     |\n\n#### 中文匹配数据集的评测结果：\n\n\n| Arch   | BaseModel                    | Model           | ATEC  |  BQ   | LCQMC | PAWSX | STS-B |  Avg  | \n|:-------|:----------------------------|:--------------------|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|\n| SBERT  | bert-base-chinese           | SBERT-bert-base     | 46.36 | 70.36 | 78.72 | 46.86 | 66.41 | 61.74 |\n| SBERT  | hfl/chinese-macbert-base    | SBERT-macbert-base  | 47.28 | 68.63 | 79.42 | 55.59 | 64.82 | 63.15 |\n| SBERT  | hfl/chinese-roberta-wwm-ext | SBERT-roberta-ext   | 48.29 | 69.99 | 79.22 | 44.10 | 72.42 | 62.80 |\n| CoSENT | bert-base-chinese           | CoSENT-bert-base    | 49.74 | 72.38 | 78.69 | 60.00 | 79.27 | 68.01 |\n| CoSENT | hfl/chinese-macbert-base    | CoSENT-macbert-base | 50.39 | 72.93 | 79.17 | 60.86 | 79.30 | 68.53 |\n| CoSENT | hfl/chinese-roberta-wwm-ext | CoSENT-roberta-ext  | 50.81 | 71.45 | 79.31 | 61.56 | 79.96 | 68.61 |\n\n说明：\n- 结果评测指标：spearman系数\n- 为评测模型能力，结果均只用该数据集的train训练，在test上评估得到的表现，没用外部数据\n- `SBERT-macbert-base`模型，是用SBert方法训练，运行[examples/training_sup_text_matching_model.py](https://github.com/shibing624/text2vec/blob/master/examples/training_sup_text_matching_model.py)代码可训练模型\n- `sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2`模型是用SBert训练，是`paraphrase-MiniLM-L12-v2`模型的多语言版本，支持中文、英文等\n\n\n### Release Models\n- 本项目release模型的中文匹配评测结果：\n\n| Arch       | BaseModel                                                   | Model                                                                                                                                             | ATEC  |  BQ   | LCQMC | PAWSX | STS-B | SOHU-dd | SOHU-dc |    Avg    |  QPS  |\n|:-----------|:------------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------|:-----:|:-----:|:-----:|:-----:|:-----:|:-------:|:-------:|:---------:|:-----:|\n| Word2Vec   | word2vec                                                    | [w2v-light-tencent-chinese](https://ai.tencent.com/ailab/nlp/en/download.html)                                                                    | 20.00 | 31.49 | 59.46 | 2.57  | 55.78 |  55.04  |  20.70  |   35.03   | 23769 |\n| SBERT      | xlm-roberta-base                                            | [sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2](https://huggingface.co/sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2) | 18.42 | 38.52 | 63.96 | 10.14 | 78.90 |  63.01  |  52.28  |   46.46   | 3138  |\n| CoSENT     | hfl/chinese-macbert-base                                    | [shibing624/text2vec-base-chinese](https://huggingface.co/shibing624/text2vec-base-chinese)                                                       | 31.93 | 42.67 | 70.16 | 17.21 | 79.30 |  70.27  |  50.42  |   51.61   | 3008  |\n| CoSENT     | hfl/chinese-lert-large                                      | [GanymedeNil/text2vec-large-chinese](https://huggingface.co/GanymedeNil/text2vec-large-chinese)                                                   | 32.61 | 44.59 | 69.30 | 14.51 | 79.44 |  73.01  |  59.04  |   53.12   | 2092  |\n| CoSENT     | nghuyong/ernie-3.0-base-zh                                  | [shibing624/text2vec-base-chinese-sentence](https://huggingface.co/shibing624/text2vec-base-chinese-sentence)                                     | 43.37 | 61.43 | 73.48 | 38.90 | 78.25 |  70.60  |  53.08  |   59.87   | 3089  |\n| CoSENT     | nghuyong/ernie-3.0-base-zh                                  | [shibing624/text2vec-base-chinese-paraphrase](https://huggingface.co/shibing624/text2vec-base-chinese-paraphrase)                                 | 44.89 | 63.58 | 74.24 | 40.90 | 78.93 |  76.70  |  63.30  | **63.08** | 3066  |\n| CoSENT     | sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2 | [shibing624/text2vec-base-multilingual](https://huggingface.co/shibing624/text2vec-base-multilingual)                                             | 32.39 | 50.33 | 65.64 | 32.56 | 74.45 |  68.88  |  51.17  |   53.67   | 3138  |\n| CoSENT     | BAAI/bge-large-zh-noinstruct                                | [shibing624/text2vec-bge-large-chinese](https://huggingface.co/shibing624/text2vec-bge-large-chinese)                                             | 38.41 | 61.34 | 71.72 | 35.15 | 76.44 |  71.81  |  63.15  |   59.72   |  844  |\n\n\n说明：\n- 结果评测指标：spearman系数\n- `shibing624/text2vec-base-chinese`模型，是用CoSENT方法训练，基于`hfl/chinese-macbert-base`在中文STS-B数据训练得到，并在中文STS-B测试集评估达到较好效果，运行[examples/training_sup_text_matching_model.py](https://github.com/shibing624/text2vec/blob/master/examples/training_sup_text_matching_model.py)代码可训练模型，模型文件已经上传HF model hub，中文通用语义匹配任务推荐使用\n- `shibing624/text2vec-base-chinese-sentence`模型，是用CoSENT方法训练，基于`nghuyong/ernie-3.0-base-zh`用人工挑选后的中文STS数据集[shibing624/nli-zh-all/text2vec-base-chinese-sentence-dataset](https://huggingface.co/datasets/shibing624/nli-zh-all/tree/main/text2vec-base-chinese-sentence-dataset)训练得到，并在中文各NLI测试集评估达到较好效果，运行[examples/training_sup_text_matching_model_jsonl_data.py](https://github.com/shibing624/text2vec/blob/master/examples/training_sup_text_matching_model_jsonl_data.py)代码可训练模型，模型文件已经上传HF model hub，中文s2s(句子vs句子)语义匹配任务推荐使用\n- `shibing624/text2vec-base-chinese-paraphrase`模型，是用CoSENT方法训练，基于`nghuyong/ernie-3.0-base-zh`用人工挑选后的中文STS数据集[shibing624/nli-zh-all/text2vec-base-chinese-paraphrase-dataset](https://huggingface.co/datasets/shibing624/nli-zh-all/tree/main/text2vec-base-chinese-paraphrase-dataset)，数据集相对于[shibing624/nli-zh-all/text2vec-base-chinese-sentence-dataset](https://huggingface.co/datasets/shibing624/nli-zh-all/tree/main/text2vec-base-chinese-sentence-dataset)加入了s2p(sentence to paraphrase)数据，强化了其长文本的表征能力，并在中文各NLI测试集评估达到SOTA，运行[examples/training_sup_text_matching_model_jsonl_data.py](https://github.com/shibing624/text2vec/blob/master/examples/training_sup_text_matching_model_jsonl_data.py)代码可训练模型，模型文件已经上传HF model hub，中文s2p(句子vs段落)语义匹配任务推荐使用\n- `shibing624/text2vec-base-multilingual`模型，是用CoSENT方法训练，基于`sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2`用人工挑选后的多语言STS数据集[shibing624/nli-zh-all/text2vec-base-multilingual-dataset](https://huggingface.co/datasets/shibing624/nli-zh-all/tree/main/text2vec-base-multilingual-dataset)训练得到，并在中英文测试集评估相对于原模型效果有提升，运行[examples/training_sup_text_matching_model_jsonl_data.py](https://github.com/shibing624/text2vec/blob/master/examples/training_sup_text_matching_model_jsonl_data.py)代码可训练模型，模型文件已经上传HF model hub，多语言语义匹配任务推荐使用\n- `shibing624/text2vec-bge-large-chinese`模型，是用CoSENT方法训练，基于`BAAI/bge-large-zh-noinstruct`用人工挑选后的中文STS数据集[shibing624/nli-zh-all/text2vec-base-chinese-paraphrase-dataset](https://huggingface.co/datasets/shibing624/nli-zh-all/tree/main/text2vec-base-chinese-paraphrase-dataset)训练得到，并在中文测试集评估相对于原模型效果有提升，在短文本区分度上提升明显，运行[examples/training_sup_text_matching_model_jsonl_data.py](https://github.com/shibing624/text2vec/blob/master/examples/training_sup_text_matching_model_jsonl_data.py)代码可训练模型，模型文件已经上传HF model hub，中文s2s(句子vs句子)语义匹配任务推荐使用\n- `w2v-light-tencent-chinese`是腾讯词向量的Word2Vec模型，CPU加载使用，适用于中文字面匹配任务和缺少数据的冷启动情况\n- 各预训练模型均可以通过transformers调用，如MacBERT模型：`--model_name hfl/chinese-macbert-base` 或者roberta模型：`--model_name uer/roberta-medium-wwm-chinese-cluecorpussmall`\n- 为测评模型的鲁棒性，加入了未训练过的SOHU测试集，用于测试模型的泛化能力；为达到开箱即用的实用效果，使用了搜集到的各中文匹配数据集，数据集也上传到HF datasets[链接见下方](#数据集)\n- 中文匹配任务实验表明，pooling最优是`EncoderType.FIRST_LAST_AVG`和`EncoderType.MEAN`，两者预测效果差异很小\n- 中文匹配评测结果复现，可以下载中文匹配数据集到`examples/data`，运行 [tests/model_spearman.py](https://github.com/shibing624/text2vec/blob/master/tests/model_spearman.py) 代码复现评测结果\n- QPS的GPU测试环境是Tesla V100，显存32GB\n\n模型训练实验报告：[实验报告](https://github.com/shibing624/text2vec/blob/master/docs/model_report.md)\n## Demo\n\nOfficial Demo: https://www.mulanai.com/product/short_text_sim/\n\nHuggingFace Demo: https://huggingface.co/spaces/shibing624/text2vec\n\n![](docs/hf.png)\n\nrun example: [examples/gradio_demo.py](https://github.com/shibing624/text2vec/blob/master/examples/gradio_demo.py) to see the demo:\n```shell\npython examples/gradio_demo.py\n```\n\n## Install\n```shell\npip install torch # conda install pytorch\npip install -U text2vec\n```\n\nor\n\n```shell\npip install torch # conda install pytorch\npip install -r requirements.txt\n\ngit clone https://github.com/shibing624/text2vec.git\ncd text2vec\npip install --no-deps .\n```\n\n## Usage\n\n### 文本向量表征\n\n基于`pretrained model`计算文本向量：\n\n```zsh\n>>> from text2vec import SentenceModel\n>>> m = SentenceModel()\n>>> m.encode(\"如何更换花呗绑定银行卡\")\nEmbedding shape: (768,)\n```\n\nexample: [examples/computing_embeddings_demo.py](https://github.com/shibing624/text2vec/blob/master/examples/computing_embeddings_demo.py)\n\n```python\nimport sys\n\nsys.path.append('..')\nfrom text2vec import SentenceModel\nfrom text2vec import Word2Vec\n\n\ndef compute_emb(model):\n    # Embed a list of sentences\n    sentences = [\n        '卡',\n        '银行卡',\n        '如何更换花呗绑定银行卡',\n        '花呗更改绑定银行卡',\n        'This framework generates embeddings for each input sentence',\n        'Sentences are passed as a list of string.',\n        'The quick brown fox jumps over the lazy dog.'\n    ]\n    sentence_embeddings = model.encode(sentences)\n    print(type(sentence_embeddings), sentence_embeddings.shape)\n\n    # The result is a list of sentence embeddings as numpy arrays\n    for sentence, embedding in zip(sentences, sentence_embeddings):\n        print(\"Sentence:\", sentence)\n        print(\"Embedding shape:\", embedding.shape)\n        print(\"Embedding head:\", embedding[:10])\n        print()\n\n\nif __name__ == \"__main__\":\n    # 中文句向量模型(CoSENT)，中文语义匹配任务推荐，支持fine-tune继续训练\n    t2v_model = SentenceModel(\"shibing624/text2vec-base-chinese\")\n    compute_emb(t2v_model)\n\n    # 支持多语言的句向量模型（CoSENT），多语言（包括中英文）语义匹配任务推荐，支持fine-tune继续训练\n    sbert_model = SentenceModel(\"shibing624/text2vec-base-multilingual\")\n    compute_emb(sbert_model)\n\n    # 中文词向量模型(word2vec)，中文字面匹配任务和冷启动适用\n    w2v_model = Word2Vec(\"w2v-light-tencent-chinese\")\n    compute_emb(w2v_model)\n\n```\n\noutput:\n```\n<class 'numpy.ndarray'> (7, 768)\nSentence: 卡\nEmbedding shape: (768,)\n\nSentence: 银行卡\nEmbedding shape: (768,)\n ... \n```\n\n- 返回值`embeddings`是`numpy.ndarray`类型，shape为`(sentences_size, model_embedding_size)`，三个模型任选一种即可，推荐用第一个。\n- `shibing624/text2vec-base-chinese`模型是CoSENT方法在中文STS-B数据集训练得到的，模型已经上传到huggingface的\n模型库[shibing624/text2vec-base-chinese](https://huggingface.co/shibing624/text2vec-base-chinese)，\n是`text2vec.SentenceModel`指定的默认模型，可以通过上面示例调用，或者如下所示用[transformers库](https://github.com/huggingface/transformers)调用，\n模型自动下载到本机路径：`~/.cache/huggingface/transformers`\n- `w2v-light-tencent-chinese`是通过gensim加载的Word2Vec模型，使用腾讯词向量`Tencent_AILab_ChineseEmbedding.tar.gz`计算各字词的词向量，句子向量通过单词词\n向量取平均值得到，模型自动下载到本机路径：`~/.text2vec/datasets/light_Tencent_AILab_ChineseEmbedding.bin`\n- `text2vec`支持多卡推理(计算文本向量): [examples/computing_embeddings_multi_gpu_demo.py](https://github.com/shibing624/text2vec/blob/master/examples/computing_embeddings_multi_gpu_demo.py)\n\n#### Usage (HuggingFace Transformers)\nWithout [text2vec](https://github.com/shibing624/text2vec), you can use the model like this: \n\nFirst, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.\n\nexample: [examples/use_origin_transformers_demo.py](https://github.com/shibing624/text2vec/blob/master/examples/use_origin_transformers_demo.py)\n\n```python\nimport os\nimport torch\nfrom transformers import AutoTokenizer, AutoModel\n\nos.environ[\"KMP_DUPLICATE_LIB_OK\"] = \"TRUE\"\n\n\n# Mean Pooling - Take attention mask into account for correct averaging\ndef mean_pooling(model_output, attention_mask):\n    token_embeddings = model_output[0]  # First element of model_output contains all token embeddings\n    input_mask_expanded = attention_mask.unsqueeze(-1).expand(token_embeddings.size()).float()\n    return torch.sum(token_embeddings * input_mask_expanded, 1) / torch.clamp(input_mask_expanded.sum(1), min=1e-9)\n\n\n# Load model from HuggingFace Hub\ntokenizer = AutoTokenizer.from_pretrained('shibing624/text2vec-base-chinese')\nmodel = AutoModel.from_pretrained('shibing624/text2vec-base-chinese')\nsentences = ['如何更换花呗绑定银行卡', '花呗更改绑定银行卡']\n# Tokenize sentences\nencoded_input = tokenizer(sentences, padding=True, truncation=True, return_tensors='pt')\n\n# Compute token embeddings\nwith torch.no_grad():\n    model_output = model(**encoded_input)\n# Perform pooling. In this case, max pooling.\nsentence_embeddings = mean_pooling(model_output, encoded_input['attention_mask'])\nprint(\"Sentence embeddings:\")\nprint(sentence_embeddings)\n```\n\n#### Usage (sentence-transformers)\n[sentence-transformers](https://github.com/UKPLab/sentence-transformers) is a popular library to compute dense vector representations for sentences.\n\nInstall sentence-transformers:\n```shell\npip install -U sentence-transformers\n```\nThen load model and predict:\n```python\nfrom sentence_transformers import SentenceTransformer\n\nm = SentenceTransformer(\"shibing624/text2vec-base-chinese\")\nsentences = ['如何更换花呗绑定银行卡', '花呗更改绑定银行卡']\n\nsentence_embeddings = m.encode(sentences)\nprint(\"Sentence embeddings:\")\nprint(sentence_embeddings)\n```\n\n#### `Word2Vec`词向量\n\n提供两种`Word2Vec`词向量，任选一个：\n\n  - 轻量版腾讯词向量 [百度云盘-密码:tawe](https://pan.baidu.com/s/1La4U4XNFe8s5BJqxPQpeiQ) 或 [谷歌云盘](https://drive.google.com/u/0/uc?id=1iQo9tBb2NgFOBxx0fA16AZpSgc-bG_Rp&export=download)，二进制文件，111M，是简化后的高频143613个词，每个词向量还是200维（跟原版一样），运行程序，自动下载到 `~/.text2vec/datasets/light_Tencent_AILab_ChineseEmbedding.bin`\n  - 腾讯词向量-官方全量, 6.78G放到： `~/.text2vec/datasets/Tencent_AILab_ChineseEmbedding.txt`，腾讯词向量主页：https://ai.tencent.com/ailab/nlp/zh/index.html 词向量下载地址：https://ai.tencent.com/ailab/nlp/en/download.html  更多查看[腾讯词向量介绍-wiki](https://github.com/shibing624/text2vec/wiki/%E8%85%BE%E8%AE%AF%E8%AF%8D%E5%90%91%E9%87%8F%E4%BB%8B%E7%BB%8D)\n\n\n### 命令行模式（CLI）\n\n支持批量获取文本向量\n\ncode: [cli.py](https://github.com/shibing624/text2vec/blob/master/text2vec/cli.py)\n\n```\n> text2vec -h                                    \nusage: text2vec [-h] --input_file INPUT_FILE [--output_file OUTPUT_FILE] [--model_type MODEL_TYPE] [--model_name MODEL_NAME] [--encoder_type ENCODER_TYPE]\n                [--batch_size BATCH_SIZE] [--max_seq_length MAX_SEQ_LENGTH] [--chunk_size CHUNK_SIZE] [--device DEVICE]\n                [--show_progress_bar SHOW_PROGRESS_BAR] [--normalize_embeddings NORMALIZE_EMBEDDINGS]\n\ntext2vec cli\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --input_file INPUT_FILE\n                        input file path, text file, required\n  --output_file OUTPUT_FILE\n                        output file path, output csv file, default text_embs.csv\n  --model_type MODEL_TYPE\n                        model type: sentencemodel, word2vec, default sentencemodel\n  --model_name MODEL_NAME\n                        model name or path, default shibing624/text2vec-base-chinese\n  --encoder_type ENCODER_TYPE\n                        encoder type: MEAN, CLS, POOLER, FIRST_LAST_AVG, LAST_AVG, default MEAN\n  --batch_size BATCH_SIZE\n                        batch size, default 32\n  --max_seq_length MAX_SEQ_LENGTH\n                        max sequence length, default 256\n  --chunk_size CHUNK_SIZE\n                        chunk size to save partial results, default 1000\n  --device DEVICE       device: cpu, cuda, default None\n  --show_progress_bar SHOW_PROGRESS_BAR\n                        show progress bar, default True\n  --normalize_embeddings NORMALIZE_EMBEDDINGS\n                        normalize embeddings, default False\n  --multi_gpu MULTI_GPU\n                        multi gpu, default False\n```\n\nrun：\n\n```shell\npip install text2vec -U\ntext2vec --input_file input.txt --output_file out.csv --batch_size 128 --multi_gpu True\n```\n\n> 输入文件（required）：`input.txt`\n\n## 下游任务\n### 1. 句子相似度计算\n\nexample: [examples/semantic_text_similarity_demo.py](https://github.com/shibing624/text2vec/blob/master/examples/semantic_text_similarity_demo.py)\n\n```python\nimport sys\n\nsys.path.append('..')\nfrom text2vec import Similarity\n\n# Two lists of sentences\nsentences1 = ['如何更换花呗绑定银行卡',\n              'The cat sits outside',\n              'A man is playing guitar',\n              'The new movie is awesome']\n\nsentences2 = ['花呗更改绑定银行卡',\n              'The dog plays in the garden',\n              'A woman watches TV',\n              'The new movie is so great']\n\nsim_model = Similarity()\nfor i in range(len(sentences1)):\n    for j in range(len(sentences2)):\n        score = sim_model.get_score(sentences1[i], sentences2[j])\n        print(\"{} \\t\\t {} \\t\\t Score: {:.4f}\".format(sentences1[i], sentences2[j], score))\n```\n\noutput:\n```shell\n如何更换花呗绑定银行卡 \t\t 花呗更改绑定银行卡 \t\t Score: 0.9477\n如何更换花呗绑定银行卡 \t\t The dog plays in the garden \t\t Score: -0.1748\n如何更换花呗绑定银行卡 \t\t A woman watches TV \t\t Score: -0.0839\n如何更换花呗绑定银行卡 \t\t The new movie is so great \t\t Score: -0.0044\nThe cat sits outside \t\t 花呗更改绑定银行卡 \t\t Score: -0.0097\nThe cat sits outside \t\t The dog plays in the garden \t\t Score: 0.1908\nThe cat sits outside \t\t A woman watches TV \t\t Score: -0.0203\nThe cat sits outside \t\t The new movie is so great \t\t Score: 0.0302\nA man is playing guitar \t\t 花呗更改绑定银行卡 \t\t Score: -0.0010\nA man is playing guitar \t\t The dog plays in the garden \t\t Score: 0.1062\nA man is playing guitar \t\t A woman watches TV \t\t Score: 0.0055\nA man is playing guitar \t\t The new movie is so great \t\t Score: 0.0097\nThe new movie is awesome \t\t 花呗更改绑定银行卡 \t\t Score: 0.0302\nThe new movie is awesome \t\t The dog plays in the garden \t\t Score: -0.0160\nThe new movie is awesome \t\t A woman watches TV \t\t Score: 0.1321\nThe new movie is awesome \t\t The new movie is so great \t\t Score: 0.9591\n```\n\n> 句子余弦相似度值`score`范围是[-1, 1]，值越大越相似。\n\n### 2. 文本匹配搜索\n\n一般在文档候选集中找与query最相似的文本，常用于QA场景的问句相似匹配、文本相似检索等任务。\n\n\nexample: [examples/semantic_search_demo.py](https://github.com/shibing624/text2vec/blob/master/examples/semantic_search_demo.py)\n\n```python\nimport sys\n\nsys.path.append('..')\nfrom text2vec import SentenceModel, cos_sim, semantic_search\n\nembedder = SentenceModel()\n\n# Corpus with example sentences\ncorpus = [\n    '花呗更改绑定银行卡',\n    '我什么时候开通了花呗',\n    'A man is eating food.',\n    'A man is eating a piece of bread.',\n    'The girl is carrying a baby.',\n    'A man is riding a horse.',\n    'A woman is playing violin.',\n    'Two men pushed carts through the woods.',\n    'A man is riding a white horse on an enclosed ground.',\n    'A monkey is playing drums.',\n    'A cheetah is running behind its prey.'\n]\ncorpus_embeddings = embedder.encode(corpus)\n\n# Query sentences:\nqueries = [\n    '如何更换花呗绑定银行卡',\n    'A man is eating pasta.',\n    'Someone in a gorilla costume is playing a set of drums.',\n    'A cheetah chases prey on across a field.']\n\nfor query in queries:\n    query_embedding = embedder.encode(query)\n    hits = semantic_search(query_embedding, corpus_embeddings, top_k=5)\n    print(\"\\n\\n======================\\n\\n\")\n    print(\"Query:\", query)\n    print(\"\\nTop 5 most similar sentences in corpus:\")\n    hits = hits[0]  # Get the hits for the first query\n    for hit in hits:\n        print(corpus[hit['corpus_id']], \"(Score: {:.4f})\".format(hit['score']))\n```\noutput:\n```shell\nQuery: 如何更换花呗绑定银行卡\nTop 5 most similar sentences in corpus:\n花呗更改绑定银行卡 (Score: 0.9477)\n我什么时候开通了花呗 (Score: 0.3635)\nA man is eating food. (Score: 0.0321)\nA man is riding a horse. (Score: 0.0228)\nTwo men pushed carts through the woods. (Score: 0.0090)\n\n======================\nQuery: A man is eating pasta.\nTop 5 most similar sentences in corpus:\nA man is eating food. (Score: 0.6734)\nA man is eating a piece of bread. (Score: 0.4269)\nA man is riding a horse. (Score: 0.2086)\nA man is riding a white horse on an enclosed ground. (Score: 0.1020)\nA cheetah is running behind its prey. (Score: 0.0566)\n\n======================\nQuery: Someone in a gorilla costume is playing a set of drums.\nTop 5 most similar sentences in corpus:\nA monkey is playing drums. (Score: 0.8167)\nA cheetah is running behind its prey. (Score: 0.2720)\nA woman is playing violin. (Score: 0.1721)\nA man is riding a horse. (Score: 0.1291)\nA man is riding a white horse on an enclosed ground. (Score: 0.1213)\n\n======================\nQuery: A cheetah chases prey on across a field.\nTop 5 most similar sentences in corpus:\nA cheetah is running behind its prey. (Score: 0.9147)\nA monkey is playing drums. (Score: 0.2655)\nA man is riding a horse. (Score: 0.1933)\nA man is riding a white horse on an enclosed ground. (Score: 0.1733)\nA man is eating food. (Score: 0.0329)\n```\n\n \n\n## 下游任务支持库\n**similarities库[推荐]**\n\n文本相似度计算和文本匹配搜索任务，推荐使用 [similarities库](https://github.com/shibing624/similarities) ，兼容本项目release的\nWord2vec、SBERT、Cosent类语义匹配模型，还支持字面维度相似度计算、匹配搜索算法，支持文本、图像。\n\n安装：\n```pip install -U similarities```\n\n句子相似度计算：\n```python\nfrom similarities import Similarity\n\nm = Similarity()\nr = m.similarity('如何更换花呗绑定银行卡', '花呗更改绑定银行卡')\nprint(f\"similarity score: {float(r)}\")  # similarity score: 0.855146050453186\n```\n\n## Models\n\n### CoSENT model\n\nCoSENT（Cosine Sentence）文本匹配模型，在Sentence-BERT上改进了CosineRankLoss的句向量方案\n\n\nNetwork structure:\n\nTraining:\n\n<img src=\"docs/cosent_train.png\" width=\"300\" />\n\n\nInference:\n\n<img src=\"docs/inference.png\" width=\"300\" />\n\n#### CoSENT 监督模型\n训练和预测CoSENT模型：\n\n- 在中文STS-B数据集训练和评估`CoSENT`模型\n\nexample: [examples/training_sup_text_matching_model.py](https://github.com/shibing624/text2vec/blob/master/examples/training_sup_text_matching_model.py)\n\n```shell\ncd examples\npython training_sup_text_matching_model.py --model_arch cosent --do_train --do_predict --num_epochs 10 --model_name hfl/chinese-macbert-base --output_dir ./outputs/STS-B-cosent\n```\n\n- 在蚂蚁金融匹配数据集ATEC上训练和评估`CoSENT`模型\n\n支持这些中文匹配数据集的使用：'ATEC', 'STS-B', 'BQ', 'LCQMC', 'PAWSX'，具体参考HuggingFace datasets [https://huggingface.co/datasets/shibing624/nli_zh](https://huggingface.co/datasets/shibing624/nli_zh)\n```shell\npython training_sup_text_matching_model.py --task_name ATEC --model_arch cosent --do_train --do_predict --num_epochs 10 --model_name hfl/chinese-macbert-base --output_dir ./outputs/ATEC-cosent\n```\n\n- 在自有中文数据集上训练模型\n\nexample: [examples/training_sup_text_matching_model_mydata.py](https://github.com/shibing624/text2vec/blob/master/examples/training_sup_text_matching_model_mydata.py)\n\n单卡训练：\n```shell\nCUDA_VISIBLE_DEVICES=0 python training_sup_text_matching_model_mydata.py --do_train --do_predict\n```\n\n多卡训练：\n```shell\nCUDA_VISIBLE_DEVICES=0,1 torchrun --nproc_per_node 2  training_sup_text_matching_model_mydata.py --do_train --do_predict --output_dir outputs/STS-B-text2vec-macbert-v1 --batch_size 64 --bf16 --data_parallel \n```\n\n训练集格式参考[examples/data/STS-B/STS-B.valid.data](https://github.com/shibing624/text2vec/blob/master/examples/data/STS-B/STS-B.valid.data)\n\n```shell\nsentence1   sentence2   label\n一个女孩在给她的头发做发型。\t一个女孩在梳头。\t2\n一群男人在海滩上踢足球。\t一群男孩在海滩上踢足球。\t3\n一个女人在测量另一个女人的脚踝。\t女人测量另一个女人的脚踝。\t5\n```\n\n`label`可以是0，1标签，0代表两个句子不相似，1代表相似；也可以是0-5的评分，评分越高，表示两个句子越相似。模型都能支持。\n\n\n- 在英文STS-B数据集训练和评估`CoSENT`模型\n\nexample: [examples/training_sup_text_matching_model_en.py](https://github.com/shibing624/text2vec/blob/master/examples/training_sup_text_matching_model_en.py)\n\n```shell\ncd examples\npython training_sup_text_matching_model_en.py --model_arch cosent --do_train --do_predict --num_epochs 10 --model_name bert-base-uncased  --output_dir ./outputs/STS-B-en-cosent\n```\n\n#### CoSENT 无监督模型\n- 在英文NLI数据集训练`CoSENT`模型，在STS-B测试集评估效果\n\nexample: [examples/training_unsup_text_matching_model_en.py](https://github.com/shibing624/text2vec/blob/master/examples/training_unsup_text_matching_model_en.py)\n\n```shell\ncd examples\npython training_unsup_text_matching_model_en.py --model_arch cosent --do_train --do_predict --num_epochs 10 --model_name bert-base-uncased --output_dir ./outputs/STS-B-en-unsup-cosent\n```\n\n\n### Sentence-BERT model\n\nSentence-BERT文本匹配模型，表征式句向量表示方案\n\nNetwork structure:\n\nTraining:\n\n<img src=\"docs/sbert_train.png\" width=\"300\" />\n\n\nInference:\n\n<img src=\"docs/sbert_inference.png\" width=\"300\" />\n\n#### SentenceBERT 监督模型\n- 在中文STS-B数据集训练和评估`SBERT`模型\n\nexample: [examples/training_sup_text_matching_model.py](https://github.com/shibing624/text2vec/blob/master/examples/training_sup_text_matching_model.py)\n\n```shell\ncd examples\npython training_sup_text_matching_model.py --model_arch sentencebert --do_train --do_predict --num_epochs 10 --model_name hfl/chinese-macbert-base --output_dir ./outputs/STS-B-sbert\n```\n- 在英文STS-B数据集训练和评估`SBERT`模型\n\nexample: [examples/training_sup_text_matching_model_en.py](https://github.com/shibing624/text2vec/blob/master/examples/training_sup_text_matching_model_en.py)\n\n```shell\ncd examples\npython training_sup_text_matching_model_en.py --model_arch sentencebert --do_train --do_predict --num_epochs 10 --model_name bert-base-uncased --output_dir ./outputs/STS-B-en-sbert\n```\n\n#### SentenceBERT 无监督模型\n- 在英文NLI数据集训练`SBERT`模型，在STS-B测试集评估效果\n\nexample: [examples/training_unsup_text_matching_model_en.py](https://github.com/shibing624/text2vec/blob/master/examples/training_unsup_text_matching_model_en.py)\n\n```shell\ncd examples\npython training_unsup_text_matching_model_en.py --model_arch sentencebert --do_train --do_predict --num_epochs 10 --model_name bert-base-uncased --output_dir ./outputs/STS-B-en-unsup-sbert\n```\n\n### BERT-Match model\nBERT文本匹配模型，原生BERT匹配网络结构，交互式句向量匹配模型\n\nNetwork structure:\n\nTraining and inference:\n\n<img src=\"docs/bert-fc-train.png\" width=\"300\" />\n\n训练脚本同上[examples/training_sup_text_matching_model.py](https://github.com/shibing624/text2vec/blob/master/examples/training_sup_text_matching_model.py)。\n\n\n\n### BGE model\n\n#### BGE 监督模型\n- 在中文STS-B数据集训练和评估`BGE`模型\n\nexample: [examples/training_bge_model_mydata.py](https://github.com/shibing624/text2vec/blob/master/examples/training_bge_model_mydata.py)\n\n```shell\ncd examples\npython training_bge_model_mydata.py --model_arch bge --do_train --do_predict --num_epochs 4 --output_dir ./outputs/STS-B-bge-v1 --batch_size 4 --save_model_every_epoch --bf16\n```\n\n- 自建BGE训练集\n\nBGE模型微调训练，使用对比学习训练模型，输入数据的格式是一个三元组' (query, positive, negative) '\n\n```shell\ncd examples/data\npython build_zh_bge_dataset.py\npython hard_negatives_mine.py\n```\n1. `build_zh_bge_dataset.py` 基于中文STS-B生成三元组训练集，格式如下：\n```json lines\n{\"query\":\"一个男人正在往锅里倒油。\",\"pos\":[\"一个男人正在往锅里倒油。\"],\"neg\":[\"亲俄军队进入克里米亚乌克兰海军基地\",\"配有木制家具的优雅餐厅。\",\"马雅瓦蒂要求总统统治查谟和克什米尔\",\"非典还夺去了多伦多地区44人的生命，其中包括两名护士和一名医生。\",\"在一次采访中，身为犯罪学家的希利说，这里和全国各地的许多议员都对死刑抱有戒心。\",\"豚鼠吃胡萝卜。\",\"狗嘴里叼着一根棍子在水中游泳。\",\"拉里·佩奇说Android很重要，不是关键\",\"法国、比利时、德国、瑞典、意大利和英国为印度计划向缅甸出售的先进轻型直升机提供零部件和技术。\",\"巴林赛马会在动乱中进行\"]}\n```\n2. `hard_negatives_mine.py` 使用faiss相似匹配，挖掘难负例。\n\n\n### 模型蒸馏（Model Distillation）\n\n由于text2vec训练的模型可以使用[sentence-transformers](https://github.com/UKPLab/sentence-transformers)库加载，此处复用其模型蒸馏方法[distillation](https://github.com/UKPLab/sentence-transformers/tree/master/examples/training/distillation)。\n\n1. 模型降维，参考[dimensionality_reduction.py](https://github.com/UKPLab/sentence-transformers/blob/master/examples/training/distillation/dimensionality_reduction.py)使用PCA对模型输出embedding降维，可减少milvus等向量检索数据库的存储压力，还能轻微提升模型效果。\n2. 模型蒸馏，参考[model_distillation.py](https://github.com/UKPLab/sentence-transformers/blob/master/examples/training/distillation/model_distillation.py)使用蒸馏方法，将Teacher大模型蒸馏到更少layers层数的student模型中，在权衡效果的情况下，可大幅提升模型预测速度。\n\n### 模型部署\n\n提供两种部署模型，搭建服务的方法： 1）基于Jina搭建gRPC服务【推荐】；2）基于FastAPI搭建原生Http服务。\n\n#### Jina服务\n采用C/S模式搭建高性能服务，支持docker云原生，gRPC/HTTP/WebSocket，支持多个模型同时预测，GPU多卡处理。\n\n- 安装：\n```pip install jina```\n\n- 启动服务：\n\nexample: [examples/jina_server_demo.py](examples/jina_server_demo.py)\n```python\nfrom jina import Flow\n\nport = 50001\nf = Flow(port=port).add(\n    uses='jinahub://Text2vecEncoder',\n    uses_with={'model_name': 'shibing624/text2vec-base-chinese'}\n)\n\nwith f:\n    # backend server forever\n    f.block()\n```\n\n该模型预测方法（executor）已经上传到[JinaHub](https://hub.jina.ai/executor/eq45c9uq)，里面包括docker、k8s部署方法。\n\n- 调用服务：\n\n\n```python\nfrom jina import Client\nfrom docarray import Document, DocumentArray\n\nport = 50001\n\nc = Client(port=port)\n\ndata = ['如何更换花呗绑定银行卡',\n        '花呗更改绑定银行卡']\nprint(\"data:\", data)\nprint('data embs:')\nr = c.post('/', inputs=DocumentArray([Document(text='如何更换花呗绑定银行卡'), Document(text='花呗更改绑定银行卡')]))\nprint(r.embeddings)\n```\n\n批量调用方法见example: [examples/jina_client_demo.py](https://github.com/shibing624/text2vec/blob/master/examples/jina_client_demo.py)\n\n\n#### FastAPI服务\n\n- 安装：\n```pip install fastapi uvicorn```\n\n- 启动服务：\n\nexample: [examples/fastapi_server_demo.py](https://github.com/shibing624/text2vec/blob/master/examples/fastapi_server_demo.py)\n```shell\ncd examples\npython fastapi_server_demo.py\n```\n\n- 调用服务：\n```shell\ncurl -X 'GET' \\\n  'http://0.0.0.0:8001/emb?q=hello' \\\n  -H 'accept: application/json'\n```\n\n\n## Dataset\n\n- 本项目release的数据集：\n\n| Dataset                    | Introduce                                                                | Download Link                                                                                                                                                                                                                                                                                         |\n|:---------------------------|:-------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| shibing624/nli-zh-all      | 中文语义匹配数据合集，整合了文本推理，相似，摘要，问答，指令微调等任务的820万高质量数据，并转化为匹配格式数据集                | [https://huggingface.co/datasets/shibing624/nli-zh-all](https://huggingface.co/datasets/shibing624/nli-zh-all)                                                                                                                                                                                        |\n| shibing624/snli-zh         | 中文SNLI和MultiNLI数据集，翻译自英文SNLI和MultiNLI                                    | [https://huggingface.co/datasets/shibing624/snli-zh](https://huggingface.co/datasets/shibing624/snli-zh)                                                                                                                                                                                              |\n| shibing624/nli_zh          | 中文语义匹配数据集，整合了中文ATEC、BQ、LCQMC、PAWSX、STS-B共5个任务的数据集                        | [https://huggingface.co/datasets/shibing624/nli_zh](https://huggingface.co/datasets/shibing624/nli_zh) </br> or </br> [百度网盘(提取码:qkt6)](https://pan.baidu.com/s/1d6jSiU1wHQAEMWJi7JJWCQ) </br> or </br> [github](https://github.com/shibing624/text2vec/releases/download/1.1.2/senteval_cn.zip) </br> |\n| shibing624/sts-sohu2021    | 中文语义匹配数据集，2021搜狐校园文本匹配算法大赛数据集                                            | [https://huggingface.co/datasets/shibing624/sts-sohu2021](https://huggingface.co/datasets/shibing624/sts-sohu2021)                                                                                                                                                                                    |\n| ATEC                       | 中文ATEC数据集，蚂蚁金服Q-Qpair数据集                                                 | [ATEC](https://github.com/IceFlameWorm/NLP_Datasets/tree/master/ATEC)                                                                                                                                                                                                                                 |\n| BQ                         | 中文BQ(Bank Question)数据集，银行Q-Qpair数据集                                      | [BQ](http://icrc.hitsz.edu.cn/info/1037/1162.htm)                                                                                                                                                                                                                                                     |\n| LCQMC                      | 中文LCQMC(large-scale Chinese question matching corpus)数据集，Q-Qpair数据集      | [LCQMC](http://icrc.hitsz.edu.cn/Article/show/171.html)                                                                                                                                                                                                                                               |\n| PAWSX                      | 中文PAWS(Paraphrase Adversaries from Word Scrambling)数据集，Q-Qpair数据集        | [PAWSX](https://arxiv.org/abs/1908.11828)                                                                                                                                                                                                                                                             |\n| STS-B                      | 中文STS-B数据集，中文自然语言推理数据集，从英文STS-B翻译为中文的数据集                                 | [STS-B](https://github.com/pluto-junzeng/CNSD)                                                                                                                                                                                                                                                        |\n\n\n常用英文匹配数据集：\n\n- 英文匹配数据集：multi_nli: https://huggingface.co/datasets/multi_nli\n- 英文匹配数据集：snli: https://huggingface.co/datasets/snli\n- https://huggingface.co/datasets/metaeval/cnli\n- https://huggingface.co/datasets/mteb/stsbenchmark-sts\n- https://huggingface.co/datasets/JeremiahZ/simcse_sup_nli\n- https://huggingface.co/datasets/MoritzLaurer/multilingual-NLI-26lang-2mil7\n\n\n数据集使用示例：\n```shell\npip install datasets\n```\n\n```python\nfrom datasets import load_dataset\n\ndataset = load_dataset(\"shibing624/nli_zh\", \"STS-B\") # ATEC or BQ or LCQMC or PAWSX or STS-B\nprint(dataset)\nprint(dataset['test'][0])\n```\n\noutput:\n```shell\nDatasetDict({\n    train: Dataset({\n        features: ['sentence1', 'sentence2', 'label'],\n        num_rows: 5231\n    })\n    validation: Dataset({\n        features: ['sentence1', 'sentence2', 'label'],\n        num_rows: 1458\n    })\n    test: Dataset({\n        features: ['sentence1', 'sentence2', 'label'],\n        num_rows: 1361\n    })\n})\n{'sentence1': '一个女孩在给她的头发做发型。', 'sentence2': '一个女孩在梳头。', 'label': 2}\n```\n\n\n\n\n\n## Contact\n\n- Issue(建议)：[![GitHub issues](https://img.shields.io/github/issues/shibing624/text2vec.svg)](https://github.com/shibing624/text2vec/issues)\n- 邮件我：xuming: xuming624@qq.com\n- 微信我：加我*微信号：xuming624, 备注：姓名-公司-NLP* 进NLP交流群。\n\n<img src=\"docs/wechat.jpeg\" width=\"200\" />\n\n\n## Citation\n\n如果你在研究中使用了text2vec，请按如下格式引用：\n\nAPA:\n```latex\nXu, M. Text2vec: Text to vector toolkit (Version 1.1.2) [Computer software]. https://github.com/shibing624/text2vec\n```\n\nBibTeX:\n```latex\n@misc{Text2vec,\n  author = {Ming Xu},\n  title = {Text2vec: Text to vector toolkit},\n  year = {2023},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/shibing624/text2vec}},\n}\n```\n\n## License\n\n\n授权协议为 [The Apache License 2.0](LICENSE)，可免费用做商业用途。请在产品说明中附加text2vec的链接和授权协议。\n\n\n## Contribute\n项目代码还很粗糙，如果大家对代码有所改进，欢迎提交回本项目，在提交之前，注意以下两点：\n\n - 在`tests`添加相应的单元测试\n - 使用`python -m pytest -v`来运行所有单元测试，确保所有单测都是通过的\n\n之后即可提交PR。\n\n## References\n- [将句子表示为向量（上）：无监督句子表示学习（sentence embedding）](https://www.cnblogs.com/llhthinker/p/10335164.html)\n- [将句子表示为向量（下）：无监督句子表示学习（sentence embedding）](https://www.cnblogs.com/llhthinker/p/10341841.html)\n- [A Simple but Tough-to-Beat Baseline for Sentence Embeddings[Sanjeev Arora and Yingyu Liang and Tengyu Ma, 2017]](https://openreview.net/forum?id=SyK00v5xx)\n- [四种计算文本相似度的方法对比[Yves Peirsman]](https://zhuanlan.zhihu.com/p/37104535)\n- [Improvements to BM25 and Language Models Examined](http://www.cs.otago.ac.nz/homepages/andrew/papers/2014-2.pdf)\n- [CoSENT：比Sentence-BERT更有效的句向量方案](https://kexue.fm/archives/8847)\n- [谈谈文本匹配和多轮检索](https://zhuanlan.zhihu.com/p/111769969)\n- [Sentence-transformers](https://www.sbert.net/examples/applications/computing-embeddings/README.html)\n- [One Embedder, Any Task: Instruction-Finetuned Text Embeddings](https://arxiv.org/abs/2212.09741)","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/shibing624/text2vec","keywords":"word embedding,text2vec,Chinese Text Similarity Calculation Tool,similarity,word2vec","license":"Apache License 2.0","maintainer":"","maintainer_email":"","name":"text2vec","package_url":"https://pypi.org/project/text2vec/","platform":null,"project_url":"https://pypi.org/project/text2vec/","project_urls":{"Homepage":"https://github.com/shibing624/text2vec"},"provides_extra":null,"release_url":"https://pypi.org/project/text2vec/1.2.9/","requires_dist":null,"requires_python":">=3.6.0","summary":"Text to vector Tool, encode text","version":"1.2.9","yanked":false,"yanked_reason":null},"last_serial":19822988,"releases":{"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"015004c8c6774bf0559ffa1df92f0727ae9a91e119c5e1df7515b86927f7cec8","md5":"93c4f54b7b6a164960049fe0cfef4b96","sha256":"07258f6ad2083e8e380ba19c6603492c0046d8307b3e7eeb59d20ecf1cb0a8f9"},"downloads":-1,"filename":"text2vec-0.1.1-py3.6.egg","has_sig":false,"md5_digest":"93c4f54b7b6a164960049fe0cfef4b96","packagetype":"bdist_egg","python_version":"3.6","requires_python":null,"size":129198,"upload_time":"2019-12-02T14:10:37","upload_time_iso_8601":"2019-12-02T14:10:37.221810Z","url":"https://files.pythonhosted.org/packages/01/50/04c8c6774bf0559ffa1df92f0727ae9a91e119c5e1df7515b86927f7cec8/text2vec-0.1.1-py3.6.egg","yanked":false,"yanked_reason":null}],"0.1.2":[{"comment_text":"","digests":{"blake2b_256":"9699c9b244f77d9afcd576790677dd73347a84ff40da5ca03737c0e39ea31dd1","md5":"54f731bdb4bbcaa96ffa3e3b37a73b1d","sha256":"d139d543c7cc201c53c32765d329c3c11e8daf55bdef8988b44475ac008bf458"},"downloads":-1,"filename":"text2vec-0.1.2.tar.gz","has_sig":false,"md5_digest":"54f731bdb4bbcaa96ffa3e3b37a73b1d","packagetype":"sdist","python_version":"source","requires_python":null,"size":47919,"upload_time":"2019-12-06T05:50:38","upload_time_iso_8601":"2019-12-06T05:50:38.992294Z","url":"https://files.pythonhosted.org/packages/96/99/c9b244f77d9afcd576790677dd73347a84ff40da5ca03737c0e39ea31dd1/text2vec-0.1.2.tar.gz","yanked":false,"yanked_reason":null}],"0.1.3":[{"comment_text":"","digests":{"blake2b_256":"1ab09f37ddc86cf0933036a86bd925c47851e43f0486884421a65aae6b128651","md5":"1e5afa529a38a64bbee6093ab58a8344","sha256":"839c407f4e5d78d3483845e9f1b846da1c496c80eabdebbd853910b9b68fadbc"},"downloads":-1,"filename":"text2vec-0.1.3.tar.gz","has_sig":false,"md5_digest":"1e5afa529a38a64bbee6093ab58a8344","packagetype":"sdist","python_version":"source","requires_python":null,"size":52444,"upload_time":"2019-12-07T03:33:56","upload_time_iso_8601":"2019-12-07T03:33:56.143864Z","url":"https://files.pythonhosted.org/packages/1a/b0/9f37ddc86cf0933036a86bd925c47851e43f0486884421a65aae6b128651/text2vec-0.1.3.tar.gz","yanked":false,"yanked_reason":null}],"0.1.4":[{"comment_text":"","digests":{"blake2b_256":"593598c4a7a8ad54cd978ba54d5159acd68d5317558df1d1efae000c4c52023e","md5":"859b94311c573391b9c168a34f43273f","sha256":"3a949380bc272b0a0ff26de69e3cf38d471f38d72042718f735108839a353314"},"downloads":-1,"filename":"text2vec-0.1.4.tar.gz","has_sig":false,"md5_digest":"859b94311c573391b9c168a34f43273f","packagetype":"sdist","python_version":"source","requires_python":null,"size":61298,"upload_time":"2020-03-02T06:39:19","upload_time_iso_8601":"2020-03-02T06:39:19.722251Z","url":"https://files.pythonhosted.org/packages/59/35/98c4a7a8ad54cd978ba54d5159acd68d5317558df1d1efae000c4c52023e/text2vec-0.1.4.tar.gz","yanked":false,"yanked_reason":null}],"0.1.5":[{"comment_text":"","digests":{"blake2b_256":"1fba19d2e41d54ffd2a93362ce8f43c3d69e9a070993b6dfaf5a46bff1a5c2f2","md5":"f07145b27d006ddb51edfbbfb257bd90","sha256":"cb511a8d174cf2fe97c54ebbbd13f96a98758220eb436e4eaeb71a03f96cabae"},"downloads":-1,"filename":"text2vec-0.1.5.tar.gz","has_sig":false,"md5_digest":"f07145b27d006ddb51edfbbfb257bd90","packagetype":"sdist","python_version":"source","requires_python":null,"size":61299,"upload_time":"2020-06-21T09:14:39","upload_time_iso_8601":"2020-06-21T09:14:39.560479Z","url":"https://files.pythonhosted.org/packages/1f/ba/19d2e41d54ffd2a93362ce8f43c3d69e9a070993b6dfaf5a46bff1a5c2f2/text2vec-0.1.5.tar.gz","yanked":false,"yanked_reason":null}],"0.1.6":[{"comment_text":"","digests":{"blake2b_256":"e3a008cf70db6523bbea92a921d4cbc902b118bb729108aeba37292a5738016c","md5":"50da757478892f6c0e8154db16e94042","sha256":"199a2bea2381fd12a4d5dd40f565e668a7e2cd042239a097dab100c94f047022"},"downloads":-1,"filename":"text2vec-0.1.6.tar.gz","has_sig":false,"md5_digest":"50da757478892f6c0e8154db16e94042","packagetype":"sdist","python_version":"source","requires_python":null,"size":61930,"upload_time":"2020-12-01T13:31:12","upload_time_iso_8601":"2020-12-01T13:31:12.447911Z","url":"https://files.pythonhosted.org/packages/e3/a0/08cf70db6523bbea92a921d4cbc902b118bb729108aeba37292a5738016c/text2vec-0.1.6.tar.gz","yanked":false,"yanked_reason":null}],"0.1.7":[{"comment_text":"","digests":{"blake2b_256":"420cc8dc6a35896976a368915b8732e24ff287eafa1acf4ac1ee9f3766907a5b","md5":"3b625f1d4400d9a4e3d7ce3e31d183b2","sha256":"6358a3915d7973c9fb420075f40de4378f5b1ba6eb515252825290445c240efb"},"downloads":-1,"filename":"text2vec-0.1.7.tar.gz","has_sig":false,"md5_digest":"3b625f1d4400d9a4e3d7ce3e31d183b2","packagetype":"sdist","python_version":"source","requires_python":null,"size":61475,"upload_time":"2021-04-14T14:15:24","upload_time_iso_8601":"2021-04-14T14:15:24.864634Z","url":"https://files.pythonhosted.org/packages/42/0c/c8dc6a35896976a368915b8732e24ff287eafa1acf4ac1ee9f3766907a5b/text2vec-0.1.7.tar.gz","yanked":false,"yanked_reason":null}],"0.1.8":[{"comment_text":"","digests":{"blake2b_256":"dbe8444421be14fe249f99af1a418043bc75e165a1e7871d725fe225b3ebdbcd","md5":"dc74eb8ecc8459b2055a86770ead4f68","sha256":"412ec793e392d1c6b3915ca01caeb4217b514c244681a8f1f0b6f23ce62136c4"},"downloads":-1,"filename":"text2vec-0.1.8.tar.gz","has_sig":false,"md5_digest":"dc74eb8ecc8459b2055a86770ead4f68","packagetype":"sdist","python_version":"source","requires_python":null,"size":61814,"upload_time":"2021-05-21T11:49:55","upload_time_iso_8601":"2021-05-21T11:49:55.315855Z","url":"https://files.pythonhosted.org/packages/db/e8/444421be14fe249f99af1a418043bc75e165a1e7871d725fe225b3ebdbcd/text2vec-0.1.8.tar.gz","yanked":false,"yanked_reason":null}],"0.1.9":[{"comment_text":"","digests":{"blake2b_256":"0352f153b18954712ccbfc7257a860e7fbb7426323ae486b7a6ec7129d7ed26f","md5":"69de1c7c4c1af24d25d9ce7085f2b087","sha256":"db2b3770f9595416f47293e890b1b42a8f753a00c15b6cb5bc33ed618338378e"},"downloads":-1,"filename":"text2vec-0.1.9.tar.gz","has_sig":false,"md5_digest":"69de1c7c4c1af24d25d9ce7085f2b087","packagetype":"sdist","python_version":"source","requires_python":null,"size":67316,"upload_time":"2021-05-21T11:56:23","upload_time_iso_8601":"2021-05-21T11:56:23.118914Z","url":"https://files.pythonhosted.org/packages/03/52/f153b18954712ccbfc7257a860e7fbb7426323ae486b7a6ec7129d7ed26f/text2vec-0.1.9.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"87c6348806fe5b51a885da96e201dab32480fc7dffbbb7b793fa797a31ec775f","md5":"b6bc9033d81895846fc3198a145abdb4","sha256":"141521b37a43a09ece5de7f33d5a60f705669b94b20142bdec9e4c138eda799d"},"downloads":-1,"filename":"text2vec-0.2.0.tar.gz","has_sig":false,"md5_digest":"b6bc9033d81895846fc3198a145abdb4","packagetype":"sdist","python_version":"source","requires_python":null,"size":35983,"upload_time":"2021-08-17T05:58:53","upload_time_iso_8601":"2021-08-17T05:58:53.974268Z","url":"https://files.pythonhosted.org/packages/87/c6/348806fe5b51a885da96e201dab32480fc7dffbbb7b793fa797a31ec775f/text2vec-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.2.2":[{"comment_text":"","digests":{"blake2b_256":"6a9330e944ecc1806db299595aba0777e71baffbe8061742ea76c8fb5c9f174a","md5":"1ee7f429306580c006643bd6af9e5ce2","sha256":"507a87d6f782bffdf32ed247254b1f46fd9b1c0598256cedb58dc6c8ecfca4fe"},"downloads":-1,"filename":"text2vec-0.2.2.tar.gz","has_sig":false,"md5_digest":"1ee7f429306580c006643bd6af9e5ce2","packagetype":"sdist","python_version":"source","requires_python":null,"size":36018,"upload_time":"2021-09-04T02:38:13","upload_time_iso_8601":"2021-09-04T02:38:13.394782Z","url":"https://files.pythonhosted.org/packages/6a/93/30e944ecc1806db299595aba0777e71baffbe8061742ea76c8fb5c9f174a/text2vec-0.2.2.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"6572e1647610aa6968b5eff68ef50ead23677c074e52e5be4105aa72b6a2444a","md5":"5f0b4644826fb5e18997e8a9ddc16e8c","sha256":"da92b6d93249a3fbb4e02bc8b5cf57b663993f6529060d67b834b9abd38293ac"},"downloads":-1,"filename":"text2vec-1.0.0.tar.gz","has_sig":false,"md5_digest":"5f0b4644826fb5e18997e8a9ddc16e8c","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":37117,"upload_time":"2021-12-30T10:55:01","upload_time_iso_8601":"2021-12-30T10:55:01.331645Z","url":"https://files.pythonhosted.org/packages/65/72/e1647610aa6968b5eff68ef50ead23677c074e52e5be4105aa72b6a2444a/text2vec-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"eef4ed5a1c59f10110d716d7af8c3e0d11701e4dd6b7b92d97ba180a9198e397","md5":"26661faa8f7cfe51f0f17be99ce64321","sha256":"f62947e7139ceaad1127a4ceffeb8829c7d3f842e0b5be395aadb6d03db33326"},"downloads":-1,"filename":"text2vec-1.0.1.tar.gz","has_sig":false,"md5_digest":"26661faa8f7cfe51f0f17be99ce64321","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":38454,"upload_time":"2022-01-06T13:41:13","upload_time_iso_8601":"2022-01-06T13:41:13.669477Z","url":"https://files.pythonhosted.org/packages/ee/f4/ed5a1c59f10110d716d7af8c3e0d11701e4dd6b7b92d97ba180a9198e397/text2vec-1.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.0.2":[{"comment_text":"","digests":{"blake2b_256":"7073d5ecf84520dcae5cd61983716f8f42069f9d3fc32aad6031416229917807","md5":"dcd6c3967b482aa2d410bc678e02ca23","sha256":"d0d7a21fde57633f8cfc6b72f6eae56273e80daf0dd8d2a9b9341e56975f444d"},"downloads":-1,"filename":"text2vec-1.0.2.tar.gz","has_sig":false,"md5_digest":"dcd6c3967b482aa2d410bc678e02ca23","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":38474,"upload_time":"2022-01-07T06:49:41","upload_time_iso_8601":"2022-01-07T06:49:41.451540Z","url":"https://files.pythonhosted.org/packages/70/73/d5ecf84520dcae5cd61983716f8f42069f9d3fc32aad6031416229917807/text2vec-1.0.2.tar.gz","yanked":false,"yanked_reason":null}],"1.0.3":[{"comment_text":"","digests":{"blake2b_256":"9e843d7bb944cbf6d10cf114052f81a03db56b5f946b4ba8f707f8f2f6c0ef32","md5":"cd8ddbfaebdcd275c2c91922b50e0ac2","sha256":"8533575cca6e12a4a17fd24123cbaf99799d0e62762eeb285a1c359d57a9cf88"},"downloads":-1,"filename":"text2vec-1.0.3.tar.gz","has_sig":false,"md5_digest":"cd8ddbfaebdcd275c2c91922b50e0ac2","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":51055,"upload_time":"2022-01-23T07:47:13","upload_time_iso_8601":"2022-01-23T07:47:13.303779Z","url":"https://files.pythonhosted.org/packages/9e/84/3d7bb944cbf6d10cf114052f81a03db56b5f946b4ba8f707f8f2f6c0ef32/text2vec-1.0.3.tar.gz","yanked":false,"yanked_reason":null}],"1.0.4":[{"comment_text":"","digests":{"blake2b_256":"410186aa8e9ae52cd719c0d1710fed86491a455279f83d138f993c4271cd8c9c","md5":"abeb1fd6d721508b1f1fc8a4c0c82ec8","sha256":"b26ca4641a5474f09e53497fb49b090f78eabb3f2d31e10a24cbe85b32dbe25b"},"downloads":-1,"filename":"text2vec-1.0.4.tar.gz","has_sig":false,"md5_digest":"abeb1fd6d721508b1f1fc8a4c0c82ec8","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":809259,"upload_time":"2022-01-27T09:30:30","upload_time_iso_8601":"2022-01-27T09:30:30.419666Z","url":"https://files.pythonhosted.org/packages/41/01/86aa8e9ae52cd719c0d1710fed86491a455279f83d138f993c4271cd8c9c/text2vec-1.0.4.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"4622072d054271fc6da32787f6b3dfbce7b5ee271e25c70fc5305679659e290d","md5":"b3b764423e1611a555ac2cd4c4b62ac9","sha256":"ef2cc70ccf107829a9c60f675ca9783d2a36b1c946c743028f230e2198f84097"},"downloads":-1,"filename":"text2vec-1.1.0.tar.gz","has_sig":false,"md5_digest":"b3b764423e1611a555ac2cd4c4b62ac9","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":59932,"upload_time":"2022-02-26T06:30:00","upload_time_iso_8601":"2022-02-26T06:30:00.402337Z","url":"https://files.pythonhosted.org/packages/46/22/072d054271fc6da32787f6b3dfbce7b5ee271e25c70fc5305679659e290d/text2vec-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"fd52cf5e8a8a89ed5ad4a5f151e3ab6e584b4373aae2895331067fb39073acf5","md5":"83fb67ddebbfcd1e4405cc72895a83c4","sha256":"58960760b12c038603573894804a5277aa64d0291c7032595dbd738bef1fc554"},"downloads":-1,"filename":"text2vec-1.1.1.tar.gz","has_sig":false,"md5_digest":"83fb67ddebbfcd1e4405cc72895a83c4","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":59105,"upload_time":"2022-02-26T11:45:37","upload_time_iso_8601":"2022-02-26T11:45:37.273468Z","url":"https://files.pythonhosted.org/packages/fd/52/cf5e8a8a89ed5ad4a5f151e3ab6e584b4373aae2895331067fb39073acf5/text2vec-1.1.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.2":[{"comment_text":"","digests":{"blake2b_256":"eeb5ffd432321a5a140d2fcde70d7f9aecd796418847a241ae1c42eec53a89b5","md5":"b5fe961e20b8c363b73806b86e85d7e2","sha256":"4bfda664d1506a8c87e240621ccecba539f62d5095fad7bbab0fc040e42f4d87"},"downloads":-1,"filename":"text2vec-1.1.2.tar.gz","has_sig":false,"md5_digest":"b5fe961e20b8c363b73806b86e85d7e2","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":60284,"upload_time":"2022-02-27T11:24:23","upload_time_iso_8601":"2022-02-27T11:24:23.351536Z","url":"https://files.pythonhosted.org/packages/ee/b5/ffd432321a5a140d2fcde70d7f9aecd796418847a241ae1c42eec53a89b5/text2vec-1.1.2.tar.gz","yanked":false,"yanked_reason":null}],"1.1.3":[{"comment_text":"","digests":{"blake2b_256":"c29f48f449527af639188426e19cbe43a115e620953b7d09b308a19e1225b8e7","md5":"76eee96c21b5dd33bfc7b50d530b1790","sha256":"c587fb00012c1c07edc16e293e239177df8abefebb10a184956c393e8d72dc30"},"downloads":-1,"filename":"text2vec-1.1.3.tar.gz","has_sig":false,"md5_digest":"76eee96c21b5dd33bfc7b50d530b1790","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":65419,"upload_time":"2022-03-02T04:13:13","upload_time_iso_8601":"2022-03-02T04:13:13.284128Z","url":"https://files.pythonhosted.org/packages/c2/9f/48f449527af639188426e19cbe43a115e620953b7d09b308a19e1225b8e7/text2vec-1.1.3.tar.gz","yanked":false,"yanked_reason":null}],"1.1.4":[{"comment_text":"","digests":{"blake2b_256":"5141059b9d9bf039fc25fa5e46093d70196364d99ec36d5031e21e48372f40d4","md5":"cdd420e02bb570cf0c877ad9aa69120f","sha256":"4d41c0e7fe9c1a44eab3ba03071d17f17aa6f5eb5e6d4478ed4f43b1b1af12a3"},"downloads":-1,"filename":"text2vec-1.1.4.tar.gz","has_sig":false,"md5_digest":"cdd420e02bb570cf0c877ad9aa69120f","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":67654,"upload_time":"2022-03-11T08:22:54","upload_time_iso_8601":"2022-03-11T08:22:54.871875Z","url":"https://files.pythonhosted.org/packages/51/41/059b9d9bf039fc25fa5e46093d70196364d99ec36d5031e21e48372f40d4/text2vec-1.1.4.tar.gz","yanked":false,"yanked_reason":null}],"1.1.5":[{"comment_text":"","digests":{"blake2b_256":"90f3991b47b81c23b50c4ee643f698ff40a9f57ce6831719c5e73b486b55e7db","md5":"20384fd2f624a1aa386f291c2fef960d","sha256":"8c66a9e52a6d82f41bf5247bebc6f004c9e65db72d98f416c2f40c6bef1f0208"},"downloads":-1,"filename":"text2vec-1.1.5.tar.gz","has_sig":false,"md5_digest":"20384fd2f624a1aa386f291c2fef960d","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":68274,"upload_time":"2022-03-12T06:02:15","upload_time_iso_8601":"2022-03-12T06:02:15.900942Z","url":"https://files.pythonhosted.org/packages/90/f3/991b47b81c23b50c4ee643f698ff40a9f57ce6831719c5e73b486b55e7db/text2vec-1.1.5.tar.gz","yanked":false,"yanked_reason":null}],"1.1.6":[{"comment_text":"","digests":{"blake2b_256":"263e89d1a10cafcff488a76f64923251445a1d8f3255f957c6b66d02f2dba84f","md5":"9d7bb0527658e7147ec2b28ff231d336","sha256":"c6903044d6fd5a8346cb278545216b6d2aa18d3b6799a6cf36e644204f199bdd"},"downloads":-1,"filename":"text2vec-1.1.6.tar.gz","has_sig":false,"md5_digest":"9d7bb0527658e7147ec2b28ff231d336","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":69271,"upload_time":"2022-05-17T02:42:00","upload_time_iso_8601":"2022-05-17T02:42:00.533876Z","url":"https://files.pythonhosted.org/packages/26/3e/89d1a10cafcff488a76f64923251445a1d8f3255f957c6b66d02f2dba84f/text2vec-1.1.6.tar.gz","yanked":false,"yanked_reason":null}],"1.1.7":[{"comment_text":"","digests":{"blake2b_256":"51f814e4f02a2cc5fe9c172b719bfa5bb62477feb67eab177519cc5ff6f14642","md5":"b42699041471b90af35bdac110032257","sha256":"1812b7fa08cde3a50335fa0f8d3d3575905c2d5762016c1986c5764de36bf4b1"},"downloads":-1,"filename":"text2vec-1.1.7.tar.gz","has_sig":false,"md5_digest":"b42699041471b90af35bdac110032257","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":71521,"upload_time":"2022-07-21T14:23:16","upload_time_iso_8601":"2022-07-21T14:23:16.253718Z","url":"https://files.pythonhosted.org/packages/51/f8/14e4f02a2cc5fe9c172b719bfa5bb62477feb67eab177519cc5ff6f14642/text2vec-1.1.7.tar.gz","yanked":false,"yanked_reason":null}],"1.1.8":[{"comment_text":"","digests":{"blake2b_256":"d98c59ad3a0df8696bee7f3fd724c602dd66a775f4aaa1f6488e2437c98018cd","md5":"6b19fc64b375782788bb99395a3ae179","sha256":"99d2728ee8aeea5ac1277ad083b8614827c81d7bbb4066772df93525ef88a466"},"downloads":-1,"filename":"text2vec-1.1.8.tar.gz","has_sig":false,"md5_digest":"6b19fc64b375782788bb99395a3ae179","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":70761,"upload_time":"2023-04-16T08:49:17","upload_time_iso_8601":"2023-04-16T08:49:17.824088Z","url":"https://files.pythonhosted.org/packages/d9/8c/59ad3a0df8696bee7f3fd724c602dd66a775f4aaa1f6488e2437c98018cd/text2vec-1.1.8.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"44b72d8e413604ca531b6c4f57b5fe4ba9f1215c06205f801482fc4ff07e8e77","md5":"836851ce1d965355bd90205fd5eb1a0f","sha256":"e17ffa076c6e9570d0e556400e66749f6521307c3b4ea46ccdec9d4487a9345e"},"downloads":-1,"filename":"text2vec-1.2.0.tar.gz","has_sig":false,"md5_digest":"836851ce1d965355bd90205fd5eb1a0f","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":69733,"upload_time":"2023-06-16T14:37:38","upload_time_iso_8601":"2023-06-16T14:37:38.445034Z","url":"https://files.pythonhosted.org/packages/44/b7/2d8e413604ca531b6c4f57b5fe4ba9f1215c06205f801482fc4ff07e8e77/text2vec-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.1":[{"comment_text":"","digests":{"blake2b_256":"789c384af57d81ccd1f979a1a65d81644c36a3e8ba073783852f7bcba48ef69d","md5":"b4ff0481e0505f440bb56417a9429831","sha256":"5c698ef7c3a1f84747f89c7baba515162cf618e03a91d32b7106cb04dda01b7b"},"downloads":-1,"filename":"text2vec-1.2.1.tar.gz","has_sig":false,"md5_digest":"b4ff0481e0505f440bb56417a9429831","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":71944,"upload_time":"2023-06-21T03:03:49","upload_time_iso_8601":"2023-06-21T03:03:49.457344Z","url":"https://files.pythonhosted.org/packages/78/9c/384af57d81ccd1f979a1a65d81644c36a3e8ba073783852f7bcba48ef69d/text2vec-1.2.1.tar.gz","yanked":false,"yanked_reason":null}],"1.2.2":[{"comment_text":"","digests":{"blake2b_256":"0cae847329d8d5587e1d6f20a270ebaaae4cb8b58db3cbe5b3e63eec2bba0b27","md5":"8bbb0c1eb778455e2a15e65642af4188","sha256":"c885c6038ee2e7b2b92e372d43295d2dba649ee93c2326b9258cbe98c8b83900"},"downloads":-1,"filename":"text2vec-1.2.2.tar.gz","has_sig":false,"md5_digest":"8bbb0c1eb778455e2a15e65642af4188","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":72899,"upload_time":"2023-07-17T08:29:30","upload_time_iso_8601":"2023-07-17T08:29:30.128704Z","url":"https://files.pythonhosted.org/packages/0c/ae/847329d8d5587e1d6f20a270ebaaae4cb8b58db3cbe5b3e63eec2bba0b27/text2vec-1.2.2.tar.gz","yanked":false,"yanked_reason":null}],"1.2.3":[{"comment_text":"","digests":{"blake2b_256":"14dfe09fb501f80060ca862eaeb1b81f2d8e659429db1054facc1e675c4b5a8e","md5":"7dcd426106796c732344600904939707","sha256":"ff12ab9a771f4caae874067b4e7b2bb480d5116d04e4a138b9f1f5f599f821b5"},"downloads":-1,"filename":"text2vec-1.2.3.tar.gz","has_sig":false,"md5_digest":"7dcd426106796c732344600904939707","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":73028,"upload_time":"2023-08-27T14:54:47","upload_time_iso_8601":"2023-08-27T14:54:47.805754Z","url":"https://files.pythonhosted.org/packages/14/df/e09fb501f80060ca862eaeb1b81f2d8e659429db1054facc1e675c4b5a8e/text2vec-1.2.3.tar.gz","yanked":false,"yanked_reason":null}],"1.2.4":[{"comment_text":"","digests":{"blake2b_256":"2b5ac00e53017d00659d37847fbdcc4ac638e817b8221035901c6c791468ec2d","md5":"a3a0f3da003f0bf001fd0e92b66d9c43","sha256":"6968709f77169d33fa214fce9c9df02e0233edfbe68508641f75045cf06fc477"},"downloads":-1,"filename":"text2vec-1.2.4.tar.gz","has_sig":false,"md5_digest":"a3a0f3da003f0bf001fd0e92b66d9c43","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":78737,"upload_time":"2023-09-04T10:02:26","upload_time_iso_8601":"2023-09-04T10:02:26.644768Z","url":"https://files.pythonhosted.org/packages/2b/5a/c00e53017d00659d37847fbdcc4ac638e817b8221035901c6c791468ec2d/text2vec-1.2.4.tar.gz","yanked":false,"yanked_reason":null}],"1.2.5":[{"comment_text":"","digests":{"blake2b_256":"4b096398d4b52d6180fd8a7060b8065a5cbc23150700a9b847248c59ce6d374b","md5":"93d048dc8954f16d2fd1b811ebec9f80","sha256":"c7dc316c57e93a953cecd8a3bf11cf3896b08d788cdcc8454f57dcb260c11eb6"},"downloads":-1,"filename":"text2vec-1.2.5.tar.gz","has_sig":false,"md5_digest":"93d048dc8954f16d2fd1b811ebec9f80","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":79920,"upload_time":"2023-09-14T14:03:17","upload_time_iso_8601":"2023-09-14T14:03:17.979199Z","url":"https://files.pythonhosted.org/packages/4b/09/6398d4b52d6180fd8a7060b8065a5cbc23150700a9b847248c59ce6d374b/text2vec-1.2.5.tar.gz","yanked":false,"yanked_reason":null}],"1.2.6":[{"comment_text":"","digests":{"blake2b_256":"8d150db71564d288785d0bda367eef7ec0077b07e696f1f72bc8243fa035f9cd","md5":"ab4d6647e28df6e28452014e8b0697b0","sha256":"d05ea8cb6ba82bc8d8a662f83b5367a048492806539e41925d62378bb7cec1cf"},"downloads":-1,"filename":"text2vec-1.2.6.tar.gz","has_sig":false,"md5_digest":"ab4d6647e28df6e28452014e8b0697b0","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":79918,"upload_time":"2023-09-14T14:06:52","upload_time_iso_8601":"2023-09-14T14:06:52.145003Z","url":"https://files.pythonhosted.org/packages/8d/15/0db71564d288785d0bda367eef7ec0077b07e696f1f72bc8243fa035f9cd/text2vec-1.2.6.tar.gz","yanked":false,"yanked_reason":null}],"1.2.7":[{"comment_text":"","digests":{"blake2b_256":"22e69db71da710417932eafb0e9ac8a33f0f302e8b4e633baa71f1bb2eb6e4c1","md5":"61335a22581a18dd6f864dc244eefc25","sha256":"b8d0b1991e40fd578bbfbef644e3af0192b58c0a81cd72646b63046e5e306f3f"},"downloads":-1,"filename":"text2vec-1.2.7.tar.gz","has_sig":false,"md5_digest":"61335a22581a18dd6f864dc244eefc25","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":79936,"upload_time":"2023-09-14T14:37:41","upload_time_iso_8601":"2023-09-14T14:37:41.263974Z","url":"https://files.pythonhosted.org/packages/22/e6/9db71da710417932eafb0e9ac8a33f0f302e8b4e633baa71f1bb2eb6e4c1/text2vec-1.2.7.tar.gz","yanked":false,"yanked_reason":null}],"1.2.8":[{"comment_text":"","digests":{"blake2b_256":"5eeb0cdef1f0735e2187d52662a0fc5bb2adc8c9b50c32d698bffb2b8f0117ed","md5":"b3139c537c63acdc3aaed2acf057e268","sha256":"c1b3866a0594a5af3a5c6beae5c4ff942d6d4d365d3b06048918dae66de89e30"},"downloads":-1,"filename":"text2vec-1.2.8.tar.gz","has_sig":false,"md5_digest":"b3139c537c63acdc3aaed2acf057e268","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":83549,"upload_time":"2023-09-19T06:47:10","upload_time_iso_8601":"2023-09-19T06:47:10.172375Z","url":"https://files.pythonhosted.org/packages/5e/eb/0cdef1f0735e2187d52662a0fc5bb2adc8c9b50c32d698bffb2b8f0117ed/text2vec-1.2.8.tar.gz","yanked":false,"yanked_reason":null}],"1.2.9":[{"comment_text":"","digests":{"blake2b_256":"53761431fff7d01aad17d6be40e2ac7275173585fe1e87fa4a350535c8d918f0","md5":"ef811016f28afc7f3fb99685152ab53e","sha256":"9d10f6611bce223f2e75df556b9e150a7e9377f2a614a9c5d4a7f2ca58bd9510"},"downloads":-1,"filename":"text2vec-1.2.9.tar.gz","has_sig":false,"md5_digest":"ef811016f28afc7f3fb99685152ab53e","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":86033,"upload_time":"2023-09-20T03:08:22","upload_time_iso_8601":"2023-09-20T03:08:22.381609Z","url":"https://files.pythonhosted.org/packages/53/76/1431fff7d01aad17d6be40e2ac7275173585fe1e87fa4a350535c8d918f0/text2vec-1.2.9.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"53761431fff7d01aad17d6be40e2ac7275173585fe1e87fa4a350535c8d918f0","md5":"ef811016f28afc7f3fb99685152ab53e","sha256":"9d10f6611bce223f2e75df556b9e150a7e9377f2a614a9c5d4a7f2ca58bd9510"},"downloads":-1,"filename":"text2vec-1.2.9.tar.gz","has_sig":false,"md5_digest":"ef811016f28afc7f3fb99685152ab53e","packagetype":"sdist","python_version":"source","requires_python":">=3.6.0","size":86033,"upload_time":"2023-09-20T03:08:22","upload_time_iso_8601":"2023-09-20T03:08:22.381609Z","url":"https://files.pythonhosted.org/packages/53/76/1431fff7d01aad17d6be40e2ac7275173585fe1e87fa4a350535c8d918f0/text2vec-1.2.9.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
