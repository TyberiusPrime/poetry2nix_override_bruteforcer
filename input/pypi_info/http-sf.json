{"info":{"author":null,"author_email":"Mark Nottingham <mnot@mnot.net>","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","License :: OSI Approved :: MIT License","Operating System :: OS Independent"],"description":"\n# HTTP Structured Fields in Python\n\n[![Test Status](https://github.com/mnot/http-sf/actions/workflows/test.yml/badge.svg)](https://github.com/mnot/http-sf/actions)\n\nThis is a [Python 3](https://python.org/) library implementing parsing and serialisation of [RFC8941](https://www.rfc-editor.org/rfc/rfc8941.html).\n\nThis library also implements Display Strings and Dates, as specified in  [draft-ietf-httpbis-sfbis-05](https://datatracker.ietf.org/doc/draft-ietf-httpbis-sfbis/).\n\n## Python API\n\n### Parsing\n\nTextual HTTP headers can be parsed by calling `parse`; the return value is a data structure that represents the field value.\n\n~~~ python\n>>> from http_sf import parse, ser\n>>> parse(b\"foo; a=1, bar; b=2\", tltype=\"dictionary\")\n{'foo': (True, {'a': 1}), 'bar': (True, {'b': 2})}\n~~~\n\n`parse()` takes a bytes-like object as the first argument. If you want to parse a string, please `.encode()` it first.\n\n#### Indicating Top-Level Type\n\nBecause the library needs to know which kind of field it is, you need to hint this when calling `parse`. There are two ways to do this:\n\n1. Using a `tltype` parameter, whose value should be one of 'dictionary', 'list', or 'item'.\n2. Using a `name` parameter to indicate a field name that has a registered type, per [the retrofit draft](https://httpwg.org/http-extensions/draft-ietf-httpbis-retrofit.html).\n\nNote that if you use `name`, a `KeyError` will be raised if the type associated with the name isn't known, unless you also pass a `tltype` as a fallback.\n\n### Types\n\nIn the returned data, Dictionaries are represented as Python dictionaries; Lists are represented as Python lists, and Items are the bare type.\n\nBare types are represented using the following Python types:\n\n* Integers: `int`\n* Decimals: `float`\n* Strings: `str`\n* Tokens: `http_sf.Token` (a `UserString`)\n* Byte Sequences: `bytes`\n* Booleans: `bool`\n* Dates: `datetime.datetime`\n* Display Strings: `http_sf.DisplayString` (a `UserString`)\n\nInner Lists are represented as lists as well.\n\n### Parameters\n\nStructured Types that can have parameters (including Dictionary and List members as well as singular Items and Inner Lists) are represented as a tuple of `(value, parameters)` where parameters is a dictionary.\n\nSo, a single item that's a Token with one parameter whose value is an integer will be represented like this:\n\n~~~ python\n>>> parse(b\"foo; a=1\", tltype=\"item\")\n(Token(\"foo\"), {'a': 1})\n~~~\n\nNote that even if there aren't parameters, a tuple will still be returned, as in some items on this List:\n\n~~~ python\n>>> parse(b\"a, b; q=5, c\", tltype=\"list\")\n[(Token(\"a\"), {}), (Token(\"b\"), {'q': 5}), (Token(\"c\"), {})]\n~~~\n\n### Serialisation\n\nTo serialise that data structure back to a textual Structured Field, use `ser`:\n\n~~~ python\n>>> field = parse(b\"a, b; q=5, c\", tltype=\"list\")\n>>> ser(field)\n'a, b;q=5, c'\n~~~\n\nWhen using `ser`, if an Item or Inner List doesn't have parameters, they can be omitted; for example:\n\n~~~ python\n>>> structure = [5, 6, (7, {\"with\": \"param\"})]\n>>> ser(structure)\n'5, 6, 7;with=\"param\"'\n~~~\n\nNote that `ser` produces a string, not a bytes-like object.\n\n\n## Command Line Use\n\nYou can validate and examine the data model of a field value by calling the library on the command line, using `-d`, `-l` and `-i` to denote dictionaries, lists or items respectively; e.g.,\n\n~~~ bash\n> python3 -m http_sf -i \"foo;bar=baz\"\n[\n    {\n        \"__type\": \"token\",\n        \"value\": \"foo\"\n    },\n    {\n        \"bar\": {\n            \"__type\": \"token\",\n            \"value\": \"baz\"\n        }\n    }\n]\n~~~\n\nor:\n\n~~~ bash\n> python3 -m http_sf -i \"foo;&bar=baz\"\nFAIL: Key does not begin with lcalpha or * at: &bar=baz\n~~~\n\nAlternatively, you can pass the field name with the `-n` option, provided that it is a compatible retrofit field:\n\n~~~ bash\n> python3 -m http_sf -n \"Cache-Control\" \"max-age=40, must-revalidate\"\n{\n    \"max-age\": [\n        40,\n        {}\n    ],\n    \"must-revalidate\": [\n        true,\n        {}\n    ]\n}\n~~~\n\nNote that if successful, the output is in the JSON format used by the [test suite](https://github.com/httpwg/structured-header-tests/).\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":null,"license":null,"maintainer":null,"maintainer_email":null,"name":"http-sf","package_url":"https://pypi.org/project/http-sf/","platform":null,"project_url":"https://pypi.org/project/http-sf/","project_urls":{"homepage":"https://github.com/mnot/http-sf"},"provides_extra":null,"release_url":"https://pypi.org/project/http-sf/1.0.2/","requires_dist":["typing-extensions","mypy; extra == \"dev\"","black; extra == \"dev\"","pylint; extra == \"dev\"","pytest; extra == \"dev\"","pytest-md; extra == \"dev\"","validate-pyproject; extra == \"dev\"","build; extra == \"dev\""],"requires_python":">=3.9","summary":"Parse and serialise HTTP Structured Fields","version":"1.0.2","yanked":false,"yanked_reason":null},"last_serial":22965084,"releases":{"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"c656a360a953f08f82d735472724f4a89c6dad3aa7f05a8552c6471e7028ee9d","md5":"738ed9a46082458d121240dbb8ad0126","sha256":"a41809e7152dd8bab2f22e85d2a7753482069f56911bccc74bb60268a1a864a6"},"downloads":-1,"filename":"http_sf-1.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"738ed9a46082458d121240dbb8ad0126","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":22012,"upload_time":"2024-01-25T05:00:53","upload_time_iso_8601":"2024-01-25T05:00:53.999462Z","url":"https://files.pythonhosted.org/packages/c6/56/a360a953f08f82d735472724f4a89c6dad3aa7f05a8552c6471e7028ee9d/http_sf-1.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b35121140a6310366e652bd5c9dde283068d1a4c1aa75e1cab3e8309615f7df3","md5":"c3f994d257327d20c41edfd92e6b2f42","sha256":"cb8878d0316d1fca72bde6027f2d2671e3f51d816409d53e740babae4d42771a"},"downloads":-1,"filename":"http-sf-1.0.0.tar.gz","has_sig":false,"md5_digest":"c3f994d257327d20c41edfd92e6b2f42","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":17647,"upload_time":"2024-01-25T05:00:55","upload_time_iso_8601":"2024-01-25T05:00:55.728212Z","url":"https://files.pythonhosted.org/packages/b3/51/21140a6310366e652bd5c9dde283068d1a4c1aa75e1cab3e8309615f7df3/http-sf-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"50d5c0752e44a8ceaaa500f3678a47909f6b9a15ee34649b5e558d99ab88014f","md5":"5c4d12f8f4b1ea651ef7c59a2465b994","sha256":"41ffaa5b6a5901e9b32374de5552341434b1c97c9bc0d8f64baf91277e4c0921"},"downloads":-1,"filename":"http_sf-1.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"5c4d12f8f4b1ea651ef7c59a2465b994","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":21971,"upload_time":"2024-01-25T06:14:06","upload_time_iso_8601":"2024-01-25T06:14:06.251328Z","url":"https://files.pythonhosted.org/packages/50/d5/c0752e44a8ceaaa500f3678a47909f6b9a15ee34649b5e558d99ab88014f/http_sf-1.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c4b7565b4cd18b7f676a868ca9497d5ce1da138013027a60c58d5581086c0e20","md5":"b3442c50f269be0b1f307cc7bbaf3518","sha256":"2e6440e50f9d93d5ce5ebf493f258b8798d2d1c001910aecd48cdef2e96ee839"},"downloads":-1,"filename":"http-sf-1.0.1.tar.gz","has_sig":false,"md5_digest":"b3442c50f269be0b1f307cc7bbaf3518","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":17566,"upload_time":"2024-01-25T06:14:07","upload_time_iso_8601":"2024-01-25T06:14:07.959921Z","url":"https://files.pythonhosted.org/packages/c4/b7/565b4cd18b7f676a868ca9497d5ce1da138013027a60c58d5581086c0e20/http-sf-1.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.0.2":[{"comment_text":"","digests":{"blake2b_256":"79eb788495610e076bd11361ae97f7c2e3b7303f3a88f41ee756a00825c950d0","md5":"73e9fcf352c0b0f234c422c638ee0243","sha256":"40fd9d1c8bf53a78860fd6a81649194a5b6af20264abbd89b9f6808d5c4feaad"},"downloads":-1,"filename":"http_sf-1.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"73e9fcf352c0b0f234c422c638ee0243","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":22123,"upload_time":"2024-04-28T08:07:57","upload_time_iso_8601":"2024-04-28T08:07:57.147379Z","url":"https://files.pythonhosted.org/packages/79/eb/788495610e076bd11361ae97f7c2e3b7303f3a88f41ee756a00825c950d0/http_sf-1.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6b2ae53dfcd94e9513f00870ac359612cc84f716f1c92a04355bf2528ce41d23","md5":"4d270aea2115834175a887645f141d39","sha256":"c1e26c594dfb4ce98bf5ac8a1284e896159f1f64e951e8513c7715b5705de887"},"downloads":-1,"filename":"http_sf-1.0.2.tar.gz","has_sig":false,"md5_digest":"4d270aea2115834175a887645f141d39","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":17727,"upload_time":"2024-04-28T08:07:58","upload_time_iso_8601":"2024-04-28T08:07:58.195128Z","url":"https://files.pythonhosted.org/packages/6b/2a/e53dfcd94e9513f00870ac359612cc84f716f1c92a04355bf2528ce41d23/http_sf-1.0.2.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"79eb788495610e076bd11361ae97f7c2e3b7303f3a88f41ee756a00825c950d0","md5":"73e9fcf352c0b0f234c422c638ee0243","sha256":"40fd9d1c8bf53a78860fd6a81649194a5b6af20264abbd89b9f6808d5c4feaad"},"downloads":-1,"filename":"http_sf-1.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"73e9fcf352c0b0f234c422c638ee0243","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":22123,"upload_time":"2024-04-28T08:07:57","upload_time_iso_8601":"2024-04-28T08:07:57.147379Z","url":"https://files.pythonhosted.org/packages/79/eb/788495610e076bd11361ae97f7c2e3b7303f3a88f41ee756a00825c950d0/http_sf-1.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6b2ae53dfcd94e9513f00870ac359612cc84f716f1c92a04355bf2528ce41d23","md5":"4d270aea2115834175a887645f141d39","sha256":"c1e26c594dfb4ce98bf5ac8a1284e896159f1f64e951e8513c7715b5705de887"},"downloads":-1,"filename":"http_sf-1.0.2.tar.gz","has_sig":false,"md5_digest":"4d270aea2115834175a887645f141d39","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":17727,"upload_time":"2024-04-28T08:07:58","upload_time_iso_8601":"2024-04-28T08:07:58.195128Z","url":"https://files.pythonhosted.org/packages/6b/2a/e53dfcd94e9513f00870ac359612cc84f716f1c92a04355bf2528ce41d23/http_sf-1.0.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
