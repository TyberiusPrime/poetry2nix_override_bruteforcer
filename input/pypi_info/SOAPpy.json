{"info":{"author":"Gregory Warnes, kiorky","author_email":"Gregory.R.Warnes@Pfizer.com, kiorky@cryptelium.net","bugtrack_url":null,"classifiers":[],"description":"SOAPpy provides tools for building SOAP clients and servers.  For more information see https://github.com/kiorky/SOAPpy.git\n\n==============================================\nSOAPpy - Simple to use SOAP library for Python\n==============================================\n\n.. contents::\n\nDisclaimer\n==========\nPlease use `suds <https://pypi.python.org/pypi/suds>`_ rather than SOAPpy.\nSOAPpy is old and clamsy.\n\nCredits\n========\n\nCompanies\n---------\n|makinacom|_\n\n  * `Planet Makina Corpus <http://www.makina-corpus.org>`_\n  * `Contact us <mailto:python@makina-corpus.org>`_\n\n.. |makinacom| image:: http://depot.makina-corpus.org/public/logo.gif\n.. _makinacom:  http://www.makina-corpus.com\n\nAuthors\n------------\n\n- Cayce Ullman <c_ullman@yahoo.com>\n- Brian Matthews <blm@blmatthews.com>\n- Gregory R. Warnes <Gregory.R.Warnes@Pfizer.com>\n- Makina Corpus <python@makina-corpus.com>\n- Mathieu Le Marec - Pasquet <kiorky@cryptelium.net>\n\nContributors\n----------------\n- Christopher Blunck <blunck2@gst.com>\n- Brad Knotwell <b.knotwell@f5.com>\n- Mark Bucciarelli <mark@hubcapconsulting.com> (ported WSDL client from ZSI)\n- Ivan R. Judson     <judson@mcs.anl.gov> (Globus support)\n- Kirk Strauser <kirk@daycos.com>\n- Antonio Beamud Montero <antonio.beamud@linkend.com> (patches for integrating SOAPpy into Zope)\n- And others.\n\nCopyright (c) 20011 Makina Corpus\nCopyright (c) 2002-2005, Pfizer, Inc.\nCopyright (c) 2001, Cayce Ullman.\nCopyright (c) 2001, Brian Matthews.\nAll rights reserved, see the file LICENSE for conditions of use.\n\nINTRODUCTION\n==============\n\nThe goal of the SOAPpy team is to provide a full-featured SOAP library\nfor Python that is very simple to use and that fully supports dynamic\ninteraction between clients and servers.\n\n\nINCLUDED\n--------\n- General SOAP Parser based on sax.xml\n- General SOAP Builder\n- SOAP Proxy for RPC client code\n- SOAP Server framework for RPC server code\n\nFEATURES\n--------\n- Handles all SOAP 1.0 types\n- Handles faults\n- Allows namespace specification\n- Allows SOAPAction specification\n- Homogeneous typed arrays\n- Supports multiple schemas\n- Header support (mustUnderstand and actor)\n- XML attribute support\n- Multi-referencing support (Parser/Builder)\n- Understands SOAP-ENC:root attribute\n- Good interop, passes all client tests for Frontier, SOAP::LITE, SOAPRMI\n- Encodings\n- SSL clients (with Python compiled with OpenSSL support)\n- SSL servers (with Python compiled with OpenSSL support and M2Crypto installed)\n- Encodes XML tags per SOAP 1.2 name mangling specification (Gregory Warnes)\n- Automatic stateful SOAP server support (Apache v2.x) (blunck2)\n- WSDL client support\n- WSDL server support\n\nTODO (See RELEASE_INFO and CHANGELOG for recent changes)\n----------------------------------------------------------\n- Timeout on method calls\n- Advanced arrays (sparse, multidimensional and partial)\n- Attachments\n- mod_python example\n- medusa example\n- Improved documentation\n\nMANIFEST\n--------\n::\n\n    Files\n\n        README              This file\n        RELEASE_NOTES       General information about each release\n        ChangeLog           Detailed list of changes\n        TODO                List of tasks that need to be done\n        setup.py            Python installation control files\n        SOAPpy.spec         RPM package control file\n\n    Directories\n\n        SOAPpy/            Source code for the package\n        SOAPpy/wstools/    Source code for WSDL tools\n        tests/             unit tests and examples\n        validate/          interop client and servers\n        bid/               N+I interop client and server\n        contrib/           Contributed examples (also see test/)\n        docs/              Documentation\n        tools/             Misc tools useful for the SOAPpy developers\n        zope/              Patches to Zope allowing it to provide SOAP services\n\n\nINSTALLATION\n============\n\nUSING GITHUB\n------------\n\n    You can install SOAPpy and its dependencies directly from GitHub using PIP:\n\n        pip install -e \"git+http://github.com/kiroky/SOAPpy.git@develop#egg=SOAPpy\"\n\nREQUIRED PACKAGES\n------------------\n\n    - wstools\n\n\nOPTIONAL PACKAGES\n-----------------\n\n    - pyGlobus, optional support for Globus,\n      <http://www-itg.lbl.gov/gtg/projects/pyGlobus/>\n\n    - M2Crypto.SSL, optional support for server-side SSL\n      <http://sandbox.rulemaker.net/ngps/m2/>\n\n    - If Python is compiled with SSL support (Python 2.3 does so by\n      default), client-side use of SSL is supported\n\nINSTALLATION STEPS\n------------------\n\n    As of version 0.9.8 SOAPpy can be installed using the standard python\n    package installation tools.\n\n    To install:\n\n      1) Unpack the distribution package:\n\n         On Windows, use your favorite zip file uncompression tool.\n\n         On Unix::\n\n             $ tar -xvzf SOAPpy-$VERSION$.tar.gz\n\n         If you have gnu tar, otherwise\n            ::\n\n             $ gzcat SOAPpy-$VERSION$.tar.gz | tar -xvf -\n\n      2) Change into the source directory\n         ::\n\n                 cd SOAPpy-$VERSION$\n\n      3) Compile the package::\n\n                $ python setup.py build\n\n      4) Install the package\n\n         On Windows::\n\n                $ python setup.py install\n\n         On Unix install as the owner of the python directories\n         (usally root)::\n\n                $ su root\n                Password: XXXXXX\n                $ python setup.py install\n\n\nDOCUMENTATION\n=============\nQUICK START\n-----------\n\nA simple \"Hello World\" http SOAP server::\n\n        import SOAPpy\n        def hello():\n            return \"Hello World\"\n        server = SOAPpy.SOAPServer((\"localhost\", 8080))\n        server.registerFunction(hello)\n        server.serve_forever()\n\nAnd the corresponding client::\n\n        import SOAPpy\n        server = SOAPpy.SOAPProxy(\"http://localhost:8080/\")\n        print server.hello()\n\nBASIC TUTORIAL\n--------------\nMark Pilgrims _Dive Into Python, published in printed form by\nApress and online at at http://diveintopython.org provides a\nnice tutorial for SOAPpy in Chapter 12, \"SOAP Web Services\".\nSee http://diveintopython.org/soap_web_services .\n\nOTHER DOCUMENTATION\n-------------------\n\nFor further information see the files in the docs/ directory.\n\nNote that documentation is one of SOAPpy's current weak points.\nPlease help us out!\n\n\nSupport\n============\nGithub: https://github.com/kiorky/SOAPpy\nIssues: https://github.com/kiorky/SOAPpy/issues\n\n\n\nCHANGELOG\n=====================\n\n0.12.22 (2014-06-20)\n--------------------\n\n- proper usage of config property inside objects. [Davorin Kunstelj]\n- dump user defined types with handler functions (can be used to override dump\n  of built-in types). [Davorin Kunstelj]\n\n\n0.12.21 (2014-05-27)\n--------------------\n\n- Dispatching custom objects, slots supported.\n  [Davorin Kunstelj]\n\n\n0.12.20 (2014-05-15)\n--------------------\n- better version handling [kiorky]\n- display summary on pypi [kiorky]\n- non disclosed intermediate release to polish pypi output [kiorky]\n\n\n0.12.6 (2014-05-15)\n-------------------\n- fix cve CVE Request ---- SOAPpy 0.12.5 Multiple Vulnerabilities -- LOL part\n  [kiorky]\n- fix cve CVE Request ---- SOAPpy 0.12.5 Multiple Vulnerabilities -- XXE part\n  [kiorky]\n- Remove dependency on fpconst.\n- adding maptype  [Sandro KnauÃŸ]\n- Support / (and other reserved characters) in the password. [Ionut Turturica]\n- Client.HTTPWithTimeout: fixed constructor's docstring and comments -named the diferences\n  with respect to the overriden method -fixed\n  wrong reference to class in module 'httplib' -added documentation of param 't[German Larrain\n- fixed module docstring location (all imports must be below them)[German Larrain]f\n- fix error \"Bad types (class java.math.BigInteger -> class java.lang.Integer)\" - Clayton Caetano de Sousa]\n\n\n\n0.12.5 (2011-08-01)\n-------------------\n- Fix for multi-dimensional arrays. [Ionut Turturica]\n- Credits\n\n0.12.3 (2011-02-21)\n-------------------\n\n- Fixed url\n\n\n0.12.2 (2011-02-21)\n-------------------\n\n- Fixed url\n\n\n0.12.1 (2011-02-21)\n-------------------\n- Forked intially from https://github.com/pelletier/SOAPpy\n    - main interresting enhancements grabbed:\n\n        - from __future__ imports must occur at the beginning of the file\n        - try install requires\n\n- Grabbed others changeset from  https://bitbucket.org/cmclaughlin/soappy-0.12.0/ (fpconst)\n- Grabbed others changeset from  https://bitbucket.org/zeus/soappy (ssl key support)\n- Depend directly on wstools not to bundle a duplicated version.\n- Grabbed from original svn:\n\n    - rpm spec file\n    - tools/\n    - zope/\n    - bid/\n    - .cvsignore files\n\n- Make it proper packaged, specially toward setuptools.\n\nRelease 0.12.0 of SOAPpy\n------------------------\n\nThis release primarily foces on bug fixes.  Primary changes:\n\n- Fixes for bug reports that have accumulated over the last year\n\n    [ 916265] \"Arrays of unicode do not serialize correctly (patch included)\"\n    [ 918216] \"Parsing faults in SOAPpy 0.11.3\"\n    [ 925077] \"SOAPpy prints out SOAP fault\" (even when Config.debug is off).\n    [1001646] \"SOAPpy stomps headers when sending multirefs\"\n    [1001646] \"SOAPpy stomps headers when sending multirefs.\n    [1064233] \"Bug fixes for complex types\"\n    [1064248] \"Bugs in _asdict() and _asarray() in Types.py\"\n    [1078051] \"Arrays of complex types (doc/lit)\"\n    [1096971] \"Parse error: missing HTTP header 'Content-length'\"\n    [1106450] \"Floats are truncated to 10 digits, causing precision loss\"\n    [1122991] \"error from SOAPpy/Client.py for content_length evaluation?\"\n\n- Fixes for 'rules' which allow control of the data types of *incoming* messages.\n  As a consequence TCtest.py now passes all tests.\n\n- WSDL support has been improving, due to work on the 'wstools'\n  module which is shared between ZSI and SOAPpy.\n\n- Some work has been done to improve documentation.\n\n\nRelease 0.11.6 of SOAPpy\n------------------------\n\nChanges to URLs and email addresses in documentation.\n\n\nRelease 0.11.5 of SOAPpy\n------------------------\n\n- Bug fixes\n\n   - Fix string format error in fault handling\n\n\nRelease 0.11.4 of SOAPpy\n------------------------\n\n- Bug fixes\n\n    - SOAPpy/Server.py: Check if header information contains SOAPAction\n\t  key before checking its value.\n\n    - Fixes for generating SOAP from complexType arrays, contributed by\n      antonio.beamud@linkend.com\n\n    - Fixed bug that caused typedArrayTypes to lose their type\n      information when rendered to SOAP and added corresponding\n      test case.\n\n- New Features\n\n   - Enhancements to fault handling: The faultType Faultstring is now\n     a non-variable string (i.e. no nsmethod in it) so that it can be\n     programmatically checked.  In addition fault handlers can now be\n     registered to handle specific types of faults.\n\n\n   - SOAPpy/Server.py: Modified unregsiterObject function to take\n     optional namespace/path args to be consistent with registerObject.\n\n   - SOAPpy/Server.py: Added an unregisterObject function\n\n   - Changes to allow SOAPBuilder so it can handle a 'raw' Python object.\n\n\n\nRelease 0.11.2 of SOAPpy\n------------------------\n\n- News:\n\n   Ivan R. Judson has joined the SOAPpy team. He is focused on\n   Globus support but is also responsible for a lot of other work for\n   this release,\n\n- Bug fixes:\n\n   - Code in Types.py assumes nested scopes, so I added the proper import so\n     this will work under python 2.2.x\n\n   - Fixing namespace collision\n\n   - Fixed handing of named arguments bug introduced in 0.11.1.\n\n   - Fix memory leak when exceptions are raised.\n\n   - Fix bug when content-length is not present in parsed SOAP message.\n\n   - Fix bug #888345: Python 2.3 boolean type serialized as int\n\n   - Fix bug #875977: no escaping of bad tagnames for NoneTypes\n\n\n- New features:\n\n   - Improved Globus support and documentation.  Thanks Ivan!\n\n   - Added context handling\n\n   - Changed the use of SOAPAction, it used to default to setting it\n     to \"\", now it defaults to setting it to the method (not the\n     nsmethod). There is a clause in Server.py that catches 'old style'\n     SOAPActions (aka \"\") and sets them to the method. When this is\n     confirmed to be what everyone wants and we decide it's alright to\n     (possibly) break client/server interop, we can take the clause out\n     of Server.py and just handle SOAPActions of \"\" as a possible\n     error/warning.\n\n   - Additional test code.\n\n   - Raise a SOAPException instead of returning a SOAPpy.faultType\n     when a SOAP Fault is encountered and simplify_objects is enabled.\n\n\nRelease 0.11.1 of SOAPpy\n------------------------\n\n- Bug fixes:\n\n   - Fixed bug [ 792258 ] \"SOAPBuilder.SOAPBuilder.dump can catch\n     wrong exceptions\" in SOAPBuilder.dump() submitted by Greg Chapman\n     (glchapman).\n\n   - Changes suggested by Richard Au (richardau) to fix ssl support.\n     See bug report [ 752882 ] \"SSL SOAP Server no longer working.\"\n\n   - Remove call to gentag from 'dump' and add to 'dump_float', per\n     bug report [ 792600 ] \"SOAPBuilder.SOAPBuilder.dump possibly should\n     not call gentag\" by Greg Chapman (glchapman).\n\n   - Add a tests for handling of nil=\"true\" and nil=\"false\".  This\n     fixes bug [ pywebsvcs-Bugs-858168 ] 'xsi:nil=\"true\" causes\n     exception' reported by Robert Zimmermann (robertzett):\n\n- testClient1.py now works properly.  It had been failing to start the\n  server thread on the second unit test.  It turned out that the\n  variable 'quit' needed to be reset to zero after the SOAP server\n  thread for the first unit test exited.  With the solution of this\n  problem testClient1 can now be extended to run unit tests of both\n  client and server components.\n\n- Added 'strict' option to the WSDL class. If strict is true, a\n  RuntimeException will be raised if an unrecogned message is recieved.\n  If strict is false, a warning will be printed to the console, the\n  message type will be added to the WSDL schema, and processing will\n  continue.  This is in response to the second half of bug report [\n  817331 ] \"Some WSDL.py changes\", submitted by Rudolf Ruland.\n\n\nRelease 0.11.0 of SOAPpy\n------------------------\n\n- New/Changed configuration settings:\n\n  - Config.simplify_objects=1 now converts all SOAPpy objects into basic\n    Python types (list, dictionary, tuple, double, float, etc.).  By default,\n    Config.simplify_objects=0 for backward compatibility.\n\n  - Config.dict_encoding='ascii' converts the keys of dictionaries\n    (e.g. created when Config.simplify_objects=1) to ascii == plain python\n    strings instead of unicode strings.  This variable can be set to any\n    encoding known to string.encode().\n\n  - Config.strict_range=1 forces the SOAP parsing routines to perform\n    range checks on recieved SOAP float and double objects.  When\n    Config.strict_range=0, the default, parsing does not perform range\n    checking (except for detecting overflows, which always occurs).  In\n    either case, range checking is performed when\n    generating SOAP float and double objects.\n\n- Fixes for WSDLProxy.\n\n- Scripts in the test/ directory\n\n  - Verbose debugging messages have been turned off..\n\n  - SOAPtest.py now functions when Config.simplify_objects=1\n\n  - SOAPtest.py now sets Config.strict_range=1 so that range\n    checks are be properly tested.\n\n  - New README file listing what test scripts fail and why.\n\n- Initial support for Globus via pyGlobus contributed by Ivan\n  R. Judson <judson@mcs.anl.gov>.\n\nRelease 0.10.4 of SOAPpy\n------------------------\n\nDramatic performance improvements for large data transfers.\n\nRelease 0.10.1 of SOAPpy\n------------------------\n\nonly minor changes\n\n1) Code now uses a single file to store version number\n\n2) Client and server now report 'SOAPpy' as the server/user-agent.\n\n3) All test scripts now use the local SOAPpy source instead of the\n   globally installed version.\n\nRelease 0.10.0 of SOAPpy\n------------------------\n\nEnhancements:\n\n1) The new name handling mechanism has been enabled by default.\n\n   The primary purpose of this release is to allow users to test this\n   to see if it causes problems.  Please take the time to do so.  If\n   there are no problems reported by April 15, 2003, 0.9.9 will be\n   released with this feature enabled by default.\n\n   Note that running a client under an old release of SOAPpy and a\n   server under this release will be likely to generate errors due to\n   the different name handling mechanisms.\n\n2) MS-Windows systems should now be fully supported.\n\n   This required implementing a new module, ieee754, which provides\n   functions for detecting and generating IEEE 754 special floating\n   point values (+Inf, -Inf, NaN) which are not properly handled by\n   the Windows implementation of the float() function.\n\n3) Code reorganization: The huge file SOAPpy/SOAP.py (4,122 lines,\n   131K) has been split into 10 separate files. In addition code\n   shared with ZSI has been moved into a separate subdirectory and a\n   separate CVS module.\n\n4) Fixed bug 678239 which caused loss of namespace information in the\n   client.\n\n5) Mark Bucciarelli's <mark@hubcapconsulting.com> has ported client\n   support for WSDL from ZSI, as well as providing a mechanism for\n   SOAPpy servers to provide WSDL on properly structured .GET\n   requests.\n\n6) Added ThreadingSOAPServer which inherits from ThreadingTCPServer\n   server so that multiple clients will be automatically multiplexed.\n\n\nVERSION 0.10.4\n--------------\n\n- Integrated a simple patch submitted by Erik Westra that dramatically\n  improves parser performance.\n\n- WSDL tools now uses m2crypto for SSL if it's installed.\n\n- Various other WSDL changes.\n\nVERSION 0.10.3\n--------------\n\n- Removed import of obsoleted ieee753.py.  Now use the fpconst module\n  proposed by PEP 754, available from\n  <http://research.warnes.net/Zope/projects/fpconst/>\n\n- SOAPpy should no longer depend on pyXML.\n\nVERSION 0.10.2\n--------------\n\n- Fixed client support for basic authentication\n\n- Fixed import error in Client.py\n\n- Improved Client parsing of namespaces to support stateful SOAP servers.\n\nVERSION 0.10.1\n--------------\n\n- Modified setup.py, Server.py, and Client.py to obtain SOAPpy version\n  number from a new file, version.py.\n\n- SOAP server/user-agent is now to 'SOAPpy' instead of 'SOAP.py'.\n\n- Added ident string containing CVS version to all files that were\n  lacking this.\n\nVERSION 0.10.0\n--------------\n\nCHANGES SINCE VERSION 0.9.9-pre5\n\n- Major Change: The huge file SOAPpy/SOAP.py (4,122 lines, 131K) has\n  been split into 10 separate files::\n\n\tClient.py\tNS.py\t\tSOAPBuilder.py\tUtilities.py\n\tConfig.py\tParser.py\tServer.py\n\tErrors.py\tSOAP.py\t\tTypes.py\n\n  This should ease navigation and maintenance.\n\n- A new CVS module 'wstools' was created to hold code which is used by\n  both ZSI and SOAPpy.  While this module is stored separately in CVS,\n  it will be distributed as an integral part of both ZSI and SOAPpy,\n  and will be included as an 'internal' module by both.  In the SOAPpy\n  source, it lives in the directory SOAPpy/wstools.\n\n- The files XMLname.py, ieee754.py, have been moved into SOAPpy/wstools.\n\n- Added TODO file\n\n- Fix bug in getNS that caused loss of namespace by using better\n  pattern matching to find the namespace in the SOAP message.  Fixes bug\n  678239\n\n- Added Mark Bucciarelli's <mark@hubcapconsulting.com> patch to\n  provide wsdl code on properly structured .GET requests to the server.\n\n- Added client support for WSDL, ported from ZSI by Mark Bucciarelli\n  <mark@hubcapconsulting.com>\n\n- Added ThreadingSOAPServer which inherits from ThreadingTCPServer\n  server so that muliple clients will be automatically multiplexed.\n\n- Removed some files from /test for services that no longer exist.\n\n\nCHANGES SINCE VERSION 0.9.9-pre4\n--------------------------------\n\n- Added client support for WSDL, ported from ZSI by Mark Bucciarelli\n  <mark@hubcapconsulting.com>.\n\nCHANGES SINCE VERSION 0.9.9-pre3\n--------------------------------\n\n- Code shared between SOAPpy and ZSI now lives in\n  SOAPpy/SOAPpy/wstools and is stored in a separate CVS package.  This\n  will allow ZSI and SOAPpy to keep these files synchronized.\n\nCHANGES SINCE VERSION 0.9.9-pre2\n--------------------------------\n\n- Fixed trivial compilation bug on Win32: Only define\n  SOAPUnixSocketServer if the Unix domain sockets are supported\n\nCHANGES SINCE VERSION 0.9.9-pre1\n--------------------------------\n\n- Added request for nested scopes, should now work properly in python\n  2.1 with named argument calls.\n\n- Fixed bug caused by omission of the ieee754 module from __init__.py.\n\n- SOAPpy now provides a SOAPUnixSocketServer class, which uses a unix\n  domain socket instead of a network TCP/IP socket for communication. A\n  corresponding client will be provided in the future.  [This class\n  has not yet been tested.]\n\nCHANGES SINCE VERSION 0.9.8\n---------------------------\n\n- IEEE 754 floating point specials (Inf, -Inf, NaN) should now be\n  properly and consistently handled on all platforms.\n\n  Added code to explicitly check for and handle IEEE 754 floating\n  point specials (Inf, -Inf, NaN). This replaces an ugly hack for\n  systems whose python float() doesn't understand the strings \"Inf\",\n  \"NaN\", etc.  Floating point specials should now be properly handled\n  on all operating systems.\n\n  ***SOAPpy should now work properly on all versions of Microsoft Windows.***\n\n  A new module, ieee754 contains the functions required to detect and\n  create NaN, Inf, and -Inf values.  This module should be usable in\n  other contexts.\n\n- *** The new argument handling method (via SOAPpy.SOAP.Config.specialArgs=1)\n  is now enabled by default.***\n\n- Changed all references to actzero.com in SOAP.py to pywebscvs.sf.net.\n\n- Fixed a bug where lists included as parameters to SOAP method calls\n  were being incorrectly named 'Results' even when another name was\n  given.\n\nCHANGES SINCE VERSION 0.9.7\n---------------------------\n\n- Modified structure to allow installation using Python distutils\n  (i.e. setup.py).  Access to the SOAPpy library now requires:\n  from SOAPpy import SOAP\n\n- I (Gregory R. Warnes) have implemented an experimental and\n  non-standard method of handling named and unnamed arguments.  This\n  mechanism is enabled in SOAPpy by setting\n  SOAPpy.SOAP.Config.specialArgs=1.\n\n  When enabled, parameters with names of the form _#### (i.e.,\n  matching the regexp \"^_[0-9]+\") are assumed to be unnamed parameters\n  and are passed to the method in numeric order.  All other parameters\n  are assumed to be named and are passed using the xml tag id as the\n  parameter name.  Outgoing SOAP method calls now always generate\n  names in this way--whether or not specialArgs is enabled--instead of\n  using the pattern v#####.\n\n  See the file README.MethodParameterNaming for more details.\n\n- Added noroot parameter to the SOAPBuilder and SOAPProxy objects\n  in order to provide compatibility with an older version of\n  EasySOAP (v0.2) that balked if the SOAP-ENC:root parameter was\n  included.(Brad Knotwell)\n\n- Added support for namespace-rewriting (used by Apache v2.x SOAP server for\n  error conditions as well as stateful communication) (Christopher Blunck)\n\n- Added string <-> str conversion for array types (Python 2.2+)\n  (Christopher Blunck)\n\n- Added convenience method (invoke) to SOAPProxy that calls __call (not sure\n  if it is necessary - feel free to remove if you want) (Christopher Blunck)\n\n- Python 'float' are equivalent to SOAP 'double'.  Modified dump_float\n  and dump_list to use SOAP type string 'double'\n  appropriately. (Gregory R. Warnes)\n\n- Add basic authentication (Brad Knotwell)\n\n- Fixes to enable proper handling of SOAP faults by the client:\n  - Fixed test of whether message content is text/xml when recieving a fault.\n  - Added __call__ method to exception classes to match the current API.\n  - The faultType.__repr__() method now print details if present\n  (Gregory R. Warnes)\n\n- Added XMLnam.py which provides toXMLname() and fromXMLname() for\n  properly encoding xml tag names per the SOAP 2.1 (draft)\n  specification. (Gregory R. Warnes)\n\n- Added calls to toXMLname() and fromXMLname() so that tags names are\n  properly encoded.  This resolves bug [ 548785 ] 'Error passing dict\n  keys containing space.'  (Gregory R. Warnes)\n\n- Added code to cgi encode contents of tags when they are not a\n  recognized type.  Fixes bug [ 549551 ] 'Error when passing\n  non-standard types'. (Gregory R. Warnes)\n\n- Added __init__.py, so that SOAPpy can be used like a standard python\n  module. (Gregory R. Warnes)\n\n\nVERSION 0.9.7 (6/27/01)\n-----------------------\n\n- Fixed the unamed ordered parameters bug\n- Added the ability to specify a http_proxy\n- Added a patch provided by Tim MiddelKoop to allow printing of proxy objects\n- Added the contrib directory and included a medusa implementation of a\n  SOAP.py server by Ng Pheng Siong\n\n\nVERSION 0.9.6 (6/08/01)\n-----------------------\n\n- The date and time types now check their initial values when the type\n  is created, not when the data is marshalled.\n- The date and time types are now parsed and returned as tuples (for\n  multi-element types) or scalars (for single element types) in UTC and thus\n  can represent the entire range of SOAP dates.\n- If an element doesn't have a type but has a name with a namespace, the\n  name is tried as the type.\n- Untyped compound types with more than one element and all the elements\n  the same name are turned into an array when parsing.\n- When parsing a structType, elements with the same name are placed in a\n  list instead of saving just the last one. _getItemsAsList can be used to\n  get an element of a structure as a list, whether there was one or many\n  occurances of the item.\n- Added schemaNamespace, schemaNamespaceURI, and namespaceStyle\n  configuration options. namespaceStyle takes one of 1999, 2000, or 2001,\n  and sets typesNamespace, typesNamespaceURI, schemaNamespace, and\n  schemaNamespaceURI.\n- Normalized the type class names, replacing Compound with compoundType,\n  Struct with structType, Header with headerType, Body with bodyType, Array\n  with arrayType, TypedArray with typedArrayType, Fault with faultType, and\n  urType with anyType.\n- Attributes now appear on an element itself instead of the element's\n  parent. For elements parsed to builtin python types, the attributes are\n  stored in a dictionary keyed by the element's python id. The dictionary\n  is in the Context object, can be returned from parseSOAP*, and can be\n  returned from method calls if the returnAllAttrs configuration option\n  is set.\n- isinstance is used to check for a class, so classes can be subtyped.\n- An encoding of None can be specified to not include encoding information.\n- Problems with the SOAPProxy URL are now reported when the SOAPProxy\n  instance is created instead of when the first method call is made.\n- The Binary, Boolean and DateTime types have been removed in favor of\n  binaryType, booleanType, and dateTimeType.\n\n\nVERSION 0.9.5 (5/16/01)\n-----------------------\n\n- Should parse and build all 1999, 2000, 2001, and SOAP-ENC datatypes.\n- Initial handling of multi-dimensional, partial, and sparse arrays.\n- Supports SSL clients (if Python built with OpenSSL).\n- Supports SSL servers (if M2Crypto installed).\n- Applies defaults to SOAPproxy URLs (nice for command-line tools).\n- Added the _SOAPContext object, gives registered server functions more info\n  about the current call.\n- Now assumes that any type that isn't in a schema could be a struct.\n- Added the Config object, now config options can be set globally or on an\n  individual call level.\n- Deprecated the DateTime, Binary and Boolean types, should now\n  use dateTimeType, binaryType and booleanType.\n- Includes N+I interop suite.\n- Various bug fixes and improvements.\n\nVERSION 0.9 (5/01/01)\n-----------------------\n\n- The Envelope now just contains definitions for namespaces actually used\n  (Builder)\n- Namespace definitions are inherited by children but not siblings (Builder)\n- Further improved multi-reference parsing -- it handles circular references\n  (Parser)\n- Added support for building recursive and circular types using references\n  (Builder)\n- More types\n- Proper handling of overflow and underflow integral and floating point\n  types (Parser)\n- More interop\n- Various bug fixes and improvements\n\nVERSION 0.8.5 (4/25/01)\n-----------------------\n\n- buildSOAP, SOAPProxy, SOAPServer now taking encoding argument\n- Much improved multi-referencing (Parser)\n- Added base64 and dateTime to interop suite\n- Various bug fixes\n\nVERSION 0.8 (4/23/01)\n-----------------------\n\n- Added more types\n- Early multi-referencing support (Parser)\n- Reorganized the parser, much cleaner now\n- Preserve whitepsace in strings (per the standard)\n- Full XML attribute support (Parser/Builder)\n- Object (de)serialization now maintains element order\n- Fixed the zero-length array problem\n- Made indentation uniform (spaces not tabs)\n- Made Header and Body work more like real structs\n- Changed the parseSOAP api, now returns the body structure,\n  instead of a list of body elements\n- Changed the soapaction and namespaces for the interop server\n- New silabclient options\n- Initial encoding support\n\nVERSION 0.7 (4/19/01)\n-----------------------\n\n- Fixed a bug that caused nothing to work with Python 2.1\n- Float work arounds for WIN32 (others?)\n- DateTime parsing for WIN32\n- Beginnings of XML attribute support\n- Better interop\n\nVERSION 0.6 (4/18/01)\n-----------------------\n\n- Fixed numerous bugs (dateTime, float precision, Response Element, null\n  strings)\n- Added more types\n- Homogeneous typed arrays\n- Added support for more schemas\n- Early Header support and mustUnderstand and actor\n- Added interop suite\n- Passes validator\n- Interop greatly improved, passes all client tests for Frontier,\n  SOAP::LITE.\n\nVERSION 0.5 (4/17/01)\n-----------------------\n\n- Initial public release","description_content_type":null,"docs_url":null,"download_url":"UNKNOWN","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/kiorky/SOAPpy.git","keywords":null,"license":"UNKNOWN","maintainer":null,"maintainer_email":null,"name":"SOAPpy","package_url":"https://pypi.org/project/SOAPpy/","platform":"UNKNOWN","project_url":"https://pypi.org/project/SOAPpy/","project_urls":{"Download":"UNKNOWN","Homepage":"https://github.com/kiorky/SOAPpy.git"},"provides_extra":null,"release_url":"https://pypi.org/project/SOAPpy/0.12.22/","requires_dist":null,"requires_python":null,"summary":"SOAP Services for Python","version":"0.12.22","yanked":false,"yanked_reason":null},"last_serial":1131514,"releases":{"0.12.1":[{"comment_text":"","digests":{"blake2b_256":"98180141ac9a38a9850e2e2ebd3937e0e1bbf2076090a827f56c62c217db3557","md5":"1f9b0686c9f1ea705b50b777cdce5cd7","sha256":"490d17880a155098452aec2f73b970e87675195407fcf6401c7512a7f743d12a"},"downloads":-1,"filename":"SOAPpy-0.12.1.tar.gz","has_sig":false,"md5_digest":"1f9b0686c9f1ea705b50b777cdce5cd7","packagetype":"sdist","python_version":"source","requires_python":null,"size":151988,"upload_time":"2011-02-21T21:57:43","upload_time_iso_8601":"2011-02-21T21:57:43.887674Z","url":"https://files.pythonhosted.org/packages/98/18/0141ac9a38a9850e2e2ebd3937e0e1bbf2076090a827f56c62c217db3557/SOAPpy-0.12.1.tar.gz","yanked":false,"yanked_reason":null}],"0.12.18":[{"comment_text":"","digests":{"blake2b_256":"2bf8a19f73049be7a87ebb3117a691173ce1851551f23cf637541f7da70e884f","md5":"09e8931521f9b5aecf29f627bccd4eda","sha256":"8623fb0987288aa8127f56d4991fb5a82a81125b8088fb57ea41f4707965ba12"},"downloads":-1,"filename":"SOAPpy-0.12.18.zip","has_sig":false,"md5_digest":"09e8931521f9b5aecf29f627bccd4eda","packagetype":"sdist","python_version":"source","requires_python":null,"size":172102,"upload_time":"2014-05-15T10:47:37","upload_time_iso_8601":"2014-05-15T10:47:37.172483Z","url":"https://files.pythonhosted.org/packages/2b/f8/a19f73049be7a87ebb3117a691173ce1851551f23cf637541f7da70e884f/SOAPpy-0.12.18.zip","yanked":false,"yanked_reason":null}],"0.12.20":[{"comment_text":"","digests":{"blake2b_256":"68bb89ccb8338571dd66f98ea734d3170c31cf4af5f5ffba7c5ebbce1289223c","md5":"99c90ed7f46e4e847ffb3fe156c806c5","sha256":"ed42ee76a1f1c6ce767296d67ef482059e32eb66cdcbc3ed6b6b9c3922444277"},"downloads":-1,"filename":"SOAPpy-0.12.20.zip","has_sig":false,"md5_digest":"99c90ed7f46e4e847ffb3fe156c806c5","packagetype":"sdist","python_version":"source","requires_python":null,"size":172192,"upload_time":"2014-05-15T10:50:10","upload_time_iso_8601":"2014-05-15T10:50:10.988852Z","url":"https://files.pythonhosted.org/packages/68/bb/89ccb8338571dd66f98ea734d3170c31cf4af5f5ffba7c5ebbce1289223c/SOAPpy-0.12.20.zip","yanked":false,"yanked_reason":null}],"0.12.21":[{"comment_text":"","digests":{"blake2b_256":"045136bb71f1b01920d07e661b01ef24780c63dafaa9f791d499dc17a838bb5b","md5":"659797fc5bcb01e9ef0cd74b93496e5c","sha256":"145206105c24afff1c85858db5fc03d947b458c65f18585e08c0b7890160d40f"},"downloads":-1,"filename":"SOAPpy-0.12.21.zip","has_sig":false,"md5_digest":"659797fc5bcb01e9ef0cd74b93496e5c","packagetype":"sdist","python_version":"source","requires_python":null,"size":172392,"upload_time":"2014-05-27T08:20:32","upload_time_iso_8601":"2014-05-27T08:20:32.780582Z","url":"https://files.pythonhosted.org/packages/04/51/36bb71f1b01920d07e661b01ef24780c63dafaa9f791d499dc17a838bb5b/SOAPpy-0.12.21.zip","yanked":false,"yanked_reason":null}],"0.12.22":[{"comment_text":"","digests":{"blake2b_256":"781b29cbe26b2b98804d65e934925ced9810883bdda9eacba3f993ad60bfe271","md5":"7a8d7199af72539d14168dd249a91a64","sha256":"e70845906bb625144ae6a8df4534d66d84431ff8e21835d7b401ec6d8eb447a5"},"downloads":-1,"filename":"SOAPpy-0.12.22.zip","has_sig":false,"md5_digest":"7a8d7199af72539d14168dd249a91a64","packagetype":"sdist","python_version":"source","requires_python":null,"size":172855,"upload_time":"2014-06-20T09:25:32","upload_time_iso_8601":"2014-06-20T09:25:32.886010Z","url":"https://files.pythonhosted.org/packages/78/1b/29cbe26b2b98804d65e934925ced9810883bdda9eacba3f993ad60bfe271/SOAPpy-0.12.22.zip","yanked":false,"yanked_reason":null}],"0.12.3":[{"comment_text":"","digests":{"blake2b_256":"9cd1a798aedd15dfe1675d3ac43f67f16bcfe16d36a04afabefca678c0c7487e","md5":"70fd353c93349be8c727f232814cf9ee","sha256":"e67f097fc3115d31c3cd5d3319336f8a6db0ceee8032d53e4bbced6c1091fe0c"},"downloads":-1,"filename":"SOAPpy-0.12.3.tar.gz","has_sig":false,"md5_digest":"70fd353c93349be8c727f232814cf9ee","packagetype":"sdist","python_version":"source","requires_python":null,"size":151994,"upload_time":"2011-02-21T22:03:00","upload_time_iso_8601":"2011-02-21T22:03:00.340146Z","url":"https://files.pythonhosted.org/packages/9c/d1/a798aedd15dfe1675d3ac43f67f16bcfe16d36a04afabefca678c0c7487e/SOAPpy-0.12.3.tar.gz","yanked":false,"yanked_reason":null}],"0.12.4":[{"comment_text":"","digests":{"blake2b_256":"b1f42b200075bee890bd6e371d35ee8e8fec81f9172947746bc03a9c0b867045","md5":"593a6327fa18929da73548e619c7f0eb","sha256":"c02c391c9991643c49adb96a6bc310fa7efe5b09946744a507e4f4528e412d00"},"downloads":-1,"filename":"SOAPpy-0.12.4.tar.gz","has_sig":false,"md5_digest":"593a6327fa18929da73548e619c7f0eb","packagetype":"sdist","python_version":"source","requires_python":null,"size":152492,"upload_time":"2011-02-21T22:07:24","upload_time_iso_8601":"2011-02-21T22:07:24.643170Z","url":"https://files.pythonhosted.org/packages/b1/f4/2b200075bee890bd6e371d35ee8e8fec81f9172947746bc03a9c0b867045/SOAPpy-0.12.4.tar.gz","yanked":false,"yanked_reason":null}],"0.12.5":[{"comment_text":"","digests":{"blake2b_256":"6d2cf2c2289a98b9f316df9d5e12b0cfd92491f38bd605ec021ccf1ed2fd39a6","md5":"2eeadc857dc0b7d6d3ba27cb5fdb1e08","sha256":"8d8e3bf304f5669432d58cc0c2870766096ef5e4e89889aa1bce6d7a68994ef7"},"downloads":-1,"filename":"SOAPpy-0.12.5.tar.gz","has_sig":false,"md5_digest":"2eeadc857dc0b7d6d3ba27cb5fdb1e08","packagetype":"sdist","python_version":"source","requires_python":null,"size":153106,"upload_time":"2011-08-01T11:15:02","upload_time_iso_8601":"2011-08-01T11:15:02.988048Z","url":"https://files.pythonhosted.org/packages/6d/2c/f2c2289a98b9f316df9d5e12b0cfd92491f38bd605ec021ccf1ed2fd39a6/SOAPpy-0.12.5.tar.gz","yanked":false,"yanked_reason":null}],"0.12.6":[{"comment_text":"","digests":{"blake2b_256":"fe7effc94fcc3c4bf88617845918d10ba25e00ea0c9ef6e2c08f0489a23f944e","md5":"92829b9bf22241ce5614ff9159ed4b93","sha256":"85107a1c1fa878a83005b90a6b7835dd5dda4ab57b90f95539615ccef3ee41a4"},"downloads":-1,"filename":"SOAPpy-0.12.6.zip","has_sig":false,"md5_digest":"92829b9bf22241ce5614ff9159ed4b93","packagetype":"sdist","python_version":"source","requires_python":null,"size":172098,"upload_time":"2014-05-15T10:41:03","upload_time_iso_8601":"2014-05-15T10:41:03.499157Z","url":"https://files.pythonhosted.org/packages/fe/7e/ffc94fcc3c4bf88617845918d10ba25e00ea0c9ef6e2c08f0489a23f944e/SOAPpy-0.12.6.zip","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"781b29cbe26b2b98804d65e934925ced9810883bdda9eacba3f993ad60bfe271","md5":"7a8d7199af72539d14168dd249a91a64","sha256":"e70845906bb625144ae6a8df4534d66d84431ff8e21835d7b401ec6d8eb447a5"},"downloads":-1,"filename":"SOAPpy-0.12.22.zip","has_sig":false,"md5_digest":"7a8d7199af72539d14168dd249a91a64","packagetype":"sdist","python_version":"source","requires_python":null,"size":172855,"upload_time":"2014-06-20T09:25:32","upload_time_iso_8601":"2014-06-20T09:25:32.886010Z","url":"https://files.pythonhosted.org/packages/78/1b/29cbe26b2b98804d65e934925ced9810883bdda9eacba3f993ad60bfe271/SOAPpy-0.12.22.zip","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
