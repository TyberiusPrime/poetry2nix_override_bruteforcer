{"info":{"author":"mnemonic AS","author_email":"opensource@mnemonic.no","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","License :: OSI Approved :: ISC License (ISCL)","Topic :: Utilities"],"description":"# CAEP\n\nConfiguration library that supports loading configuration from ini, environment variables\nand arguments into a [pydantic](https://docs.pydantic.dev/) schema.\n\nWith the pydantic schema you will have a fully typed configuration object that is parsed\nat load time.\n\n# Change log\n\n## 1.1.0\n\nSupport list/set/dict defaults, so you can now do:\n\n```python\nintlist: List[int] = Field([0,1,2], description=\"List of ints\")\n```\n\nThe previous way to defined defaults using strings are still supported, but will fail type checking with the pydantic mypy plugin, and will be removed in a later version:\n\n```python\nintlist: List[int] = Field(\"0,1,2\", description=\"List of ints\")\n```\n\n## 1.0.0\n\nSupport for pydantic 2.x. It is advised to migrate models with these changes:\n\n### Use `min_length` instead of `min_size`\n\nPydantic has builtin support for size of list, dictionaries and sets using `min_length` so you should change\n```python\nintlist: List[int] = Field(description=\"Space separated list of ints\", min_size=1)\n```\n\nto\n\n```python\nintlist: List[int] = Field(description=\"Space separated list of ints\", min_length=1)\n```\n\n### Migrate `split` and `kv_split` to `json_schema_extra`\n\nDo not use `split` and `kv_split` directly on the field, but put them in a dictionary `json_schema_extra`. E.g. change\n\n```python\nintlist: List[int] = Field(description=\"Space separated list of ints\", split=\" \")\n```\n\nto\n\n```python\nintlist: List[int] = Field(\n    description=\"Space separated list of ints\", json_schema_extra={\"split\": \" \"}\n)\n```\n\nand change\n\n```python\ndict_int: Dict[str, int] = Field(\n    description=\"Int Dict split by slash and dash\", split=\"-\", kv_split=\"/\"\n)\n```\n\nto\n\n```python\ndict_int: Dict[str, int] = Field(\n    description=\"Int Dict split by slash and dash\",\n    json_schema_extra={\"split\": \"-\", \"kv_split\": \"/\"},\n)\n```\n\n### Migrate `root_validator` to `model_validator`\n\n`root_validator` are stil supported, but it is advised to migrate to `model_validator`. Example using helper function `raise_if_some_and_not_all`:\n\n\n```python\n    @model_validator(mode=\"after\")  # type: ignore\n    def check_arguments(cls, m: \"ExampleConfig\") -> \"ExampleConfig\":\n        \"\"\"If one argument is set, they should all be set\"\"\"\n\n        caep.raise_if_some_and_not_all(\n            m.__dict__, [\"username\", \"password\", \"parent_id\"]\n        )\n\n        return m\n```\n\n# Example\n\n```python\n#!/usr/bin/env python3\nfrom typing import List\n\nfrom pydantic import BaseModel, Field\n\nimport caep\n\n\nclass Config(BaseModel):\n\n    text: str = Field(description=\"Required String Argument\")\n    number: int = Field(default=1, description=\"Integer with default value\")\n    switch: bool = Field(description=\"Boolean with default value\")\n    intlist: List[int] = Field(description=\"Space separated list of ints\", json_schema_extra={\"split\": \" \"})\n\n\n# Config/section options below will only be used if loading configuration\n# from ini file (under ~/.config)\nconfig = caep.load(\n    Config,\n    \"CAEP Example\",\n    \"caep\",  # Find .ini file under ~/.config/caep\n    \"caep.ini\",  # Find .ini file name caep.ini\n    \"section\",  # Load settings from [section] (default to [DEFAULT]\n)\n\nprint(config)\n```\n\nSample output with a `intlist` read from environment and `switch` from command line:\n\n```bash\n$ export INTLIST=\"1 2 3\"\n$ ./example.py --text \"My value\" --switch\ntext='My value' number=1 switch=True intlist=[1, 2, 3]\n```\n\n# Load config without ini support\n\nSpecifying configuration location, name and section is optional and can be skipped if you\ndo not want to support loading ini files from `$XDG_CONFIG_HOME`:\n\n```python\n# Only load arguments from environment and command line\nconfig = caep.load(\n    Config,\n    \"CAEP Example\",\n)\n```\n\nWith the code above you can still specify a ini file with `--config <ini-file>`, and use\nenvironment variables and command line arguments.\n\n# Pydantic field types\n\nPydantic fields should be defined using `Field` and include the `description` parameter\nto specify help text for the commandline.\n\nUnless the `Field` has a `default` value, it is a required field that needs to be\nspecified in the environment, configuration file or on the command line.\n\nMany of the types described in [https://docs.pydantic.dev/usage/types/](https://docs.pydantic.dev/usage/types/)\nshould be supported, but not all of them are tested. However,  nested schemas\nare *not* supported.\n\nTested types:\n\n### `str`\n\nStandard string argument.\n\n### `int`\n\nValues parsed as integer.\n\n### `float`\n\nValue parsed as float.\n\n### `pathlib.Path`\n\nValue parsed as Path.\n\n### `ipaddress.IPv4Address`\n\nValues parsed and validated as IPv4Address.\n\n### `ipaddress.IPv4Network`\n\nValues parsed and validated as IPv4Network.\n\n### `bool`\n\nValue parsed as booleans. Booleans will default to False, if no default value is set.\nExamples:\n\n\n| Field                                                      | Input     | Configuration |\n| -                                                          | -         | -             |\n| `enable: bool = Field(description=\"Enable\")`               | <NOT SET> | False         |\n| `enable: bool = Field(value=False, description=\"Enable\")`  | `yes`     | True          |\n| `enable: bool = Field(value=False, description=\"Enable\")`  | `true`    | True          |\n| `disable: bool = Field(value=True, description=\"Disable\")` | <NOT SET> | True          |\n| `disable: bool = Field(value=True, description=\"Disable\")` | `yes`     | False         |\n| `disable: bool = Field(value=True, description=\"Disable\")` | `true`    | False         |\n\n### `List[str]` (`list[str]` for python >= 3.9)\n\nList of strings, split by specified character (default = comma, argument=`split`).\n\nSome examples:\n\n| Field                                                                     | Input   | Configuration |\n| -                                                                         | -       | -             |\n| `List[int] = Field(description=\"Ints\", json_schema_extra={\"split\": \" \"})` | `1 2`   | [1, 2]        |\n| `List[str] = Field(description=\"Strs\")`                                   | `ab,bc` | [\"ab\", \"bc\"]  |\n\nThe argument `min_length` (pydantic builtin) can be used to specify the minimum size of the list:\n\n| Field                                                 | Input | Configuration          |\n| -                                                     | -     | -                      |\n| `List[str] = Field(description=\"Strs\", min_length=1)` | ``    | Raises ValidationError |\n\n### `Set[str]` (`set[str]` for python >= 3.9)\n\nSet, split by specified character (default = comma, argument=`split`).\n\nSome examples:\n\n| Field                                                                    | Input      | Configuration |\n| -                                                                        | -          | -             |\n| `Set[int] = Field(description=\"Ints\", json_schema_extra={\"split\": \" \"})` | `1 2 2`    | {1, 2}        |\n| `Set[str] = Field(description=\"Strs\")`                                   | `ab,ab,xy` | {\"ab\", \"xy\"}  |\n\nThe argument `min_length` can be used to specify the minimum size of the set:\n\n| Field                                                | Input | Configuration          |\n| -                                                    | -     | -                      |\n| `Set[str] = Field(description=\"Strs\", min_length=1)` | ``    | Raises ValidationError |\n\n\n### `Dict[str, <TYPE>]` (`dict[str, <TYPE>]` for python >= 3.9)\n\nDictioray of strings, split by specified character (default = comma, argument=`split` for\nsplitting items and colon for splitting key/value).\n\nSome examples:\n\n| Field                                                | Input                | Configuration            |\n| -                                                    | -                    | -                        |\n| `Dict[str, str] = Field(description=\"Dict\")`         | `x:a,y:b`            | {\"x\": \"a\", \"y\": \"b\"}     |\n| `Dict[str, int] = Field(description=\"Dict of ints\")` | `a b c:1, d e f:2`   | {\"a b c\": 1, \"d e f\": 2} |\n\nThe argument `min_length` can be used to specify the minimum numer of keys in the dictionary:\n\n| Field                                                      | Input | Configuration          |\n| -                                                          | -     | -                      |\n| `Dict[str, str] = Field(description=\"Strs\", min_length=1)` | ``    | Raises ValidationError |\n\n\n# Configuration\n\nArguments are parsed in two phases. First, it will look for the optional argument `--config`\nwhich can be used to specify an alternative location for the ini file. If not `--config` argument\nis given it will look for an optional ini file in the following locations\n(`~/.config has presedence`) *if* `config_id` and `config_name` is specified:\n\n- `~/.config/<CONFIG_ID>/<CONFIG_FILE_NAME>` (or directory specified by `$XDG_CONFIG_HOME`)\n- `/etc/<CONFIG_FILE_NAME>`\n\nThe ini file can contain a `[DEFAULT]` section that will be used for all configurations.\nIn addition it can have a section that corresponds with `<SECTION_NAME>` (if specified) that for\nspecific configuration, that will over override config from `[DEFAULT]`\n\n# Environment variables\n\nThe configuration step will also look for environment variables in uppercase and\nwith `-` replaced with `_`. For the example below it will lookup the following environment\nvariables:\n\n- $NUMBER\n- $BOOL\n- $STR_ARG\n\nThe configuration presedence are (from lowest to highest):\n* argparse default\n* ini file\n* environment variable\n* command line argument\n\n\n## Validation\n\n## XDG\n\nHelper functions to use [XDG Base Directories](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html) are included in `caep.xdg`:\n\nIt will look up `XDG` environment variables like `$XDG_CONFIG_HOME` and use\ndefaults if not specified.\n\n### `get_xdg_dir`\n\nGeneric function to get a `XDG` directory.\n\nThe following example with will return a path object to ~/.config/myprog\n(if `$XDG_CONFIG_HOME` is not set) and create the directoy if it does not\nexist.\n\n```python\nget_xdg_dir(\"myprog\", \"XDG_CONFIG_HOME\", \".config\", True)\n```\n\n### `get_config_dir`\n\nShortcut for `get_xdg_dir(\"CONFIG\")`.\n\n### `get_cache_dir`\n\nShortcut for `get_xdg_dir(\"CACHE\")`.\n\n## CAEP Legacy usage\n\nPrior to version `0.1.0` the recommend usage was to add parser objects manually. This is\nstill supported, but with this approach you will not get the validation from pydantic:\n\n```python\n>>> import caep\n>>> import argparse\n>>> parser = argparse.ArgumentParser(\"test argparse\")\n>>> parser.add_argument('--number', type=int, default=1)\n>>> parser.add_argument('--bool', action='store_true')\n>>> parser.add_argument('--str-arg')\n>>> args = caep.config.handle_args(parser, <CONFIG_ID>, <CONFIG_FILE_NAME>, <SECTION_NAME>)\n```\n\n# Helper Functions\n\n## raise_if_some_and_not_all\nRaise ArgumentError if some of the specified entries in the dictionary has non\nfalse values but not all\n\n```python\nclass ExampleConfig(BaseModel):\n    username: Optional[str] = Field(description=\"Username\")\n    password: Optional[str] = Field(description=\"Password\")\n    parent_id: Optional[str] = Field(description=\"Parent ID\")\n\n    @model_validator(mode=\"after\")  # type: ignore\n    def check_arguments(cls, m: \"ExampleConfig\") -> \"ExampleConfig\":\n        \"\"\"If one argument is set, they should all be set\"\"\"\n\n        caep.raise_if_some_and_not_all(\n            m.__dict__, [\"username\", \"password\", \"parent_id\"]\n        )\n\n        return m\n```\n\n## script_name\n   Return first external module that called this function, directly, or indirectly\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/mnemonic-no/caep","keywords":"mnemonic","license":"ISC","maintainer":"","maintainer_email":"","name":"caep","package_url":"https://pypi.org/project/caep/","platform":null,"project_url":"https://pypi.org/project/caep/","project_urls":{"Homepage":"https://github.com/mnemonic-no/caep"},"provides_extra":null,"release_url":"https://pypi.org/project/caep/1.1.0/","requires_dist":null,"requires_python":">=3.6, <4","summary":"Config Argument Env Parser (CAEP)","version":"1.1.0","yanked":false,"yanked_reason":null},"last_serial":20102836,"releases":{"0.0.1":[{"comment_text":"","digests":{"blake2b_256":"a718dc31e3d2ddc6c471e036eef53c5cf5578731d361a2886cff5be7faa069de","md5":"1ab32dd5b572bc1bc27d379204ba6290","sha256":"b09b9b873be1849052809a0c1615c21bd9150a0df6125becdc15669f899fd619"},"downloads":-1,"filename":"caep-0.0.1.tar.gz","has_sig":false,"md5_digest":"1ab32dd5b572bc1bc27d379204ba6290","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":4397,"upload_time":"2020-03-11T11:43:18","upload_time_iso_8601":"2020-03-11T11:43:18.863906Z","url":"https://files.pythonhosted.org/packages/a7/18/dc31e3d2ddc6c471e036eef53c5cf5578731d361a2886cff5be7faa069de/caep-0.0.1.tar.gz","yanked":false,"yanked_reason":null}],"0.0.2":[{"comment_text":"","digests":{"blake2b_256":"0e5082ae5b0aeca83dffe60d71ebc6e35a6739a9b84f648d85aeb9947ba5e906","md5":"2adeda95bea06f842f2add400e807baf","sha256":"47bc8ae6ac382f19010343d4e927737fc731f7b25e7788219b135101023b1870"},"downloads":-1,"filename":"caep-0.0.2.tar.gz","has_sig":false,"md5_digest":"2adeda95bea06f842f2add400e807baf","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":4445,"upload_time":"2020-06-17T06:02:34","upload_time_iso_8601":"2020-06-17T06:02:34.311958Z","url":"https://files.pythonhosted.org/packages/0e/50/82ae5b0aeca83dffe60d71ebc6e35a6739a9b84f648d85aeb9947ba5e906/caep-0.0.2.tar.gz","yanked":false,"yanked_reason":null}],"0.0.3":[{"comment_text":"","digests":{"blake2b_256":"62c13f7dfc618feb2de0f54df96bc358da1ff57db07a1ba27762004e5621384b","md5":"844ef2fb15e6151ff3c2aff4c429a93e","sha256":"6c2aa370345328ff27a607e633790b38bb4da96480a16e3f3d2e65cd69343983"},"downloads":-1,"filename":"caep-0.0.3.tar.gz","has_sig":false,"md5_digest":"844ef2fb15e6151ff3c2aff4c429a93e","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":4506,"upload_time":"2020-07-01T16:43:46","upload_time_iso_8601":"2020-07-01T16:43:46.561742Z","url":"https://files.pythonhosted.org/packages/62/c1/3f7dfc618feb2de0f54df96bc358da1ff57db07a1ba27762004e5621384b/caep-0.0.3.tar.gz","yanked":false,"yanked_reason":null}],"0.0.4":[{"comment_text":"","digests":{"blake2b_256":"f5e1f7e6f89e185576563f8861daac2baaa80922bb03a75ea90f4fea98fd3ba1","md5":"6b0e2d34841367700e0c7538dc1f8a2d","sha256":"ec4e6dc31f748e59b2c8eae2c287c44ba9553eff97c71965dc384948145f7d4b"},"downloads":-1,"filename":"caep-0.0.4.tar.gz","has_sig":false,"md5_digest":"6b0e2d34841367700e0c7538dc1f8a2d","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":4529,"upload_time":"2020-08-10T08:47:20","upload_time_iso_8601":"2020-08-10T08:47:20.927532Z","url":"https://files.pythonhosted.org/packages/f5/e1/f7e6f89e185576563f8861daac2baaa80922bb03a75ea90f4fea98fd3ba1/caep-0.0.4.tar.gz","yanked":false,"yanked_reason":null}],"0.0.5":[{"comment_text":"","digests":{"blake2b_256":"16683b24c357926a720a9e68e53e0d82a69f8062dce7e34534cd2554e0f6277a","md5":"12afe154850e72719c1963b6dab7b874","sha256":"ea2041cb5a80c1c3cc54a316a0f3019ebe611f4988ad57818c9a665f3f4a3ae7"},"downloads":-1,"filename":"caep-0.0.5.tar.gz","has_sig":false,"md5_digest":"12afe154850e72719c1963b6dab7b874","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":5266,"upload_time":"2022-12-05T13:00:37","upload_time_iso_8601":"2022-12-05T13:00:37.673482Z","url":"https://files.pythonhosted.org/packages/16/68/3b24c357926a720a9e68e53e0d82a69f8062dce7e34534cd2554e0f6277a/caep-0.0.5.tar.gz","yanked":false,"yanked_reason":null}],"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"1ce056960a2c65bd4381cb1f284ebea0d40e7f8cf4e6cb63c9bafced05d50dec","md5":"2009ac486e276c27d78dc15793189c1b","sha256":"fe72be833e74c4fcabc27251e22b9ee8d1962cbcd84ce4bef8bd85440d67840d"},"downloads":-1,"filename":"caep-0.1.0.tar.gz","has_sig":false,"md5_digest":"2009ac486e276c27d78dc15793189c1b","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":12337,"upload_time":"2023-01-02T09:23:41","upload_time_iso_8601":"2023-01-02T09:23:41.004982Z","url":"https://files.pythonhosted.org/packages/1c/e0/56960a2c65bd4381cb1f284ebea0d40e7f8cf4e6cb63c9bafced05d50dec/caep-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"c2f07deea4aadc6cfa734acab4d218a5808a95f73e6c93e48fbb15f04d353c54","md5":"65eb4236b0b8f75b4d4c4ccee16e157e","sha256":"b3fad2dc8d695b4f5e050e0283e6db1625642020edbbc2723e1312f29077d878"},"downloads":-1,"filename":"caep-0.1.1.tar.gz","has_sig":false,"md5_digest":"65eb4236b0b8f75b4d4c4ccee16e157e","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":12356,"upload_time":"2023-01-02T13:07:17","upload_time_iso_8601":"2023-01-02T13:07:17.213705Z","url":"https://files.pythonhosted.org/packages/c2/f0/7deea4aadc6cfa734acab4d218a5808a95f73e6c93e48fbb15f04d353c54/caep-0.1.1.tar.gz","yanked":false,"yanked_reason":null}],"0.1.2":[{"comment_text":"","digests":{"blake2b_256":"91dc57a93cf32ce891e28215f0e04cf38c75c5d551f6dd8a75330f63d3e03ae7","md5":"d9ec1c8cc3cb125624d7c3a062abf558","sha256":"6a2d95a9bd7a90da975408270d22b700e75f356ad3c801440f6d4c11051e99f9"},"downloads":-1,"filename":"caep-0.1.2.tar.gz","has_sig":false,"md5_digest":"d9ec1c8cc3cb125624d7c3a062abf558","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":12656,"upload_time":"2023-01-30T11:31:48","upload_time_iso_8601":"2023-01-30T11:31:48.349486Z","url":"https://files.pythonhosted.org/packages/91/dc/57a93cf32ce891e28215f0e04cf38c75c5d551f6dd8a75330f63d3e03ae7/caep-0.1.2.tar.gz","yanked":false,"yanked_reason":null}],"0.1.3":[{"comment_text":"","digests":{"blake2b_256":"504506897f439b2faeffad32b5d1de98ff0ceaf21c1c36ad6ae770313410cd1a","md5":"24d6b5402c9581f0dc4b2b46b4afc114","sha256":"a867f10b0743f9db29b4226eebab372a93240a25c6c2add44314cfd703bafd12"},"downloads":-1,"filename":"caep-0.1.3.tar.gz","has_sig":false,"md5_digest":"24d6b5402c9581f0dc4b2b46b4afc114","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":12672,"upload_time":"2023-01-31T07:49:07","upload_time_iso_8601":"2023-01-31T07:49:07.986399Z","url":"https://files.pythonhosted.org/packages/50/45/06897f439b2faeffad32b5d1de98ff0ceaf21c1c36ad6ae770313410cd1a/caep-0.1.3.tar.gz","yanked":false,"yanked_reason":null}],"0.1.4":[{"comment_text":"","digests":{"blake2b_256":"6987aad34e95a7cfcc9742d5c50ce0d2a56550264f83fcf2bcc973fa01ac86bd","md5":"ce7509ce33ef9cf54c2803f0f4042d1a","sha256":"bb9749f8a1749663542fb0502a7abdcbed48eea7fa4590e8f1d98251bdbac8b1"},"downloads":-1,"filename":"caep-0.1.4.tar.gz","has_sig":false,"md5_digest":"ce7509ce33ef9cf54c2803f0f4042d1a","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":16397,"upload_time":"2023-03-28T05:50:32","upload_time_iso_8601":"2023-03-28T05:50:32.327408Z","url":"https://files.pythonhosted.org/packages/69/87/aad34e95a7cfcc9742d5c50ce0d2a56550264f83fcf2bcc973fa01ac86bd/caep-0.1.4.tar.gz","yanked":false,"yanked_reason":null}],"0.1.5":[{"comment_text":"","digests":{"blake2b_256":"b770f7e229d20cf40458f6f3d2a9b2782fb4d05be005126a966c492386624939","md5":"160b27441ff7ded2b1532624af38d856","sha256":"8b91930a8243a532052e2cfe3a78e3049bc09801f0438d970495936b6270d106"},"downloads":-1,"filename":"caep-0.1.5.tar.gz","has_sig":false,"md5_digest":"160b27441ff7ded2b1532624af38d856","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":16583,"upload_time":"2023-03-28T14:28:18","upload_time_iso_8601":"2023-03-28T14:28:18.911170Z","url":"https://files.pythonhosted.org/packages/b7/70/f7e229d20cf40458f6f3d2a9b2782fb4d05be005126a966c492386624939/caep-0.1.5.tar.gz","yanked":false,"yanked_reason":null}],"0.1.6":[{"comment_text":"","digests":{"blake2b_256":"5cce4da0814f8824f7397f1afb1958c567eaf76c345b9e2d3fdf45a17dbbe0e9","md5":"380c9236e004bfd878a37d3954646cd6","sha256":"dc44843f44c0aeb20bbb31df8f68c21bab949c579e3e453ea3d9c5a21395db87"},"downloads":-1,"filename":"caep-0.1.6.tar.gz","has_sig":false,"md5_digest":"380c9236e004bfd878a37d3954646cd6","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":16617,"upload_time":"2023-04-10T07:37:23","upload_time_iso_8601":"2023-04-10T07:37:23.792588Z","url":"https://files.pythonhosted.org/packages/5c/ce/4da0814f8824f7397f1afb1958c567eaf76c345b9e2d3fdf45a17dbbe0e9/caep-0.1.6.tar.gz","yanked":false,"yanked_reason":null}],"0.1.7":[{"comment_text":"","digests":{"blake2b_256":"760a516c5827cda0e6cd723a84171f70bbd6b0816c5096c75861f5414748a453","md5":"39b69791957a10c88614ffb6c34f6244","sha256":"c4d7676bded5bd86f7cb3b1087de968b5c6f49a2b51ebf860542dde29158c35f"},"downloads":-1,"filename":"caep-0.1.7.tar.gz","has_sig":false,"md5_digest":"39b69791957a10c88614ffb6c34f6244","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":16814,"upload_time":"2023-04-21T06:55:31","upload_time_iso_8601":"2023-04-21T06:55:31.370156Z","url":"https://files.pythonhosted.org/packages/76/0a/516c5827cda0e6cd723a84171f70bbd6b0816c5096c75861f5414748a453/caep-0.1.7.tar.gz","yanked":false,"yanked_reason":null}],"0.1.8":[{"comment_text":"","digests":{"blake2b_256":"316f71f88e70e6ee3a5f1aff9217c261c3d8049017aa967f424677093fba81a6","md5":"086c4b280ec9e8bb11d8fcbba57ff69f","sha256":"99139ae0144defbfe8e5c66fe0eb560c3ee4799077c30699381e323d0e80e330"},"downloads":-1,"filename":"caep-0.1.8.tar.gz","has_sig":false,"md5_digest":"086c4b280ec9e8bb11d8fcbba57ff69f","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":16916,"upload_time":"2023-05-04T16:45:14","upload_time_iso_8601":"2023-05-04T16:45:14.663525Z","url":"https://files.pythonhosted.org/packages/31/6f/71f88e70e6ee3a5f1aff9217c261c3d8049017aa967f424677093fba81a6/caep-0.1.8.tar.gz","yanked":false,"yanked_reason":null}],"0.1.9":[{"comment_text":"","digests":{"blake2b_256":"0996dc6c4e15c8a58220438bbd00637d1f017534357ffb0191fb2dccaad0cd22","md5":"2b8fe3f51c26b134aede3ec606b9f902","sha256":"1ec2ede494ba1da9a61b7fa273f95cd5b8d468d600e0f3122ce8adae86e0674e"},"downloads":-1,"filename":"caep-0.1.9.tar.gz","has_sig":false,"md5_digest":"2b8fe3f51c26b134aede3ec606b9f902","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":17182,"upload_time":"2023-06-08T06:03:51","upload_time_iso_8601":"2023-06-08T06:03:51.662552Z","url":"https://files.pythonhosted.org/packages/09/96/dc6c4e15c8a58220438bbd00637d1f017534357ffb0191fb2dccaad0cd22/caep-0.1.9.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"0569b8f2217e9bb0d6ac6a5de64b90731c8aa43b735a7501722250ae6e1cb169","md5":"d620ee8e604e2489ed37b478e7ed90c6","sha256":"0fac25963b09708618f27bb231baa1f3be773bddca1a1a85b1d3c36105fd956a"},"downloads":-1,"filename":"caep-1.0.0.tar.gz","has_sig":false,"md5_digest":"d620ee8e604e2489ed37b478e7ed90c6","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":18277,"upload_time":"2023-08-24T19:13:45","upload_time_iso_8601":"2023-08-24T19:13:45.659611Z","url":"https://files.pythonhosted.org/packages/05/69/b8f2217e9bb0d6ac6a5de64b90731c8aa43b735a7501722250ae6e1cb169/caep-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0b1":[{"comment_text":"","digests":{"blake2b_256":"0cebc1b31f8d181525c520d7d33081b953f31efa6260b19ced45e8cc26afdb1c","md5":"93616de83d1f6dde339bc1ea10c035ff","sha256":"8319142ad922fb72f0b045a3bdb7232a9abce49fb8a9d7b41494c4d703fc49eb"},"downloads":-1,"filename":"caep-1.0.0b1.tar.gz","has_sig":false,"md5_digest":"93616de83d1f6dde339bc1ea10c035ff","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":17504,"upload_time":"2023-07-06T09:51:30","upload_time_iso_8601":"2023-07-06T09:51:30.693385Z","url":"https://files.pythonhosted.org/packages/0c/eb/c1b31f8d181525c520d7d33081b953f31efa6260b19ced45e8cc26afdb1c/caep-1.0.0b1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"c757aac889a468f609520329f1c9a71c72879e4a35023b81c2ab1fd9b74343bb","md5":"7b54e2a67e331549d6f8eccdd78cbfe3","sha256":"e4009191f63e890793bbae3941837e49b3707b0ce2613cc3341594282eed141e"},"downloads":-1,"filename":"caep-1.1.0.tar.gz","has_sig":false,"md5_digest":"7b54e2a67e331549d6f8eccdd78cbfe3","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":18928,"upload_time":"2023-10-10T14:13:17","upload_time_iso_8601":"2023-10-10T14:13:17.020884Z","url":"https://files.pythonhosted.org/packages/c7/57/aac889a468f609520329f1c9a71c72879e4a35023b81c2ab1fd9b74343bb/caep-1.1.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"c757aac889a468f609520329f1c9a71c72879e4a35023b81c2ab1fd9b74343bb","md5":"7b54e2a67e331549d6f8eccdd78cbfe3","sha256":"e4009191f63e890793bbae3941837e49b3707b0ce2613cc3341594282eed141e"},"downloads":-1,"filename":"caep-1.1.0.tar.gz","has_sig":false,"md5_digest":"7b54e2a67e331549d6f8eccdd78cbfe3","packagetype":"sdist","python_version":"source","requires_python":">=3.6, <4","size":18928,"upload_time":"2023-10-10T14:13:17","upload_time_iso_8601":"2023-10-10T14:13:17.020884Z","url":"https://files.pythonhosted.org/packages/c7/57/aac889a468f609520329f1c9a71c72879e4a35023b81c2ab1fd9b74343bb/caep-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
