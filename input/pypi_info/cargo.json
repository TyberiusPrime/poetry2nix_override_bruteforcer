{"info":{"author":"Mathieu Larose","author_email":"mathieu@mathieularose.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8"],"description":"# Cargo\n\nCargo is a dependency injection library for Python.\n\nCargo is [simple to use](#getting-started), [typed](#cargo-is-typed),\n[flexible](#cargo-is-flexible), [extensible](#cargo-is-extensible) and\n[easy to debug](#cargo-is-easy-to-debug).\n\n\n## Getting started\n\n### Step 1: Install cargo\n\nWith pip:\n\n```shell script\n$ pip install cargo\n```\n\nWith pipenv:\n\n```shell script\n$ pipenv install cargo\n```\n\nWith poetry:\n\n```shell script\n$ poetry add cargo\n```\n\n### Step 2: Use cargo\n\n[examples/intro.py](./examples/intro.py):\n\n```python\nimport cargo\n\n# 1. Define your components\n\n\nclass A:\n    def __str__(self):\n        return \"A\"\n\n\nclass B:\n    def __init__(self, a: A):\n        self.a = a\n\n\n# 2. Create a cargo container\n\ncontainer = cargo.containers.Standard()\n\n\n# 3. Register your components\n\ncontainer[A] = A\ncontainer[B] = B\n\n\n# 4. Use cargo to initialize your components\n\nb = container[B]\n\n\n# 5. Use your components\n\nprint(b.a)\n```\n\n## Features\n\nAll the examples are located in the [examples](examples) directory.\n\n\n### Cargo is typed\n\nCargo uses the argument types to inject the dependencies; not their\nnames.\n\n[examples/hello_dependencies.py](examples/hello_dependencies.py):\n\n```python\nimport cargo\n\n\nclass A:\n    pass\n\n\nclass B:\n    pass\n\n\nclass Hello:\n    def __init__(self, foo: A, bar: B):\n        print(f\"Hello {foo} and {bar}\")\n\n\ncontainer = cargo.containers.Standard()\n\ncontainer[A] = A\ncontainer[B] = B\ncontainer[Hello] = Hello\n\n# Prints: Hello <__main__.A object at 0x7f863b0fd450> and <__main__.B object at 0x7f863b09b810>\ncontainer[Hello]\n```\n\n### Cargo is flexible\n\nFunctions and methods can be used as factories; and objects as values.\n\n[examples/factory_and_value.py](examples/factory_and_value.py):\n\n```python\n...\n\nDatabaseURL = typing.NewType(\"DatabaseURL\", str)\n\ndef database_client_factory(db_url: DatabaseURL) -> DatabaseClient:\n    if db_url.startswith(\"mysql://\"):\n        return MysqlClient(db_url)\n\n    if db_url.startswith(\"postgres://\"):\n        return PostgresClient(db_url)\n\n    raise Exception(f\"Invalid database url: {db_url}\")\n\n\ncontainer = cargo.containers.Standard()\n\n# Registers a factory\ncontainer[DatabaseClient] = database_client_factory\n\n# Registers a value\ncontainer[DatabaseURL] = \"mysql://user:password@host:3306/db\"\n\ndb_client = container[DatabaseClient]\n\nprint(db_client)  # Prints: <__main__.MysqlClient object at 0x7f681975b390>\n```\n\n\n\n### Cargo is extensible\n\nCargo composes middlewares to create containers. The\n[`Standard`](cargo/containers.py) container is just a stack of\nopiniated middlewares. You can create your own types of containers\nwith the [middlewares](cargo/middlewares.py) you want, or even create\nyour own middlewares.\n\n\n[examples/my_container.py](examples/my_container.py):\n\n```python\nimport cargo\n\n\nclass LoggerMiddleware(cargo.types.Middleware):\n    def execute(\n        self,\n        dependency_type: cargo.types.DependencyType,\n        next_middleware: cargo.types.NextMiddleware,\n    ):\n        print(f\"Start resolving {dependency_type}\")\n        dependency_value = next_middleware()\n        print(f\"End resolving {dependency_type}\")\n        return dependency_value\n\n\nmiddleware_factories = [\n    LoggerMiddleware,\n    cargo.middlewares.CircularDependencyCircuitBreaker,\n    cargo.middlewares.Singleton,\n]\ncontainer = cargo.containers.create(middleware_factories)\n\n\nclass A:\n    pass\n\n\nclass B:\n    def __init__(self, a: A):\n        pass\n\n\ncontainer[A] = A\ncontainer[B] = B\n\n# Prints:\n# Start resolving <class '__main__.B'>\n# Start resolving <class '__main__.A'>\n# End resolving <class '__main__.A'>\n# End resolving <class '__main__.B'>\ncontainer[B]\n```\n\n\n### Cargo is easy to debug\n\n#### Dependency not found\n\nCargo raises a [`DependencyNotFound`](cargo/exceptions.py) exception\nwith the missing dependency type when a dependency is not found.\n\n[examples/dependency_not_found.py](examples/dependency_not_found.py):\n\n```python\n...\n\nclass A:\n    def __init__(self, b: B):\n        pass\n\n\nclass B:\n    pass\n\n\ncontainer = cargo.containers.Standard()\ncontainer[A] = A\n# Note: B has not been registered\n\n# Raises cargo.exceptions.DependencyNotFound: <class '__main__.B'>\ncontainer[A]\n```\n\n#### Circular dependency\n\nCargo raises a [`CircularDependency`](cargo/exceptions.py) exception\nwith the dependency cycle when a circular dependency is detected.\n\n[examples/circular_dependency.py](examples/circular_dependency.py):\n\n```python\n...\n\n# Dependencies:\n#   - A depends on B\n#   - B depends on C\n#   - C depends on D\n#   - D depends on B\n#\n# Circular dependency cycle is: B -> C -> D -> B\n\n...\n\ncontainer = cargo.containers.Standard()\ncontainer[A] = A\ncontainer[B] = B\ncontainer[C] = C\ncontainer[D] = D\n\n# Raises cargo.exceptions.CircularDependency:\n#   [<class '__main__.B'>, <class '__main__.C'>, <class '__main__.D'>, <class '__main__.B'>]\ncontainer[A]\n```\n\n\n## Contributors\n\n- [Mathieu Larose](https://mathieularose.com)\n\n\n## License\n\nCargo is licensed under the terms of the [MIT license](./LICENSE).\n\n\n## Website\n\nhttps://github.com/larose/cargo\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/larose/cargo","keywords":"","license":"MIT","maintainer":"Mathieu Larose","maintainer_email":"mathieu@mathieularose.com","name":"cargo","package_url":"https://pypi.org/project/cargo/","platform":"","project_url":"https://pypi.org/project/cargo/","project_urls":{"Homepage":"https://github.com/larose/cargo"},"provides_extra":null,"release_url":"https://pypi.org/project/cargo/0.3/","requires_dist":null,"requires_python":">=3.7,<4.0","summary":"Dependency injection library for Python.","version":"0.3","yanked":false,"yanked_reason":null},"last_serial":7157609,"releases":{"0.3":[{"comment_text":"","digests":{"blake2b_256":"3690555fbe2dc0936090d8a512b33a0186ea0b1d465c881c2aa3f59eb90d2c19","md5":"3ef2bcccde0cd9415733749cbaa07183","sha256":"eb41caddbdfab94d5ce72c363fb1109ff74e55d3381ba545a62ca25763cd8adb"},"downloads":-1,"filename":"cargo-0.3-py3-none-any.whl","has_sig":false,"md5_digest":"3ef2bcccde0cd9415733749cbaa07183","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":7201,"upload_time":"2020-05-03T15:37:50","upload_time_iso_8601":"2020-05-03T15:37:50.841506Z","url":"https://files.pythonhosted.org/packages/36/90/555fbe2dc0936090d8a512b33a0186ea0b1d465c881c2aa3f59eb90d2c19/cargo-0.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8dacd3ac29288dde6e7358af4340c736334ac5fe99d601df3ab4805cf31ae59c","md5":"a425c2da5089f33e3ec36d609ffd7218","sha256":"38534a877b2df38f3ab6c2767e673351888dfeb062ce6f2a715b3dce6ca1f8fe"},"downloads":-1,"filename":"cargo-0.3.tar.gz","has_sig":false,"md5_digest":"a425c2da5089f33e3ec36d609ffd7218","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":7413,"upload_time":"2020-05-03T15:37:51","upload_time_iso_8601":"2020-05-03T15:37:51.937667Z","url":"https://files.pythonhosted.org/packages/8d/ac/d3ac29288dde6e7358af4340c736334ac5fe99d601df3ab4805cf31ae59c/cargo-0.3.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"3690555fbe2dc0936090d8a512b33a0186ea0b1d465c881c2aa3f59eb90d2c19","md5":"3ef2bcccde0cd9415733749cbaa07183","sha256":"eb41caddbdfab94d5ce72c363fb1109ff74e55d3381ba545a62ca25763cd8adb"},"downloads":-1,"filename":"cargo-0.3-py3-none-any.whl","has_sig":false,"md5_digest":"3ef2bcccde0cd9415733749cbaa07183","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7,<4.0","size":7201,"upload_time":"2020-05-03T15:37:50","upload_time_iso_8601":"2020-05-03T15:37:50.841506Z","url":"https://files.pythonhosted.org/packages/36/90/555fbe2dc0936090d8a512b33a0186ea0b1d465c881c2aa3f59eb90d2c19/cargo-0.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8dacd3ac29288dde6e7358af4340c736334ac5fe99d601df3ab4805cf31ae59c","md5":"a425c2da5089f33e3ec36d609ffd7218","sha256":"38534a877b2df38f3ab6c2767e673351888dfeb062ce6f2a715b3dce6ca1f8fe"},"downloads":-1,"filename":"cargo-0.3.tar.gz","has_sig":false,"md5_digest":"a425c2da5089f33e3ec36d609ffd7218","packagetype":"sdist","python_version":"source","requires_python":">=3.7,<4.0","size":7413,"upload_time":"2020-05-03T15:37:51","upload_time_iso_8601":"2020-05-03T15:37:51.937667Z","url":"https://files.pythonhosted.org/packages/8d/ac/d3ac29288dde6e7358af4340c736334ac5fe99d601df3ab4805cf31ae59c/cargo-0.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
