{"info":{"author":"The Contributors","author_email":null,"bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Database :: Front-Ends","Topic :: Software Development :: Libraries :: Python Modules"],"description":"# pg8000\n\npg8000 is a pure-[Python](https://www.python.org/)\n[PostgreSQL](http://www.postgresql.org/) driver that complies with\n[DB-API 2.0](http://www.python.org/dev/peps/pep-0249/). It is tested on Python versions\n3.8+, on CPython and PyPy, and PostgreSQL versions 12+. pg8000's name comes from the\nbelief that it is probably about the 8000th PostgreSQL interface for Python. pg8000 is\ndistributed under the BSD 3-clause license.\n\nAll bug reports, feature requests and contributions are welcome at\n[http://github.com/tlocke/pg8000/](http://github.com/tlocke/pg8000/).\n\n[![Workflow Status Badge](https://github.com/tlocke/pg8000/workflows/pg8000/badge.svg)](https://github.com/tlocke/pg8000/actions)\n\n## Installation\n\nTo install pg8000 using `pip` type: `pip install pg8000`\n\n\n## Native API Interactive Examples\n\npg8000 comes with two APIs, the native pg8000 API and the DB-API 2.0 standard\nAPI. These are the examples for the native API, and the DB-API 2.0 examples\nfollow in the next section.\n\n\n### Basic Example\n\nImport pg8000, connect to the database, create a table, add some rows and then\nquery the table:\n\n```python\n>>> import pg8000.native\n>>>\n>>> # Connect to the database with user name postgres\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> # Create a temporary table\n>>>\n>>> con.run(\"CREATE TEMPORARY TABLE book (id SERIAL, title TEXT)\")\n>>>\n>>> # Populate the table\n>>>\n>>> for title in (\"Ender's Game\", \"The Magus\"):\n...     con.run(\"INSERT INTO book (title) VALUES (:title)\", title=title)\n>>>\n>>> # Print all the rows in the table\n>>>\n>>> for row in con.run(\"SELECT * FROM book\"):\n...     print(row)\n[1, \"Ender's Game\"]\n[2, 'The Magus']\n>>>\n>>> con.close()\n\n```\n\n\n### Transactions\n\nHere's how to run groups of SQL statements in a\n[transaction](https://www.postgresql.org/docs/current/tutorial-transactions.html>):\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"START TRANSACTION\")\n>>>\n>>> # Create a temporary table\n>>> con.run(\"CREATE TEMPORARY TABLE book (id SERIAL, title TEXT)\")\n>>>\n>>> for title in (\"Ender's Game\", \"The Magus\", \"Phineas Finn\"):\n...     con.run(\"INSERT INTO book (title) VALUES (:title)\", title=title)\n>>> con.run(\"COMMIT\")\n>>> for row in con.run(\"SELECT * FROM book\"):\n...     print(row)\n[1, \"Ender's Game\"]\n[2, 'The Magus']\n[3, 'Phineas Finn']\n>>>\n>>> con.close()\n\n```\n\nrolling back a transaction:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> # Create a temporary table\n>>> con.run(\"CREATE TEMPORARY TABLE book (id SERIAL, title TEXT)\")\n>>>\n>>> for title in (\"Ender's Game\", \"The Magus\", \"Phineas Finn\"):\n...     con.run(\"INSERT INTO book (title) VALUES (:title)\", title=title)\n>>>\n>>> con.run(\"START TRANSACTION\")\n>>> con.run(\"DELETE FROM book WHERE title = :title\", title=\"Phineas Finn\") \n>>> con.run(\"ROLLBACK\")\n>>> for row in con.run(\"SELECT * FROM book\"):\n...     print(row)\n[1, \"Ender's Game\"]\n[2, 'The Magus']\n[3, 'Phineas Finn']\n>>>\n>>> con.close()\n\n```\n\nNB. There is [a longstanding bug](https://github.com/tlocke/pg8000/issues/36>) in the\nPostgreSQL server whereby if a `COMMIT` is issued against a failed transaction, the\ntransaction is silently rolled back, rather than an error being returned. pg8000\nattempts to detect when this has happened and raise an `InterfaceError`.\n\n\n### Query Using Functions\n\nAnother query, using some PostgreSQL functions:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"SELECT TO_CHAR(TIMESTAMP '2021-10-10', 'YYYY BC')\")\n[['2021 AD']]\n>>>\n>>> con.close()\n\n```\n\n\n### Interval Type\n\nA query that returns the PostgreSQL interval type:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> import datetime\n>>>\n>>> ts = datetime.date(1980, 4, 27)\n>>> con.run(\"SELECT timestamp '2013-12-01 16:06' - :ts\", ts=ts)\n[[datetime.timedelta(days=12271, seconds=57960)]]\n>>>\n>>> con.close()\n\n```\n\n\n### Point Type\n\nA round-trip with a\n[PostgreSQL point](https://www.postgresql.org/docs/current/datatype-geometric.html)\ntype:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"SELECT CAST(:pt as point)\", pt=(2.3,1))\n[[(2.3, 1.0)]]\n>>>\n>>> con.close()\n\n```\n\n\n### Client Encoding\n\nWhen communicating with the server, pg8000 uses the character set that the server asks\nit to use (the client encoding). By default the client encoding is the database's\ncharacter set (chosen when the database is created), but the client encoding can be\nchanged in a number of ways (eg. setting `CLIENT_ENCODING` in `postgresql.conf`).\nAnother way of changing the client encoding is by using an SQL command. For example:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"SET CLIENT_ENCODING TO 'UTF8'\")\n>>> con.run(\"SHOW CLIENT_ENCODING\")\n[['UTF8']]\n>>>\n>>> con.close()\n\n```\n\n### JSON\n\n[JSON](https://www.postgresql.org/docs/current/datatype-json.html) always comes back\nfrom the server de-serialized. If the JSON you want to send is a ``dict`` then you can\njust do:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> val = {'name': 'Apollo 11 Cave', 'zebra': True, 'age': 26.003}\n>>> con.run(\"SELECT CAST(:apollo as jsonb)\", apollo=val)\n[[{'age': 26.003, 'name': 'Apollo 11 Cave', 'zebra': True}]]\n>>>\n>>> con.close()\n\n```\n\nJSON can always be sent in serialized form to the server:\n\n```python\n>>> import json\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>>\n>>> val = ['Apollo 11 Cave', True, 26.003]\n>>> con.run(\"SELECT CAST(:apollo as jsonb)\", apollo=json.dumps(val))\n[[['Apollo 11 Cave', True, 26.003]]]\n>>>\n>>> con.close()\n\n```\n\nJSON queries can be have parameters:\n\n```python\n>>> import pg8000.native\n>>>\n>>> with pg8000.native.Connection(\"postgres\", password=\"cpsnow\") as con:\n...     con.run(\"\"\" SELECT CAST('{\"a\":1, \"b\":2}' AS jsonb) @> :v \"\"\", v={\"b\": 2})\n[[True]]\n\n```\n\n\n### Retrieve Column Metadata From Results\n\nFind the column metadata returned from a query:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"create temporary table quark (id serial, name text)\")\n>>> for name in ('Up', 'Down'):\n...     con.run(\"INSERT INTO quark (name) VALUES (:name)\", name=name)\n>>> # Now execute the query\n>>>\n>>> con.run(\"SELECT * FROM quark\")\n[[1, 'Up'], [2, 'Down']]\n>>>\n>>> # and retrieve the metadata\n>>>\n>>> con.columns\n[{'table_oid': ..., 'column_attrnum': 1, 'type_oid': 23, 'type_size': 4, 'type_modifier': -1, 'format': 0, 'name': 'id'}, {'table_oid': ..., 'column_attrnum': 2, 'type_oid': 25, 'type_size': -1, 'type_modifier': -1, 'format': 0, 'name': 'name'}]\n>>>\n>>> # Show just the column names\n>>>\n>>> [c['name'] for c in con.columns]\n['id', 'name']\n>>>\n>>> con.close()\n\n```\n\n\n### Notices And Notifications\n\nPostgreSQL [notices\n](https://www.postgresql.org/docs/current/static/plpgsql-errors-and-messages.html) are\nstored in a deque called `Connection.notices` and added using the `append()` method.\nSimilarly there are `Connection.notifications` for [notifications\n](https://www.postgresql.org/docs/current/static/sql-notify.html). Here's an example:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"LISTEN aliens_landed\")\n>>> con.run(\"NOTIFY aliens_landed\")\n>>> # A notification is a tuple containing (backend_pid, channel, payload)\n>>>\n>>> con.notifications[0]\n(..., 'aliens_landed', '')\n>>>\n>>> con.close()\n\n```\n\n\n### Parameter Statuses\n\n[Certain parameter values are reported by the server automatically at connection startup or whenever\ntheir values change\n](https://www.postgresql.org/docs/current/libpq-status.html#LIBPQ-PQPARAMETERSTATUS>) and\npg8000 stores the latest values in a dict called `Connection.parameter_statuses`. Here's\nan example where we set the `aplication_name` parameter and then read it from the\n`parameter_statuses`:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\n...     \"postgres\", password=\"cpsnow\", application_name='AGI')\n>>>\n>>> con.parameter_statuses['application_name']\n'AGI'\n>>>\n>>> con.close()\n\n```\n\n\n### LIMIT ALL\n\nYou might think that the following would work, but in fact it fails:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"SELECT 'silo 1' LIMIT :lim\", lim='ALL')\nTraceback (most recent call last):\npg8000.exceptions.DatabaseError: ...\n>>>\n>>> con.close()\n\n```\n\nInstead the [docs say](https://www.postgresql.org/docs/current/sql-select.html) that you\ncan send `null` as an alternative to `ALL`, which does work:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"SELECT 'silo 1' LIMIT :lim\", lim=None)\n[['silo 1']]\n>>>\n>>> con.close()\n\n```\n\n\n### IN and NOT IN\n\nYou might think that the following would work, but in fact the server doesn't like it:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"SELECT 'silo 1' WHERE 'a' IN :v\", v=['a', 'b'])\nTraceback (most recent call last):\npg8000.exceptions.DatabaseError: ...\n>>>\n>>> con.close()\n\n```\n\nthe most straightforward way to get around this problem is to rewrie the query using the [`ANY`](\nhttps://www.postgresql.org/docs/current/functions-comparisons.html#FUNCTIONS-COMPARISONS-ANY-SOME)\nfunction:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"SELECT 'silo 1' WHERE 'a' = ANY(:v)\", v=['a', 'b'])\n[['silo 1']]\n>>> con.close()\n\n```\n\nHowever, using the array variant of `ANY` [may cause a performance problem](\nhttps://stackoverflow.com/questions/34627026/in-vs-any-operator-in-postgresql/34627688#34627688)\nand so you can use the [subquery variant of `IN`](\nhttps://www.postgresql.org/docs/current/functions-subquery.html#FUNCTIONS-SUBQUERY-IN)\nwith the [unnest\n](https://www.postgresql.org/docs/current/functions-array.html) function:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\n...     \"SELECT 'silo 1' WHERE 'a' IN (SELECT unnest(CAST(:v as varchar[])))\",\n...     v=['a', 'b'])\n[['silo 1']]\n>>> con.close()\n\n```\n\nand you can do the same for `NOT IN`.\n\n\n### Many SQL Statements Can't Be Parameterized\n\nIn PostgreSQL parameters can only be used for [data values, not identifiers\n](https://www.postgresql.org/docs/current/xfunc-sql.html#XFUNC-SQL-FUNCTION-ARGUMENTS).\nSometimes this might not work as expected, for example the following fails:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> channel = 'top_secret'\n>>>\n>>> con.run(\"LISTEN :channel\", channel=channel)\nTraceback (most recent call last):\npg8000.exceptions.DatabaseError: ...\n>>>\n>>> con.close()\n\n```\n\nIt fails because the PostgreSQL server doesn't allow this statement to have any\nparameters. There are many SQL statements that one might think would have parameters,\nbut don't. For these cases the SQL has to be created manually, being careful to use the\n`identifier()` and `literal()` functions to escape the values to avoid [SQL injection\nattacks](https://en.wikipedia.org/wiki/SQL_injection>):\n\n```python\n>>> from pg8000.native import Connection, identifier, literal\n>>>\n>>> con = Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> channel = 'top_secret'\n>>> payload = 'Aliens Landed!'\n>>> con.run(f\"LISTEN {identifier(channel)}\")\n>>> con.run(f\"NOTIFY {identifier(channel)}, {literal(payload)}\")\n>>>\n>>> con.notifications[0]\n(..., 'top_secret', 'Aliens Landed!')\n>>>\n>>> con.close()\n\n```\n\n\n### COPY FROM And TO A Stream\n\nThe SQL [COPY](https://www.postgresql.org/docs/current/sql-copy.html) statement can be\nused to copy from and to a file or file-like object. Here's an example using the CSV\nformat:\n\n```python\n>>> import pg8000.native\n>>> from io import StringIO\n>>> import csv\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> # Create a CSV file in memory\n>>>\n>>> stream_in = StringIO()\n>>> csv_writer = csv.writer(stream_in)\n>>> csv_writer.writerow([1, \"electron\"])\n12\n>>> csv_writer.writerow([2, \"muon\"])\n8\n>>> csv_writer.writerow([3, \"tau\"])\n7\n>>> stream_in.seek(0)\n0\n>>>\n>>> # Create a table and then copy the CSV into it\n>>>\n>>> con.run(\"CREATE TEMPORARY TABLE lepton (id SERIAL, name TEXT)\")\n>>> con.run(\"COPY lepton FROM STDIN WITH (FORMAT CSV)\", stream=stream_in)\n>>>\n>>> # COPY from a table to a stream\n>>>\n>>> stream_out = StringIO()\n>>> con.run(\"COPY lepton TO STDOUT WITH (FORMAT CSV)\", stream=stream_out)\n>>> stream_out.seek(0)\n0\n>>> for row in csv.reader(stream_out):\n...     print(row)\n['1', 'electron']\n['2', 'muon']\n['3', 'tau']\n>>>\n>>> con.close()\n\n```\n\nIt's also possible to COPY FROM an iterable, which is useful if you're creating rows\nprogrammatically:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> # Generator function for creating rows\n>>> def row_gen():\n...     for i, name in ((1, \"electron\"), (2, \"muon\"), (3, \"tau\")):\n...         yield f\"{i},{name}\\n\"\n>>>\n>>> # Create a table and then copy the CSV into it\n>>>\n>>> con.run(\"CREATE TEMPORARY TABLE lepton (id SERIAL, name TEXT)\")\n>>> con.run(\"COPY lepton FROM STDIN WITH (FORMAT CSV)\", stream=row_gen())\n>>>\n>>> # COPY from a table to a stream\n>>>\n>>> stream_out = StringIO()\n>>> con.run(\"COPY lepton TO STDOUT WITH (FORMAT CSV)\", stream=stream_out)\n>>> stream_out.seek(0)\n0\n>>> for row in csv.reader(stream_out):\n...     print(row)\n['1', 'electron']\n['2', 'muon']\n['3', 'tau']\n>>>\n>>> con.close()\n\n```\n\n\n### Execute Multiple SQL Statements\n\nIf you want to execute a series of SQL statements (eg. an `.sql` file), you can run\nthem as expected:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> statements = \"SELECT 5; SELECT 'Erich Fromm';\"\n>>>\n>>> con.run(statements)\n[[5], ['Erich Fromm']]\n>>>\n>>> con.close()\n\n```\n\nThe only caveat is that when executing multiple statements you can't have any\nparameters.\n\n\n### Quoted Identifiers in SQL\n\nSay you had a column called `My Column`. Since it's case sensitive and contains a space,\nyou'd have to [surround it by double quotes\n](https://www.postgresql.org/docs/current/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIER).\nBut you can't do:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"select 'hello' as \"My Column\"\")\nTraceback (most recent call last):\nSyntaxError: invalid syntax...\n>>>\n>>> con.close()\n\n```\n\nsince Python uses double quotes to delimit string literals, so one solution is\nto use Python's [triple quotes\n](https://docs.python.org/3/tutorial/introduction.html#strings) to delimit the string\ninstead:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run('''SELECT 'hello' AS \"My Column\"''')\n[['hello']]\n>>>\n>>> con.close()\n\n```\n\nanother solution, that's especially useful if the identifier comes from an untrusted\nsource, is to use the `identifier()` function, which correctly quotes and escapes the\nidentifier as needed:\n\n```python\n>>> from pg8000.native import Connection, identifier\n>>>\n>>> con = Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> sql = f\"SELECT 'hello' as {identifier('My Column')}\"\n>>> print(sql)\nSELECT 'hello' as \"My Column\"\n>>>\n>>> con.run(sql)\n[['hello']]\n>>>\n>>> con.close()\n\n```\n\nthis approach guards against [SQL injection attacks\n](https://en.wikipedia.org/wiki/SQL_injection). One thing to note if you're using\nexplicit schemas (eg. `pg_catalog.pg_language`) is that the schema name and table name\nare both separate identifiers. So to escape them you'd do:\n\n```python\n>>> from pg8000.native import Connection, identifier\n>>>\n>>> con = Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> query = (\n...     f\"SELECT lanname FROM {identifier('pg_catalog')}.{identifier('pg_language')} \"\n...     f\"WHERE lanname = 'sql'\"\n... )\n>>> print(query)\nSELECT lanname FROM pg_catalog.pg_language WHERE lanname = 'sql'\n>>>\n>>> con.run(query)\n[['sql']]\n>>>\n>>> con.close()\n\n```\n\n\n### Custom adapter from a Python type to a PostgreSQL type\n\npg8000 has a mapping from Python types to PostgreSQL types for when it needs to send\nSQL parameters to the server. The default mapping that comes with pg8000 is designed to\nwork well in most cases, but you might want to add or replace the default mapping.\n\nA Python `datetime.timedelta` object is sent to the server as a PostgreSQL\n`interval` type,  which has the `oid` 1186. But let's say we wanted to create our\nown Python class to be sent as an `interval` type. Then we'd have to register an\nadapter:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> class MyInterval(str):\n...     pass\n>>>\n>>> def my_interval_out(my_interval):\n...     return my_interval  # Must return a str\n>>>\n>>> con.register_out_adapter(MyInterval, my_interval_out)\n>>> con.run(\"SELECT CAST(:interval as interval)\", interval=MyInterval(\"2 hours\"))\n[[datetime.timedelta(seconds=7200)]]\n>>>\n>>> con.close()\n\n```\n\nNote that it still came back as a `datetime.timedelta` object because we only changed\nthe mapping from Python to PostgreSQL. See below for an example of how to change the\nmapping from PostgreSQL to Python.\n\n\n### Custom adapter from a PostgreSQL type to a Python type\n\npg8000 has a mapping from PostgreSQL types to Python types for when it receives SQL\nresults from the server. The default mapping that comes with pg8000 is designed to work\nwell in most cases, but you might want to add or replace the default mapping.\n\nIf pg8000 receives PostgreSQL `interval` type, which has the `oid` 1186, it converts\nit into a Python `datetime.timedelta` object. But let's say we wanted to create our\nown Python class to be used instead of `datetime.timedelta`. Then we'd have to\nregister an adapter:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> class MyInterval(str):\n...     pass\n>>>\n>>> def my_interval_in(my_interval_str):  # The parameter is of type str\n...     return MyInterval(my_interval)\n>>>\n>>> con.register_in_adapter(1186, my_interval_in)\n>>> con.run(\"SELECT \\'2 years'\")\n[['2 years']]\n>>>\n>>> con.close()\n\n```\n\nNote that registering the 'in' adapter only afects the mapping from the PostgreSQL type\nto the Python type. See above for an example of how to change the mapping from\nPostgreSQL to Python.\n\n\n### Could Not Determine Data Type Of Parameter\n\nSometimes you'll get the `could not determine data type of parameter` error message from\nthe server:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"SELECT :v IS NULL\", v=None)\nTraceback (most recent call last):\npg8000.exceptions.DatabaseError: {'S': 'ERROR', 'V': 'ERROR', 'C': '42P18', 'M': 'could not determine data type of parameter $1', 'F': 'postgres.c', 'L': '...', 'R': '...'}\n>>>\n>>> con.close()\n\n```\n\nOne way of solving it is to put a `CAST` in the SQL:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"SELECT cast(:v as TIMESTAMP) IS NULL\", v=None)\n[[True]]\n>>>\n>>> con.close()\n\n```\n\nAnother way is to override the type that pg8000 sends along with each parameter:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> con.run(\"SELECT :v IS NULL\", v=None, types={'v': pg8000.native.TIMESTAMP})\n[[True]]\n>>>\n>>> con.close()\n\n```\n\n\n### Prepared Statements\n\n[Prepared statements](https://www.postgresql.org/docs/current/sql-prepare.html) can be\nuseful in improving performance when you have a statement that's executed repeatedly.\nHere's an example:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\"postgres\", password=\"cpsnow\")\n>>>\n>>> # Create the prepared statement\n>>> ps = con.prepare(\"SELECT cast(:v as varchar)\")\n>>>\n>>> # Execute the statement repeatedly\n>>> ps.run(v=\"speedy\")\n[['speedy']]\n>>> ps.run(v=\"rapid\")\n[['rapid']]\n>>> ps.run(v=\"swift\")\n[['swift']]\n>>>\n>>> # Close the prepared statement, releasing resources on the server\n>>> ps.close()\n>>>\n>>> con.close()\n\n```\n\n\n### Use Environment Variables As Connection Defaults\n\nYou might want to use the current user as the database username for example:\n\n```python\n>>> import pg8000.native\n>>> import getpass\n>>>\n>>> # Connect to the database with current user name\n>>> username = getpass.getuser()\n>>> connection = pg8000.native.Connection(username, password=\"cpsnow\")\n>>>\n>>> connection.run(\"SELECT 'pilau'\")\n[['pilau']]\n>>>\n>>> connection.close()\n\n```\n\nor perhaps you may want to use some of the same [environment variables that libpg uses\n](https://www.postgresql.org/docs/current/libpq-envars.html):\n\n```python\n>>> import pg8000.native\n>>> from os import environ\n>>>\n>>> username = environ.get('PGUSER', 'postgres')\n>>> password = environ.get('PGPASSWORD', 'cpsnow')\n>>> host = environ.get('PGHOST', 'localhost')\n>>> port = environ.get('PGPORT', '5432')\n>>> database = environ.get('PGDATABASE')\n>>>\n>>> connection = pg8000.native.Connection(\n...     username, password=password, host=host, port=port, database=database)\n>>>\n>>> connection.run(\"SELECT 'Mr Cairo'\")\n[['Mr Cairo']]\n>>>\n>>> connection.close()\n\n```\n\nIt might be asked, why doesn't pg8000 have this behaviour built in? The thinking\nfollows the second aphorism of [The Zen of Python\n](https://www.python.org/dev/peps/pep-0020/):\n\n> Explicit is better than implicit.\n\nSo we've taken the approach of only being able to set connection parameters using the\n`pg8000.native.Connection()` constructor.\n\n\n### Connect To PostgreSQL Over SSL\n\nBy default the `ssl_context` connection parameter has the value `None` which means pg8000 will\nattempt to connect to the server using SSL, and then fall back to a plain socket if the server\nrefuses SSL. If you want to *require* SSL (ie. to fail if it's not achieved) then you can set\n`ssl_context=True`:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection('postgres', password=\"cpsnow\", ssl_context=True)\n>>> con.run(\"SELECT 'The game is afoot!'\")\n[['The game is afoot!']]\n>>> con.close()\n\n```\n\nIf on the other hand you want to connect over SSL with custom settings, set the `ssl_context`\nparameter to an [`ssl.SSLContext`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext) object:\n\n```python\n>>> import pg8000.native\n>>> import ssl\n>>>\n>>> ssl_context = ssl.create_default_context()\n>>> ssl_context.check_hostname = False\n>>> ssl_context.verify_mode = ssl.CERT_NONE\n>>> con = pg8000.native.Connection(\n...     'postgres', password=\"cpsnow\", ssl_context=ssl_context)\n>>> con.run(\"SELECT 'Work is the curse of the drinking classes.'\")\n[['Work is the curse of the drinking classes.']]\n>>> con.close()\n\n```\n\nIt may be that your PostgreSQL server is behind an SSL proxy server in which case you\ncan give pg8000 the SSL socket with the `sock` parameter, and then set\n`ssl_context=False` which means that no attempt will be made to create an SSL connection\nto the server.\n\n\n### Server-Side Cursors\n\nYou can use the SQL commands [DECLARE\n](https://www.postgresql.org/docs/current/sql-declare.html),\n[FETCH](https://www.postgresql.org/docs/current/sql-fetch.html),\n[MOVE](https://www.postgresql.org/docs/current/sql-move.html) and\n[CLOSE](https://www.postgresql.org/docs/current/sql-close.html) to manipulate\nserver-side cursors. For example:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection('postgres', password=\"cpsnow\")\n>>> con.run(\"START TRANSACTION\")\n>>> con.run(\"DECLARE c SCROLL CURSOR FOR SELECT * FROM generate_series(1, 100)\")\n>>> con.run(\"FETCH FORWARD 5 FROM c\")\n[[1], [2], [3], [4], [5]]\n>>> con.run(\"MOVE FORWARD 50 FROM c\")\n>>> con.run(\"FETCH BACKWARD 10 FROM c\")\n[[54], [53], [52], [51], [50], [49], [48], [47], [46], [45]]\n>>> con.run(\"CLOSE c\")\n>>> con.run(\"ROLLBACK\")\n>>>\n>>> con.close()\n\n```\n\n\n### BLOBs (Binary Large Objects)\n\nThere's a set of [SQL functions\n](https://www.postgresql.org/docs/current/lo-funcs.html) for manipulating BLOBs.\nHere's an example:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection('postgres', password=\"cpsnow\")\n>>>\n>>> # Create a BLOB and get its oid\n>>> data = b'hello'\n>>> res = con.run(\"SELECT lo_from_bytea(0, :data)\", data=data)\n>>> oid = res[0][0]\n>>>\n>>> # Create a table and store the oid of the BLOB\n>>> con.run(\"CREATE TEMPORARY TABLE image (raster oid)\")\n>>>\n>>> con.run(\"INSERT INTO image (raster) VALUES (:oid)\", oid=oid)\n>>> # Retrieve the data using the oid\n>>> con.run(\"SELECT lo_get(:oid)\", oid=oid)\n[[b'hello']]\n>>>\n>>> # Add some data to the end of the BLOB\n>>> more_data = b' all'\n>>> offset = len(data)\n>>> con.run(\n...     \"SELECT lo_put(:oid, :offset, :data)\",\n...     oid=oid, offset=offset, data=more_data)\n[['']]\n>>> con.run(\"SELECT lo_get(:oid)\", oid=oid)\n[[b'hello all']]\n>>>\n>>> # Download a part of the data\n>>> con.run(\"SELECT lo_get(:oid, 6, 3)\", oid=oid)\n[[b'all']]\n>>>\n>>> con.close()\n\n```\n\n\n### Replication Protocol\n\nThe PostgreSQL [Replication Protocol\n](https://www.postgresql.org/docs/current/protocol-replication.html) is supported using\nthe `replication` keyword when creating a connection:\n\n```python\n>>> import pg8000.native\n>>>\n>>> con = pg8000.native.Connection(\n...    'postgres', password=\"cpsnow\", replication=\"database\")\n>>>\n>>> con.run(\"IDENTIFY_SYSTEM\")\n[['...', 1, '.../...', 'postgres']]\n>>>\n>>> con.close()\n\n```\n\n\n## DB-API 2 Interactive Examples\n\nThese examples stick to the DB-API 2.0 standard.\n\n\n### Basic Example\n\nImport pg8000, connect to the database, create a table, add some rows and then query the\ntable:\n\n```python\n>>> import pg8000.dbapi\n>>>\n>>> conn = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> cursor = conn.cursor()\n>>> cursor.execute(\"CREATE TEMPORARY TABLE book (id SERIAL, title TEXT)\")\n>>> cursor.execute(\n...     \"INSERT INTO book (title) VALUES (%s), (%s) RETURNING id, title\",\n...     (\"Ender's Game\", \"Speaker for the Dead\"))\n>>> results = cursor.fetchall()\n>>> for row in results:\n...     id, title = row\n...     print(\"id = %s, title = %s\" % (id, title))\nid = 1, title = Ender's Game\nid = 2, title = Speaker for the Dead\n>>> conn.commit()\n>>>\n>>> conn.close()\n\n```\n\n\n### Query Using Functions\n\nAnother query, using some PostgreSQL functions:\n\n```python\n>>> import pg8000.dbapi\n>>>\n>>> con = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> cursor = con.cursor()\n>>>\n>>> cursor.execute(\"SELECT TO_CHAR(TIMESTAMP '2021-10-10', 'YYYY BC')\")\n>>> cursor.fetchone()\n['2021 AD']\n>>>\n>>> con.close()\n\n```\n\n\n### Interval Type\n\nA query that returns the PostgreSQL interval type:\n\n```python\n>>> import datetime\n>>> import pg8000.dbapi\n>>>\n>>> con = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> cursor = con.cursor()\n>>>\n>>> cursor.execute(\"SELECT timestamp '2013-12-01 16:06' - %s\",\n... (datetime.date(1980, 4, 27),))\n>>> cursor.fetchone()\n[datetime.timedelta(days=12271, seconds=57960)]\n>>>\n>>> con.close()\n\n```\n\n\n### Point Type\n\nA round-trip with a [PostgreSQL point\n](https://www.postgresql.org/docs/current/datatype-geometric.html) type:\n\n```python\n>>> import pg8000.dbapi\n>>>\n>>> con = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> cursor = con.cursor()\n>>>\n>>> cursor.execute(\"SELECT cast(%s as point)\", ((2.3,1),))\n>>> cursor.fetchone()\n[(2.3, 1.0)]\n>>>\n>>> con.close()\n\n```\n\n\n### Numeric Parameter Style\n\npg8000 supports all the DB-API parameter styles. Here's an example of using the\n'numeric' parameter style:\n\n```python\n>>> import pg8000.dbapi\n>>>\n>>> pg8000.dbapi.paramstyle = \"numeric\"\n>>> con = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> cursor = con.cursor()\n>>>\n>>> cursor.execute(\"SELECT array_prepend(:1, CAST(:2 AS int[]))\", (500, [1, 2, 3, 4],))\n>>> cursor.fetchone()\n[[500, 1, 2, 3, 4]]\n>>> pg8000.dbapi.paramstyle = \"format\"\n>>>\n>>> con.close()\n\n```\n\n\n### Autocommit\n\nFollowing the DB-API specification, autocommit is off by default. It can be turned on by\nusing the autocommit property of the connection:\n\n```python\n>>> import pg8000.dbapi\n>>>\n>>> con = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> con.autocommit = True\n>>>\n>>> cur = con.cursor()\n>>> cur.execute(\"vacuum\")\n>>> conn.autocommit = False\n>>> cur.close()\n>>>\n>>> con.close()\n\n```\n\n\n### Client Encoding\n\nWhen communicating with the server, pg8000 uses the character set that the server asks\nit to use (the client encoding). By default the client encoding is the database's\ncharacter set (chosen when the database is created), but the client encoding can be\nchanged in a number of ways (eg. setting `CLIENT_ENCODING` in `postgresql.conf`).\nAnother way of changing the client encoding is by using an SQL command. For example:\n\n```python\n>>> import pg8000.dbapi\n>>>\n>>> con = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> cur = con.cursor()\n>>> cur.execute(\"SET CLIENT_ENCODING TO 'UTF8'\")\n>>> cur.execute(\"SHOW CLIENT_ENCODING\")\n>>> cur.fetchone()\n['UTF8']\n>>> cur.close()\n>>>\n>>> con.close()\n\n```\n\n\n### JSON\n\nJSON is sent to the server serialized, and returned de-serialized. Here's an example:\n\n```python\n>>> import json\n>>> import pg8000.dbapi\n>>>\n>>> con = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> cur = con.cursor()\n>>> val = ['Apollo 11 Cave', True, 26.003]\n>>> cur.execute(\"SELECT cast(%s as json)\", (json.dumps(val),))\n>>> cur.fetchone()\n[['Apollo 11 Cave', True, 26.003]]\n>>> cur.close()\n>>>\n>>> con.close()\n\n```\n\nJSON queries can be have parameters:\n\n```python\n>>> import pg8000.dbapi\n>>>\n>>> with pg8000.dbapi.connect(\"postgres\", password=\"cpsnow\") as con:\n...     cur = con.cursor()\n...     cur.execute(\"\"\" SELECT CAST('{\"a\":1, \"b\":2}' AS jsonb) @> %s \"\"\", ({\"b\": 2},))\n...     for row in cur.fetchall():\n...         print(row)\n[True]\n\n```\n\n\n### Retrieve Column Names From Results\n\nUse the columns names retrieved from a query:\n\n```python\n>>> import pg8000\n>>> conn = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> c = conn.cursor()\n>>> c.execute(\"create temporary table quark (id serial, name text)\")\n>>> c.executemany(\"INSERT INTO quark (name) VALUES (%s)\", ((\"Up\",), (\"Down\",)))\n>>> #\n>>> # Now retrieve the results\n>>> #\n>>> c.execute(\"select * from quark\")\n>>> rows = c.fetchall()\n>>> keys = [k[0] for k in c.description]\n>>> results = [dict(zip(keys, row)) for row in rows]\n>>> assert results == [{'id': 1, 'name': 'Up'}, {'id': 2, 'name': 'Down'}]\n>>>\n>>> conn.close()\n\n```\n\n\n### COPY from and to a file\n\nThe SQL [COPY](https://www.postgresql.org/docs/current/sql-copy.html) statement can\nbe used to copy from and to a file or file-like object:\n\n```python\n>>> from io import StringIO\n>>> import pg8000.dbapi\n>>>\n>>> con = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> cur = con.cursor()\n>>> #\n>>> # COPY from a stream to a table\n>>> #\n>>> stream_in = StringIO('1\\telectron\\n2\\tmuon\\n3\\ttau\\n')\n>>> cur = con.cursor()\n>>> cur.execute(\"create temporary table lepton (id serial, name text)\")\n>>> cur.execute(\"COPY lepton FROM stdin\", stream=stream_in)\n>>> #\n>>> # Now COPY from a table to a stream\n>>> #\n>>> stream_out = StringIO()\n>>> cur.execute(\"copy lepton to stdout\", stream=stream_out)\n>>> stream_out.getvalue()\n'1\\telectron\\n2\\tmuon\\n3\\ttau\\n'\n>>>\n>>> con.close()\n\n```\n\n\n### Server-Side Cursors\n\nYou can use the SQL commands [DECLARE\n](https://www.postgresql.org/docs/current/sql-declare.html),\n[FETCH](https://www.postgresql.org/docs/current/sql-fetch.html),\n[MOVE](https://www.postgresql.org/docs/current/sql-move.html) and\n[CLOSE](https://www.postgresql.org/docs/current/sql-close.html) to manipulate\nserver-side cursors. For example:\n\n```python\n>>> import pg8000.dbapi\n>>>\n>>> con = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> cur = con.cursor()\n>>> cur.execute(\"START TRANSACTION\")\n>>> cur.execute(\n...    \"DECLARE c SCROLL CURSOR FOR SELECT * FROM generate_series(1, 100)\")\n>>> cur.execute(\"FETCH FORWARD 5 FROM c\")\n>>> cur.fetchall()\n([1], [2], [3], [4], [5])\n>>> cur.execute(\"MOVE FORWARD 50 FROM c\")\n>>> cur.execute(\"FETCH BACKWARD 10 FROM c\")\n>>> cur.fetchall()\n([54], [53], [52], [51], [50], [49], [48], [47], [46], [45])\n>>> cur.execute(\"CLOSE c\")\n>>> cur.execute(\"ROLLBACK\")\n>>>\n>>> con.close()\n\n```\n\n\n### BLOBs (Binary Large Objects)\n\nThere's a set of [SQL functions\n](https://www.postgresql.org/docs/current/lo-funcs.html) for manipulating BLOBs.\nHere's an example:\n\n```python\n>>> import pg8000.dbapi\n>>>\n>>> con = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> cur = con.cursor()\n>>>\n>>> # Create a BLOB and get its oid\n>>> data = b'hello'\n>>> cur = con.cursor()\n>>> cur.execute(\"SELECT lo_from_bytea(0, %s)\", [data])\n>>> oid = cur.fetchone()[0]\n>>>\n>>> # Create a table and store the oid of the BLOB\n>>> cur.execute(\"CREATE TEMPORARY TABLE image (raster oid)\")\n>>> cur.execute(\"INSERT INTO image (raster) VALUES (%s)\", [oid])\n>>>\n>>> # Retrieve the data using the oid\n>>> cur.execute(\"SELECT lo_get(%s)\", [oid])\n>>> cur.fetchall()\n([b'hello'],)\n>>>\n>>> # Add some data to the end of the BLOB\n>>> more_data = b' all'\n>>> offset = len(data)\n>>> cur.execute(\"SELECT lo_put(%s, %s, %s)\", [oid, offset, more_data])\n>>> cur.execute(\"SELECT lo_get(%s)\", [oid])\n>>> cur.fetchall()\n([b'hello all'],)\n>>>\n>>> # Download a part of the data\n>>> cur.execute(\"SELECT lo_get(%s, 6, 3)\", [oid])\n>>> cur.fetchall()\n([b'all'],)\n>>>\n>>> con.close()\n\n```\n\n\n### Parameter Limit\n\nThe protocol that PostgreSQL uses limits the number of parameters to 6,5535. The following will give\nan error:\n\n```python\n>>> import pg8000.dbapi\n>>>\n>>> conn = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> cursor = conn.cursor()\n>>> SIZE = 100000\n>>> cursor.execute(\n...    f\"SELECT 1 WHERE 1 IN ({','.join(['%s'] * SIZE)})\",\n...    [1] * SIZE,\n... )\nTraceback (most recent call last):\nstruct.error: 'H' format requires 0 <= number <= 65535\n\n```\n\nOne way of working round this problem is to use the [unnest\n](https://www.postgresql.org/docs/current/functions-array.html) function:\n\n```python\n>>> import pg8000.dbapi\n>>>\n>>> conn = pg8000.dbapi.connect(user=\"postgres\", password=\"cpsnow\")\n>>> cursor = conn.cursor()\n>>> SIZE = 100000\n>>> cursor.execute(\n...    \"SELECT 1 WHERE 1 IN (SELECT unnest(CAST(%s AS int[])))\",\n...    [[1] * SIZE],\n... )\n>>> conn.close()\n\n```\n\n\n## Type Mapping\n\nThe following table shows the default mapping between Python types and PostgreSQL types,\nand vice versa.\n\nIf pg8000 doesn't recognize a type that it receives from PostgreSQL, it will return it\nas a ``str`` type. This is how pg8000 handles PostgreSQL ``enum`` and XML types. It's\npossible to change the default mapping using adapters (see the examples).\n\n| Python Type           | PostgreSQL Type | Notes                                   |\n|-----------------------|-----------------|-----------------------------------------|\n| bool                  | bool            |                                         |\n| int                   | int4            |                                         |\n| str                   | text            |                                         |\n| float                 | float8          |                                         |\n| decimal.Decimal       | numeric         |                                         |\n| bytes                 | bytea           |                                         |\n| datetime.datetime (without tzinfo) | timestamp without timezone | +/-infinity PostgreSQL values are represented as Python `str` values. If a `timestamp` is too big for `datetime.datetime` then a `str` is used. |\n| datetime.datetime (with tzinfo) | timestamp with timezone | +/-infinity PostgreSQL values are represented as Python `str` values. If a `timestamptz` is too big for `datetime.datetime` then a `str` is used. |\n| datetime.date | date | +/-infinity PostgreSQL values are represented as Python `str` values. If a `date` is too big for a `datetime.date` then a `str` is used. |\n| datetime.time         | time without time zone |                                  |\n| datetime.timedelta | interval | If an ``interval`` is too big for `datetime.timedelta` then a `PGInterval`  is used. |\n| None                  | NULL            |                                         |\n| uuid.UUID             | uuid            |                                         |\n| ipaddress.IPv4Address | inet            |                                         |\n| ipaddress.IPv6Address | inet            |                                         |\n| ipaddress.IPv4Network | inet            |                                         |\n| ipaddress.IPv6Network | inet            |                                         |\n| int                   | xid             |                                         |\n| list of int           | INT4[]          |                                         |\n| list of float         | FLOAT8[]        |                                         |\n| list of bool          | BOOL[]          |                                         |\n| list of str           | TEXT[]          |                                         |\n| int                   | int2vector      | Only from PostgreSQL to Python          |\n| JSON                  | json, jsonb     | The Python JSON is provided as a Python serialized string. Results returned as de-serialized JSON. |\n| pg8000.Range | range | PostgreSQL multirange types are | represented in Python as a list of  range types. |\n| tuple                 | composite type  | Only from Python to PostgreSQL          |\n\n\n## Theory Of Operation\n\n> A concept is tolerated inside the microkernel only if moving it outside the kernel,\n> i.e., permitting competing implementations, would prevent the implementation of the\n> system's required functionality.\n>\n> -- Jochen Liedtke, Liedtke's minimality principle\n\npg8000 is designed to be used with one thread per connection.\n\npg8000 communicates with the database using the [PostgreSQL Frontend/Backend Protocol\n](https://www.postgresql.org/docs/current/protocol.html) (FEBE). If a query has no\nparameters, pg8000 uses the 'simple query protocol'. If a query does have parameters,\npg8000 uses the 'extended query protocol' with unnamed prepared statements. The steps\nfor a query with parameters are:\n\n1. Query comes in.\n\n2. Send a PARSE message to the server to create an unnamed prepared statement.\n\n3. Send a BIND message to run against the unnamed prepared statement, resulting in an\n   unnamed portal on the server.\n\n4. Send an EXECUTE message to read all the results from the portal.\n\nIt's also possible to use named prepared statements. In which case the prepared\nstatement persists on the server, and represented in pg8000 using a\n`PreparedStatement` object. This means that the PARSE step gets executed once up\nfront, and then only the BIND and EXECUTE steps are repeated subsequently.\n\nThere are a lot of PostgreSQL data types, but few primitive data types in Python. By\ndefault, pg8000 doesn't send PostgreSQL data type information in the PARSE step, in\nwhich case PostgreSQL assumes the types implied by the SQL statement. In some cases\nPostgreSQL can't work out a parameter type and so an [explicit cast\n](https://www.postgresql.org/docs/current/static/sql-expressions.html#SQL-SYNTAX-TYPE-CASTS)\ncan be used in the SQL.\n\nIn the FEBE protocol, each query parameter can be sent to the server either as binary\nor text according to the format code. In pg8000 the parameters are always sent as text.\n\nOccasionally, the network connection between pg8000 and the server may go down. If\npg8000 encounters a network problem it'll raise an `InterfaceError` with the message\n`network error` and with the original exception set as the [cause\n](https://docs.python.org/3/reference/simple_stmts.html#the-raise-statement).\n\n\n## Native API Docs\n\n### pg8000.native.Error\n\nGeneric exception that is the base exception of the other error exceptions.\n\n\n### pg8000.native.InterfaceError\n\nFor errors that originate within pg8000.\n\n\n### pg8000.native.DatabaseError\n\nFor errors that originate from the server.\n\n### pg8000.native.Connection(user, host='localhost', database=None, port=5432, password=None, source\\_address=None, unix\\_sock=None, ssl\\_context=None, timeout=None, tcp\\_keepalive=True, application\\_name=None, replication=None, sock=None)\n\nCreates a connection to a PostgreSQL database.\n\n- *user* - The username to connect to the PostgreSQL server with. If your server character encoding is not `ascii` or `utf8`, then you need to provide `user` as bytes, eg. `'my_name'.encode('EUC-JP')`.\n- *host* - The hostname of the PostgreSQL server to connect with. Providing this parameter is necessary for TCP/IP connections. One of either `host` or `unix_sock` must be provided. The default is `localhost`.\n- *database* - The name of the database instance to connect with. If `None` then the PostgreSQL server will assume the database name is the same as the username. If your server character encoding is not `ascii` or `utf8`, then you need to provide `database` as bytes, eg. `'my_db'.encode('EUC-JP')`.\n- *port* - The TCP/IP port of the PostgreSQL server instance.  This parameter defaults to `5432`, the registered common port of PostgreSQL TCP/IP servers.\n- *password* - The user password to connect to the server with. This parameter is optional; if omitted and the database server requests password-based authentication, the connection will fail to open. If this parameter is provided but not requested by the server, no error will occur. If your server character encoding is not `ascii` or `utf8`, then you need to provide `password` as bytes, eg.  `'my_password'.encode('EUC-JP')`.\n- *source_address* - The source IP address which initiates the connection to the PostgreSQL server. The default is `None` which means that the operating system will choose the source address.\n- *unix_sock* - The path to the UNIX socket to access the database through, for example, `'/tmp/.s.PGSQL.5432'`. One of either `host` or `unix_sock` must be provided.\n- *ssl_context* - This governs SSL encryption for TCP/IP sockets. It can have four values:\n  - `None`, the default, meaning that an attempt will be made to connect over SSL, but if this is rejected by the server then pg8000 will fall back to using a plain socket.\n  - `True`, means use SSL with an `ssl.SSLContext` with the minimum of checks.\n  - `False`, means to not attempt to create an SSL socket.\n  - An instance of `ssl.SSLContext` which will be used to create the SSL connection.\n- *timeout* - This is the time in seconds before the connection to the server will time out. The default is `None` which means no timeout.\n- *tcp_keepalive* - If `True` then use [TCP keepalive](https://en.wikipedia.org/wiki/Keepalive#TCP_keepalive). The default is `True`.\n- *application_name* - Sets the [application\\_name](https://www.postgresql.org/docs/current/runtime-config-logging.html#GUC-APPLICATION-NAME). If your server character encoding is not `ascii` or `utf8`, then you need to provide values as bytes, eg.  `'my_application_name'.encode('EUC-JP')`. The default is `None` which means that the server will set the application name.\n- *replication* - Used to run in [streaming replication mode](https://www.postgresql.org/docs/current/protocol-replication.html). If your server character encoding is not `ascii` or `utf8`, then you need to provide values as bytes, eg. `'database'.encode('EUC-JP')`.\n- *sock*  - A socket-like object to use for the connection. For example, `sock` could be a plain `socket.socket`, or it could represent an SSH tunnel or perhaps an `ssl.SSLSocket` to an SSL proxy. If an `ssl.SSLContext` is provided, then it will be used to attempt to create an SSL socket from the provided socket. \n\n### pg8000.native.Connection.notifications\n\nA deque of server-side\n[notifications](https://www.postgresql.org/docs/current/sql-notify.html) received by\nthis database connection (via the `LISTEN` / `NOTIFY` PostgreSQL commands). Each list\nitem is a three-element tuple containing the PostgreSQL backend PID that issued the\nnotify, the channel and the payload.\n\n\n### pg8000.native.Connection.notices\n\nA deque of server-side notices received by this database connection.\n\n\n### pg8000.native.Connection.parameter\\_statuses\n\nA `dict` of server-side parameter statuses received by this database connection.\n\n\n### pg8000.native.Connection.run(sql, stream=None, types=None, \\*\\*kwargs)\n\nExecutes an sql statement, and returns the results as a `list`. For example:\n\n```\ncon.run(\"SELECT * FROM cities where population > :pop\", pop=10000)\n```\n\n- *sql* - The SQL statement to execute. Parameter placeholders appear as a `:` followed by the parameter name.\n- *stream* - For use with the PostgreSQL [COPY](http://www.postgresql.org/docs/current/static/sql-copy.html) command. The nature of the parameter depends on whether the SQL command is `COPY FROM` or `COPY TO`.\n  - `COPY FROM` - The stream parameter must be a readable file-like object or an iterable. If it's an\n    iterable then the items can be ``str`` or binary.\n  - `COPY TO` - The stream parameter must be a writable file-like object.\n- *types* - A dictionary of oids. A key corresponds to a parameter. \n- *kwargs* - The parameters of the SQL statement.\n\n\n### pg8000.native.Connection.row\\_count\n\nThis read-only attribute contains the number of rows that the last `run()` method\nproduced (for query statements like ``SELECT``) or affected (for modification statements\nlike `UPDATE`.\n\nThe value is -1 if:\n\n- No `run()` method has been performed yet.\n- There was no rowcount associated with the last `run()`.\n\n\n### pg8000.native.Connection.columns\n\nA list of column metadata. Each item in the list is a dictionary with the following\nkeys:\n\n- name\n- table\\_oid\n- column\\_attrnum\n- type\\_oid\n- type\\_size\n- type\\_modifier\n- format\n\n\n### pg8000.native.Connection.close()\n\nCloses the database connection.\n\n\n### pg8000.native.Connection.register\\_out\\_adapter(typ, out\\_func)\n\nRegister a type adapter for types going out from pg8000 to the server.\n\n- *typ* - The Python class that the adapter is for.\n- *out_func* - A function that takes the Python object and returns its string representation in the format that the server requires.\n\n\n### pg8000.native.Connection.register\\_in\\_adapter(oid, in\\_func)\n\nRegister a type adapter for types coming in from the server to pg8000.\n\n- *oid* - The PostgreSQL type identifier found in the [pg\\_type system catalog](https://www.postgresql.org/docs/current/catalog-pg-type.html).\n- *in_func*  - A function that takes the PostgreSQL string representation and returns a corresponding\n  Python object.\n\n\n### pg8000.native.Connection.prepare(sql)\n\nReturns a `PreparedStatement` object which represents a [prepared statement\n](https://www.postgresql.org/docs/current/sql-prepare.html) on the server. It can\nsubsequently be repeatedly executed.\n\n- *sql* - The SQL statement to prepare. Parameter placeholders appear as a `:` followed by the parameter name.\n\n\n### pg8000.native.PreparedStatement\n\nA prepared statement object is returned by the `pg8000.native.Connection.prepare()`\nmethod of a connection. It has the following methods:\n\n\n#### pg8000.native.PreparedStatement.run(\\*\\*kwargs)\n\nExecutes the prepared statement, and returns the results as a `tuple`.\n\n- *kwargs* - The parameters of the prepared statement.\n\n\n#### pg8000.native.PreparedStatement.close()\n\nCloses the prepared statement, releasing the prepared statement held on the server.\n\n\n### pg8000.native.identifier(ident)\n\nCorrectly quotes and escapes a string to be used as an [SQL identifier\n](https://www.postgresql.org/docs/current/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS).\n- *ident* - The `str` to be used as an SQL identifier.\n\n\n### pg8000.native.literal(value)\n\nCorrectly quotes and escapes a value to be used as an [SQL literal\n](https://www.postgresql.org/docs/current/sql-syntax-lexical.html#SQL-SYNTAX-CONSTANTS).\n- *value* - The value to be used as an SQL literal.\n\n\n## DB-API 2 Docs\n\n### Properties\n\n#### pg8000.dbapi.apilevel\n\nThe DBAPI level supported, currently \"2.0\".\n\n\n#### pg8000.dbapi.threadsafety\n\nInteger constant stating the level of thread safety the DBAPI interface supports. For\npg8000, the threadsafety value is 1, meaning that threads may share the module but not\nconnections.\n\n\n#### pg8000.dbapi.paramstyle\n\nString property stating the type of parameter marker formatting expected by\nthe interface.  This value defaults to \"format\", in which parameters are\nmarked in this format: \"WHERE name=%s\".\n\nAs an extension to the DBAPI specification, this value is not constant; it can be\nchanged to any of the following values:\n\n- *qmark* - Question mark style, eg. `WHERE name=?`\n- *numeric* - Numeric positional style, eg. `WHERE name=:1`\n- *named* - Named style, eg. `WHERE name=:paramname`\n- *format* - printf format codes, eg. `WHERE name=%s`\n- *pyformat* - Python format codes, eg. `WHERE name=%(paramname)s`\n\n\n#### pg8000.dbapi.STRING\n\nString type oid.\n\n\n#### pg8000.dbapi.BINARY\n\n\n#### pg8000.dbapi.NUMBER\n\nNumeric type oid.\n\n\n#### pg8000.dbapi.DATETIME\n\nTimestamp type oid\n\n\n#### pg8000.dbapi.ROWID\n\nROWID type oid\n\n\n### Functions\n\n#### pg8000.dbapi.connect(user, host='localhost', database=None, port=5432, password=None, source\\_address=None, unix\\_sock=None, ssl\\_context=None, timeout=None, tcp\\_keepalive=True, applicationa_name=None, replication=None, sock=None)\n\nCreates a connection to a PostgreSQL database.\n\n- *user*  - The username to connect to the PostgreSQL server with. If your server character encoding is not `ascii` or `utf8`, then you need to provide `user` as bytes, eg. `'my_name'.encode('EUC-JP')`.\n- *host* - The hostname of the PostgreSQL server to connect with. Providing this parameter is necessary for TCP/IP connections. One of either `host` or `unix_sock` must be provided. The default is `localhost`.\n- *database* - The name of the database instance to connect with. If `None` then the PostgreSQL server will assume the database name is the same as the username. If your server character encoding is not `ascii` or `utf8`, then you need to provide `database` as bytes, eg. `'my_db'.encode('EUC-JP')`.\n- *port* - The TCP/IP port of the PostgreSQL server instance.  This parameter defaults to `5432`, the registered common port of PostgreSQL TCP/IP servers.\n- *password* - The user password to connect to the server with. This parameter is optional; if omitted and the database server requests password-based authentication, the connection will fail to open. If this parameter is provided but not requested by the server, no error will occur. If your server character encoding is not `ascii` or `utf8`, then you need to provide `password` as bytes, eg.  `'my_password'.encode('EUC-JP')`.\n- *source_address* - The source IP address which initiates the connection to the PostgreSQL server. The default is `None` which means that the operating system will choose the source address.\n- *unix_sock* - The path to the UNIX socket to access the database through, for example, `'/tmp/.s.PGSQL.5432'`. One of either `host` or `unix_sock` must be provided.\n- *ssl_context* - This governs SSL encryption for TCP/IP sockets. It can have four values:\n  - `None`, the default, meaning that an attempt will be made to connect over SSL, but if this is rejected by the server then pg8000 will fall back to using a plain socket.\n  - `True`, means use SSL with an `ssl.SSLContext` with the minimum of checks.\n  - `False`, means to not attempt to create an SSL socket.\n  - An instance of `ssl.SSLContext` which will be used to create the SSL connection.\n- *timeout* - This is the time in seconds before the connection to the server will time out. The default is `None` which means no timeout.\n- *tcp_keepalive* - If `True` then use [TCP keepalive](https://en.wikipedia.org/wiki/Keepalive#TCP_keepalive). The default is `True`.\n- *application_name* - Sets the [application\\_name](https://www.postgresql.org/docs/current/runtime-config-logging.html#GUC-APPLICATION-NAME). If your server character encoding is not `ascii` or `utf8`, then you need to provide values as bytes, eg. `'my_application_name'.encode('EUC-JP')`. The default is `None` which means that the server will set the application name.\n- *replication* - Used to run in [streaming replication mode](https://www.postgresql.org/docs/current/protocol-replication.html). If your server character encoding is not `ascii` or `utf8`, then you need to provide values as bytes, eg. `'database'.encode('EUC-JP')`.\n- *sock* - A socket-like object to use for the connection. For example, `sock` could be a plain `socket.socket`, or it could represent an SSH tunnel or perhaps an `ssl.SSLSocket` to an SSL proxy. If an `ssl.SSLContext` is provided, then it will be used to attempt to create an SSL socket from the provided socket. \n\n\n#### pg8000.dbapi.Date(year, month, day)\n\nConstruct an object holding a date value.\n\nThis property is part of the `DBAPI 2.0 specification\n<http://www.python.org/dev/peps/pep-0249/>`_.\n\nReturns: `datetime.date`\n\n\n#### pg8000.dbapi.Time(hour, minute, second)\n\nConstruct an object holding a time value.\n\nReturns: `datetime.time`\n\n\n#### pg8000.dbapi.Timestamp(year, month, day, hour, minute, second)\n\nConstruct an object holding a timestamp value.\n\nReturns: `datetime.datetime`\n\n\n#### pg8000.dbapi.DateFromTicks(ticks)\n\nConstruct an object holding a date value from the given ticks value (number of seconds\nsince the epoch).\n\nReturns: `datetime.datetime`\n\n\n#### pg8000.dbapi.TimeFromTicks(ticks)\n\nConstruct an object holding a time value from the given ticks value (number of seconds\nsince the epoch).\n\nReturns: `datetime.time`\n\n\n#### pg8000.dbapi.TimestampFromTicks(ticks)\n\nConstruct an object holding a timestamp value from the given ticks value (number of\nseconds since the epoch).\n\nReturns: `datetime.datetime`\n\n\n#### pg8000.dbapi.Binary(value)\n\nConstruct an object holding binary data.\n\nReturns: `bytes`\n\n\n### Generic Exceptions\n\nPg8000 uses the standard DBAPI 2.0 exception tree as \"generic\" exceptions. Generally,\nmore specific exception types are raised; these specific exception types are derived\nfrom the generic exceptions.\n\n#### pg8000.dbapi.Warning\n\nGeneric exception raised for important database warnings like data truncations. This\nexception is not currently used by pg8000.\n\n\n#### pg8000.dbapi.Error\n\nGeneric exception that is the base exception of all other error exceptions.\n\n\n#### pg8000.dbapi.InterfaceError\n\nGeneric exception raised for errors that are related to the database interface rather\nthan the database itself. For example, if the interface attempts to use an SSL\nconnection but the server refuses, an InterfaceError will be raised.\n\n\n#### pg8000.dbapi.DatabaseError\n\nGeneric exception raised for errors that are related to the database. This exception is\ncurrently never raised by pg8000.\n\n\n#### pg8000.dbapi.DataError\n\nGeneric exception raised for errors that are due to problems with the processed data.\nThis exception is not currently raised by pg8000.\n\n\n#### pg8000.dbapi.OperationalError\n\nGeneric exception raised for errors that are related to the database's operation and not\nnecessarily under the control of the programmer. This exception is currently never\nraised by pg8000.\n\n\n#### pg8000.dbapi.IntegrityError\n\nGeneric exception raised when the relational integrity of the database is affected. This\nexception is not currently raised by pg8000.\n\n\n#### pg8000.dbapi.InternalError\n\nGeneric exception raised when the database encounters an internal error. This is\ncurrently only raised when unexpected state occurs in the pg8000 interface itself, and\nis typically the result of a interface bug.\n\n\n#### pg8000.dbapi.ProgrammingError\n\nGeneric exception raised for programming errors. For example, this exception is raised\nif more parameter fields are in a query string than there are available parameters.\n\n\n#### pg8000.dbapi.NotSupportedError\n\nGeneric exception raised in case a method or database API was used which is not\nsupported by the database.\n\n\n### Classes\n\n\n#### pg8000.dbapi.Connection\n\nA connection object is returned by the `pg8000.dbapi.connect()` function. It represents a\nsingle physical connection to a PostgreSQL database.\n\n\n#### pg8000.dbapi.Connection.autocommit\n\nFollowing the DB-API specification, autocommit is off by default. It can be turned on by\nsetting this boolean pg8000-specific autocommit property to ``True``.\n\n\n#### pg8000.dbapi.Connection.close()\n\nCloses the database connection.\n\n\n#### pg8000.dbapi.Connection.cursor()\n\nCreates a `pg8000.dbapi.Cursor` object bound to this connection.\n\n\n#### pg8000.dbapi.Connection.rollback()\n\nRolls back the current database transaction.\n\n\n#### pg8000.dbapi.Connection.tpc_begin(xid)\n\nBegins a TPC transaction with the given transaction ID xid. This method should be\ncalled outside of a transaction (i.e. nothing may have executed since the last\n`commit()`  or `rollback()`. Furthermore, it is an error to call `commit()` or\n`rollback()` within the TPC transaction. A `ProgrammingError` is raised, if the\napplication calls `commit()` or `rollback()` during an active TPC transaction.\n\n\n#### pg8000.dbapi.Connection.tpc_commit(xid=None)\n\nWhen called with no arguments, `tpc_commit()` commits a TPC transaction previously\nprepared with `tpc_prepare()`. If `tpc_commit()` is called prior to\n`tpc_prepare()`, a single phase commit is performed. A transaction manager may choose\nto do this if only a single resource is participating in the global transaction.\n\nWhen called with a transaction ID `xid`, the database commits the given transaction.\nIf an invalid transaction ID is provided, a `ProgrammingError` will be raised. This\nform should be called outside of a transaction, and is intended for use in recovery.\n\nOn return, the TPC transaction is ended.\n\n\n#### pg8000.dbapi.Connection.tpc_prepare()\n\nPerforms the first phase of a transaction started with `.tpc_begin()`. A\n`ProgrammingError` is be raised if this method is called outside of a TPC transaction.\n\nAfter calling `tpc_prepare()`, no statements can be executed until `tpc_commit()` or\n`tpc_rollback()` have been called.\n\n\n#### pg8000.dbapi.Connection.tpc_recover()\n\nReturns a list of pending transaction IDs suitable for use with `tpc_commit(xid)` or\n`tpc_rollback(xid)`.\n\n\n#### pg8000.dbapi.Connection.tpc_rollback(xid=None)\n\nWhen called with no arguments, `tpc_rollback()` rolls back a TPC transaction. It may\nbe called before or after `tpc_prepare()`.\n\nWhen called with a transaction ID xid, it rolls back the given transaction. If an\ninvalid transaction ID is provided, a `ProgrammingError` is raised. This form should\nbe called outside of a transaction, and is intended for use in recovery.\n\nOn return, the TPC transaction is ended.\n\n\n#### pg8000.dbapi.Connection.xid(format_id, global_transaction_id, branch_qualifier)\n\nCreate a Transaction IDs (only global_transaction_id is used in pg) format_id and\nbranch_qualifier are not used in postgres global_transaction_id may be any string\nidentifier supported by postgres returns a tuple (format_id, global_transaction_id,\nbranch_qualifier)\n\n\n#### pg8000.dbapi.Cursor\n\nA cursor object is returned by the `pg8000.dbapi.Connection.cursor()` method of a\nconnection. It has the following attributes and methods:\n\n##### pg8000.dbapi.Cursor.arraysize\n\nThis read/write attribute specifies the number of rows to fetch at a time with\n`pg8000.dbapi.Cursor.fetchmany()`.  It defaults to 1.\n\n\n##### pg8000.dbapi.Cursor.connection\n\nThis read-only attribute contains a reference to the connection object (an instance of\n`pg8000.dbapi.Connection`) on which the cursor was created.\n\n\n##### pg8000.dbapi.Cursor.rowcount\n\nThis read-only attribute contains the number of rows that the last `execute()` or\n`executemany()` method produced (for query statements like `SELECT`) or affected\n(for modification statements like `UPDATE`.\n\nThe value is -1 if:\n\n- No `execute()` or `executemany()` method has been performed yet on the cursor.\n- There was no rowcount associated with the last `execute()`.\n- At least one of the statements executed as part of an `executemany()` had no row\n  count associated with it.\n\n\n##### pg8000.dbapi.Cursor.description\n\nThis read-only attribute is a sequence of 7-item sequences. Each value contains\ninformation describing one result column. The 7 items returned for each column are\n(name, type_code, display_size, internal_size, precision, scale, null_ok). Only the\nfirst two values are provided by the current implementation.\n\n\n##### pg8000.dbapi.Cursor.close()\n\nCloses the cursor.\n\n\n##### pg8000.dbapi.Cursor.execute(operation, args=None, stream=None)\n\nExecutes a database operation. Parameters may be provided as a sequence, or as a\nmapping, depending upon the value of `pg8000.dbapi.paramstyle`. Returns the cursor,\nwhich may be iterated over.\n\n- *operation* - The SQL statement to execute.\n- *args* - If `pg8000.dbapi.paramstyle` is `qmark`, `numeric`, or `format`, this argument should be an array of parameters to bind into the statement. If `pg8000.dbapi.paramstyle` is `named`, the argument should be a `dict` mapping of parameters. If `pg8000.dbapi.paramstyle` is `pyformat`, the argument value may be either an array or a mapping.\n- *stream* - This is a pg8000 extension for use with the PostgreSQL [COPY](http://www.postgresql.org/docs/current/static/sql-copy.html) command. For a `COPY FROM` the parameter must be a readable file-like object, and for `COPY TO` it must be writable.\n\n\n##### pg8000.dbapi.Cursor.executemany(operation, param_sets)\n\nPrepare a database operation, and then execute it against all parameter sequences or\nmappings provided.\n\n- *operation* - The SQL statement to execute.\n- *parameter_sets* - A sequence of parameters to execute the statement with. The values in the sequence should be sequences or mappings of parameters, the same as the args argument of the `pg8000.dbapi.Cursor.execute()` method.\n\n\n##### pg8000.dbapi.Cursor.callproc(procname, parameters=None)\n\nCall a stored database procedure with the given name and optional parameters.\n\n- *procname* - The name of the procedure to call.\n- *parameters* - A list of parameters.\n\n\n##### pg8000.dbapi.Cursor.fetchall()\n\nFetches all remaining rows of a query result.\n\nReturns: A sequence, each entry of which is a sequence of field values making up a row.\n\n\n##### pg8000.dbapi.Cursor.fetchmany(size=None)\n\nFetches the next set of rows of a query result.\n\n- *size* - The number of rows to fetch when called.  If not provided, the `pg8000.dbapi.Cursor.arraysize` attribute value is used instead.\n\nReturns: A sequence, each entry of which is a sequence of field values making up a row.\nIf no more rows are available, an empty sequence will be returned.\n\n\n##### pg8000.dbapi.Cursor.fetchone()\n\nFetch the next row of a query result set.\n\nReturns: A row as a sequence of field values, or `None` if no more rows are available.\n\n\n##### pg8000.dbapi.Cursor.setinputsizes(\\*sizes)\n\nUsed to set the parameter types of the next query. This is useful if it's difficult for\npg8000 to work out the types from the parameters themselves (eg. for parameters of type\nNone).\n\n- *sizes* - Positional parameters that are either the Python type of the parameter to be sent, or the PostgreSQL oid. Common oids are available as constants such as `pg8000.STRING`, `pg8000.INTEGER`, `pg8000.TIME` etc.\n\n\n##### pg8000.dbapi.Cursor.setoutputsize(size, column=None)\n\nNot implemented by pg8000.\n\n\n#### pg8000.dbapi.Interval\n\nAn Interval represents a measurement of time.  In PostgreSQL, an interval is defined in\nthe measure of months, days, and microseconds; as such, the pg8000 interval type\nrepresents the same information.\n\nNote that values of the `pg8000.dbapi.Interval.microseconds`,\n`pg8000.dbapi.Interval.days`, and `pg8000.dbapi.Interval.months` properties are\nindependently measured and cannot be converted to each other. A month may be 28, 29, 30,\nor 31 days, and a day may occasionally be lengthened slightly by a leap second.\n\n\n## Design Decisions\n\nFor the `Range` type, the constructor follows the [PostgreSQL range constructor functions\n](https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-CONSTRUCT)\nwhich makes [[closed, open)](https://fhur.me/posts/always-use-closed-open-intervals)\nthe easiest to express:\n\n```python\n>>> from pg8000.types import Range\n>>>\n>>> pg_range = Range(2, 6)\n\n```\n\n\n## Tests\n\n- Install [tox](http://testrun.org/tox/latest/): `pip install tox`\n\n- Enable the PostgreSQL hstore extension by running the SQL command:\n  `create extension hstore;`\n\n- Add a line to `pg_hba.conf` for the various authentication options:\n\n```\nhost    pg8000_md5           all        127.0.0.1/32            md5\nhost    pg8000_gss           all        127.0.0.1/32            gss\nhost    pg8000_password      all        127.0.0.1/32            password\nhost    pg8000_scram_sha_256 all        127.0.0.1/32            scram-sha-256\nhost    all                  all        127.0.0.1/32            trust\n```\n\n- Set password encryption to `scram-sha-256` in `postgresql.conf`:\n  `password_encryption = 'scram-sha-256'`\n\n- Set the password for the postgres user: `ALTER USER postgresql WITH PASSWORD 'pw';`\n\n- Run `tox` from the `pg8000` directory: `tox`\n\nThis will run the tests against the Python version of the virtual environment, on the\nmachine, and the installed PostgreSQL version listening on port 5432, or the `PGPORT`\nenvironment variable if set.\n\nBenchmarks are run as part of the test suite at `tests/test_benchmarks.py`.\n\n\n## Doing A Release Of pg8000\n\nRun `tox` to make sure all tests pass, then update the release notes, then do:\n\n\n```\ngit tag -a x.y.z -m \"version x.y.z\"\nrm -r dist\npython -m build\ntwine upload dist/*\n```\n\n\n## Release Notes\n\n### Version 1.31.2, 2024-04-28\n\n- Fix bug where `parameter_statuses` fails for non-ascii encoding.\n- Add support for Python 3.12\n\n\n### Version 1.31.1, 2024-04-01\n\n- Move to src style layout, and also for packaging use Hatch rather than setuptools. This means that if the source distribution has a directory added to it (as is needed for packaging for OS distributions) the package can still be built.\n\n\n### Version 1.31.0, 2024-03-31\n\n- Now the `ssl_context` connection parameter can have one of four values:\n  - None - The default, meaning it'll try and connect over SSL but fall back to a plain socket if not.\n  - True - Will try and connect over SSL and fail if not.\n  - False - It'll not try to connect over SSL.\n  - SSLContext object - It'll use this object to connect over SSL.\n\n\n### Version 1.30.5, 2024-02-22\n\n- Fix bug that now means the number of parameters cam be as high as an unsigned 16 bit\n  integer will go.\n\n\n### Version 1.30.4, 2024-01-03\n\n- Add support for more range and multirange types.\n- Make the `Connection.parameter_statuses` property a `dict` rather than a `dequeue`.\n\n\n### Version 1.30.3, 2023-10-31\n\n- Fix problem with PG date overflowing Python types. Now we return the `str` we got from the\n  server if we can't parse it. \n\n\n### Version 1.30.2, 2023-09-17\n\n- Bug fix where dollar-quoted string constants weren't supported.\n\n\n### Version 1.30.1, 2023-07-29\n\n- There was a problem uploading the previous version (1.30.0) to PyPI because the markup of the README.rst was invalid. There's now a step in the automated tests to check for this.\n\n\n### Version 1.30.0, 2023-07-27\n\n- Remove support for Python 3.7\n- Add a `sock` keyword parameter for creating a connection from a pre-configured socket.\n\n\n### Version 1.29.8, 2023-06-16\n\n- Ranges don't work with legacy API.\n\n\n### Version 1.29.7, 2023-06-16\n\n- Add support for PostgreSQL `range` and `multirange` types. Previously pg8000 would just return them as strings, but now they're returned as `Range` and lists of `Range`.\n- The PostgreSQL `record` type is now returned as a `tuple` of strings, whereas before it was returned as one string.\n\n\n### Version 1.29.6, 2023-05-29\n\n- Fixed two bugs with composite types. Nulls should be represented by an empty string, and in an array of composite types, the elements should be surrounded by double quotes.\n\n\n### Version 1.29.5, 2023-05-09\n\n- Fixed bug where pg8000 didn't handle the case when the number of bytes received from a socket was fewer than requested. This was being interpreted as a network error, but in fact we just needed to wait until more bytes were available.\n- When using the `PGInterval` type, if a response from the server contained the period `millennium`, it wasn't recognised. This was caused by a spelling mistake where we had `millenium` rather than `millennium`.\n- Added support for sending PostgreSQL composite types. If a value is sent as a `tuple`, pg8000 will send it to the server as a `(` delimited composite string.\n\n\n### Version 1.29.4, 2022-12-14\n\n- Fixed bug in `pg8000.dbapi` in the `setinputsizes()` method where if a `size` was a recognized Python type, the method failed.\n\n\n### Version 1.29.3, 2022-10-26\n\n- Upgrade the SCRAM library to version 1.4.3. This adds support for the case where the client supports channel binding but the server doesn't.\n\n\n### Version 1.29.2, 2022-10-09\n\n- Fixed a bug where in a literal array, items such as `\\n` and `\\r` weren't escaped properly before being sent to the server.\n- Fixed a bug where if the PostgreSQL server has a half-hour time zone set, values of type `timestamp with time zone` failed. This has been fixed by using the `parse` function of the `dateutil` package if the `datetime` parser fails.\n\n\n### Version 1.29.1, 2022-05-23\n\n- In trying to determine if there's been a failed commit, check for `ROLLBACK TO SAVEPOINT`.\n\n\n### Version 1.29.0, 2022-05-21\n\n- Implement a workaround for the [silent failed commit](https://github.com/tlocke/pg8000/issues/36) bug.\n- Previously if an empty string was sent as the query an exception would be raised, but that isn't done now.\n\n\n### Version 1.28.3, 2022-05-18\n\n- Put back `__version__` attributes that were inadvertently removed.\n\n\n### Version 1.28.2, 2022-05-17\n\n- Use a build system that's compliant with PEP517.\n\n\n### Version 1.28.1, 2022-05-17\n\n- If when doing a `COPY FROM` the `stream` parameter is an iterator of `str`, pg8000 used to silently append a newline to the end. That no longer happens.\n\n\n### Version 1.28.0, 2022-05-17\n\n- When using the `COPY FROM` SQL statement, allow the `stream` parameter to be an iterable.\n\n\n### Version 1.27.1, 2022-05-16\n\n- The `seconds` attribute of `PGInterval` is now always a `float`, to cope with fractional seconds.\n- Updated the `interval` parsers for `iso_8601` and `sql_standard` to take account of fractional seconds.\n\n\n### Version 1.27.0, 2022-05-16\n\n- It used to be that by default, if pg8000 received an `interval` type from the server and it was too big to fit into a `datetime.timedelta` then an exception would be raised. Now if an interval is too big for `datetime.timedelta` a `PGInterval` is returned.\n- pg8000 now supports all the output formats for an `interval` (`postgres`, `postgres_verbose`, `iso_8601` and `sql_standard`).\n\n\n### Version 1.26.1, 2022-04-23\n\n- Make sure all tests are run by the GitHub Actions tests on commit.\n- Remove support for Python 3.6\n- Remove support for PostgreSQL 9.6\n\n\n### Version 1.26.0, 2022-04-18\n\n- When connecting, raise an `InterfaceError('network error')` rather than let the underlying `struct.error` float up.\n- Make licence text the same as that used by the OSI. Previously the licence wording differed slightly from the BSD 3 Clause licence at https://opensource.org/licenses/BSD-3-Clause. This meant that automated tools didn't pick it up as being Open Source. The changes are believed to not alter the meaning of the license at all.\n\n\n### Version 1.25.0, 2022-04-17\n\n- Fix more cases where a `ResourceWarning` would be raise because of a socket that had been left open.\n- We now have a single `InterfaceError` with the message 'network error' for all network errors, with the underlying exception held in the `cause` of the exception.\n\n\n### Version 1.24.2, 2022-04-15\n\n- To prevent a `ResourceWarning` close socket if a connection can't be created.\n\n\n### Version 1.24.1, 2022-03-02\n\n- Return pg +/-infinity dates as `str`. Previously +/-infinity pg values would cause an error when returned, but now we return +/-infinity as strings.\n\n\n### Version 1.24.0, 2022-02-06\n\n- Add SQL escape functions identifier() and literal() to the native API. For use when a query can't be parameterised and the SQL string has to be created using untrusted values.\n\n\n### Version 1.23.0, 2021-11-13\n\n- If a query has no parameters, then the query will no longer be parsed. Although there are performance benefits for doing this, the main reason is to avoid query rewriting, which can introduce errors.\n\n\n### Version 1.22.1, 2021-11-10\n\n- Fix bug in PGInterval type where `str()` failed for a millennia value.\n\n\n### Version 1.22.0, 2021-10-13\n\n- Rather than specifying the oids in the `Parse` step of the Postgres protocol, pg8000 now omits them, and so Postgres will use the oids it determines from the query. This makes the pg8000 code simpler and also it should also make the nuances of type matching more straightforward.\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"dbapi, postgresql","license":"BSD 3-Clause License","maintainer":null,"maintainer_email":null,"name":"pg8000","package_url":"https://pypi.org/project/pg8000/","platform":null,"project_url":"https://pypi.org/project/pg8000/","project_urls":{"Homepage":"https://github.com/tlocke/pg8000"},"provides_extra":null,"release_url":"https://pypi.org/project/pg8000/1.31.2/","requires_dist":["python-dateutil>=2.8.2","scramp>=1.4.5"],"requires_python":">=3.8","summary":"PostgreSQL interface library","version":"1.31.2","yanked":false,"yanked_reason":null},"last_serial":22968229,"releases":{"1.00":[],"1.01":[],"1.02":[],"1.03":[{"comment_text":"","digests":{"blake2b_256":"cc276454e7d8225089b893f9b6a2debb5bde66e6287c0b46ac0f44e2a3d03791","md5":"6acf6ff524f1d0d0920bd041bd2175f9","sha256":"3842f2e08512fcae55aeec1525b3a7871e89930990e5c8db7c2880f3c3af924c"},"downloads":-1,"filename":"pg8000-1.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"6acf6ff524f1d0d0920bd041bd2175f9","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":53843,"upload_time":"2023-07-27T20:33:52","upload_time_iso_8601":"2023-07-27T20:33:52.147078Z","url":"https://files.pythonhosted.org/packages/cc/27/6454e7d8225089b893f9b6a2debb5bde66e6287c0b46ac0f44e2a3d03791/pg8000-1.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7d8d6634e3e196f658c500e04f20fd96ec7847f884c7d1b66718bf931cbe585b","md5":"255944f8a1aef5b97ed946682255b2af","sha256":"9e6456d76ec1490bdfc1dfd502098320a6c0679f26f901b7bb4724fe0dfd06c4"},"downloads":-1,"filename":"pg8000-1.3.0.tar.gz","has_sig":false,"md5_digest":"255944f8a1aef5b97ed946682255b2af","packagetype":"sdist","python_version":"source","requires_python":null,"size":131938,"upload_time":"2023-07-27T20:33:54","upload_time_iso_8601":"2023-07-27T20:33:54.477695Z","url":"https://files.pythonhosted.org/packages/7d/8d/6634e3e196f658c500e04f20fd96ec7847f884c7d1b66718bf931cbe585b/pg8000-1.3.0.tar.gz","yanked":false,"yanked_reason":null}],"1.04":[],"1.05":[{"comment_text":"","digests":{"blake2b_256":"232b73909139c12f78a77824ed3c2cb1904de8cde77af66f11a6361b8556ef53","md5":"6480e93a8f7ba51673302a863ba76d95","sha256":"3c1f6c7baf2ee69ced70d9ce5ae562edbb1de5543328944ba9cc9af7ae8374b2"},"downloads":-1,"filename":"pg8000-1.05-py2.4.egg","has_sig":false,"md5_digest":"6480e93a8f7ba51673302a863ba76d95","packagetype":"bdist_egg","python_version":"2.4","requires_python":null,"size":53049,"upload_time":"2008-09-04T14:10:29","upload_time_iso_8601":"2008-09-04T14:10:29Z","url":"https://files.pythonhosted.org/packages/23/2b/73909139c12f78a77824ed3c2cb1904de8cde77af66f11a6361b8556ef53/pg8000-1.05-py2.4.egg","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7e4156456b9bd89fad9f79cb15668c8fca92232ae156f9581bfc0b48f0e182bd","md5":"ac4af1cd0ff92a84e632dff788f094a9","sha256":"ed943e9f505b04314d0f16d945b9721a066ce307f4951d0a81508f15d838b075"},"downloads":-1,"filename":"pg8000-1.05-py2.5.egg","has_sig":false,"md5_digest":"ac4af1cd0ff92a84e632dff788f094a9","packagetype":"bdist_egg","python_version":"2.5","requires_python":null,"size":52545,"upload_time":"2008-09-04T14:10:15","upload_time_iso_8601":"2008-09-04T14:10:15Z","url":"https://files.pythonhosted.org/packages/7e/41/56456b9bd89fad9f79cb15668c8fca92232ae156f9581bfc0b48f0e182bd/pg8000-1.05-py2.5.egg","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a9e8e7276accdc64cd8d3d6649ae9bfb66e49e03a57c9b5463f550058771667e","md5":"2b3ca0d8e25be49bd22f8e834e452f7a","sha256":"d491e0d16c22d7d285044d1da4e2a4d14ca06eff2604d6d27c02e8fbab8c4505"},"downloads":-1,"filename":"pg8000-1.05.tar.gz","has_sig":false,"md5_digest":"2b3ca0d8e25be49bd22f8e834e452f7a","packagetype":"sdist","python_version":"source","requires_python":null,"size":22739,"upload_time":"2008-09-04T14:10:13","upload_time_iso_8601":"2008-09-04T14:10:13Z","url":"https://files.pythonhosted.org/packages/a9/e8/e7276accdc64cd8d3d6649ae9bfb66e49e03a57c9b5463f550058771667e/pg8000-1.05.tar.gz","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"64966d07ae1728b9ea950f524a9376e1362376fbdd4c6e162691a63ef62b39d3","md5":"4ab98a5ec86f63cdf85dcdd1df7252e0","sha256":"b4ba266fe6584cc862d340213803c79e1c1db415d9f03bbf1c4da40ffde68c42"},"downloads":-1,"filename":"pg8000-1.05.win32.exe","has_sig":false,"md5_digest":"4ab98a5ec86f63cdf85dcdd1df7252e0","packagetype":"bdist_wininst","python_version":"any","requires_python":null,"size":91360,"upload_time":"2008-09-04T14:10:11","upload_time_iso_8601":"2008-09-04T14:10:11Z","url":"https://files.pythonhosted.org/packages/64/96/6d07ae1728b9ea950f524a9376e1362376fbdd4c6e162691a63ef62b39d3/pg8000-1.05.win32.exe","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f7a397c2ea487740aaaeb34c29f3b8c23228bfb582f5a55d6989e9117ab3fcd1","md5":"8995a16f40fa9a3a3802699486dbef77","sha256":"7e964f55f9a2702fa966479fac5b753d02864b7f3832d78d6fe6de08b1553f13"},"downloads":-1,"filename":"pg8000-1.05.zip","has_sig":false,"md5_digest":"8995a16f40fa9a3a3802699486dbef77","packagetype":"sdist","python_version":"source","requires_python":null,"size":30603,"upload_time":"2008-09-04T14:10:14","upload_time_iso_8601":"2008-09-04T14:10:14Z","url":"https://files.pythonhosted.org/packages/f7/a3/97c2ea487740aaaeb34c29f3b8c23228bfb582f5a55d6989e9117ab3fcd1/pg8000-1.05.zip","yanked":false,"yanked_reason":null}],"1.06":[],"1.07":[],"1.08":[],"1.10.0":[{"comment_text":"","digests":{"blake2b_256":"2eb9ce09eb72053fb2b1635c710acec6afc4cf599cae3d12d65ce8c424a4dd4f","md5":"0baa127775a2d99009fcb4ca121d9448","sha256":"64cd67cb7729def6a9121ad15149f71d8f2ea41eb55ff9d56341ac894c2a5553"},"downloads":-1,"filename":"pg8000-1.10.0.tar.gz","has_sig":false,"md5_digest":"0baa127775a2d99009fcb4ca121d9448","packagetype":"sdist","python_version":"source","requires_python":null,"size":39181,"upload_time":"2014-08-30T18:09:20","upload_time_iso_8601":"2014-08-30T18:09:20.628683Z","url":"https://files.pythonhosted.org/packages/2e/b9/ce09eb72053fb2b1635c710acec6afc4cf599cae3d12d65ce8c424a4dd4f/pg8000-1.10.0.tar.gz","yanked":false,"yanked_reason":null}],"1.10.1":[{"comment_text":"","digests":{"blake2b_256":"b810649bc4ee1524715d230385e8bd59cd1a10184c7ba92c1bdc4bb8849b8e44","md5":"6b715a30e344b25ac5f942c55692e233","sha256":"12b8825777e468b03c8dea05571bb6ba113e66c28732440159b4527c354e1e77"},"downloads":-1,"filename":"pg8000-1.10.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"6b715a30e344b25ac5f942c55692e233","packagetype":"bdist_wheel","python_version":"3.4","requires_python":null,"size":31557,"upload_time":"2014-09-15T20:36:34","upload_time_iso_8601":"2014-09-15T20:36:34.660452Z","url":"https://files.pythonhosted.org/packages/b8/10/649bc4ee1524715d230385e8bd59cd1a10184c7ba92c1bdc4bb8849b8e44/pg8000-1.10.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"fdcf5d6007ff7b114ef76e59aba987cc1cf6e4d327091b90bbd9b3ef8191b6bd","md5":"173275fd76628b0e0cbed70ed9ce9eb9","sha256":"188658db63c2ca931ae1bf0167b34efaac0ecc743b707f0118cc4b87e90ce488"},"downloads":-1,"filename":"pg8000-1.10.1.tar.gz","has_sig":false,"md5_digest":"173275fd76628b0e0cbed70ed9ce9eb9","packagetype":"sdist","python_version":"source","requires_python":null,"size":39072,"upload_time":"2014-09-15T20:36:30","upload_time_iso_8601":"2014-09-15T20:36:30.843201Z","url":"https://files.pythonhosted.org/packages/fd/cf/5d6007ff7b114ef76e59aba987cc1cf6e4d327091b90bbd9b3ef8191b6bd/pg8000-1.10.1.tar.gz","yanked":false,"yanked_reason":null}],"1.10.2":[{"comment_text":"","digests":{"blake2b_256":"f2b0de61c2acfaf1eb1af9871b305d93af78cfa4e54f18c6b6f85e9b211bd142","md5":"35528e6acd5842f9f7928dde6b5fdf24","sha256":"5b166e11272ef5afdddca9eb7f2889ab48fee4b0f8fac561090a0feb51bb17d2"},"downloads":-1,"filename":"pg8000-1.10.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"35528e6acd5842f9f7928dde6b5fdf24","packagetype":"bdist_wheel","python_version":"3.4","requires_python":null,"size":31779,"upload_time":"2015-03-17T22:59:19","upload_time_iso_8601":"2015-03-17T22:59:19.973539Z","url":"https://files.pythonhosted.org/packages/f2/b0/de61c2acfaf1eb1af9871b305d93af78cfa4e54f18c6b6f85e9b211bd142/pg8000-1.10.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c54a8675cd714f97d7455b961c6fdb248088770e92535eed2166b95ffc8f3ad5","md5":"7f7cfa3b4c4b103999f584ad3d813ded","sha256":"f84484bdd9b5a98d6426516711014c3469eef6108db150453b6f02a813cf9773"},"downloads":-1,"filename":"pg8000-1.10.2.tar.gz","has_sig":false,"md5_digest":"7f7cfa3b4c4b103999f584ad3d813ded","packagetype":"sdist","python_version":"source","requires_python":null,"size":39168,"upload_time":"2015-03-17T22:59:16","upload_time_iso_8601":"2015-03-17T22:59:16.311849Z","url":"https://files.pythonhosted.org/packages/c5/4a/8675cd714f97d7455b961c6fdb248088770e92535eed2166b95ffc8f3ad5/pg8000-1.10.2.tar.gz","yanked":false,"yanked_reason":null}],"1.10.3":[{"comment_text":"","digests":{"blake2b_256":"0d919abeb7365a9497a58bbedf5e30b6afd4c79e4890badfd0067f50af6c9e26","md5":"f2ee1ae15261701b0f6bafce0871f0f0","sha256":"339493b4d7f43e76ca08cc69909b78140c31453e56c03a424dc69ea37695c712"},"downloads":-1,"filename":"pg8000-1.10.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f2ee1ae15261701b0f6bafce0871f0f0","packagetype":"bdist_wheel","python_version":"3.4","requires_python":null,"size":31830,"upload_time":"2016-01-07T21:24:32","upload_time_iso_8601":"2016-01-07T21:24:32.854117Z","url":"https://files.pythonhosted.org/packages/0d/91/9abeb7365a9497a58bbedf5e30b6afd4c79e4890badfd0067f50af6c9e26/pg8000-1.10.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c58a1813d0aea0486913bd3e9bccba1d752bd69f2b5079c06dc736575f3eac34","md5":"39fc17ee21f050397c138067cef509f0","sha256":"1611f64011b80deafc5a0339c3206af55d3f15b81371a412ab989fdb7041d80e"},"downloads":-1,"filename":"pg8000-1.10.3.tar.gz","has_sig":false,"md5_digest":"39fc17ee21f050397c138067cef509f0","packagetype":"sdist","python_version":"source","requires_python":null,"size":44955,"upload_time":"2016-01-07T21:24:26","upload_time_iso_8601":"2016-01-07T21:24:26.139241Z","url":"https://files.pythonhosted.org/packages/c5/8a/1813d0aea0486913bd3e9bccba1d752bd69f2b5079c06dc736575f3eac34/pg8000-1.10.3.tar.gz","yanked":false,"yanked_reason":null}],"1.10.4":[{"comment_text":"","digests":{"blake2b_256":"39be238e62fbac3568b04d4ac904fe634f7aa67759999f826841a032436558fb","md5":"c27cbb26ab6f4bdaaf01abeab1814ff7","sha256":"1d106778de71bc2e80be20fe6d41677229f58d1b791ec27e69308166f1420a8c"},"downloads":-1,"filename":"pg8000-1.10.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"c27cbb26ab6f4bdaaf01abeab1814ff7","packagetype":"bdist_wheel","python_version":"3.4","requires_python":null,"size":26690,"upload_time":"2016-02-27T15:14:37","upload_time_iso_8601":"2016-02-27T15:14:37.571672Z","url":"https://files.pythonhosted.org/packages/39/be/238e62fbac3568b04d4ac904fe634f7aa67759999f826841a032436558fb/pg8000-1.10.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8afb3f976746a1594ae3b5363795c22d659b44812d3c6ef929c512af308044a7","md5":"365df2347be25f1d73305cbc43f73378","sha256":"42636f7f062167e352f1fdbed3a82560d36304a10b60aff35dbfd8b38661b234"},"downloads":-1,"filename":"pg8000-1.10.4.tar.gz","has_sig":false,"md5_digest":"365df2347be25f1d73305cbc43f73378","packagetype":"sdist","python_version":"source","requires_python":null,"size":40164,"upload_time":"2016-02-27T15:14:30","upload_time_iso_8601":"2016-02-27T15:14:30.338325Z","url":"https://files.pythonhosted.org/packages/8a/fb/3f976746a1594ae3b5363795c22d659b44812d3c6ef929c512af308044a7/pg8000-1.10.4.tar.gz","yanked":false,"yanked_reason":null}],"1.10.5":[{"comment_text":"","digests":{"blake2b_256":"37d577dda1ba4bd162acd4a5b01ccbf6204c47fa3b5a56b82ff86ad50639c234","md5":"7c226157de47bd985ebaf0dae4808849","sha256":"c6f7767fd8e31e1f7fa271343721c31c98cbe72bc4305d25d57c88b73b755f66"},"downloads":-1,"filename":"pg8000-1.10.5-py2.py3-none-any.whl","has_sig":false,"md5_digest":"7c226157de47bd985ebaf0dae4808849","packagetype":"bdist_wheel","python_version":"3.4","requires_python":null,"size":26655,"upload_time":"2016-03-04T22:40:50","upload_time_iso_8601":"2016-03-04T22:40:50.509212Z","url":"https://files.pythonhosted.org/packages/37/d5/77dda1ba4bd162acd4a5b01ccbf6204c47fa3b5a56b82ff86ad50639c234/pg8000-1.10.5-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b47beb35856156046f83628a16aab3f3ea1e31928244e8a1b669af070425959f","md5":"f925d4a50f1fea5ff4417cb55e3b264d","sha256":"3241b7363a63ee303397b0b3e8462f07de86188771b76113f8ec11194818dc16"},"downloads":-1,"filename":"pg8000-1.10.5.tar.gz","has_sig":false,"md5_digest":"f925d4a50f1fea5ff4417cb55e3b264d","packagetype":"sdist","python_version":"source","requires_python":null,"size":55227,"upload_time":"2016-03-04T22:40:31","upload_time_iso_8601":"2016-03-04T22:40:31.320265Z","url":"https://files.pythonhosted.org/packages/b4/7b/eb35856156046f83628a16aab3f3ea1e31928244e8a1b669af070425959f/pg8000-1.10.5.tar.gz","yanked":false,"yanked_reason":null}],"1.10.6":[{"comment_text":"","digests":{"blake2b_256":"2af9181ff6a124a37299726e6c9ad87802023edca132bb9f43edc2a1bb297d88","md5":"12cd474b9413d1a90fabdc926e4aa270","sha256":"7bffb30c1facb0189c34c0ea7ab968838e102ed30f469687f79ec404b9146dd3"},"downloads":-1,"filename":"pg8000-1.10.6-py2.py3-none-any.whl","has_sig":false,"md5_digest":"12cd474b9413d1a90fabdc926e4aa270","packagetype":"bdist_wheel","python_version":"3.5","requires_python":null,"size":26534,"upload_time":"2016-06-10T10:37:32","upload_time_iso_8601":"2016-06-10T10:37:32.996100Z","url":"https://files.pythonhosted.org/packages/2a/f9/181ff6a124a37299726e6c9ad87802023edca132bb9f43edc2a1bb297d88/pg8000-1.10.6-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7b0773d4e3bbfb804eb7ab04a28c0f92f41f2ca2db5d55e27a4da0e968e5dc03","md5":"70051294ad70ddf3018e2b7e9989ba71","sha256":"5b65b5c579255ddd3ab279eb84c1e86fb30a46e8835fc4be469f9c019de7cb4c"},"downloads":-1,"filename":"pg8000-1.10.6.tar.gz","has_sig":false,"md5_digest":"70051294ad70ddf3018e2b7e9989ba71","packagetype":"sdist","python_version":"source","requires_python":null,"size":55130,"upload_time":"2016-06-10T10:37:28","upload_time_iso_8601":"2016-06-10T10:37:28.079607Z","url":"https://files.pythonhosted.org/packages/7b/07/73d4e3bbfb804eb7ab04a28c0f92f41f2ca2db5d55e27a4da0e968e5dc03/pg8000-1.10.6.tar.gz","yanked":false,"yanked_reason":null}],"1.11.0":[{"comment_text":"","digests":{"blake2b_256":"92329851f6a1b3dbb826db4dce4ef009bcb98fa28d3e928d59d12f1c02f26435","md5":"9603f2954dc10e6740d148d56e4222ef","sha256":"a800470c36ed913163c35cb1dc777094b3079505bb9bcb5777be2d001bfc91df"},"downloads":-1,"filename":"pg8000-1.11.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9603f2954dc10e6740d148d56e4222ef","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":24648,"upload_time":"2017-08-16T20:18:17","upload_time_iso_8601":"2017-08-16T20:18:17.061986Z","url":"https://files.pythonhosted.org/packages/92/32/9851f6a1b3dbb826db4dce4ef009bcb98fa28d3e928d59d12f1c02f26435/pg8000-1.11.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"acfb207c0c9f302b06665c9ff2d6cf43c59da4b6f05e3eb41b2028bc97ae0aed","md5":"5a34d6f54091f690a48d12c8f4354994","sha256":"a1e776ab3c59d0ef2db511120c398bbe4a0c4eab9332a26612da835250f47fdf"},"downloads":-1,"filename":"pg8000-1.11.0.tar.gz","has_sig":false,"md5_digest":"5a34d6f54091f690a48d12c8f4354994","packagetype":"sdist","python_version":"source","requires_python":null,"size":37478,"upload_time":"2017-08-16T20:18:13","upload_time_iso_8601":"2017-08-16T20:18:13.369378Z","url":"https://files.pythonhosted.org/packages/ac/fb/207c0c9f302b06665c9ff2d6cf43c59da4b6f05e3eb41b2028bc97ae0aed/pg8000-1.11.0.tar.gz","yanked":false,"yanked_reason":null}],"1.12.0":[{"comment_text":"","digests":{"blake2b_256":"a52383cba9db4f3dea5113bbee7e412d810d25a0f588bbc5628f8c64a26f4c23","md5":"b3b1171645b6f37559d1ef82c2aec7f6","sha256":"2be3baf6cae46b995caeb149abc9d0c96ff6bc5f41ec1997d48273d54913f6bf"},"downloads":-1,"filename":"pg8000-1.12.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b3b1171645b6f37559d1ef82c2aec7f6","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":25264,"upload_time":"2018-06-12T10:13:32","upload_time_iso_8601":"2018-06-12T10:13:32.068058Z","url":"https://files.pythonhosted.org/packages/a5/23/83cba9db4f3dea5113bbee7e412d810d25a0f588bbc5628f8c64a26f4c23/pg8000-1.12.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ed3084a8e6323934fd91112611aaf7e4f44576645f5c7b94976e58a22e097af7","md5":"c05165fdf480cf2450666cb3b8a090d9","sha256":"8c5cf84733110d88d9c302bbbf552a2ba072e95ec26033766fedab1c6b1bca3b"},"downloads":-1,"filename":"pg8000-1.12.0.tar.gz","has_sig":false,"md5_digest":"c05165fdf480cf2450666cb3b8a090d9","packagetype":"sdist","python_version":"source","requires_python":null,"size":38123,"upload_time":"2018-06-12T10:13:30","upload_time_iso_8601":"2018-06-12T10:13:30.078252Z","url":"https://files.pythonhosted.org/packages/ed/30/84a8e6323934fd91112611aaf7e4f44576645f5c7b94976e58a22e097af7/pg8000-1.12.0.tar.gz","yanked":false,"yanked_reason":null}],"1.12.1":[{"comment_text":"","digests":{"blake2b_256":"bc3b7c2ac4c543f1b9688acb5b37777a556a816db2de1e8260a6bb2bc9459528","md5":"3f18a564e1521442a75f52d2661ba803","sha256":"3e691b4929853c81d2bbf104e722e926746338e73d71a79bbfe025c88f808e97"},"downloads":-1,"filename":"pg8000-1.12.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"3f18a564e1521442a75f52d2661ba803","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":25265,"upload_time":"2018-06-13T12:57:38","upload_time_iso_8601":"2018-06-13T12:57:38.291324Z","url":"https://files.pythonhosted.org/packages/bc/3b/7c2ac4c543f1b9688acb5b37777a556a816db2de1e8260a6bb2bc9459528/pg8000-1.12.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"29a84e8aeaefb019edfc9182d99a823af611f5acea57aee721a7294052ab344f","md5":"04f6d13bdda06511973d45d3c9ee1f20","sha256":"2b39171354c05448363aee6136665e35d1fed3cb588161cdac55c2628dee6cd3"},"downloads":-1,"filename":"pg8000-1.12.1.tar.gz","has_sig":false,"md5_digest":"04f6d13bdda06511973d45d3c9ee1f20","packagetype":"sdist","python_version":"source","requires_python":null,"size":38131,"upload_time":"2018-06-13T12:57:36","upload_time_iso_8601":"2018-06-13T12:57:36.432404Z","url":"https://files.pythonhosted.org/packages/29/a8/4e8aeaefb019edfc9182d99a823af611f5acea57aee721a7294052ab344f/pg8000-1.12.1.tar.gz","yanked":false,"yanked_reason":null}],"1.12.2":[{"comment_text":"","digests":{"blake2b_256":"e19c7abc6faa5c6198d8f57efc9d0a9b6a9b470be2c680e5e7aab54a8fe2092c","md5":"01750a0d70f343eeae403268125c47a7","sha256":"e8408c112c0e89ab705099383e8f1680b6ba3e8910f0a4161270e0b848210a7e"},"downloads":-1,"filename":"pg8000-1.12.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"01750a0d70f343eeae403268125c47a7","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":25326,"upload_time":"2018-06-28T22:13:27","upload_time_iso_8601":"2018-06-28T22:13:27.983154Z","url":"https://files.pythonhosted.org/packages/e1/9c/7abc6faa5c6198d8f57efc9d0a9b6a9b470be2c680e5e7aab54a8fe2092c/pg8000-1.12.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"05fe472f47dbe72572ebacbdde759959c76639db4787f4d76f9546323c3802ee","md5":"dc32b6d57ab457cc886d304a1b89a2f3","sha256":"c02218d884577a8eafb7eeb8307855620dd457377ca46d121fbb8d196094ab85"},"downloads":-1,"filename":"pg8000-1.12.2.tar.gz","has_sig":false,"md5_digest":"dc32b6d57ab457cc886d304a1b89a2f3","packagetype":"sdist","python_version":"source","requires_python":null,"size":38182,"upload_time":"2018-06-28T22:13:25","upload_time_iso_8601":"2018-06-28T22:13:25.885235Z","url":"https://files.pythonhosted.org/packages/05/fe/472f47dbe72572ebacbdde759959c76639db4787f4d76f9546323c3802ee/pg8000-1.12.2.tar.gz","yanked":false,"yanked_reason":null}],"1.12.3":[{"comment_text":"","digests":{"blake2b_256":"27d75690d39cba88c2686fa90f6fc0510da9cfb29931894779d042ec40825290","md5":"9142d72f5664be6782cda1d292548525","sha256":"81e461583c25c4de9994b890187057dd5857f0d6f7569bf4eaf00c9973d94422"},"downloads":-1,"filename":"pg8000-1.12.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9142d72f5664be6782cda1d292548525","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":25320,"upload_time":"2018-08-22T20:21:19","upload_time_iso_8601":"2018-08-22T20:21:19.606310Z","url":"https://files.pythonhosted.org/packages/27/d7/5690d39cba88c2686fa90f6fc0510da9cfb29931894779d042ec40825290/pg8000-1.12.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"185b0ffb5b688b997a0e0fad84707884791a155d100612f50f9861929d60be74","md5":"2684ee7beff8b0aa27d2c28cb7a83545","sha256":"18192d90409a3037619ef17f1924e3fd9c7169c9c1b3277cec1982116ec2b6de"},"downloads":-1,"filename":"pg8000-1.12.3.tar.gz","has_sig":false,"md5_digest":"2684ee7beff8b0aa27d2c28cb7a83545","packagetype":"sdist","python_version":"source","requires_python":null,"size":38190,"upload_time":"2018-08-22T20:21:17","upload_time_iso_8601":"2018-08-22T20:21:17.287638Z","url":"https://files.pythonhosted.org/packages/18/5b/0ffb5b688b997a0e0fad84707884791a155d100612f50f9861929d60be74/pg8000-1.12.3.tar.gz","yanked":false,"yanked_reason":null}],"1.12.4":[{"comment_text":"","digests":{"blake2b_256":"567a1122ed7a37eac270f99ec2d846dc21d9fa427bf127155c97433a97341b58","md5":"6a9a644264846370002f8b6edbf752c9","sha256":"8c042393915e2352ece002a2fc320caa342642b7554de57ec763de99e71911a8"},"downloads":-1,"filename":"pg8000-1.12.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"6a9a644264846370002f8b6edbf752c9","packagetype":"bdist_wheel","python_version":"2.7","requires_python":null,"size":24872,"upload_time":"2019-01-05T14:49:32","upload_time_iso_8601":"2019-01-05T14:49:32.655554Z","url":"https://files.pythonhosted.org/packages/56/7a/1122ed7a37eac270f99ec2d846dc21d9fa427bf127155c97433a97341b58/pg8000-1.12.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"61e23fe355285531c917e21665545ba24f2372dc8597ea3f455df2d7637dc629","md5":"9d12747b8179022856cf00fc8d22dced","sha256":"903a19158e9efda326908bb4b70a71d31f640b4326576774433ab11fd4e46f39"},"downloads":-1,"filename":"pg8000-1.12.4.tar.gz","has_sig":false,"md5_digest":"9d12747b8179022856cf00fc8d22dced","packagetype":"sdist","python_version":"source","requires_python":null,"size":55266,"upload_time":"2019-01-05T14:49:29","upload_time_iso_8601":"2019-01-05T14:49:29.770490Z","url":"https://files.pythonhosted.org/packages/61/e2/3fe355285531c917e21665545ba24f2372dc8597ea3f455df2d7637dc629/pg8000-1.12.4.tar.gz","yanked":false,"yanked_reason":null}],"1.12.5":[{"comment_text":"","digests":{"blake2b_256":"f892fb88949d1bf51106cd566b3b98d1e5c4f985f224c9d3b0201a889bcbfc0f","md5":"256f259cb9d2ace0f2c5a564ea8fbd7a","sha256":"b8c841e759d32669d6209d0bf339d6bd4565b43159cdc2b3d88d0f3f75d5f096"},"downloads":-1,"filename":"pg8000-1.12.5-py2.py3-none-any.whl","has_sig":false,"md5_digest":"256f259cb9d2ace0f2c5a564ea8fbd7a","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*","size":24593,"upload_time":"2019-02-06T13:48:00","upload_time_iso_8601":"2019-02-06T13:48:00.221554Z","url":"https://files.pythonhosted.org/packages/f8/92/fb88949d1bf51106cd566b3b98d1e5c4f985f224c9d3b0201a889bcbfc0f/pg8000-1.12.5-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"830310902758730d5cc705c0d1dd47072b6216edc652bc2e63a078b58c0b32e6","md5":"666746a4afac797fe158833f612d4036","sha256":"5d07ac0afc154897eaa2faff27b8f71e1d85719de5b92896cca33324a09d83f9"},"downloads":-1,"filename":"pg8000-1.12.5.tar.gz","has_sig":false,"md5_digest":"666746a4afac797fe158833f612d4036","packagetype":"sdist","python_version":"source","requires_python":">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*","size":55513,"upload_time":"2019-02-06T13:48:02","upload_time_iso_8601":"2019-02-06T13:48:02.287740Z","url":"https://files.pythonhosted.org/packages/83/03/10902758730d5cc705c0d1dd47072b6216edc652bc2e63a078b58c0b32e6/pg8000-1.12.5.tar.gz","yanked":false,"yanked_reason":null}],"1.13.1":[{"comment_text":"","digests":{"blake2b_256":"dd4c41fdac8b3c1b3f64b93b6681919264b6b0a5ff701e83c44c04a085514a95","md5":"beb459f9ea53ae0eedd5a85388f255fa","sha256":"29a5f32e9b68ca5b6ac5e334cc30fae652ec20c551d5eaa46adb3f24419e94de"},"downloads":-1,"filename":"pg8000-1.13.1-py3-none-any.whl","has_sig":false,"md5_digest":"beb459f9ea53ae0eedd5a85388f255fa","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":26474,"upload_time":"2019-02-06T14:13:13","upload_time_iso_8601":"2019-02-06T14:13:13.772110Z","url":"https://files.pythonhosted.org/packages/dd/4c/41fdac8b3c1b3f64b93b6681919264b6b0a5ff701e83c44c04a085514a95/pg8000-1.13.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3ac1743060f010e9048c00129812ace5b6209001c3534cfb0748f26ede30f7ae","md5":"ff7fbb02cea451cb436b1629970b9afe","sha256":"2208c7aaffe8d61f5c4ccbefeb74ba033003899e64aee37c0eb98aadae8b9c6b"},"downloads":-1,"filename":"pg8000-1.13.1.tar.gz","has_sig":false,"md5_digest":"ff7fbb02cea451cb436b1629970b9afe","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":57132,"upload_time":"2019-02-06T14:13:15","upload_time_iso_8601":"2019-02-06T14:13:15.525660Z","url":"https://files.pythonhosted.org/packages/3a/c1/743060f010e9048c00129812ace5b6209001c3534cfb0748f26ede30f7ae/pg8000-1.13.1.tar.gz","yanked":false,"yanked_reason":null}],"1.13.2":[{"comment_text":"","digests":{"blake2b_256":"1632ae895597e43bc968e0e3e63860e9932b851115457face0d06d7f451b71fc","md5":"233e6c5fb309ad056c8bc0a53365d818","sha256":"e4c2b173178ba41bba19366b9cdeced91fecec2caf31c7ece719138633213cca"},"downloads":-1,"filename":"pg8000-1.13.2-py3-none-any.whl","has_sig":false,"md5_digest":"233e6c5fb309ad056c8bc0a53365d818","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":26929,"upload_time":"2019-06-30T13:44:02","upload_time_iso_8601":"2019-06-30T13:44:02.474628Z","url":"https://files.pythonhosted.org/packages/16/32/ae895597e43bc968e0e3e63860e9932b851115457face0d06d7f451b71fc/pg8000-1.13.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9f929ecdc1ff8d67a872bc11bef8b8868da4637e2c980a4df9cf3267384c1f42","md5":"e884cc630783dee9242385a43e855ea8","sha256":"eebcb4176a7e407987e525a07454882f611985e0becb2b73f76efb93bbdc0aab"},"downloads":-1,"filename":"pg8000-1.13.2.tar.gz","has_sig":false,"md5_digest":"e884cc630783dee9242385a43e855ea8","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":55835,"upload_time":"2019-06-30T13:44:04","upload_time_iso_8601":"2019-06-30T13:44:04.944579Z","url":"https://files.pythonhosted.org/packages/9f/92/9ecdc1ff8d67a872bc11bef8b8868da4637e2c980a4df9cf3267384c1f42/pg8000-1.13.2.tar.gz","yanked":false,"yanked_reason":null}],"1.14.0":[{"comment_text":"","digests":{"blake2b_256":"0dbd49da19e4eb74d0b874eb9dc0d40812b686e0006c0b317b7ef66a18064d8a","md5":"712d0755df6ee9db0f600a987b902512","sha256":"b080d472ce428d95e0cb23278fcc68e44be15ea22284da920553bf767dd8c4db"},"downloads":-1,"filename":"pg8000-1.14.0-py3-none-any.whl","has_sig":false,"md5_digest":"712d0755df6ee9db0f600a987b902512","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":24159,"upload_time":"2020-03-21T15:01:17","upload_time_iso_8601":"2020-03-21T15:01:17.106779Z","url":"https://files.pythonhosted.org/packages/0d/bd/49da19e4eb74d0b874eb9dc0d40812b686e0006c0b317b7ef66a18064d8a/pg8000-1.14.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3800798cbef08916afa28223245b94de3ca05a8148f68f31d7d621e3e4e8df76","md5":"3190905e9834b2adced63161e6881713","sha256":"f9c1dcf89d6d2e8fd3677b8fa8b234deb56befa710625f3b5152294fb302f71e"},"downloads":-1,"filename":"pg8000-1.14.0.tar.gz","has_sig":false,"md5_digest":"3190905e9834b2adced63161e6881713","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":73474,"upload_time":"2020-03-21T15:01:19","upload_time_iso_8601":"2020-03-21T15:01:19.176619Z","url":"https://files.pythonhosted.org/packages/38/00/798cbef08916afa28223245b94de3ca05a8148f68f31d7d621e3e4e8df76/pg8000-1.14.0.tar.gz","yanked":false,"yanked_reason":null}],"1.14.1":[{"comment_text":"","digests":{"blake2b_256":"fad7348051704c65c256feea1c0cd00665e8ed2de0301bb380c1f0b944af7fd7","md5":"9c164eafc6618721707f2fba02792635","sha256":"0665ddb8a3ac64d6cbce827763ef060a310f7f097df5efbc80ee87aa32217fdd"},"downloads":-1,"filename":"pg8000-1.14.1-py3-none-any.whl","has_sig":false,"md5_digest":"9c164eafc6618721707f2fba02792635","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":24169,"upload_time":"2020-03-23T21:33:20","upload_time_iso_8601":"2020-03-23T21:33:20.668280Z","url":"https://files.pythonhosted.org/packages/fa/d7/348051704c65c256feea1c0cd00665e8ed2de0301bb380c1f0b944af7fd7/pg8000-1.14.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"321f2ec40df6abb0983f47a383cbaffd3115ef68481c8a65cd11fe2d4efd0363","md5":"7c9a2b89478f98044f23ced900fb02d9","sha256":"7e87f5ec51eab2bb1f2a75a687b681152d60ec26828c93c244f00d5d085da64a"},"downloads":-1,"filename":"pg8000-1.14.1.tar.gz","has_sig":false,"md5_digest":"7c9a2b89478f98044f23ced900fb02d9","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":73626,"upload_time":"2020-03-23T21:33:22","upload_time_iso_8601":"2020-03-23T21:33:22.587168Z","url":"https://files.pythonhosted.org/packages/32/1f/2ec40df6abb0983f47a383cbaffd3115ef68481c8a65cd11fe2d4efd0363/pg8000-1.14.1.tar.gz","yanked":false,"yanked_reason":null}],"1.15.0":[{"comment_text":"","digests":{"blake2b_256":"303c3858a2a54c14ae913096caf0bf94d279be99e9b12f95f6fae2536f34257b","md5":"5d7a540bc5ca831c2eccb216d7b1ce6c","sha256":"b862eb94b72ce2f14b63b8e47bf7ad767cc595c63a930218a052a73e3b80a183"},"downloads":-1,"filename":"pg8000-1.15.0-py3-none-any.whl","has_sig":false,"md5_digest":"5d7a540bc5ca831c2eccb216d7b1ce6c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":24229,"upload_time":"2020-04-04T14:49:01","upload_time_iso_8601":"2020-04-04T14:49:01.102146Z","url":"https://files.pythonhosted.org/packages/30/3c/3858a2a54c14ae913096caf0bf94d279be99e9b12f95f6fae2536f34257b/pg8000-1.15.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"509d4aef0c244f2feb98ad45eff6f188bb14a5b86f9cf759382269eac7f45406","md5":"200d087fcfa32a6ea66df249f763b47c","sha256":"66d300736abf60f3903cda4c3571d86f1f781d243f676175b022d740fd4b044e"},"downloads":-1,"filename":"pg8000-1.15.0.tar.gz","has_sig":false,"md5_digest":"200d087fcfa32a6ea66df249f763b47c","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":73809,"upload_time":"2020-04-04T14:49:03","upload_time_iso_8601":"2020-04-04T14:49:03.104582Z","url":"https://files.pythonhosted.org/packages/50/9d/4aef0c244f2feb98ad45eff6f188bb14a5b86f9cf759382269eac7f45406/pg8000-1.15.0.tar.gz","yanked":false,"yanked_reason":null}],"1.15.1":[{"comment_text":"","digests":{"blake2b_256":"4eb63f6785b85d12c46f49c20979f5fdf5db661cf620f2ac5d9493e0b5e3ed59","md5":"7627ae010e1994d95ca4943c4fd47d8b","sha256":"1f17917c8e2580581f4f689ed5e6eefef4ba873e7a9550d04afcb07fd43be83d"},"downloads":-1,"filename":"pg8000-1.15.1-py3-none-any.whl","has_sig":false,"md5_digest":"7627ae010e1994d95ca4943c4fd47d8b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":24284,"upload_time":"2020-04-04T15:22:57","upload_time_iso_8601":"2020-04-04T15:22:57.493662Z","url":"https://files.pythonhosted.org/packages/4e/b6/3f6785b85d12c46f49c20979f5fdf5db661cf620f2ac5d9493e0b5e3ed59/pg8000-1.15.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cbb745ddbba5c1c63a3b52ed1628a27dac8e75a37e8aa07566d5d92db157327e","md5":"5dd1abfff8242e3f0bba9f52d27c3d51","sha256":"01033498ffb27e780f6fb9ec877655ad97ceb26a50efdd77ca3b39ab2271f37c"},"downloads":-1,"filename":"pg8000-1.15.1.tar.gz","has_sig":false,"md5_digest":"5dd1abfff8242e3f0bba9f52d27c3d51","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":73968,"upload_time":"2020-04-04T15:22:59","upload_time_iso_8601":"2020-04-04T15:22:59.416877Z","url":"https://files.pythonhosted.org/packages/cb/b7/45ddbba5c1c63a3b52ed1628a27dac8e75a37e8aa07566d5d92db157327e/pg8000-1.15.1.tar.gz","yanked":false,"yanked_reason":null}],"1.15.2":[{"comment_text":"","digests":{"blake2b_256":"75be78e9c0b15d3f3ad9fdbbe03267fd8a9cc0dff5cf66dc835bd399ffce7389","md5":"21c8e22ebe259d3220c388568fc4511c","sha256":"2bfdd03c2623302af655ef089a958ff329b2035c9d9aea406b5e4dac9c007524"},"downloads":-1,"filename":"pg8000-1.15.2-py3-none-any.whl","has_sig":false,"md5_digest":"21c8e22ebe259d3220c388568fc4511c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":24432,"upload_time":"2020-04-16T15:19:47","upload_time_iso_8601":"2020-04-16T15:19:47.573655Z","url":"https://files.pythonhosted.org/packages/75/be/78e9c0b15d3f3ad9fdbbe03267fd8a9cc0dff5cf66dc835bd399ffce7389/pg8000-1.15.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2aa706f40f54bd248b2455b884edfda4760bdd316af7364b0bd402a3c09e713e","md5":"9cbadaa153572298fa44e86e5fdfbeb9","sha256":"eb42ba62fbc048c91d5cf1ac729e0ea4ee329cc526bddafed4e7a8aa6b57fbbb"},"downloads":-1,"filename":"pg8000-1.15.2.tar.gz","has_sig":false,"md5_digest":"9cbadaa153572298fa44e86e5fdfbeb9","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":75312,"upload_time":"2020-04-16T15:19:49","upload_time_iso_8601":"2020-04-16T15:19:49.836191Z","url":"https://files.pythonhosted.org/packages/2a/a7/06f40f54bd248b2455b884edfda4760bdd316af7364b0bd402a3c09e713e/pg8000-1.15.2.tar.gz","yanked":false,"yanked_reason":null}],"1.15.3":[{"comment_text":"","digests":{"blake2b_256":"ce1041b78afd5b95e561771a862ea3523d55916662ffce9288fbee1aba6da3ac","md5":"55503a60174cdb97377d560955995798","sha256":"79d2e761343e582dec6698cf7c06d49c33255cbafba29ff298dd4690fffb7d80"},"downloads":-1,"filename":"pg8000-1.15.3-py3-none-any.whl","has_sig":false,"md5_digest":"55503a60174cdb97377d560955995798","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":24476,"upload_time":"2020-06-14T12:21:27","upload_time_iso_8601":"2020-06-14T12:21:27.170303Z","url":"https://files.pythonhosted.org/packages/ce/10/41b78afd5b95e561771a862ea3523d55916662ffce9288fbee1aba6da3ac/pg8000-1.15.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"cee21fded41f5c6b39059633b7657055ba51336ade897b6d3597048e15683f44","md5":"efeb7532db2e42cd319d0c68b15b97b2","sha256":"af97353076b8e5d271d91c64c8ca806e2157d11b7862c90ff6f0e23be0fc217d"},"downloads":-1,"filename":"pg8000-1.15.3.tar.gz","has_sig":false,"md5_digest":"efeb7532db2e42cd319d0c68b15b97b2","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":76144,"upload_time":"2020-06-14T12:21:29","upload_time_iso_8601":"2020-06-14T12:21:29.274622Z","url":"https://files.pythonhosted.org/packages/ce/e2/1fded41f5c6b39059633b7657055ba51336ade897b6d3597048e15683f44/pg8000-1.15.3.tar.gz","yanked":false,"yanked_reason":null}],"1.16.0":[{"comment_text":"","digests":{"blake2b_256":"b6c6955167f341fe3ab747ac517dcae65735f03f3a038854cbea373f3dd2741e","md5":"c96dae3147e13cb95beccea30403287e","sha256":"08e6873ff2da0c4afeefccec8e9cd2c6c43987a1a6a03b9ff3e084e8cc182a24"},"downloads":-1,"filename":"pg8000-1.16.0-py3-none-any.whl","has_sig":false,"md5_digest":"c96dae3147e13cb95beccea30403287e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":24716,"upload_time":"2020-07-11T11:26:05","upload_time_iso_8601":"2020-07-11T11:26:05.396718Z","url":"https://files.pythonhosted.org/packages/b6/c6/955167f341fe3ab747ac517dcae65735f03f3a038854cbea373f3dd2741e/pg8000-1.16.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f937456b51ecde0cf36f8b8004f9d1cd02778bccc46bcffccdf714c9545337f4","md5":"02717024dd6b44385aecae564c81b426","sha256":"a80dd7267ed438e6ae9500d7034244c459a06f89d0d37bc37026a868e36e0979"},"downloads":-1,"filename":"pg8000-1.16.0.tar.gz","has_sig":false,"md5_digest":"02717024dd6b44385aecae564c81b426","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":75687,"upload_time":"2020-07-11T11:26:07","upload_time_iso_8601":"2020-07-11T11:26:07.589292Z","url":"https://files.pythonhosted.org/packages/f9/37/456b51ecde0cf36f8b8004f9d1cd02778bccc46bcffccdf714c9545337f4/pg8000-1.16.0.tar.gz","yanked":false,"yanked_reason":null}],"1.16.1":[{"comment_text":"","digests":{"blake2b_256":"86700479919245106f41d952a0a147e58ac4fa27c5054c83339bc49976a76f2a","md5":"5773972ceae286b38d23329449dc395b","sha256":"273f85aa236b2c188846b5bd1bc7dc094f3f192339d04dd15459b39d5ef8e5d2"},"downloads":-1,"filename":"pg8000-1.16.1-py3-none-any.whl","has_sig":false,"md5_digest":"5773972ceae286b38d23329449dc395b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":24612,"upload_time":"2020-07-18T11:03:39","upload_time_iso_8601":"2020-07-18T11:03:39.565760Z","url":"https://files.pythonhosted.org/packages/86/70/0479919245106f41d952a0a147e58ac4fa27c5054c83339bc49976a76f2a/pg8000-1.16.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"284f195f8af04e20aee6d64141d8a93996e39540518244fc092ec0430981c8df","md5":"6ebf2228c427a1a29802cdd6f35d4f93","sha256":"4e08104b170127d5139c4249d4c5aece0fc15d05315886398f59f845b5eee75c"},"downloads":-1,"filename":"pg8000-1.16.1.tar.gz","has_sig":false,"md5_digest":"6ebf2228c427a1a29802cdd6f35d4f93","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":77346,"upload_time":"2020-07-18T11:03:41","upload_time_iso_8601":"2020-07-18T11:03:41.657696Z","url":"https://files.pythonhosted.org/packages/28/4f/195f8af04e20aee6d64141d8a93996e39540518244fc092ec0430981c8df/pg8000-1.16.1.tar.gz","yanked":false,"yanked_reason":null}],"1.16.2":[{"comment_text":"","digests":{"blake2b_256":"bb24764405b391829de5448030a93f3f5c976049a55bf3f57174ea782b1fda9c","md5":"c1d078916c3bd048185e2b5ada8d423a","sha256":"62619a963a0baffd9228d5003e2029dde1d7ef3c60a715bd48f4ff41e5bfee75"},"downloads":-1,"filename":"pg8000-1.16.2-py3-none-any.whl","has_sig":false,"md5_digest":"c1d078916c3bd048185e2b5ada8d423a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":24741,"upload_time":"2020-07-25T10:48:16","upload_time_iso_8601":"2020-07-25T10:48:16.130015Z","url":"https://files.pythonhosted.org/packages/bb/24/764405b391829de5448030a93f3f5c976049a55bf3f57174ea782b1fda9c/pg8000-1.16.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"999331f5a0f379fa4940ccb2dc99787803370c57184cf504491b2868229a2bd4","md5":"67d190fe97b8d47c3075d19238c37896","sha256":"bf67b832f84b15fa55dbf75338a67a78a66d7933566fac9a8b163e51e5d868df"},"downloads":-1,"filename":"pg8000-1.16.2.tar.gz","has_sig":false,"md5_digest":"67d190fe97b8d47c3075d19238c37896","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":77950,"upload_time":"2020-07-25T10:48:18","upload_time_iso_8601":"2020-07-25T10:48:18.254786Z","url":"https://files.pythonhosted.org/packages/99/93/31f5a0f379fa4940ccb2dc99787803370c57184cf504491b2868229a2bd4/pg8000-1.16.2.tar.gz","yanked":false,"yanked_reason":null}],"1.16.3":[{"comment_text":"","digests":{"blake2b_256":"c88745a03c9b58574b03848222c7262a8432074afbc2a62d2da7c38f153d8367","md5":"a2e456ae4c660dd55c6353d86868b9df","sha256":"cac9e40c4c978034f09dfc3bc7e8bd3df40215c9207affe1991a0310a14bc71b"},"downloads":-1,"filename":"pg8000-1.16.3-py3-none-any.whl","has_sig":false,"md5_digest":"a2e456ae4c660dd55c6353d86868b9df","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":24739,"upload_time":"2020-07-26T09:30:06","upload_time_iso_8601":"2020-07-26T09:30:06.724457Z","url":"https://files.pythonhosted.org/packages/c8/87/45a03c9b58574b03848222c7262a8432074afbc2a62d2da7c38f153d8367/pg8000-1.16.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9f6073e10ae1e9192ab93aa8b961f9ea028b6bf56fd78b0d5aeb255ab2c17842","md5":"ad25969d40c5b3937aed53fd2b62b143","sha256":"91b1584f25c84c2d0fe408bd44466cc16e1db9b9e95f454ff7c334edf3fe650c"},"downloads":-1,"filename":"pg8000-1.16.3.tar.gz","has_sig":false,"md5_digest":"ad25969d40c5b3937aed53fd2b62b143","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":78752,"upload_time":"2020-07-26T09:30:08","upload_time_iso_8601":"2020-07-26T09:30:08.933427Z","url":"https://files.pythonhosted.org/packages/9f/60/73e10ae1e9192ab93aa8b961f9ea028b6bf56fd78b0d5aeb255ab2c17842/pg8000-1.16.3.tar.gz","yanked":false,"yanked_reason":null}],"1.16.4":[{"comment_text":"","digests":{"blake2b_256":"31f0b10293a1d5ba40d0c63d55cc1fa2354fe5766e051031e63b11a451afd71c","md5":"52c23069da3ed1df6610440cde920262","sha256":"d5280ca081cbdde32bb9029d07ad9f0afdfbe7105487db6b9e6a7b681f63974f"},"downloads":-1,"filename":"pg8000-1.16.4-py3-none-any.whl","has_sig":false,"md5_digest":"52c23069da3ed1df6610440cde920262","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":25099,"upload_time":"2020-08-03T20:55:55","upload_time_iso_8601":"2020-08-03T20:55:55.929265Z","url":"https://files.pythonhosted.org/packages/31/f0/b10293a1d5ba40d0c63d55cc1fa2354fe5766e051031e63b11a451afd71c/pg8000-1.16.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"53277553972817014a70be015c03ebfbe09fd277f5788330bdb055696daf3e1b","md5":"920e47dcb4c66f04d301e688932917e7","sha256":"c0433e737e0ba38d31cb4b9e410649de49110f20cb4858082718026749bef7d0"},"downloads":-1,"filename":"pg8000-1.16.4.tar.gz","has_sig":false,"md5_digest":"920e47dcb4c66f04d301e688932917e7","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":79474,"upload_time":"2020-08-03T20:55:58","upload_time_iso_8601":"2020-08-03T20:55:58.252251Z","url":"https://files.pythonhosted.org/packages/53/27/7553972817014a70be015c03ebfbe09fd277f5788330bdb055696daf3e1b/pg8000-1.16.4.tar.gz","yanked":false,"yanked_reason":null}],"1.16.5":[{"comment_text":"","digests":{"blake2b_256":"585b325caa65327093d9c7696d2ab58997e511472cc15d37d5b70af6b431d9f2","md5":"714b654a08c20f6be3520de3d8f33044","sha256":"3d646b11227d94a3130a765a981dc6323bc959a3cd6ed54421d174b2ef256087"},"downloads":-1,"filename":"pg8000-1.16.5-py3-none-any.whl","has_sig":false,"md5_digest":"714b654a08c20f6be3520de3d8f33044","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":24380,"upload_time":"2020-08-07T19:35:05","upload_time_iso_8601":"2020-08-07T19:35:05.762921Z","url":"https://files.pythonhosted.org/packages/58/5b/325caa65327093d9c7696d2ab58997e511472cc15d37d5b70af6b431d9f2/pg8000-1.16.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"acfbb129b8a5f71d55305f9abd5cf42aebc12925668745f943e22e9f1471e8e1","md5":"41a4d53561513d15fb2bfd64b37fdfc1","sha256":"8af70cdfcc1fadafa32468a6af563e1c0b5271c4dcc99a4490030a128cb295a3"},"downloads":-1,"filename":"pg8000-1.16.5.tar.gz","has_sig":false,"md5_digest":"41a4d53561513d15fb2bfd64b37fdfc1","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":78932,"upload_time":"2020-08-07T19:35:07","upload_time_iso_8601":"2020-08-07T19:35:07.810784Z","url":"https://files.pythonhosted.org/packages/ac/fb/b129b8a5f71d55305f9abd5cf42aebc12925668745f943e22e9f1471e8e1/pg8000-1.16.5.tar.gz","yanked":false,"yanked_reason":null}],"1.16.6":[{"comment_text":"","digests":{"blake2b_256":"477b0770c960a1e5407abd9cccbc51b21503ae05887718030b1b21e25c2b5e8a","md5":"15720247846a2b45700e38596db073d9","sha256":"66fa16a402f38f8ba664206b4ba4040f24ea9641c4205b2b96a1ff3a613de3be"},"downloads":-1,"filename":"pg8000-1.16.6-py3-none-any.whl","has_sig":false,"md5_digest":"15720247846a2b45700e38596db073d9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":24161,"upload_time":"2020-10-10T17:15:52","upload_time_iso_8601":"2020-10-10T17:15:52.842681Z","url":"https://files.pythonhosted.org/packages/47/7b/0770c960a1e5407abd9cccbc51b21503ae05887718030b1b21e25c2b5e8a/pg8000-1.16.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"241b584dda6665ce38535c8892b42d458c24e517d139a5baa172bf43bf4c4dfb","md5":"5018f102ac793c255b9076679c0bf0d9","sha256":"8fc1e6a62ccb7c9830f1e7e9288e2d20eaf373cc8875b5c55b7d5d9b7717be91"},"downloads":-1,"filename":"pg8000-1.16.6.tar.gz","has_sig":false,"md5_digest":"5018f102ac793c255b9076679c0bf0d9","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":79009,"upload_time":"2020-10-10T17:15:55","upload_time_iso_8601":"2020-10-10T17:15:55.778783Z","url":"https://files.pythonhosted.org/packages/24/1b/584dda6665ce38535c8892b42d458c24e517d139a5baa172bf43bf4c4dfb/pg8000-1.16.6.tar.gz","yanked":false,"yanked_reason":null}],"1.17.0":[{"comment_text":"","digests":{"blake2b_256":"edd92a20d2f41d59b7b814f7cb30e8df9bbd288b000ad8a04dbc97d8c92df6df","md5":"97829382d8ed36bf36858fc8d7a20260","sha256":"3276fe9cf38fee4fd4006c64d50fa621841b550f0f068d88b4694ee423188a5f"},"downloads":-1,"filename":"pg8000-1.17.0-py3-none-any.whl","has_sig":false,"md5_digest":"97829382d8ed36bf36858fc8d7a20260","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":34350,"upload_time":"2021-01-30T18:00:14","upload_time_iso_8601":"2021-01-30T18:00:14.427913Z","url":"https://files.pythonhosted.org/packages/ed/d9/2a20d2f41d59b7b814f7cb30e8df9bbd288b000ad8a04dbc97d8c92df6df/pg8000-1.17.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"53583dc8e05a00d736a6749fdcba2c9fa4e85a9699a11b7408294f14993ef7ce","md5":"02a524c072a7d5609b4cd1997ce004ef","sha256":"14198c5afeb289106e40ee6e5e4c0529c5369939f6ca588a028b371a75fe20dd"},"downloads":-1,"filename":"pg8000-1.17.0.tar.gz","has_sig":false,"md5_digest":"02a524c072a7d5609b4cd1997ce004ef","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":112322,"upload_time":"2021-01-30T18:00:17","upload_time_iso_8601":"2021-01-30T18:00:17.041372Z","url":"https://files.pythonhosted.org/packages/53/58/3dc8e05a00d736a6749fdcba2c9fa4e85a9699a11b7408294f14993ef7ce/pg8000-1.17.0.tar.gz","yanked":false,"yanked_reason":null}],"1.18.0":[{"comment_text":"","digests":{"blake2b_256":"24de7de0029f7f87cffbddc14f6473f390a554b8c11cecfd4e20bb12b08d29cd","md5":"2382d42d37ad2f22a6c98ba18673fd6c","sha256":"240a5e7c3118ea07179a02ff8daeacf93d68ab9546ea140ca9d77970c4c5fc9d"},"downloads":-1,"filename":"pg8000-1.18.0-py3-none-any.whl","has_sig":false,"md5_digest":"2382d42d37ad2f22a6c98ba18673fd6c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":34455,"upload_time":"2021-03-06T10:30:30","upload_time_iso_8601":"2021-03-06T10:30:30.160729Z","url":"https://files.pythonhosted.org/packages/24/de/7de0029f7f87cffbddc14f6473f390a554b8c11cecfd4e20bb12b08d29cd/pg8000-1.18.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"61f0f411fcbe18cad5ad329a562cd45e88219ab2c23b898a32b9cd492c407b6c","md5":"c338518efc964cc513bf7a1b52228f5e","sha256":"35baf2c8bf5445e85f516449474b547dbbd0e08c0baa3a6b20aa355a92eb72da"},"downloads":-1,"filename":"pg8000-1.18.0.tar.gz","has_sig":false,"md5_digest":"c338518efc964cc513bf7a1b52228f5e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":114443,"upload_time":"2021-03-06T10:30:32","upload_time_iso_8601":"2021-03-06T10:30:32.735504Z","url":"https://files.pythonhosted.org/packages/61/f0/f411fcbe18cad5ad329a562cd45e88219ab2c23b898a32b9cd492c407b6c/pg8000-1.18.0.tar.gz","yanked":false,"yanked_reason":null}],"1.19.0":[{"comment_text":"","digests":{"blake2b_256":"e71a424f2f407cd188ad4404ce6535d41ab426bc0e84f26dc12b008a21574ae3","md5":"79ff066d7e25a52900360ef5659cc917","sha256":"046095e79f7b8414acd6f38f1b069f1d9c93ab058c7b77a9f0df6c7d586cb5fc"},"downloads":-1,"filename":"pg8000-1.19.0-py3-none-any.whl","has_sig":false,"md5_digest":"79ff066d7e25a52900360ef5659cc917","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":34557,"upload_time":"2021-03-28T16:18:07","upload_time_iso_8601":"2021-03-28T16:18:07.664037Z","url":"https://files.pythonhosted.org/packages/e7/1a/424f2f407cd188ad4404ce6535d41ab426bc0e84f26dc12b008a21574ae3/pg8000-1.19.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"20f55aea6c42e490f489d51766ea6576aa087ae7275919dabbf3f3ce270640e0","md5":"0a3d1470fb2c26cfc841b9e88f3df16e","sha256":"11ec70c0b20ea440807e2c869940f1484eea93d71b435807b63856dd82b744dd"},"downloads":-1,"filename":"pg8000-1.19.0.tar.gz","has_sig":false,"md5_digest":"0a3d1470fb2c26cfc841b9e88f3df16e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":114987,"upload_time":"2021-03-28T16:18:10","upload_time_iso_8601":"2021-03-28T16:18:10.075643Z","url":"https://files.pythonhosted.org/packages/20/f5/5aea6c42e490f489d51766ea6576aa087ae7275919dabbf3f3ce270640e0/pg8000-1.19.0.tar.gz","yanked":false,"yanked_reason":null}],"1.19.1":[{"comment_text":"","digests":{"blake2b_256":"f7fd3da0bc5137cd00119639e2f4b76b68e9084874ab688e0d799a437f272fcf","md5":"d3eba0132ed6af265bc5107d9ab1e4d8","sha256":"35c1f3db6e5540456aa38da5f42589274e7266c25365d2829dc8d52513520abe"},"downloads":-1,"filename":"pg8000-1.19.1-py3-none-any.whl","has_sig":false,"md5_digest":"d3eba0132ed6af265bc5107d9ab1e4d8","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":35028,"upload_time":"2021-04-03T10:11:23","upload_time_iso_8601":"2021-04-03T10:11:23.273821Z","url":"https://files.pythonhosted.org/packages/f7/fd/3da0bc5137cd00119639e2f4b76b68e9084874ab688e0d799a437f272fcf/pg8000-1.19.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0ffda4f18dfe4ed5e63bdde1141ad112064db554f2e67aeeb642a8220f8951c7","md5":"f701c8aecc013994706b031b17ae3d67","sha256":"cb7ace8c582b7000a5ee428efa8ff6c82a7d710cc0f7d2d76258703a2aa7afe3"},"downloads":-1,"filename":"pg8000-1.19.1.tar.gz","has_sig":false,"md5_digest":"f701c8aecc013994706b031b17ae3d67","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":125316,"upload_time":"2021-04-03T10:11:25","upload_time_iso_8601":"2021-04-03T10:11:25.718791Z","url":"https://files.pythonhosted.org/packages/0f/fd/a4f18dfe4ed5e63bdde1141ad112064db554f2e67aeeb642a8220f8951c7/pg8000-1.19.1.tar.gz","yanked":false,"yanked_reason":null}],"1.19.2":[{"comment_text":"","digests":{"blake2b_256":"c2d9648c3543679ad1cd66802c9ef630e0218ea5cbb5e50ca7fc0eaeb66f8658","md5":"4c48038444dc741bfe20724f092d6526","sha256":"53924c8d7566cc66aaf4aecb3d8128703ef4054a510602290d62e607398e8d72"},"downloads":-1,"filename":"pg8000-1.19.2-py3-none-any.whl","has_sig":false,"md5_digest":"4c48038444dc741bfe20724f092d6526","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":34768,"upload_time":"2021-04-07T17:31:01","upload_time_iso_8601":"2021-04-07T17:31:01.586736Z","url":"https://files.pythonhosted.org/packages/c2/d9/648c3543679ad1cd66802c9ef630e0218ea5cbb5e50ca7fc0eaeb66f8658/pg8000-1.19.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"63d5a36955805db40905ac0797aa1e5d849f356bf008ed64a38e8186d0012f3b","md5":"7bd7d935818d7f52baea56deb29cc428","sha256":"44cbb4d3c912f2da167ca02bf98a0040f7e93260e4ef114c28d5d6152012ea07"},"downloads":-1,"filename":"pg8000-1.19.2.tar.gz","has_sig":false,"md5_digest":"7bd7d935818d7f52baea56deb29cc428","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":124808,"upload_time":"2021-04-07T17:31:04","upload_time_iso_8601":"2021-04-07T17:31:04.135503Z","url":"https://files.pythonhosted.org/packages/63/d5/a36955805db40905ac0797aa1e5d849f356bf008ed64a38e8186d0012f3b/pg8000-1.19.2.tar.gz","yanked":false,"yanked_reason":null}],"1.19.3":[{"comment_text":"","digests":{"blake2b_256":"d29ccac4dc827cd1d9d8f7e8f3a99e551d0845062228f7ffd90d6480fb523f79","md5":"030e383eee55783ae3184fa948aad86e","sha256":"2f9599f455f813e9298982a741f40b62b7bdcf6816e51031d4adc2deda6525e1"},"downloads":-1,"filename":"pg8000-1.19.3-py3-none-any.whl","has_sig":false,"md5_digest":"030e383eee55783ae3184fa948aad86e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":35485,"upload_time":"2021-04-24T08:45:51","upload_time_iso_8601":"2021-04-24T08:45:51.837479Z","url":"https://files.pythonhosted.org/packages/d2/9c/cac4dc827cd1d9d8f7e8f3a99e551d0845062228f7ffd90d6480fb523f79/pg8000-1.19.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5103092a7968a6c1002cd9fd211f4cc6ee89b132e6b5c99d0adf2f7cdaee9c98","md5":"547d362c3c2e41bba2df10643d1dd91c","sha256":"f547572d12de77b65888e4e72922e8ad55b88791c486df93f3d71207aea7f25f"},"downloads":-1,"filename":"pg8000-1.19.3.tar.gz","has_sig":false,"md5_digest":"547d362c3c2e41bba2df10643d1dd91c","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":120382,"upload_time":"2021-04-24T08:45:54","upload_time_iso_8601":"2021-04-24T08:45:54.478457Z","url":"https://files.pythonhosted.org/packages/51/03/092a7968a6c1002cd9fd211f4cc6ee89b132e6b5c99d0adf2f7cdaee9c98/pg8000-1.19.3.tar.gz","yanked":false,"yanked_reason":null}],"1.19.4":[{"comment_text":"","digests":{"blake2b_256":"f7514d93196384efa076d3c587cf1027a41339f670d00d87b1dc28bb6fab2bf8","md5":"f4c42598493fdf5f788b68cb8588dc32","sha256":"510db12be8ad85488289bd0b97bc340202cf6749da08cf8588032a047fb5d0ba"},"downloads":-1,"filename":"pg8000-1.19.4-py3-none-any.whl","has_sig":false,"md5_digest":"f4c42598493fdf5f788b68cb8588dc32","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":35440,"upload_time":"2021-05-03T21:27:23","upload_time_iso_8601":"2021-05-03T21:27:23.918897Z","url":"https://files.pythonhosted.org/packages/f7/51/4d93196384efa076d3c587cf1027a41339f670d00d87b1dc28bb6fab2bf8/pg8000-1.19.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"43329d072d7e0958330849919d55d46d74dd7026bb5483d8460671bd2c0926ca","md5":"968f765a87d4dce3399a6649d0bd9a22","sha256":"7c9c6d57541b0f2153e23a8d759ceb3d7cb9308918fba6ad9e92f8e0e5a90bc8"},"downloads":-1,"filename":"pg8000-1.19.4.tar.gz","has_sig":false,"md5_digest":"968f765a87d4dce3399a6649d0bd9a22","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":120764,"upload_time":"2021-05-03T21:27:26","upload_time_iso_8601":"2021-05-03T21:27:26.554782Z","url":"https://files.pythonhosted.org/packages/43/32/9d072d7e0958330849919d55d46d74dd7026bb5483d8460671bd2c0926ca/pg8000-1.19.4.tar.gz","yanked":false,"yanked_reason":null}],"1.19.5":[{"comment_text":"","digests":{"blake2b_256":"ff74613febc374ec394226b89fb02e947b4aa47e42debf8c96d247bd89ce5178","md5":"c82ad977e96ea7172dfc6f078bdda47f","sha256":"f750fc6c7acab10a399d27fed2732b0f380f0012eeb054ba1637519c190255b3"},"downloads":-1,"filename":"pg8000-1.19.5-py3-none-any.whl","has_sig":false,"md5_digest":"c82ad977e96ea7172dfc6f078bdda47f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":34378,"upload_time":"2021-05-18T19:41:18","upload_time_iso_8601":"2021-05-18T19:41:18.230798Z","url":"https://files.pythonhosted.org/packages/ff/74/613febc374ec394226b89fb02e947b4aa47e42debf8c96d247bd89ce5178/pg8000-1.19.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8de1f09e5c7fdfa8ab3be756a061fcaaf5fbdea1bd19e0d92dd3b140c478660a","md5":"bf701f4e98f00ff5b00e570e6fbb40c5","sha256":"dcb9afb9cb87acc79388ae633c45cf7f806aabe3bb5d8cf154572b699393f937"},"downloads":-1,"filename":"pg8000-1.19.5.tar.gz","has_sig":false,"md5_digest":"bf701f4e98f00ff5b00e570e6fbb40c5","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":120992,"upload_time":"2021-05-18T19:41:21","upload_time_iso_8601":"2021-05-18T19:41:21.166782Z","url":"https://files.pythonhosted.org/packages/8d/e1/f09e5c7fdfa8ab3be756a061fcaaf5fbdea1bd19e0d92dd3b140c478660a/pg8000-1.19.5.tar.gz","yanked":false,"yanked_reason":null}],"1.20.0":[{"comment_text":"","digests":{"blake2b_256":"a3d97acc389aaac578184334b7d1499dc635cf52c850e1aa7f1c1f1bfa1d946f","md5":"3c903641fff13b0d8a6abeb820810aec","sha256":"f984e8e309876202b3fa4b170467eb716574ebd571330d9d65eb13446876cf04"},"downloads":-1,"filename":"pg8000-1.20.0-py3-none-any.whl","has_sig":false,"md5_digest":"3c903641fff13b0d8a6abeb820810aec","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":34533,"upload_time":"2021-07-03T19:01:15","upload_time_iso_8601":"2021-07-03T19:01:15.118280Z","url":"https://files.pythonhosted.org/packages/a3/d9/7acc389aaac578184334b7d1499dc635cf52c850e1aa7f1c1f1bfa1d946f/pg8000-1.20.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"37343f1399a1e1dc37e3175d79bd16adf6bc7e74d7368c71481165f8a063db0b","md5":"53f296502ef140ab88af469bf69220e5","sha256":"490ec22a92601f0454b3ed4c8d4ecddc30f66c0e3f783f0ecc581037749a8c55"},"downloads":-1,"filename":"pg8000-1.20.0.tar.gz","has_sig":false,"md5_digest":"53f296502ef140ab88af469bf69220e5","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":120232,"upload_time":"2021-07-03T19:01:18","upload_time_iso_8601":"2021-07-03T19:01:18.155031Z","url":"https://files.pythonhosted.org/packages/37/34/3f1399a1e1dc37e3175d79bd16adf6bc7e74d7368c71481165f8a063db0b/pg8000-1.20.0.tar.gz","yanked":false,"yanked_reason":null}],"1.21.0":[{"comment_text":"","digests":{"blake2b_256":"a0fdffc096324ef6cce9e86e935169fd6bba51227e14e0a3fa34a89c5f8ca447","md5":"06b82d55c186fba54f47fe172e138f42","sha256":"02cb4ae1495ff2db4be89cefc72ae131d34af98264fdd6c29106731b33e10356"},"downloads":-1,"filename":"pg8000-1.21.0-py3-none-any.whl","has_sig":false,"md5_digest":"06b82d55c186fba54f47fe172e138f42","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":34466,"upload_time":"2021-07-31T09:03:11","upload_time_iso_8601":"2021-07-31T09:03:11.361071Z","url":"https://files.pythonhosted.org/packages/a0/fd/ffc096324ef6cce9e86e935169fd6bba51227e14e0a3fa34a89c5f8ca447/pg8000-1.21.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5a9d6efaa60cbbcaf0ddd7f3ea139e098550b0ce7ae0f91f60f02bd59b8f63fb","md5":"da83e00029a48ab0a514f24d58e8aa95","sha256":"c99108c630b1c468668a8def38be4c91b2fb7cf0154ce7918e7a3912e60652d7"},"downloads":-1,"filename":"pg8000-1.21.0.tar.gz","has_sig":false,"md5_digest":"da83e00029a48ab0a514f24d58e8aa95","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":118598,"upload_time":"2021-07-31T09:03:14","upload_time_iso_8601":"2021-07-31T09:03:14.490168Z","url":"https://files.pythonhosted.org/packages/5a/9d/6efaa60cbbcaf0ddd7f3ea139e098550b0ce7ae0f91f60f02bd59b8f63fb/pg8000-1.21.0.tar.gz","yanked":false,"yanked_reason":null}],"1.21.1":[{"comment_text":"","digests":{"blake2b_256":"347e2892a68f43de828b49dd0c3a8edd9fd056c665dd346fc76b5d5f8c474745","md5":"635dfbc2bccd0695189f6ab6934f8f21","sha256":"145563817ad50e062f42872b5e58a8830c52a7d8a1406205b67ab6c35b3a1e31"},"downloads":-1,"filename":"pg8000-1.21.1-py3-none-any.whl","has_sig":false,"md5_digest":"635dfbc2bccd0695189f6ab6934f8f21","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":34461,"upload_time":"2021-08-25T19:15:58","upload_time_iso_8601":"2021-08-25T19:15:58.894955Z","url":"https://files.pythonhosted.org/packages/34/7e/2892a68f43de828b49dd0c3a8edd9fd056c665dd346fc76b5d5f8c474745/pg8000-1.21.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3310c3956cf016ca685d0f6db2439c4486d16a348624b3b0c794542cecb25bd7","md5":"856407a7012ae3652da5595682ca91c4","sha256":"1ccbeec93b70e2e8532df3abddc6905c7821909c96dceaaef751b57c5291869a"},"downloads":-1,"filename":"pg8000-1.21.1.tar.gz","has_sig":false,"md5_digest":"856407a7012ae3652da5595682ca91c4","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":118677,"upload_time":"2021-08-25T19:16:02","upload_time_iso_8601":"2021-08-25T19:16:02.296106Z","url":"https://files.pythonhosted.org/packages/33/10/c3956cf016ca685d0f6db2439c4486d16a348624b3b0c794542cecb25bd7/pg8000-1.21.1.tar.gz","yanked":false,"yanked_reason":null}],"1.21.2":[{"comment_text":"","digests":{"blake2b_256":"9f8523bfae6681e80b0190eb4b56ff22329f2bcc55f806acdeae416696adedc9","md5":"9d2b8923ae3e0ee05a53e9784bca035d","sha256":"e5cffa2a561c5196a69118cdb6e94b6915bf6cc069790a902652a8f52799f586"},"downloads":-1,"filename":"pg8000-1.21.2-py3-none-any.whl","has_sig":false,"md5_digest":"9d2b8923ae3e0ee05a53e9784bca035d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":34517,"upload_time":"2021-09-14T19:46:02","upload_time_iso_8601":"2021-09-14T19:46:02.736477Z","url":"https://files.pythonhosted.org/packages/9f/85/23bfae6681e80b0190eb4b56ff22329f2bcc55f806acdeae416696adedc9/pg8000-1.21.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9b7c3f8a9f14cf76b4e8fb58e4936961bfef948c171b9fffd1bc572b9c64ee28","md5":"ce7ad63a1790e863faf15b4f7b5ef4fa","sha256":"36a3b517408334967c1fa0d29656da03608d63122a372ec92c85f49aed2d24e3"},"downloads":-1,"filename":"pg8000-1.21.2.tar.gz","has_sig":false,"md5_digest":"ce7ad63a1790e863faf15b4f7b5ef4fa","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":118673,"upload_time":"2021-09-14T19:46:05","upload_time_iso_8601":"2021-09-14T19:46:05.664957Z","url":"https://files.pythonhosted.org/packages/9b/7c/3f8a9f14cf76b4e8fb58e4936961bfef948c171b9fffd1bc572b9c64ee28/pg8000-1.21.2.tar.gz","yanked":false,"yanked_reason":null}],"1.21.3":[{"comment_text":"","digests":{"blake2b_256":"6ba2e393d9c933e6312854386008e6d93435df978e20b7d672bb78c4b72bf649","md5":"6a61932c74079b022c5e7235e221c31d","sha256":"d001ccaee61c4edf9788bb7837589addd218e5b4d27b075a3ec1315a3934edc0"},"downloads":-1,"filename":"pg8000-1.21.3-py3-none-any.whl","has_sig":false,"md5_digest":"6a61932c74079b022c5e7235e221c31d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":34528,"upload_time":"2021-10-10T11:29:18","upload_time_iso_8601":"2021-10-10T11:29:18.344641Z","url":"https://files.pythonhosted.org/packages/6b/a2/e393d9c933e6312854386008e6d93435df978e20b7d672bb78c4b72bf649/pg8000-1.21.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1192af927c502734e7cd8a6d559412ca4b55b34042aa344cd431168709f7365f","md5":"e58e0efdc67fa7dd6c30886a9f5628e0","sha256":"f73f1d477cda12a7b784be73c8a0c06c71e4284ef90cae4883cbc7c524b95fbf"},"downloads":-1,"filename":"pg8000-1.21.3.tar.gz","has_sig":false,"md5_digest":"e58e0efdc67fa7dd6c30886a9f5628e0","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":118825,"upload_time":"2021-10-10T11:29:21","upload_time_iso_8601":"2021-10-10T11:29:21.211899Z","url":"https://files.pythonhosted.org/packages/11/92/af927c502734e7cd8a6d559412ca4b55b34042aa344cd431168709f7365f/pg8000-1.21.3.tar.gz","yanked":false,"yanked_reason":null}],"1.22.0":[{"comment_text":"","digests":{"blake2b_256":"0db90f8e90f4d3785c517b15e1643d58fd484e2b594559d1af37e19217a74817","md5":"e35ab4e5efd145cf73341c406cdddaa1","sha256":"a0e82542f4a56b2139c41ff09c1aeff294c10b6500bb6c57890c0c1c551cbc03"},"downloads":-1,"filename":"pg8000-1.22.0-py3-none-any.whl","has_sig":false,"md5_digest":"e35ab4e5efd145cf73341c406cdddaa1","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":33230,"upload_time":"2021-10-13T18:32:32","upload_time_iso_8601":"2021-10-13T18:32:32.788101Z","url":"https://files.pythonhosted.org/packages/0d/b9/0f8e90f4d3785c517b15e1643d58fd484e2b594559d1af37e19217a74817/pg8000-1.22.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3ff2fc44c68d870fb9b97f09144affed5d11e291f59e47b3763a9e2825a53041","md5":"b91a4663842ece1c738de666e99264ee","sha256":"c5172252fc92142ec104cd5e7231be4580a1a0a814403707bafbf7bb8383a29a"},"downloads":-1,"filename":"pg8000-1.22.0.tar.gz","has_sig":false,"md5_digest":"b91a4663842ece1c738de666e99264ee","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":116910,"upload_time":"2021-10-13T18:32:37","upload_time_iso_8601":"2021-10-13T18:32:37.621824Z","url":"https://files.pythonhosted.org/packages/3f/f2/fc44c68d870fb9b97f09144affed5d11e291f59e47b3763a9e2825a53041/pg8000-1.22.0.tar.gz","yanked":false,"yanked_reason":null}],"1.22.1":[{"comment_text":"","digests":{"blake2b_256":"f27890a2fcf994ddf37cabb92c148e5bc919353d76407cc673ef799d49995e4a","md5":"5fb95dded1198c9e4a9d077ac9414651","sha256":"fa95b112ba940e227b6de81bda1a16a653d4fdafa7d92baf5116236210417989"},"downloads":-1,"filename":"pg8000-1.22.1-py3-none-any.whl","has_sig":false,"md5_digest":"5fb95dded1198c9e4a9d077ac9414651","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":33072,"upload_time":"2021-11-10T19:10:46","upload_time_iso_8601":"2021-11-10T19:10:46.150938Z","url":"https://files.pythonhosted.org/packages/f2/78/90a2fcf994ddf37cabb92c148e5bc919353d76407cc673ef799d49995e4a/pg8000-1.22.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0d33b24328183bc199840f45d1282418146bb0f290e5032fd89237e75137b948","md5":"12b540e999c8a016078241b06605a094","sha256":"fd69ad5af2781e59608cb3f4d966b234d961c62f093edd3194ac45df65b8d1d4"},"downloads":-1,"filename":"pg8000-1.22.1.tar.gz","has_sig":false,"md5_digest":"12b540e999c8a016078241b06605a094","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":116881,"upload_time":"2021-11-10T19:10:50","upload_time_iso_8601":"2021-11-10T19:10:50.494172Z","url":"https://files.pythonhosted.org/packages/0d/33/b24328183bc199840f45d1282418146bb0f290e5032fd89237e75137b948/pg8000-1.22.1.tar.gz","yanked":false,"yanked_reason":null}],"1.23.0":[{"comment_text":"","digests":{"blake2b_256":"9f2a28b02e3e7f7489258cf29d08ba374e6e435c152cead2e599b5c488dfbc28","md5":"265b5d064f2b6ad234a6a49a18d37f65","sha256":"e339f09f676629c0806c8dcc6fdc89ca6dba817e20702448c5172e85d133419d"},"downloads":-1,"filename":"pg8000-1.23.0-py3-none-any.whl","has_sig":false,"md5_digest":"265b5d064f2b6ad234a6a49a18d37f65","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":33144,"upload_time":"2021-11-13T10:21:23","upload_time_iso_8601":"2021-11-13T10:21:23.269242Z","url":"https://files.pythonhosted.org/packages/9f/2a/28b02e3e7f7489258cf29d08ba374e6e435c152cead2e599b5c488dfbc28/pg8000-1.23.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"380ebeb764ba2b1ee47def8c6cf73c0e1b3e14818e0d1f4b347d275145c7c66b","md5":"74e5b912323e53892af1429f26687c33","sha256":"a413e00141342813a2ca47e8b7b0549ff338cca02bc819076b6d70f12d755c79"},"downloads":-1,"filename":"pg8000-1.23.0.tar.gz","has_sig":false,"md5_digest":"74e5b912323e53892af1429f26687c33","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":117499,"upload_time":"2021-11-13T10:21:25","upload_time_iso_8601":"2021-11-13T10:21:25.825239Z","url":"https://files.pythonhosted.org/packages/38/0e/beb764ba2b1ee47def8c6cf73c0e1b3e14818e0d1f4b347d275145c7c66b/pg8000-1.23.0.tar.gz","yanked":false,"yanked_reason":null}],"1.24.0":[{"comment_text":"","digests":{"blake2b_256":"dd674188e948fdff1a0a6af391c763768fe307db113406f57f7cec88ff0e91da","md5":"5af398286d6aa51bc04180f2bc5630b9","sha256":"ffb00d2b57ebca825aa696996196f58f394e01f4e35238e20d43b63c0a7bfc97"},"downloads":-1,"filename":"pg8000-1.24.0-py3-none-any.whl","has_sig":false,"md5_digest":"5af398286d6aa51bc04180f2bc5630b9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":33522,"upload_time":"2022-02-06T16:15:36","upload_time_iso_8601":"2022-02-06T16:15:36.325531Z","url":"https://files.pythonhosted.org/packages/dd/67/4188e948fdff1a0a6af391c763768fe307db113406f57f7cec88ff0e91da/pg8000-1.24.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"222e7208829d814acff420e6977f060580f249f27f5734194069c7459c8ebcc2","md5":"5272f6f5c575d4dceacb1432f8381933","sha256":"06c6b0b068d07ce366f7bcedadf76a0b5da6a61f86302c8caff690b7fc5dfedb"},"downloads":-1,"filename":"pg8000-1.24.0.tar.gz","has_sig":false,"md5_digest":"5272f6f5c575d4dceacb1432f8381933","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":118839,"upload_time":"2022-02-06T16:15:38","upload_time_iso_8601":"2022-02-06T16:15:38.821532Z","url":"https://files.pythonhosted.org/packages/22/2e/7208829d814acff420e6977f060580f249f27f5734194069c7459c8ebcc2/pg8000-1.24.0.tar.gz","yanked":false,"yanked_reason":null}],"1.24.1":[{"comment_text":"","digests":{"blake2b_256":"4d85ed8883a1952816b6e6e861c8ab8c056fbc2783e7b23f9711da598d58ffbb","md5":"62351112a5771c06938f1dc014726d6b","sha256":"7eb6f78630f3116cc77e1a49abed6d1a542751b69666cf51a3188b7f94d2c908"},"downloads":-1,"filename":"pg8000-1.24.1-py3-none-any.whl","has_sig":false,"md5_digest":"62351112a5771c06938f1dc014726d6b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":33513,"upload_time":"2022-03-02T19:35:28","upload_time_iso_8601":"2022-03-02T19:35:28.983587Z","url":"https://files.pythonhosted.org/packages/4d/85/ed8883a1952816b6e6e861c8ab8c056fbc2783e7b23f9711da598d58ffbb/pg8000-1.24.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4d97a45e4af65c5d2840751337ac37b7e8352dc5a3895a0cbb3fd851a18747bd","md5":"3b76e3db9c373c5e9889099fab16115a","sha256":"291222c5ddfd66a3fc0d321700cf591c8b0f930d2fc848777d6cfcff55443ce6"},"downloads":-1,"filename":"pg8000-1.24.1.tar.gz","has_sig":false,"md5_digest":"3b76e3db9c373c5e9889099fab16115a","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":118816,"upload_time":"2022-03-02T19:35:32","upload_time_iso_8601":"2022-03-02T19:35:32.292507Z","url":"https://files.pythonhosted.org/packages/4d/97/a45e4af65c5d2840751337ac37b7e8352dc5a3895a0cbb3fd851a18747bd/pg8000-1.24.1.tar.gz","yanked":false,"yanked_reason":null}],"1.24.2":[{"comment_text":"","digests":{"blake2b_256":"f07e4330b742c9d86e7d3e120a5504a65e46af24ad3edd054abeedbe087e14fc","md5":"791b87c92aeff7727287e700a0692fe3","sha256":"93770167d6262379062d1dae1eaa5c64d483c784dfcebec90ef1e1a23f19e611"},"downloads":-1,"filename":"pg8000-1.24.2-py3-none-any.whl","has_sig":false,"md5_digest":"791b87c92aeff7727287e700a0692fe3","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":33522,"upload_time":"2022-04-15T09:26:15","upload_time_iso_8601":"2022-04-15T09:26:15.992523Z","url":"https://files.pythonhosted.org/packages/f0/7e/4330b742c9d86e7d3e120a5504a65e46af24ad3edd054abeedbe087e14fc/pg8000-1.24.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8cb45b8843f9992ce7d2dfec0602061a308052b66fce26db4c82ecb3ce618abe","md5":"f7c9a83f5655bbf2c413e8d10fab1a10","sha256":"ab7fc048a56fcac4d9c247b22a8356e608dd9a03d4835f1c87fba2e4f26284a5"},"downloads":-1,"filename":"pg8000-1.24.2.tar.gz","has_sig":false,"md5_digest":"f7c9a83f5655bbf2c413e8d10fab1a10","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":118893,"upload_time":"2022-04-15T09:26:20","upload_time_iso_8601":"2022-04-15T09:26:20.421689Z","url":"https://files.pythonhosted.org/packages/8c/b4/5b8843f9992ce7d2dfec0602061a308052b66fce26db4c82ecb3ce618abe/pg8000-1.24.2.tar.gz","yanked":false,"yanked_reason":null}],"1.25.0":[{"comment_text":"","digests":{"blake2b_256":"f3016985865123425cafd8de309d45bd9b9186d476c67795873288d3ef62b6e8","md5":"8ab5d7a2989ad7f88239b4afdae18a2f","sha256":"3e5efed29fec05802a34c018026272345efcb65d70da2c72d837421ed99d5fa9"},"downloads":-1,"filename":"pg8000-1.25.0-py3-none-any.whl","has_sig":false,"md5_digest":"8ab5d7a2989ad7f88239b4afdae18a2f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":33533,"upload_time":"2022-04-17T19:41:38","upload_time_iso_8601":"2022-04-17T19:41:38.126218Z","url":"https://files.pythonhosted.org/packages/f3/01/6985865123425cafd8de309d45bd9b9186d476c67795873288d3ef62b6e8/pg8000-1.25.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1aedb5c314817b96ea560f167a0a31c8968a6112cfa9fd71bbedd7bfc84f2dcb","md5":"1e2122cdb11403bccd2fb7276a68d010","sha256":"8bcfc79b1c6aa058f5384c2d5e317fbbec8e990df74496d51d89b1efcfddf4d8"},"downloads":-1,"filename":"pg8000-1.25.0.tar.gz","has_sig":false,"md5_digest":"1e2122cdb11403bccd2fb7276a68d010","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":117400,"upload_time":"2022-04-17T19:41:41","upload_time_iso_8601":"2022-04-17T19:41:41.139278Z","url":"https://files.pythonhosted.org/packages/1a/ed/b5c314817b96ea560f167a0a31c8968a6112cfa9fd71bbedd7bfc84f2dcb/pg8000-1.25.0.tar.gz","yanked":false,"yanked_reason":null}],"1.26.0":[{"comment_text":"","digests":{"blake2b_256":"1126c55a51fcac24c2931a2047a460855fe2d89e8219c727485341948aae6f8c","md5":"9e1ce1ce8f160a575f2e59f2baac8f01","sha256":"686cd2a037aad99c20096acc503e1952e1a0a2bc09cf57bc5030bea19bdc3fb3"},"downloads":-1,"filename":"pg8000-1.26.0-py3-none-any.whl","has_sig":false,"md5_digest":"9e1ce1ce8f160a575f2e59f2baac8f01","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":33594,"upload_time":"2022-04-18T09:13:31","upload_time_iso_8601":"2022-04-18T09:13:31.220768Z","url":"https://files.pythonhosted.org/packages/11/26/c55a51fcac24c2931a2047a460855fe2d89e8219c727485341948aae6f8c/pg8000-1.26.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4d98389ae871558d9d7f69138a012166020d4bb7e99258a4b27ff91974922426","md5":"86b09cbd9a6a0b037295b91bdd6fc8fd","sha256":"9e25ea13a5b7fcc83b026051d7c6e4dcd5221e950ebe5393de715a3fea1527d3"},"downloads":-1,"filename":"pg8000-1.26.0.tar.gz","has_sig":false,"md5_digest":"86b09cbd9a6a0b037295b91bdd6fc8fd","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":117659,"upload_time":"2022-04-18T09:13:34","upload_time_iso_8601":"2022-04-18T09:13:34.160917Z","url":"https://files.pythonhosted.org/packages/4d/98/389ae871558d9d7f69138a012166020d4bb7e99258a4b27ff91974922426/pg8000-1.26.0.tar.gz","yanked":false,"yanked_reason":null}],"1.26.1":[{"comment_text":"","digests":{"blake2b_256":"fa7ffa408dc01ea63936cfa175121f0bbbe383dae57d17b6302b5b56005464ec","md5":"b9c4138989db105fb62c91c9548a20a9","sha256":"fef2e862e24bcd87ab3b46a216293fd21c0ce72edf886094d1a70c5a277ab2ac"},"downloads":-1,"filename":"pg8000-1.26.1-py3-none-any.whl","has_sig":false,"md5_digest":"b9c4138989db105fb62c91c9548a20a9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":33587,"upload_time":"2022-04-23T14:00:10","upload_time_iso_8601":"2022-04-23T14:00:10.626584Z","url":"https://files.pythonhosted.org/packages/fa/7f/fa408dc01ea63936cfa175121f0bbbe383dae57d17b6302b5b56005464ec/pg8000-1.26.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ec55303318746a0e21e4f486e71d1f71aa18daa4d0b22b9e56be9f192608c7f2","md5":"7b4f38351ed11a97e25a47190a5967d6","sha256":"ccd2b6fe190addd74c093a62be0730b9e99f3ea03aa0ef7ab95ed1b7ff69d257"},"downloads":-1,"filename":"pg8000-1.26.1.tar.gz","has_sig":false,"md5_digest":"7b4f38351ed11a97e25a47190a5967d6","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":116994,"upload_time":"2022-04-23T14:00:13","upload_time_iso_8601":"2022-04-23T14:00:13.715597Z","url":"https://files.pythonhosted.org/packages/ec/55/303318746a0e21e4f486e71d1f71aa18daa4d0b22b9e56be9f192608c7f2/pg8000-1.26.1.tar.gz","yanked":false,"yanked_reason":null}],"1.27.0":[{"comment_text":"","digests":{"blake2b_256":"eb62fe7476f7466ef2053cadb0aa8bbc918b0c1d5bd0215f1479c3d20d462d9b","md5":"89a4f6a967d56207a17b728fdb677c66","sha256":"fcc2ebae5c433d9b83212e814fa5e87670bb7a0bf23d2235e6c0a62edfb8efb2"},"downloads":-1,"filename":"pg8000-1.27.0-py3-none-any.whl","has_sig":false,"md5_digest":"89a4f6a967d56207a17b728fdb677c66","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":34228,"upload_time":"2022-05-16T08:07:28","upload_time_iso_8601":"2022-05-16T08:07:28.761868Z","url":"https://files.pythonhosted.org/packages/eb/62/fe7476f7466ef2053cadb0aa8bbc918b0c1d5bd0215f1479c3d20d462d9b/pg8000-1.27.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"510eb465a56c23c789587ba3fa7fa0883a96167880246ebeeefb1fcd3d39ebbd","md5":"80a0b2da4b5ab71796918ae779e6aea7","sha256":"d4f2353805f6f6a24fa79b7ca871ea6547954ed3473e894c96f5d685edaba7ca"},"downloads":-1,"filename":"pg8000-1.27.0.tar.gz","has_sig":false,"md5_digest":"80a0b2da4b5ab71796918ae779e6aea7","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":118378,"upload_time":"2022-05-16T08:07:31","upload_time_iso_8601":"2022-05-16T08:07:31.942791Z","url":"https://files.pythonhosted.org/packages/51/0e/b465a56c23c789587ba3fa7fa0883a96167880246ebeeefb1fcd3d39ebbd/pg8000-1.27.0.tar.gz","yanked":false,"yanked_reason":null}],"1.27.1":[{"comment_text":"","digests":{"blake2b_256":"5331f0a98078f8534efdfbd413930cee326fc211a95441c02fe3eec5db1decfd","md5":"a650fec850fabd0914ad71bb23e62c36","sha256":"793716671e920676c931f9da8cbd6bcc405c5e18f4b33a86d0c1acb2f19d4869"},"downloads":-1,"filename":"pg8000-1.27.1-py3-none-any.whl","has_sig":false,"md5_digest":"a650fec850fabd0914ad71bb23e62c36","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":34274,"upload_time":"2022-05-16T08:52:04","upload_time_iso_8601":"2022-05-16T08:52:04.313325Z","url":"https://files.pythonhosted.org/packages/53/31/f0a98078f8534efdfbd413930cee326fc211a95441c02fe3eec5db1decfd/pg8000-1.27.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4ba92b9f25f7cc9b4230bbe8f1a67e4a46cb4f6fb2b03f0432f98a205f19f6ff","md5":"84f32e7bda57b87025dc58e670779e86","sha256":"d6a5838348593344f20eb35ada472a772d32145826f2efe58dbe1b65ea99e890"},"downloads":-1,"filename":"pg8000-1.27.1.tar.gz","has_sig":false,"md5_digest":"84f32e7bda57b87025dc58e670779e86","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":118503,"upload_time":"2022-05-16T08:52:08","upload_time_iso_8601":"2022-05-16T08:52:08.010606Z","url":"https://files.pythonhosted.org/packages/4b/a9/2b9f25f7cc9b4230bbe8f1a67e4a46cb4f6fb2b03f0432f98a205f19f6ff/pg8000-1.27.1.tar.gz","yanked":false,"yanked_reason":null}],"1.28.0":[{"comment_text":"","digests":{"blake2b_256":"b039f52f52eaf4a9f968d7f15c42c13a56d94cb3449090ad29b9c4a78ddeef3b","md5":"5e19e93c1f8d7b27828ee933616e1186","sha256":"7348bd7fa87e9bde240ba007b60927443e329eea19c108b6b5dc80df0cdc3ec8"},"downloads":-1,"filename":"pg8000-1.28.0-py3-none-any.whl","has_sig":false,"md5_digest":"5e19e93c1f8d7b27828ee933616e1186","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":34442,"upload_time":"2022-05-17T09:05:11","upload_time_iso_8601":"2022-05-17T09:05:11.941817Z","url":"https://files.pythonhosted.org/packages/b0/39/f52f52eaf4a9f968d7f15c42c13a56d94cb3449090ad29b9c4a78ddeef3b/pg8000-1.28.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"03dbdb1a0d5542e029f7c5240ab83801ed52dc9b85a105ebca89b2cbf8c0b342","md5":"0e4cd0a1f837a903e3265b4268b71183","sha256":"43513de3d4e378e73ac442a93906baa9d356245aa67aa7f61605c56e39a7f591"},"downloads":-1,"filename":"pg8000-1.28.0.tar.gz","has_sig":false,"md5_digest":"0e4cd0a1f837a903e3265b4268b71183","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":119024,"upload_time":"2022-05-17T09:05:15","upload_time_iso_8601":"2022-05-17T09:05:15.509408Z","url":"https://files.pythonhosted.org/packages/03/db/db1a0d5542e029f7c5240ab83801ed52dc9b85a105ebca89b2cbf8c0b342/pg8000-1.28.0.tar.gz","yanked":false,"yanked_reason":null}],"1.28.1":[{"comment_text":"","digests":{"blake2b_256":"2540fde60b76656887305ab41384ae2ddf08e9a790c99949b483fe9abfe79497","md5":"8632464c7bb6f6c03cb8de43509f3ffe","sha256":"d25d7dfd18bb5f83b6027cc2c6c1d89193b3efd4ac192759c50df6deacb34e6a"},"downloads":-1,"filename":"pg8000-1.28.1-py3-none-any.whl","has_sig":false,"md5_digest":"8632464c7bb6f6c03cb8de43509f3ffe","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":34438,"upload_time":"2022-05-17T12:28:35","upload_time_iso_8601":"2022-05-17T12:28:35.333525Z","url":"https://files.pythonhosted.org/packages/25/40/fde60b76656887305ab41384ae2ddf08e9a790c99949b483fe9abfe79497/pg8000-1.28.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6c2e3601f6161bb024cd2ff4258d1a0c873daa335ba05f4d4700b561d3dceea1","md5":"04fe422a3058d34b03a2efd83da47df0","sha256":"e9e6fc1df557fa22c8b56850b0c03e6ea8c512fe57966dae155ae9ebd9c51546"},"downloads":-1,"filename":"pg8000-1.28.1.tar.gz","has_sig":false,"md5_digest":"04fe422a3058d34b03a2efd83da47df0","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":119039,"upload_time":"2022-05-17T12:28:38","upload_time_iso_8601":"2022-05-17T12:28:38.723972Z","url":"https://files.pythonhosted.org/packages/6c/2e/3601f6161bb024cd2ff4258d1a0c873daa335ba05f4d4700b561d3dceea1/pg8000-1.28.1.tar.gz","yanked":false,"yanked_reason":null}],"1.28.2":[{"comment_text":"","digests":{"blake2b_256":"ff635971aa58ed05550b81dc0e4d3fed837df48d8235af905cfc45b9f2cbd0e2","md5":"3eed0b2a758b9476f1bd7d2faec16c44","sha256":"0272bee541d407f334ef9f8460968341bcfa698a43961bc6127b5ec6bf8df8c7"},"downloads":-1,"filename":"pg8000-1.28.2-py3-none-any.whl","has_sig":false,"md5_digest":"3eed0b2a758b9476f1bd7d2faec16c44","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":39395,"upload_time":"2022-05-17T18:21:01","upload_time_iso_8601":"2022-05-17T18:21:01.288406Z","url":"https://files.pythonhosted.org/packages/ff/63/5971aa58ed05550b81dc0e4d3fed837df48d8235af905cfc45b9f2cbd0e2/pg8000-1.28.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5c0ebf77b8520225c75ee5f3bdac5433bf3e54d4b83eff0f5a7263e8ec094c39","md5":"abd7fe7f5cb09645952cf4974129ec03","sha256":"e1a24ba89a1b41e2d2095b9fd7cf16daf9b5bdff20f3958d997ddf8361a4c8b5"},"downloads":-1,"filename":"pg8000-1.28.2.tar.gz","has_sig":false,"md5_digest":"abd7fe7f5cb09645952cf4974129ec03","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":108236,"upload_time":"2022-05-17T18:21:03","upload_time_iso_8601":"2022-05-17T18:21:03.985284Z","url":"https://files.pythonhosted.org/packages/5c/0e/bf77b8520225c75ee5f3bdac5433bf3e54d4b83eff0f5a7263e8ec094c39/pg8000-1.28.2.tar.gz","yanked":false,"yanked_reason":null}],"1.28.3":[{"comment_text":"","digests":{"blake2b_256":"a93797eb2f811af51c88f551fa4db9eec7903d06dc2aff21bee639b33d7dd27e","md5":"0d77653898ddb2cc266eaa9c225761fb","sha256":"5d5c35514f6a3dc8da15f2505bb9110d4096dc393abaebbac819fe6c68db07dd"},"downloads":-1,"filename":"pg8000-1.28.3-py3-none-any.whl","has_sig":false,"md5_digest":"0d77653898ddb2cc266eaa9c225761fb","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":33918,"upload_time":"2022-05-18T10:21:15","upload_time_iso_8601":"2022-05-18T10:21:15.565022Z","url":"https://files.pythonhosted.org/packages/a9/37/97eb2f811af51c88f551fa4db9eec7903d06dc2aff21bee639b33d7dd27e/pg8000-1.28.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"545e13f928ece97261c463a5037c00e1d7e9adbadcce6bb63e2f053a139e7261","md5":"384d50a72d00c5d17e29f8bae4d754e3","sha256":"d61037b3f21f7fc7d5cfe4eea683789259e7ccb9eef5f7229cbc62f31ea6ba32"},"downloads":-1,"filename":"pg8000-1.28.3.tar.gz","has_sig":false,"md5_digest":"384d50a72d00c5d17e29f8bae4d754e3","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":102229,"upload_time":"2022-05-18T10:21:18","upload_time_iso_8601":"2022-05-18T10:21:18.496691Z","url":"https://files.pythonhosted.org/packages/54/5e/13f928ece97261c463a5037c00e1d7e9adbadcce6bb63e2f053a139e7261/pg8000-1.28.3.tar.gz","yanked":false,"yanked_reason":null}],"1.29.0":[{"comment_text":"","digests":{"blake2b_256":"0525aa1aa66492e3d818ccca8fb7a83c3862fccb1da2bc674df78043e3952213","md5":"9f7ff3adaa005336611290a5b0dd1b26","sha256":"b6b46e89bc770f3384aacb50377a28d4cd725b4ff17a1b85b4906e08686bc67e"},"downloads":-1,"filename":"pg8000-1.29.0-py3-none-any.whl","has_sig":false,"md5_digest":"9f7ff3adaa005336611290a5b0dd1b26","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":34093,"upload_time":"2022-05-21T10:05:55","upload_time_iso_8601":"2022-05-21T10:05:55.335997Z","url":"https://files.pythonhosted.org/packages/05/25/aa1aa66492e3d818ccca8fb7a83c3862fccb1da2bc674df78043e3952213/pg8000-1.29.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"75ba74ea03deca04598b9e5e60bf837271ea0d6319aaded52dde11543726cc62","md5":"f8fc76e17b98d7b74d9a409ffafb2abe","sha256":"5b73f5516190a7a7537a32d3c3abb69daae41bda273b930296e3a5bbdd1cd47d"},"downloads":-1,"filename":"pg8000-1.29.0.tar.gz","has_sig":false,"md5_digest":"f8fc76e17b98d7b74d9a409ffafb2abe","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":92117,"upload_time":"2022-05-21T10:05:58","upload_time_iso_8601":"2022-05-21T10:05:58.114034Z","url":"https://files.pythonhosted.org/packages/75/ba/74ea03deca04598b9e5e60bf837271ea0d6319aaded52dde11543726cc62/pg8000-1.29.0.tar.gz","yanked":false,"yanked_reason":null}],"1.29.1":[{"comment_text":"","digests":{"blake2b_256":"236cf2e8a438691d9ff1a2a22d453edbefcf2e9c230682c6c4e4969f750d0468","md5":"c95bea831f96370632c46cb09e1fa081","sha256":"d9a21291ecf74ee626e704c690f2e5ccbaa3fd656be202673f13f39fe1b7029f"},"downloads":-1,"filename":"pg8000-1.29.1-py3-none-any.whl","has_sig":false,"md5_digest":"c95bea831f96370632c46cb09e1fa081","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":34092,"upload_time":"2022-05-23T00:22:18","upload_time_iso_8601":"2022-05-23T00:22:18.271351Z","url":"https://files.pythonhosted.org/packages/23/6c/f2e8a438691d9ff1a2a22d453edbefcf2e9c230682c6c4e4969f750d0468/pg8000-1.29.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d1c557abc0bd0aabe79d1dbcea5b302d561fe041f66581364bc99a49ac679f5b","md5":"387c3a0e2e5b7c1430b8e7d7c8c2dfce","sha256":"80b4f4de4b0254832b7948511e0dd46342d1c0446ccd4fdd892b63d02e4fbc7b"},"downloads":-1,"filename":"pg8000-1.29.1.tar.gz","has_sig":false,"md5_digest":"387c3a0e2e5b7c1430b8e7d7c8c2dfce","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":92221,"upload_time":"2022-05-23T00:22:20","upload_time_iso_8601":"2022-05-23T00:22:20.961642Z","url":"https://files.pythonhosted.org/packages/d1/c5/57abc0bd0aabe79d1dbcea5b302d561fe041f66581364bc99a49ac679f5b/pg8000-1.29.1.tar.gz","yanked":false,"yanked_reason":null}],"1.29.2":[{"comment_text":"","digests":{"blake2b_256":"8016fec12f69a01e5a59af9410d42990ba204504f156128211c799d37620a2e4","md5":"d5800014aa54c4a933ed0af98dfee4fc","sha256":"726ec389c0fe290c5deeb4c84c071f53bd06031686561a6cbed5c8d34bddde46"},"downloads":-1,"filename":"pg8000-1.29.2-py3-none-any.whl","has_sig":false,"md5_digest":"d5800014aa54c4a933ed0af98dfee4fc","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":34146,"upload_time":"2022-10-09T15:17:04","upload_time_iso_8601":"2022-10-09T15:17:04.134877Z","url":"https://files.pythonhosted.org/packages/80/16/fec12f69a01e5a59af9410d42990ba204504f156128211c799d37620a2e4/pg8000-1.29.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8140ef8b12635304a77f22e62fd7616f3d9fae64fd323072a2c96985dd8f3a17","md5":"6f160a127befb75cbc63f6f7083d1e7b","sha256":"db75c21aa0aa2e6f79a952b71a829a275eca2e2e5652756966da59d7dd9d6f24"},"downloads":-1,"filename":"pg8000-1.29.2.tar.gz","has_sig":false,"md5_digest":"6f160a127befb75cbc63f6f7083d1e7b","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":92786,"upload_time":"2022-10-09T15:17:07","upload_time_iso_8601":"2022-10-09T15:17:07.694621Z","url":"https://files.pythonhosted.org/packages/81/40/ef8b12635304a77f22e62fd7616f3d9fae64fd323072a2c96985dd8f3a17/pg8000-1.29.2.tar.gz","yanked":false,"yanked_reason":null}],"1.29.3":[{"comment_text":"","digests":{"blake2b_256":"a5ddfc1372e19edffa0ef38ff4ea243f79101d69cf899a320e95166557ab0bf7","md5":"01bf4384117c491963f9107423c48380","sha256":"398097469ad5b9cf9e899653dfb4ee8b10bd7f90efc7f60404d0a116dd93f0c5"},"downloads":-1,"filename":"pg8000-1.29.3-py3-none-any.whl","has_sig":false,"md5_digest":"01bf4384117c491963f9107423c48380","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":51277,"upload_time":"2022-10-26T20:51:00","upload_time_iso_8601":"2022-10-26T20:51:00.753745Z","url":"https://files.pythonhosted.org/packages/a5/dd/fc1372e19edffa0ef38ff4ea243f79101d69cf899a320e95166557ab0bf7/pg8000-1.29.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d478a07e021e1998538c6626d33ca4b5e2c68a92c2fd1f3a5017c684ce8ada0c","md5":"25f8a5ecc557eab404737177583ddec0","sha256":"c8c954d3c86d7fbf591bc83b00d6ece289fae176c8335a182a7570699da2bfdc"},"downloads":-1,"filename":"pg8000-1.29.3.tar.gz","has_sig":false,"md5_digest":"25f8a5ecc557eab404737177583ddec0","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":126412,"upload_time":"2022-10-26T20:51:05","upload_time_iso_8601":"2022-10-26T20:51:05.752726Z","url":"https://files.pythonhosted.org/packages/d4/78/a07e021e1998538c6626d33ca4b5e2c68a92c2fd1f3a5017c684ce8ada0c/pg8000-1.29.3.tar.gz","yanked":false,"yanked_reason":null}],"1.29.4":[{"comment_text":"","digests":{"blake2b_256":"98c79f70fa222b0fbec5c989db768e52a8d652e03f99b272beaabe62153d2a9d","md5":"ebbb367694fe96459457c34c822d0e6a","sha256":"3264e481857752023eb968016d1b55cceedc0261133cf7a37c87623e465b0146"},"downloads":-1,"filename":"pg8000-1.29.4-py3-none-any.whl","has_sig":false,"md5_digest":"ebbb367694fe96459457c34c822d0e6a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":51366,"upload_time":"2022-12-14T15:03:54","upload_time_iso_8601":"2022-12-14T15:03:54.838978Z","url":"https://files.pythonhosted.org/packages/98/c7/9f70fa222b0fbec5c989db768e52a8d652e03f99b272beaabe62153d2a9d/pg8000-1.29.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c67e001e2d2570dddeefda50e96726ed66ea0aeb2cf55e20fe7441b6a0e5a8a6","md5":"dc090356519dc1d2ee13ff0ecafd5a10","sha256":"76d2aa1757a30bc71e0307dae18c374e336a69123e6b046e206a96611fa2a330"},"downloads":-1,"filename":"pg8000-1.29.4.tar.gz","has_sig":false,"md5_digest":"dc090356519dc1d2ee13ff0ecafd5a10","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":126629,"upload_time":"2022-12-14T15:04:00","upload_time_iso_8601":"2022-12-14T15:04:00.099853Z","url":"https://files.pythonhosted.org/packages/c6/7e/001e2d2570dddeefda50e96726ed66ea0aeb2cf55e20fe7441b6a0e5a8a6/pg8000-1.29.4.tar.gz","yanked":false,"yanked_reason":null}],"1.29.5":[{"comment_text":"","digests":{"blake2b_256":"655dd8fba821f743aeac0cd4f8a4b944559fe697173299930228a4a533fee809","md5":"9b19fcc6b108aefd783a3cfcf9da2d14","sha256":"919c4ffbbb87f37ae19ae885c356b15828f336bd277fd21fae581a4453a61784"},"downloads":-1,"filename":"pg8000-1.29.5-py3-none-any.whl","has_sig":false,"md5_digest":"9b19fcc6b108aefd783a3cfcf9da2d14","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":51846,"upload_time":"2023-05-09T18:41:39","upload_time_iso_8601":"2023-05-09T18:41:39.686871Z","url":"https://files.pythonhosted.org/packages/65/5d/d8fba821f743aeac0cd4f8a4b944559fe697173299930228a4a533fee809/pg8000-1.29.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dfee99555e7ce2736cb718ced8ca0d1a7ab6a64843763b36155021641683a026","md5":"2ea86f3479e76a5f2c4c5cbb689bce32","sha256":"8e3e0c3b98f08c0d0111a276b0d4e65e56e59700452c568101348d6f6fba4375"},"downloads":-1,"filename":"pg8000-1.29.5.tar.gz","has_sig":false,"md5_digest":"2ea86f3479e76a5f2c4c5cbb689bce32","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":127557,"upload_time":"2023-05-09T18:41:44","upload_time_iso_8601":"2023-05-09T18:41:44.395462Z","url":"https://files.pythonhosted.org/packages/df/ee/99555e7ce2736cb718ced8ca0d1a7ab6a64843763b36155021641683a026/pg8000-1.29.5.tar.gz","yanked":false,"yanked_reason":null}],"1.29.6":[{"comment_text":"","digests":{"blake2b_256":"530670203ff5b1916d9975577f24e09c98e9432e417d404cc35bbe1f51db56c5","md5":"c0bcb1b302ff309a5b4ecdf0b12a7ecd","sha256":"3c7f74843adca879a309c46a880dac797b959db41122eebf59e3e31701dbb8b0"},"downloads":-1,"filename":"pg8000-1.29.6-py3-none-any.whl","has_sig":false,"md5_digest":"c0bcb1b302ff309a5b4ecdf0b12a7ecd","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":51929,"upload_time":"2023-05-29T19:39:52","upload_time_iso_8601":"2023-05-29T19:39:52.190017Z","url":"https://files.pythonhosted.org/packages/53/06/70203ff5b1916d9975577f24e09c98e9432e417d404cc35bbe1f51db56c5/pg8000-1.29.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7ba6729268d03094e5b5e0c49b962cd61611e1e192b2c0f9a35e7d3cb732f38c","md5":"dbd137cf18650ef9a5cc6a4758316c75","sha256":"ba39c1196408ebe19b23710823871ba3b694df030c4f7a7e2c49f1512091d142"},"downloads":-1,"filename":"pg8000-1.29.6.tar.gz","has_sig":false,"md5_digest":"dbd137cf18650ef9a5cc6a4758316c75","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":127860,"upload_time":"2023-05-29T19:39:55","upload_time_iso_8601":"2023-05-29T19:39:55.427397Z","url":"https://files.pythonhosted.org/packages/7b/a6/729268d03094e5b5e0c49b962cd61611e1e192b2c0f9a35e7d3cb732f38c/pg8000-1.29.6.tar.gz","yanked":false,"yanked_reason":null}],"1.29.7":[{"comment_text":"","digests":{"blake2b_256":"9bcd29b6b44f8327399988c03f10724a2321f6d879864ba0f011033376669d71","md5":"6e45d6b5f19751aa22021304c5d38d0e","sha256":"21133b4ccf258991a4b497dfcc7f489eb6ecd88debe19df7cd59519f616c050a"},"downloads":-1,"filename":"pg8000-1.29.7-py3-none-any.whl","has_sig":false,"md5_digest":"6e45d6b5f19751aa22021304c5d38d0e","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":53440,"upload_time":"2023-06-16T08:08:35","upload_time_iso_8601":"2023-06-16T08:08:35.599531Z","url":"https://files.pythonhosted.org/packages/9b/cd/29b6b44f8327399988c03f10724a2321f6d879864ba0f011033376669d71/pg8000-1.29.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"def630bd146d3861f28b448553e68c53d8b6172b9705f04a2bb451836ef7371b","md5":"88d66e3cdd6598f54e0e016b609485f7","sha256":"45e1d3f4f339bd6c5722d734799dda9a8ba3a009d803a18aaafd6519997fd590"},"downloads":-1,"filename":"pg8000-1.29.7.tar.gz","has_sig":false,"md5_digest":"88d66e3cdd6598f54e0e016b609485f7","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":130312,"upload_time":"2023-06-16T08:08:38","upload_time_iso_8601":"2023-06-16T08:08:38.924811Z","url":"https://files.pythonhosted.org/packages/de/f6/30bd146d3861f28b448553e68c53d8b6172b9705f04a2bb451836ef7371b/pg8000-1.29.7.tar.gz","yanked":false,"yanked_reason":null}],"1.29.8":[{"comment_text":"","digests":{"blake2b_256":"21062b6af25d8ee88a4bac66796830c7a0744808c9ef8f264df87b1834c17d6e","md5":"d5aac6516b4d9a19ed13258ca34e5963","sha256":"962e9d6687f76057bd6d9c9c0f67f503a503216bf60b3a4d71e4cb8c97f8326d"},"downloads":-1,"filename":"pg8000-1.29.8-py3-none-any.whl","has_sig":false,"md5_digest":"d5aac6516b4d9a19ed13258ca34e5963","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":53486,"upload_time":"2023-06-16T15:25:58","upload_time_iso_8601":"2023-06-16T15:25:58.372107Z","url":"https://files.pythonhosted.org/packages/21/06/2b6af25d8ee88a4bac66796830c7a0744808c9ef8f264df87b1834c17d6e/pg8000-1.29.8-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"33937defc2f920c0509e6babf9d1dbc3495bb8f9ee9fae65b23fa58873a43dc1","md5":"072cb5f33f71f65abe236c457d48bff1","sha256":"609cfbccea783e15f111cc0cb2f6d4e6b4c349a695c59505a29baba6fc79ffa9"},"downloads":-1,"filename":"pg8000-1.29.8.tar.gz","has_sig":false,"md5_digest":"072cb5f33f71f65abe236c457d48bff1","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":130477,"upload_time":"2023-06-16T15:26:01","upload_time_iso_8601":"2023-06-16T15:26:01.773815Z","url":"https://files.pythonhosted.org/packages/33/93/7defc2f920c0509e6babf9d1dbc3495bb8f9ee9fae65b23fa58873a43dc1/pg8000-1.29.8.tar.gz","yanked":false,"yanked_reason":null}],"1.30.1":[{"comment_text":"","digests":{"blake2b_256":"bd584b675760aa93781005bf931f6e460ccdb51b1510137d7cee1735d57d65f3","md5":"eb0b2dc15c00a8cd018a9c3ff9b5b961","sha256":"4700e34a01d16c41c923982ff78930e85bbd819aea875f9bc17044eb756125a9"},"downloads":-1,"filename":"pg8000-1.30.1-py3-none-any.whl","has_sig":false,"md5_digest":"eb0b2dc15c00a8cd018a9c3ff9b5b961","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":53920,"upload_time":"2023-07-29T08:36:04","upload_time_iso_8601":"2023-07-29T08:36:04.273123Z","url":"https://files.pythonhosted.org/packages/bd/58/4b675760aa93781005bf931f6e460ccdb51b1510137d7cee1735d57d65f3/pg8000-1.30.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"625497bced08aafe7642f51e3992cc2737cd0c6ae85fa7509f068573666e777a","md5":"0ad7a3bdb12f696d0f3fe4596da45643","sha256":"c04280e66a1ccfb5166db5c164164c2e1b8f62afaedffd211451a5329ae84a29"},"downloads":-1,"filename":"pg8000-1.30.1.tar.gz","has_sig":false,"md5_digest":"0ad7a3bdb12f696d0f3fe4596da45643","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":132177,"upload_time":"2023-07-29T08:36:06","upload_time_iso_8601":"2023-07-29T08:36:06.909413Z","url":"https://files.pythonhosted.org/packages/62/54/97bced08aafe7642f51e3992cc2737cd0c6ae85fa7509f068573666e777a/pg8000-1.30.1.tar.gz","yanked":false,"yanked_reason":null}],"1.30.2":[{"comment_text":"","digests":{"blake2b_256":"6e2c9d7ba4b76ad65a56bf0ff128b995b2caaa15eb7ac430268e10cfbcf99228","md5":"f13365d26a4a151da428def87bb85331","sha256":"2fc6bf2d81d7025529e7d161f6b0202a6328e8ac5b665e77be1d72ae5cc1c980"},"downloads":-1,"filename":"pg8000-1.30.2-py3-none-any.whl","has_sig":false,"md5_digest":"f13365d26a4a151da428def87bb85331","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":54225,"upload_time":"2023-09-17T09:09:57","upload_time_iso_8601":"2023-09-17T09:09:57.277983Z","url":"https://files.pythonhosted.org/packages/6e/2c/9d7ba4b76ad65a56bf0ff128b995b2caaa15eb7ac430268e10cfbcf99228/pg8000-1.30.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"07322920ad472648e19b26428dca49069ee1516d022d0b8355f9bf5d65569a12","md5":"0b3271acdd6c6c4cc5c465abcf3c7c4f","sha256":"3b35dabc7c2f72d403a8bb785ce28f32aeaa9493e7a72de6bce58ac575409bc1"},"downloads":-1,"filename":"pg8000-1.30.2.tar.gz","has_sig":false,"md5_digest":"0b3271acdd6c6c4cc5c465abcf3c7c4f","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":133387,"upload_time":"2023-09-17T09:10:00","upload_time_iso_8601":"2023-09-17T09:10:00.039481Z","url":"https://files.pythonhosted.org/packages/07/32/2920ad472648e19b26428dca49069ee1516d022d0b8355f9bf5d65569a12/pg8000-1.30.2.tar.gz","yanked":false,"yanked_reason":null}],"1.30.3":[{"comment_text":"","digests":{"blake2b_256":"b470e2aa0ade4b87d5ff08c39753c15fcc38d5011a04b8dfd332829a5b25b886","md5":"9dfa48e667d4db850cfc821cd57499ce","sha256":"42bc7fd0db5ceef7dcf8e07819e6427fcfb44384e2d6683928306916b0d696eb"},"downloads":-1,"filename":"pg8000-1.30.3-py3-none-any.whl","has_sig":false,"md5_digest":"9dfa48e667d4db850cfc821cd57499ce","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":54443,"upload_time":"2023-10-31T19:49:32","upload_time_iso_8601":"2023-10-31T19:49:32.736394Z","url":"https://files.pythonhosted.org/packages/b4/70/e2aa0ade4b87d5ff08c39753c15fcc38d5011a04b8dfd332829a5b25b886/pg8000-1.30.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"50451206ae8efb9b90ae4d47fe84b908614fb94a953fabff0b2deeb0c233ec8b","md5":"734a16887d4eaaab64b4e8f435cd9db5","sha256":"4e7c75747a43a49c15623f92583bb6e1d023eae6eaf2c2e1e6de4d7fb7fa404f"},"downloads":-1,"filename":"pg8000-1.30.3.tar.gz","has_sig":false,"md5_digest":"734a16887d4eaaab64b4e8f435cd9db5","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":134020,"upload_time":"2023-10-31T19:49:50","upload_time_iso_8601":"2023-10-31T19:49:50.022630Z","url":"https://files.pythonhosted.org/packages/50/45/1206ae8efb9b90ae4d47fe84b908614fb94a953fabff0b2deeb0c233ec8b/pg8000-1.30.3.tar.gz","yanked":false,"yanked_reason":null}],"1.30.4":[{"comment_text":"","digests":{"blake2b_256":"d70b3b1054d6183f27f8d9a43ff1eab4e1905049f7e58494895159591a49d8c8","md5":"0c7e6493ef6815e1785ddf631c3b4e00","sha256":"64bbe27b11588a53cee08e840988416227263dc5191b649fab963949f3ddd84d"},"downloads":-1,"filename":"pg8000-1.30.4-py3-none-any.whl","has_sig":false,"md5_digest":"0c7e6493ef6815e1785ddf631c3b4e00","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":54876,"upload_time":"2024-01-03T19:32:29","upload_time_iso_8601":"2024-01-03T19:32:29.846019Z","url":"https://files.pythonhosted.org/packages/d7/0b/3b1054d6183f27f8d9a43ff1eab4e1905049f7e58494895159591a49d8c8/pg8000-1.30.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dd5a1858c00221bd57162ff3e9d959e674349eef30ef80107a608d3acac2c249","md5":"a7017a02a451fb597e2dc91c8fe10366","sha256":"2fa6964fff591a5e076fa6dd21a317c74de2caaa52991bb1f8b3d8ef2e56d172"},"downloads":-1,"filename":"pg8000-1.30.4.tar.gz","has_sig":false,"md5_digest":"a7017a02a451fb597e2dc91c8fe10366","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":134976,"upload_time":"2024-01-03T19:32:32","upload_time_iso_8601":"2024-01-03T19:32:32.803806Z","url":"https://files.pythonhosted.org/packages/dd/5a/1858c00221bd57162ff3e9d959e674349eef30ef80107a608d3acac2c249/pg8000-1.30.4.tar.gz","yanked":false,"yanked_reason":null}],"1.30.5":[{"comment_text":"","digests":{"blake2b_256":"9f18a8e2e6bc092c77d17efb4a039f089d185c4945a20ba1d60c060deee9af3a","md5":"3a23d143d8ff435e85eecd73d3541af9","sha256":"1abf18da652b0ad8e9cbfe57ed841c350b5330c33d8151303555db1fe5ce57f8"},"downloads":-1,"filename":"pg8000-1.30.5-py3-none-any.whl","has_sig":false,"md5_digest":"3a23d143d8ff435e85eecd73d3541af9","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":46578,"upload_time":"2024-02-22T18:13:33","upload_time_iso_8601":"2024-02-22T18:13:33.731982Z","url":"https://files.pythonhosted.org/packages/9f/18/a8e2e6bc092c77d17efb4a039f089d185c4945a20ba1d60c060deee9af3a/pg8000-1.30.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"eea745c58a4e69b53c8a229b0cc29747ab63fd9a72b16c8cdeb534ca063cbdc6","md5":"5f1933c3e71fd41b45dfa985e74bc168","sha256":"072f7ad00cd723695cb2e9fc02c1dfb84c781455e97b8de6f4c4281eea08078c"},"downloads":-1,"filename":"pg8000-1.30.5.tar.gz","has_sig":false,"md5_digest":"5f1933c3e71fd41b45dfa985e74bc168","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":109772,"upload_time":"2024-02-22T18:13:37","upload_time_iso_8601":"2024-02-22T18:13:37.201438Z","url":"https://files.pythonhosted.org/packages/ee/a7/45c58a4e69b53c8a229b0cc29747ab63fd9a72b16c8cdeb534ca063cbdc6/pg8000-1.30.5.tar.gz","yanked":false,"yanked_reason":null}],"1.31.0":[{"comment_text":"","digests":{"blake2b_256":"a0923428009697725266e949952ec7af862b748c9e389510c7fb0ac1a0e1780e","md5":"89aa9cfc3e4663da85d3b41e5d1b7650","sha256":"0d24195aaddcaa68415c9fe9a71212de805d2b1fafa71e34b5fcb55a07fe9fde"},"downloads":-1,"filename":"pg8000-1.31.0-py3-none-any.whl","has_sig":false,"md5_digest":"89aa9cfc3e4663da85d3b41e5d1b7650","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":54307,"upload_time":"2024-03-31T14:41:07","upload_time_iso_8601":"2024-03-31T14:41:07.373600Z","url":"https://files.pythonhosted.org/packages/a0/92/3428009697725266e949952ec7af862b748c9e389510c7fb0ac1a0e1780e/pg8000-1.31.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"700fb3b82c2ab2eaa1df73ea8070d7cb78f6c24e3490c810a6f7bdd222118c6b","md5":"ce241d3439d90efa9f9d4a9b8377389f","sha256":"f4c38da5910c0d7ffeb38f5acb54592727b5b03c200fc4d43d4560cd08683cd2"},"downloads":-1,"filename":"pg8000-1.31.0.tar.gz","has_sig":false,"md5_digest":"ce241d3439d90efa9f9d4a9b8377389f","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":133421,"upload_time":"2024-03-31T14:41:10","upload_time_iso_8601":"2024-03-31T14:41:10.923642Z","url":"https://files.pythonhosted.org/packages/70/0f/b3b82c2ab2eaa1df73ea8070d7cb78f6c24e3490c810a6f7bdd222118c6b/pg8000-1.31.0.tar.gz","yanked":false,"yanked_reason":null}],"1.31.1":[{"comment_text":"","digests":{"blake2b_256":"b8790ce7c39162bba214f80b8d85ed07d1db8cba8f009ad362c4b02129cce1fd","md5":"f8ead462145c0d408bddf22b0cacd03c","sha256":"69aac9dba4114c9c8d0408232d54eaf7d06d271df7765caeed39960e057800e4"},"downloads":-1,"filename":"pg8000-1.31.1-py3-none-any.whl","has_sig":false,"md5_digest":"f8ead462145c0d408bddf22b0cacd03c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":54223,"upload_time":"2024-04-01T13:02:26","upload_time_iso_8601":"2024-04-01T13:02:26.942500Z","url":"https://files.pythonhosted.org/packages/b8/79/0ce7c39162bba214f80b8d85ed07d1db8cba8f009ad362c4b02129cce1fd/pg8000-1.31.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7d04e8c6b8fa843f543f1568fa89a2a67bceba7fefcd83fddc265e1538196085","md5":"6b73241d983d2734a258bb02d881716f","sha256":"b11130d4c615dd3062ea8fed8143064a7978b7fe6d44f14b72261d43c8e27087"},"downloads":-1,"filename":"pg8000-1.31.1.tar.gz","has_sig":false,"md5_digest":"6b73241d983d2734a258bb02d881716f","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":112923,"upload_time":"2024-04-01T13:02:30","upload_time_iso_8601":"2024-04-01T13:02:30.435597Z","url":"https://files.pythonhosted.org/packages/7d/04/e8c6b8fa843f543f1568fa89a2a67bceba7fefcd83fddc265e1538196085/pg8000-1.31.1.tar.gz","yanked":false,"yanked_reason":null}],"1.31.2":[{"comment_text":"","digests":{"blake2b_256":"09a02b30d52017c4ced8fc107386666ea7573954eb708bf66121f0229df05d41","md5":"6785e25d1cf8df0fb15a5451290c2561","sha256":"436c771ede71af4d4c22ba867a30add0bc5c942d7ab27fadbb6934a487ecc8f6"},"downloads":-1,"filename":"pg8000-1.31.2-py3-none-any.whl","has_sig":false,"md5_digest":"6785e25d1cf8df0fb15a5451290c2561","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":54494,"upload_time":"2024-04-28T16:57:44","upload_time_iso_8601":"2024-04-28T16:57:44.431968Z","url":"https://files.pythonhosted.org/packages/09/a0/2b30d52017c4ced8fc107386666ea7573954eb708bf66121f0229df05d41/pg8000-1.31.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0fd70554640cbe3e193184796bedb6de23f797c03958425176faf0e694c06eb0","md5":"d133eebc067dbe2318a861f1589cafee","sha256":"1ea46cf09d8eca07fe7eaadefd7951e37bee7fabe675df164f1a572ffb300876"},"downloads":-1,"filename":"pg8000-1.31.2.tar.gz","has_sig":false,"md5_digest":"d133eebc067dbe2318a861f1589cafee","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":113513,"upload_time":"2024-04-28T16:57:47","upload_time_iso_8601":"2024-04-28T16:57:47.611102Z","url":"https://files.pythonhosted.org/packages/0f/d7/0554640cbe3e193184796bedb6de23f797c03958425176faf0e694c06eb0/pg8000-1.31.2.tar.gz","yanked":false,"yanked_reason":null}],"1.9.0":[{"comment_text":"","digests":{"blake2b_256":"cda1bb6b9b62fa50eb5f9aceb780b6a8fcd8c0fab2a4a2564bf36f7cf08fc95f","md5":"c2eac494fa89081ec411270b905b5f67","sha256":"697180c5ea2d5c9096e8f8f0b7e43d20f164fdef58400dfc752c1f57aadc524d"},"downloads":-1,"filename":"pg8000-1.9.0.tar.gz","has_sig":false,"md5_digest":"c2eac494fa89081ec411270b905b5f67","packagetype":"sdist","python_version":"source","requires_python":null,"size":28661,"upload_time":"2013-12-01T16:42:35","upload_time_iso_8601":"2013-12-01T16:42:35.649475Z","url":"https://files.pythonhosted.org/packages/cd/a1/bb6b9b62fa50eb5f9aceb780b6a8fcd8c0fab2a4a2564bf36f7cf08fc95f/pg8000-1.9.0.tar.gz","yanked":false,"yanked_reason":null}],"1.9.1":[{"comment_text":"","digests":{"blake2b_256":"640a86c987d3b9418ef1ef5ed3b13f16dcda7ad076d0417f091948b8450c98c2","md5":"d8e8d38985ef5f5dc8a5038ed0b763dc","sha256":"1d878813ea2311f010957e1a9eb2a62079bbd4a59d4920a1d2e4419097314c82"},"downloads":-1,"filename":"pg8000-1.9.1.tar.gz","has_sig":false,"md5_digest":"d8e8d38985ef5f5dc8a5038ed0b763dc","packagetype":"sdist","python_version":"source","requires_python":null,"size":28646,"upload_time":"2013-12-15T20:05:51","upload_time_iso_8601":"2013-12-15T20:05:51.121730Z","url":"https://files.pythonhosted.org/packages/64/0a/86c987d3b9418ef1ef5ed3b13f16dcda7ad076d0417f091948b8450c98c2/pg8000-1.9.1.tar.gz","yanked":false,"yanked_reason":null}],"1.9.10":[{"comment_text":"","digests":{"blake2b_256":"e7e02c37072e5c68b968ca61822ecbd402c1e65509dc8f1835b621a2535bf81f","md5":"f609c1967a54631406f83a10cac372c9","sha256":"653e096125d5b48ea98731370d555f478788f5f7bdf021649018dbe1979bff49"},"downloads":-1,"filename":"pg8000-1.9.10.tar.gz","has_sig":false,"md5_digest":"f609c1967a54631406f83a10cac372c9","packagetype":"sdist","python_version":"source","requires_python":null,"size":26893,"upload_time":"2014-06-08T17:54:10","upload_time_iso_8601":"2014-06-08T17:54:10.117079Z","url":"https://files.pythonhosted.org/packages/e7/e0/2c37072e5c68b968ca61822ecbd402c1e65509dc8f1835b621a2535bf81f/pg8000-1.9.10.tar.gz","yanked":false,"yanked_reason":null}],"1.9.11":[{"comment_text":"","digests":{"blake2b_256":"0cfb790c3de65fc03649730f3d808a3ae103eb658e94616e2c4350cd906b9dbd","md5":"7bd261a0b64014d1b79365021f0de732","sha256":"a211bd5bda005ab561ff98cd9f4033db8dbff2bbbbc305f08a726201e1952b70"},"downloads":-1,"filename":"pg8000-1.9.11.tar.gz","has_sig":false,"md5_digest":"7bd261a0b64014d1b79365021f0de732","packagetype":"sdist","python_version":"source","requires_python":null,"size":37298,"upload_time":"2014-07-20T10:50:43","upload_time_iso_8601":"2014-07-20T10:50:43.571918Z","url":"https://files.pythonhosted.org/packages/0c/fb/790c3de65fc03649730f3d808a3ae103eb658e94616e2c4350cd906b9dbd/pg8000-1.9.11.tar.gz","yanked":false,"yanked_reason":null}],"1.9.12":[{"comment_text":"","digests":{"blake2b_256":"d8472098eb09f942fd61623b77dc320e85566c26f631834a62d8b781a05ac365","md5":"b050f1d27b84bdf919c867a8e035982d","sha256":"bd0ffaf043bf06e3d390432ff5800e18158e804b3c3ec8f60fe8a317e4c2639b"},"downloads":-1,"filename":"pg8000-1.9.12.tar.gz","has_sig":false,"md5_digest":"b050f1d27b84bdf919c867a8e035982d","packagetype":"sdist","python_version":"source","requires_python":null,"size":37301,"upload_time":"2014-07-22T22:41:50","upload_time_iso_8601":"2014-07-22T22:41:50.426009Z","url":"https://files.pythonhosted.org/packages/d8/47/2098eb09f942fd61623b77dc320e85566c26f631834a62d8b781a05ac365/pg8000-1.9.12.tar.gz","yanked":false,"yanked_reason":null}],"1.9.13":[{"comment_text":"","digests":{"blake2b_256":"f21c4f0733e59a1013db6959f63cbbe06508f89017417d9219a1c240813156cc","md5":"531833e8fe565c5d5104be252f1d334c","sha256":"8f5941914a2bc8a3ced3196fe634e09cd282c8378f97bd956fa0f08e25b7594b"},"downloads":-1,"filename":"pg8000-1.9.13.tar.gz","has_sig":false,"md5_digest":"531833e8fe565c5d5104be252f1d334c","packagetype":"sdist","python_version":"source","requires_python":null,"size":37290,"upload_time":"2014-07-27T10:50:18","upload_time_iso_8601":"2014-07-27T10:50:18.565924Z","url":"https://files.pythonhosted.org/packages/f2/1c/4f0733e59a1013db6959f63cbbe06508f89017417d9219a1c240813156cc/pg8000-1.9.13.tar.gz","yanked":false,"yanked_reason":null}],"1.9.14":[{"comment_text":"","digests":{"blake2b_256":"29e0a11cbf2598f7370308bb0dd41b517648ac2d0b33270bb95aa97c91137c73","md5":"ef582dd85af64fa55dacc8b7315978b4","sha256":"fac744c6aa6bca2b4154d5ea0fbf5a2963e7b5a9cb1eb65c50a306a7dc6e56ed"},"downloads":-1,"filename":"pg8000-1.9.14.tar.gz","has_sig":false,"md5_digest":"ef582dd85af64fa55dacc8b7315978b4","packagetype":"sdist","python_version":"source","requires_python":null,"size":37348,"upload_time":"2014-08-02T15:33:46","upload_time_iso_8601":"2014-08-02T15:33:46.650931Z","url":"https://files.pythonhosted.org/packages/29/e0/a11cbf2598f7370308bb0dd41b517648ac2d0b33270bb95aa97c91137c73/pg8000-1.9.14.tar.gz","yanked":false,"yanked_reason":null}],"1.9.2":[{"comment_text":"","digests":{"blake2b_256":"61c6b54b2c7b08ef6d0937e5a894ca80f697df311bc441191860d7aff9167dbf","md5":"75e3e832e3ee8d281d699d0352851fad","sha256":"39cb7920bb9120d2c8d4a92a5032edc304c3bf4cab7cd83c447380b4a6cef48e"},"downloads":-1,"filename":"pg8000-1.9.2.tar.gz","has_sig":false,"md5_digest":"75e3e832e3ee8d281d699d0352851fad","packagetype":"sdist","python_version":"source","requires_python":null,"size":28758,"upload_time":"2013-12-17T19:52:02","upload_time_iso_8601":"2013-12-17T19:52:02.029505Z","url":"https://files.pythonhosted.org/packages/61/c6/b54b2c7b08ef6d0937e5a894ca80f697df311bc441191860d7aff9167dbf/pg8000-1.9.2.tar.gz","yanked":false,"yanked_reason":null}],"1.9.3":[{"comment_text":"","digests":{"blake2b_256":"86cc75a9107128093715f6bf0f6810068d69b81c718100ea1018551197482cb7","md5":"6489f446188c6bd4229bacd35dfa8d95","sha256":"cf361afc6b7ff572e48b5d2fbe51ac621930c765d7cf41f40fc7ed2f6c4a196d"},"downloads":-1,"filename":"pg8000-1.9.3.tar.gz","has_sig":false,"md5_digest":"6489f446188c6bd4229bacd35dfa8d95","packagetype":"sdist","python_version":"source","requires_python":null,"size":28792,"upload_time":"2014-01-16T16:57:44","upload_time_iso_8601":"2014-01-16T16:57:44.061370Z","url":"https://files.pythonhosted.org/packages/86/cc/75a9107128093715f6bf0f6810068d69b81c718100ea1018551197482cb7/pg8000-1.9.3.tar.gz","yanked":false,"yanked_reason":null}],"1.9.4":[{"comment_text":"","digests":{"blake2b_256":"18fc3f048df39ba48514f1e8cb0d9a773d5a75e190e90d02298d7bb857a38dd6","md5":"80e098c68bdc06cf106abac2db107cf8","sha256":"959526db8cd2933775c320cce66fa5051e6d8bbdf49b9713d8a6872135d3c9e2"},"downloads":-1,"filename":"pg8000-1.9.4.tar.gz","has_sig":false,"md5_digest":"80e098c68bdc06cf106abac2db107cf8","packagetype":"sdist","python_version":"source","requires_python":null,"size":28368,"upload_time":"2014-01-18T23:42:53","upload_time_iso_8601":"2014-01-18T23:42:53.999496Z","url":"https://files.pythonhosted.org/packages/18/fc/3f048df39ba48514f1e8cb0d9a773d5a75e190e90d02298d7bb857a38dd6/pg8000-1.9.4.tar.gz","yanked":false,"yanked_reason":null}],"1.9.5":[{"comment_text":"","digests":{"blake2b_256":"4570bf0b059ce7126a562b6b9767c496501d3ff713dc5ed2cded83134ea45bdd","md5":"c5b5e439b39d15dc41481f764fa47374","sha256":"f1d989b8f922aa06f9bdbf4ca9adbfd4020c316f9342e1be97de189443532e0a"},"downloads":-1,"filename":"pg8000-1.9.5.tar.gz","has_sig":false,"md5_digest":"c5b5e439b39d15dc41481f764fa47374","packagetype":"sdist","python_version":"source","requires_python":null,"size":27811,"upload_time":"2014-02-15T18:27:21","upload_time_iso_8601":"2014-02-15T18:27:21.620086Z","url":"https://files.pythonhosted.org/packages/45/70/bf0b059ce7126a562b6b9767c496501d3ff713dc5ed2cded83134ea45bdd/pg8000-1.9.5.tar.gz","yanked":false,"yanked_reason":null}],"1.9.6":[{"comment_text":"","digests":{"blake2b_256":"65ee9ca460c3902d4061cfe850a1d8153e4d58df16670fa0735d359a9713bfef","md5":"2bc30a3d981f66511f844f04b4e6422f","sha256":"a2ed911656c6ab3d7539644dcf446a8d88237252fab5de1959afd782f316d4f3"},"downloads":-1,"filename":"pg8000-1.9.6.tar.gz","has_sig":false,"md5_digest":"2bc30a3d981f66511f844f04b4e6422f","packagetype":"sdist","python_version":"source","requires_python":null,"size":27813,"upload_time":"2014-02-26T23:18:34","upload_time_iso_8601":"2014-02-26T23:18:34.148702Z","url":"https://files.pythonhosted.org/packages/65/ee/9ca460c3902d4061cfe850a1d8153e4d58df16670fa0735d359a9713bfef/pg8000-1.9.6.tar.gz","yanked":false,"yanked_reason":null}],"1.9.7":[{"comment_text":"","digests":{"blake2b_256":"8ff5f143b7a9981121609a3a29a2fa4890a9eb34f7251892c63e4906dc6fd631","md5":"f571bd149852cf595ec7f2a4f9ca19fe","sha256":"4e9cc7a959c004b2452d9ad44cd1abd9244f49ce06c25a87998303f290405c48"},"downloads":-1,"filename":"pg8000-1.9.7.tar.gz","has_sig":false,"md5_digest":"f571bd149852cf595ec7f2a4f9ca19fe","packagetype":"sdist","python_version":"source","requires_python":null,"size":28379,"upload_time":"2014-03-26T19:03:10","upload_time_iso_8601":"2014-03-26T19:03:10.673093Z","url":"https://files.pythonhosted.org/packages/8f/f5/f143b7a9981121609a3a29a2fa4890a9eb34f7251892c63e4906dc6fd631/pg8000-1.9.7.tar.gz","yanked":false,"yanked_reason":null}],"1.9.8":[{"comment_text":"","digests":{"blake2b_256":"65e9ec11aa94842e65712402367dde63c925ef6ed5bfa3491de9e4cda23530bc","md5":"6a5deeff0f9b7f95e066d519c4c49e13","sha256":"49fd908e79dfacb34533f0d0590a2f517ba52a8ec1d968180e281309d61de58d"},"downloads":-1,"filename":"pg8000-1.9.8.tar.gz","has_sig":false,"md5_digest":"6a5deeff0f9b7f95e066d519c4c49e13","packagetype":"sdist","python_version":"source","requires_python":null,"size":27924,"upload_time":"2014-05-05T12:35:28","upload_time_iso_8601":"2014-05-05T12:35:28.356509Z","url":"https://files.pythonhosted.org/packages/65/e9/ec11aa94842e65712402367dde63c925ef6ed5bfa3491de9e4cda23530bc/pg8000-1.9.8.tar.gz","yanked":false,"yanked_reason":null}],"1.9.9":[{"comment_text":"","digests":{"blake2b_256":"76383c2b3384c447bdac7cd3f1155894dd6522935f7c923492baed5cc3d9b2bf","md5":"691075b647e23307d4f9c3e960175c05","sha256":"004dcac27fa8b16be938a004b5db8f6a5fdd5c4beec6711e1cb1cdc0f380b9fa"},"downloads":-1,"filename":"pg8000-1.9.9.tar.gz","has_sig":false,"md5_digest":"691075b647e23307d4f9c3e960175c05","packagetype":"sdist","python_version":"source","requires_python":null,"size":27996,"upload_time":"2014-05-12T19:26:24","upload_time_iso_8601":"2014-05-12T19:26:24.483270Z","url":"https://files.pythonhosted.org/packages/76/38/3c2b3384c447bdac7cd3f1155894dd6522935f7c923492baed5cc3d9b2bf/pg8000-1.9.9.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"09a02b30d52017c4ced8fc107386666ea7573954eb708bf66121f0229df05d41","md5":"6785e25d1cf8df0fb15a5451290c2561","sha256":"436c771ede71af4d4c22ba867a30add0bc5c942d7ab27fadbb6934a487ecc8f6"},"downloads":-1,"filename":"pg8000-1.31.2-py3-none-any.whl","has_sig":false,"md5_digest":"6785e25d1cf8df0fb15a5451290c2561","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":54494,"upload_time":"2024-04-28T16:57:44","upload_time_iso_8601":"2024-04-28T16:57:44.431968Z","url":"https://files.pythonhosted.org/packages/09/a0/2b30d52017c4ced8fc107386666ea7573954eb708bf66121f0229df05d41/pg8000-1.31.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0fd70554640cbe3e193184796bedb6de23f797c03958425176faf0e694c06eb0","md5":"d133eebc067dbe2318a861f1589cafee","sha256":"1ea46cf09d8eca07fe7eaadefd7951e37bee7fabe675df164f1a572ffb300876"},"downloads":-1,"filename":"pg8000-1.31.2.tar.gz","has_sig":false,"md5_digest":"d133eebc067dbe2318a861f1589cafee","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":113513,"upload_time":"2024-04-28T16:57:47","upload_time_iso_8601":"2024-04-28T16:57:47.611102Z","url":"https://files.pythonhosted.org/packages/0f/d7/0554640cbe3e193184796bedb6de23f797c03958425176faf0e694c06eb0/pg8000-1.31.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
