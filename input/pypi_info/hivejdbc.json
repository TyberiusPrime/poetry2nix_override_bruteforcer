{"info":{"author":"OpenBigDataPlatform","author_email":"","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","Programming Language :: Java","Programming Language :: Python :: 3","Topic :: Database","Topic :: Software Development :: Libraries :: Java Libraries","Topic :: Software Development :: Libraries :: Python Modules"],"description":"# hivejdbc\nhivejdbc is `db-api-2.0` compliant **Apache Hive** driver that supports\n- kerberos\n- ssl\n- service discovery via zookeeper\n- host-connection list\n- and all other jdbc driver options\n\n# installation\n```properties\npip3 install hivejdbc\n```\n\n## Cursors\n`hivejdbc` can use a `dictonary` cursor if desired.\n\n```python\nfrom hivejdbc import connect, DictCursor\nconn = connect('example.com', 'default', cursor=DictCursor)\n\n```\n\n### Cursors support `with`\n```python\nfrom hivejdbc import connect\nconn = connect('example.com', database='default')\nwith conn.cursor() as cursor:\n    cursor.execute('select * from test.persons')\n    rows = cursor.fetchall()\n```\n\n### Cursors are iterable\n```python\nfrom hivejdbc import connect\nconn = connect('example.com', database='default')\ncursor = conn.cursor()\ncursor.execute('select * from test.persons')\nfor row in cursor:\n    print(row[0])\ncursor.close()\n```\n\n### Cursors Support\n- `fetchone()`\n- `fetchmany()`\n- `fetchall()`\n\n```python\nfrom hivejdbc import connect\nconn = connect('example.com', database='default')\ncursor = conn.cursor()\ncursor.execute('select * from test.persons')\ncursor.fetchone() # fetch first row or None\ncursor.fetchmany(5) # fetch next 5 rows\ncursor.fetchall() # fetch remaining rows or empty list\ncursor.close()\n```\n\n## Connection Strings\n`hivejdbc` features many `connect` function arguments. Many of these arguments can be ignored \nand are simply present to offer the full options provided by the **Hive** jdbc driver.\n\nTo import the `hivejdbc` connect function:\n```python\nfrom hivejdbc import connect\n```\n\n### Unsecured Hive Instance\nto connect to an unsecured hive instance listening on the default port `10000`, and the `default` database:\n```python\nconn = connect('example.com', 'default')\n```\n\nunless all required `hive-jars` are on the classpath already you'll need to define the driver path  \nJava uses `jar` files to combine many libraries into one. We'll use our `fatjar` to provide all the required \ndependencies in one place.  \nMake sure you're using the correct driver for your **Hive** version.\n```python\nconn = connect('example.com', 'default', driver='hive-client-hive-2.1.1-hdfs-3.0.3-fatjar.jar')\n```\n\nto connect with a custom port of `10015`\n```python\nconn = connect('example.com', 'default', port=10015)\n```\n\n### Username and Password\n```python\nconn = connect(host='example.com', \n               database='default', \n               port=10015, \n               user='hive_user', \n               password='secret')\n```\n\n### SSL\nIf the hive-server has `ssl` enabled you'll need to provide a `jks` trust store that contains the servers public \ncertificate.\n```python\nconn = connect(host='hive2.example.com',\n               port=10015,\n               database='default',\n               driver='hive-client-hive-2.1.1-hdfs-3.0.3-fatjar.jar',\n               ssl=True,\n               trust_store='./truststore.jks',\n               trust_password='changeit',\n               principal='hive/hive2.example.com@EXAMPLE.COM',\n               user_principal='hive/hive2.example.com',\n               user_keytab='hive.keytab',\n               realm='EXAMPLE.COM',\n               kdc='kerberosdc.example.com:88')\n```\n\n### Kerberos\nAuthenticating with kerberos can be done a few ways:\n1. get valid kerberos credentials via `kinit` before running `hivejdbc`\n1. rely on `hivejdbc` to obtain kerberos credentials via a `user-principal` and `user-keytab` provided \n   to the program.\n\n\n#### Operating System `kinit`\nConnect to...\n- a `ssl` enabled cluster\n- a secured cluster (`kerberos`)\n- using the operating systems kerberos configuration\n  default locations are searched depending on platform\n- using the operating system `kinit` token  \n  default locations for the `token-cache` are searched\n- if `kinit` has not been performed, or a `token-cache` cannot be found an exception will be thrown\n```python\nconn = connect(host='hive2.example.com',\n               port=10015,\n               database='default',\n               driver='hive-client-hive-2.1.1-hdfs-3.0.3-fatjar.jar',\n               ssl=True,\n               trust_store='./truststore.jks',\n               trust_password='changeit',\n               principal='hive/hive2.example.com@EXAMPLE.COM')\n```\n\n#### `hivejdbc` does the `kinit` via `keytab` and a custom `krb5.conf`\nconnect to... \n- a `ssl` enabled cluster\n- a secured cluster (`kerberos`)\n- using the operating systems kerberos configuration krb5.conf\n- using a `keytab` for authentication  \n  the keytab will be used to login via java's built-in kerberos implementation\n  avoiding the need for any operating system dependency\n- we will provide the `kdc` and `realm` via the `krb5_conf` argument\n  if we didn't provide `krb5_conf` argument default locations would be searched within various system paths\n```python\nconn = connect(host='hive2.example.com',\n               port=10015,\n               database='default',\n               driver='hive-client-hive-2.1.1-hdfs-3.0.3-fatjar.jar',\n               ssl=True,\n               trust_store='./truststore.jks',\n               trust_password='changeit',\n               principal='hive/hive2.example.com@EXAMPLE.COM',\n               krb5_conf='kerberos/custom_krb5.conf',\n               user_principal='hive/hive2.example.com',\n               user_keytab='user.keytab')\n```\n\n\n\n#### `hivejdbc` does the `kinit` via `keytab` with no `krb5.conf`\nconnect to...\n- an ssl enabled cluster\n- a secured cluster (kerberos)\n- not using the operating system or relying on any of its configurations\n- manually setting the realm, and the kerberos \"kdc\" to authenticate to\n- using a keytab for authentication\n- this configuration is the most portable...\n```python\nconn = connect(host='hive2.example.com',\n               port=10015,\n               database='default',\n               driver='hive-client-hive-2.1.1-hdfs-3.0.3-fatjar.jar',\n               ssl=True,\n               trust_store='./truststore.jks',\n               trust_password='changeit',\n               principal='hive/hive2.example.com@EXAMPLE.COM',\n               user_principal='hive/hive2.example.com',\n               user_keytab='hive.keytab',\n               realm='EXAMPLE.COM',\n               kdc='kerberosdc.example.com:88')\n```\n\n## Queries and Parameters\n\nFor these examples we'll setup a `test` database with a `persons` table...\n\n```python\ncursor = conn.cursor()\ncursor.execute('CREATE DATABASE IF NOT EXISTS test')\ncursor.execute('DROP TABLE IF EXISTS test.persons')\ncursor.execute('CREATE TABLE test.persons (name VARCHAR(64), age INT, address STRING, '\n               'first TIMESTAMP, balance DECIMAL(12,2))')\n```\n\nOur table sql will have 5 columns defined in the above statement:\n```sql\nCREATE TABLE test.persons (\n    name VARCHAR(64), \n    age INT, \n    address STRING,\n    first TIMESTAMP, \n    balance DECIMAL(12,2)\n)\n```\n\n### single insert\nLet's insert a single record:\n```python\ncursor.execute('''    \nINSERT INTO TABLE test.persons (name, age, address, first, balance)\nVALUES ('john doe', 35, '1583 Whistling Pines Dr, Redstone CO 80612', '08-22-1981 00:00:00', '100.10')\n''')\n```\n\n### `positional` parameterized sql query\nInsert a single record, using paramterized arguments that will automatically be escaped.    \nThis prevents sql injection as well\n\n```python\ncursor.execute('''    \nINSERT INTO TABLE test.persons (name, age, address, first, balance)\nVALUES (%s, %s, %s, %s, %s)\n''', ['Kevin Jones', 28, '802 1st st, Raleigh NC', '12-23-2020 00:00:00', 85.25])\n```\n\nThe signature of `execute` is:\n```python\ndef execute(sql, params=None):\n    \"\"\n```\n- **sql** is the sql statement\n- **params** are `named (dict)` or `positional (sequence)` arguments used by the sql statement for variable \n  substitution\n\n### `named` parameterized sql query\n**INSERT** with named parameters \n\nIn addition to positional parameters using `%s` we support `named parameters` as well.\n\nYou can see the named arguments are defined below in the `sql` statement as: `(:name, :age, :addr, :dt, :bal)`  \n\nThe second parameter to the `execute` method is a `dictionary` where the keys are equal to the parameters defined in the sql\n```python\ncursor.execute('''\nINSERT INTO TABLE test.persons (name, age, address, first, balance)\nVALUES (:name, :age, :addr, :dt, :bal)\n''', {'name': 'Bob Clark',\n      'age': 41,\n      'addr': '348 W Dickinson Rd, Norfolk VA',\n      'dt': '12-23-2020 00:00:00',\n      'bal': 200.20})\n```\n\n### Using `executemany`\nYou can execute many queries in one python statement using `executemany`  \n\nNote that this is for programmer ease of use; hive's `jdbc` driver does not support `batch-mode`, so this functionality is faked and is no more \nefficient than executing 3 statements individually.\n```\ncursor.executemany('''\nINSERT INTO TABLE test.persons (name, age, address, first, balance)\nVALUES (%s, %s, %s, %s, %s)\n''', [\n    ('john doe', 35, '1583 Whistling Pines Dr, Redstone CO 80612', '08-22-1981 00:00:00', 100.10),\n    ('Kevin Jones', 28, '802 1st st, Raleigh NC', '12-23-2020 00:00:00', 85.25),\n    ('Bob Clark', 41, '348 W Dickinson Rd, Norfolk VA', '12-23-2020 00:00:00', 200.20)\n])\n```\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/OpenBigDataPlatform/hivejdbc","keywords":"dbapi jdbc hive hadoop","license":"Apache-2.0","maintainer":"","maintainer_email":"","name":"hivejdbc","package_url":"https://pypi.org/project/hivejdbc/","platform":"","project_url":"https://pypi.org/project/hivejdbc/","project_urls":{"Homepage":"https://github.com/OpenBigDataPlatform/hivejdbc"},"provides_extra":null,"release_url":"https://pypi.org/project/hivejdbc/0.2.3/","requires_dist":["pyjdbc (==0.2.2)"],"requires_python":"","summary":"Hive database driver via jdbc","version":"0.2.3","yanked":false,"yanked_reason":null},"last_serial":9148033,"releases":{"0.1.3":[{"comment_text":"","digests":{"blake2b_256":"9b8c2bece9fcd1b4b236b0a491bdcf89a2113a3820c44e7bf0775806592ec659","md5":"1b41edb7000dc0c5d006d3111812ce7a","sha256":"5a1416e915265e80a92a8c5a3d39f8bc51986a54593a12faeddba79b36bf65c8"},"downloads":-1,"filename":"hivejdbc-0.1.3-py3-none-any.whl","has_sig":false,"md5_digest":"1b41edb7000dc0c5d006d3111812ce7a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":12176,"upload_time":"2020-12-22T03:19:29","upload_time_iso_8601":"2020-12-22T03:19:29.046116Z","url":"https://files.pythonhosted.org/packages/9b/8c/2bece9fcd1b4b236b0a491bdcf89a2113a3820c44e7bf0775806592ec659/hivejdbc-0.1.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d096bf532aad027fbe75ad07722b247399c33c030b3954d050e49cf3b7cd1d4c","md5":"e7359690282d2810b0f75bf714653865","sha256":"de1a63236ebcafc33300b5ca57bf2b0afb5786718a87feb6a9203f01b26a0fd0"},"downloads":-1,"filename":"hivejdbc-0.1.3.tar.gz","has_sig":false,"md5_digest":"e7359690282d2810b0f75bf714653865","packagetype":"sdist","python_version":"source","requires_python":null,"size":13083,"upload_time":"2020-12-22T03:19:30","upload_time_iso_8601":"2020-12-22T03:19:30.072536Z","url":"https://files.pythonhosted.org/packages/d0/96/bf532aad027fbe75ad07722b247399c33c030b3954d050e49cf3b7cd1d4c/hivejdbc-0.1.3.tar.gz","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"a367683084f0f7e1bfee2b021a386a078a3844ecfb1a5e926b1d25a701620569","md5":"2e0877e68e4f34eeb8aecd0dd7a8095f","sha256":"cae12c9a3222d81916a742fe6b741079aafcbe459e55d4ff014e358080340718"},"downloads":-1,"filename":"hivejdbc-0.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"2e0877e68e4f34eeb8aecd0dd7a8095f","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":13732,"upload_time":"2020-12-30T23:30:02","upload_time_iso_8601":"2020-12-30T23:30:02.602362Z","url":"https://files.pythonhosted.org/packages/a3/67/683084f0f7e1bfee2b021a386a078a3844ecfb1a5e926b1d25a701620569/hivejdbc-0.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"bfbd79cc468832134be973faca7f90891fe33c82e1a6871cbfde360925205bce","md5":"d8919a96ce6ec90c9233c67f173c473b","sha256":"de9c3abbf001270d5c484a5203fd36b969441f9341ee4495fb128866dcd915e7"},"downloads":-1,"filename":"hivejdbc-0.2.0.tar.gz","has_sig":false,"md5_digest":"d8919a96ce6ec90c9233c67f173c473b","packagetype":"sdist","python_version":"source","requires_python":null,"size":14957,"upload_time":"2020-12-30T23:30:03","upload_time_iso_8601":"2020-12-30T23:30:03.770334Z","url":"https://files.pythonhosted.org/packages/bf/bd/79cc468832134be973faca7f90891fe33c82e1a6871cbfde360925205bce/hivejdbc-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.2.1":[{"comment_text":"","digests":{"blake2b_256":"9b3ae55f889216599600ecad6b84d9a01f4066db91c695fb3a9813883a3c9931","md5":"e6c80a7c24d850792225fb51f9619db6","sha256":"b446b689b2fcdf17454a6bdcaadff18a705470404412749171d0ad67bb1c7ab9"},"downloads":-1,"filename":"hivejdbc-0.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"e6c80a7c24d850792225fb51f9619db6","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":13736,"upload_time":"2021-01-08T21:02:49","upload_time_iso_8601":"2021-01-08T21:02:49.173702Z","url":"https://files.pythonhosted.org/packages/9b/3a/e55f889216599600ecad6b84d9a01f4066db91c695fb3a9813883a3c9931/hivejdbc-0.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ae952170bdb158a1309614e2d3c14bea4017ccc663de88db7bcde90b4c7b0d8a","md5":"7b78fa0eebe80444e64cb9b9bccc8e09","sha256":"6c641ffedc941d819dc532a129d3d0894b723d4752a2e8902df7c954bcd7dd19"},"downloads":-1,"filename":"hivejdbc-0.2.1.tar.gz","has_sig":false,"md5_digest":"7b78fa0eebe80444e64cb9b9bccc8e09","packagetype":"sdist","python_version":"source","requires_python":null,"size":14960,"upload_time":"2021-01-08T21:02:50","upload_time_iso_8601":"2021-01-08T21:02:50.226019Z","url":"https://files.pythonhosted.org/packages/ae/95/2170bdb158a1309614e2d3c14bea4017ccc663de88db7bcde90b4c7b0d8a/hivejdbc-0.2.1.tar.gz","yanked":false,"yanked_reason":null}],"0.2.2":[{"comment_text":"","digests":{"blake2b_256":"ee527e5857cfb230b8a14df560d5269e07feca63c7e60b07b2641410ba4a0782","md5":"ccac31a2b27a4f58e8578bdc7f6fc9cb","sha256":"c9182980db3d604daaad913a539aa326bf54d396949dc38e2ce00807d8aa8d10"},"downloads":-1,"filename":"hivejdbc-0.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"ccac31a2b27a4f58e8578bdc7f6fc9cb","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":13735,"upload_time":"2021-01-11T22:59:21","upload_time_iso_8601":"2021-01-11T22:59:21.707573Z","url":"https://files.pythonhosted.org/packages/ee/52/7e5857cfb230b8a14df560d5269e07feca63c7e60b07b2641410ba4a0782/hivejdbc-0.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"568d0982c107f3721f7e0d6fd37b10153f0402c3a55482d42d6b08a910410ad8","md5":"0ed394e7d72d1df8d7c82eb60fb2e8d2","sha256":"ac77136d30166be2664698ba25ad17660deee294774a9dd91251b0f461c0aa0b"},"downloads":-1,"filename":"hivejdbc-0.2.2.tar.gz","has_sig":false,"md5_digest":"0ed394e7d72d1df8d7c82eb60fb2e8d2","packagetype":"sdist","python_version":"source","requires_python":null,"size":14959,"upload_time":"2021-01-11T22:59:22","upload_time_iso_8601":"2021-01-11T22:59:22.891896Z","url":"https://files.pythonhosted.org/packages/56/8d/0982c107f3721f7e0d6fd37b10153f0402c3a55482d42d6b08a910410ad8/hivejdbc-0.2.2.tar.gz","yanked":false,"yanked_reason":null}],"0.2.3":[{"comment_text":"","digests":{"blake2b_256":"d08584707260fb63ecc7d3e000fc34c103cf2a181644c6adb692a9d76c2d620b","md5":"f61465364f0ba78e5f08361a18fad6b5","sha256":"d384cec718e7d0eb7e66b32dfac307b2f2da302cdd70b45c3857a8b7d21b9d31"},"downloads":-1,"filename":"hivejdbc-0.2.3-py3-none-any.whl","has_sig":false,"md5_digest":"f61465364f0ba78e5f08361a18fad6b5","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":13790,"upload_time":"2021-01-16T00:32:43","upload_time_iso_8601":"2021-01-16T00:32:43.815186Z","url":"https://files.pythonhosted.org/packages/d0/85/84707260fb63ecc7d3e000fc34c103cf2a181644c6adb692a9d76c2d620b/hivejdbc-0.2.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b84bd3f2a7c28654e84003efd133ca60ce79c41bc1bad681fc9058fb932a64ff","md5":"6154d080f4d221c4eea56d653ac0814d","sha256":"c01f88c418d69354fd52f27407ff72b2b9bb4665fce34e8a2fd1d6d20db9c68a"},"downloads":-1,"filename":"hivejdbc-0.2.3.tar.gz","has_sig":false,"md5_digest":"6154d080f4d221c4eea56d653ac0814d","packagetype":"sdist","python_version":"source","requires_python":null,"size":14938,"upload_time":"2021-01-16T00:32:45","upload_time_iso_8601":"2021-01-16T00:32:45.045911Z","url":"https://files.pythonhosted.org/packages/b8/4b/d3f2a7c28654e84003efd133ca60ce79c41bc1bad681fc9058fb932a64ff/hivejdbc-0.2.3.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"d08584707260fb63ecc7d3e000fc34c103cf2a181644c6adb692a9d76c2d620b","md5":"f61465364f0ba78e5f08361a18fad6b5","sha256":"d384cec718e7d0eb7e66b32dfac307b2f2da302cdd70b45c3857a8b7d21b9d31"},"downloads":-1,"filename":"hivejdbc-0.2.3-py3-none-any.whl","has_sig":false,"md5_digest":"f61465364f0ba78e5f08361a18fad6b5","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":13790,"upload_time":"2021-01-16T00:32:43","upload_time_iso_8601":"2021-01-16T00:32:43.815186Z","url":"https://files.pythonhosted.org/packages/d0/85/84707260fb63ecc7d3e000fc34c103cf2a181644c6adb692a9d76c2d620b/hivejdbc-0.2.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b84bd3f2a7c28654e84003efd133ca60ce79c41bc1bad681fc9058fb932a64ff","md5":"6154d080f4d221c4eea56d653ac0814d","sha256":"c01f88c418d69354fd52f27407ff72b2b9bb4665fce34e8a2fd1d6d20db9c68a"},"downloads":-1,"filename":"hivejdbc-0.2.3.tar.gz","has_sig":false,"md5_digest":"6154d080f4d221c4eea56d653ac0814d","packagetype":"sdist","python_version":"source","requires_python":null,"size":14938,"upload_time":"2021-01-16T00:32:45","upload_time_iso_8601":"2021-01-16T00:32:45.045911Z","url":"https://files.pythonhosted.org/packages/b8/4b/d3f2a7c28654e84003efd133ca60ce79c41bc1bad681fc9058fb932a64ff/hivejdbc-0.2.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
