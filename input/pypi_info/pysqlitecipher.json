{"info":{"author":"Harsh Native","author_email":"Harshnative@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python :: 3"],"description":"<!-- # pysqlitecipher\n\nLigth weigth and easy to use sqlite wrapper with built in encryption system.\n\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Features \n1. Create table with the help of scheme in the form of list.\n2. Easily insert data elements in table by just passing a list of values.\n3. Built in encryption system , just set password and pass make table secure = True while creating table then all the data insert , updated , deleted , retreived will be encrypted or decrypted automatically on the fly with the help if cryptography modules fernet tech.\n\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Installation\n\n```shell\npip install pysqlitecipher==0.11\n```\n\n</br>\n</br>\n</br>\n</br>\n\n\n# How to use\n\n</br>\n</br>\n</br>\n\n## Intialise object\n\n```python\nfrom pysqlitecipher import sqlitewrapper\n\n# make the object\nobj = sqlitewrapper.SqliteCipher(dataBasePath=\"pysqlitecipher.db\" , checkSameThread=False , password=None)\n```\n\nParameters - \n1. dataBasePath - it the absolute path to the data base i.e path + database name itself\n</br>\n</br>\n\n2. checkSameThread - value used to initialse the sql connector , make it True if you are working on multi threaded application and don't want diff thread to mess with your data base.\n</br>\n</br>\n\n3. password - Here you need to pass the password you want to use which will be used to encrypt the data base.\n\n-    Note password is necessary even if you don't want encryption in your data base.\n\n-    Make sure you use a password with at least 12 digit with a mix of numbers , chars and special chars for better security.\n\n</br>\n</br>\n</br>\n</br>\n</br>\n\n\n\n## Process that occur automatically after object creation\n</br>\n\n1. Sql connection obj is intialised\n</br>\n</br>\n\n2. A table - tableNames is created with following schema\n\ncolName________Data Type\n</br>\ntableName______TEXT \n</br>\nsecured________INT\n</br>\n\n-    This table is to store and maintain records of which table as been created in data base because when using encryption on table name \"Hello\" it will yield diff strings so record is needed to be maintained.\n\n-    secured is 1 if table was created with make secure parameter=True else 0\n\n-    As tableNames table is created so its value is inserted into itself with secure parameter = 0\n</br>\n</br>\n\n\n\n3. A table - authenticationTable is created with the following schema\n\ncolName_________Data Type\n</br>\nSHA512_pass_____TEXT \n</br>\nencryptedKey____TEXT\n</br>\n\n-    SHA512_pass is used to store the value obtained after applying SHA512 algo to your password for authenticating in the future.\n\n-    encryptedKey is used to store the random key generated by first time init of the data base by Fernet in cryptography module.\n\n-    Key generated is then encrypted using onetimepad with the SHA256 value of your password and is stored in encryptedKey.\n\n-    This Key is then retreived from data base , decrypted and used to init Fernet module which handles all the encryption on next connection.\n\n-    As authenticationTable table is created so its value is inserted into tableNames with secure parameter = 0\n\n</br>\n</br>\n\nNote - So you cannot create table with names = authenticationTable , tableNames\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n\n\n## Methods\n</br>\n</br>\n\n## 1. Create Table\n\n```python\nobj.createTable(tableName , colList , makeSecure=False , commit=True)\n```\n\nCall this method if you want to create a new table in data base =\n</br>\n</br>\n\nParameters -\n\n1. tableName - name of the table you want to create\n</br>\n</br>\n\n2. colList - schema in the list form\n\n\n```python\ncolList = [\n            [colname , datatype] , \n            [colname2 , datatype] , \n          ]       \n```\n</br>\n\n-    Where colName is the name of the column\n\n-    Datatype is the type of data you want to store in column\n\n-    datatype can be - \n</br>\n    TEXT - for text / string data type\n</br>\n    REAL - for float numbers\n</br>\n    INT - for simple integer numbers\n</br>\n    JSON - for JSON Strings\n</br>\n    LIST - for python list type\n</br>\n    BLOB - for binary data\n\n\n```python \n# Example = \ncolList  = [\n            [\"rollno\" , \"INT\"],\n            [\"name\" , \"TEXT\"],\n           ]\n```\n\n</br>\n</br>\n\n3. makeSecure - Bool value , True if you want to encrypt data stored in this table , False if you don't. Cannot be changed ones the table is created.\n\n4. commit - if you want to commit the changes to the data base.\n\n</br>\n</br>\n</br>\n</br>\n\n## 2. Insert Data into table\n\n```python\nobj.insertIntoTable(tableName , insertList , commit = True)\n```\n\nCall this method if you want to insert some data into already created table.\n\n</br>\n</br>\n\nParameters -\n\n1. tableName - name of the table in which you want to insert the data\n</br>\n\n2. insertList - list of the data you want to insert\n\n```shell\nconsider this table test\n\ncolName     DataType\nrollno      INT\nname        TEXT\n\nAnd You want to insert 1 in rollno and john in name , then the insert list will be - \n\ninsertList = [1 , \"john\"]\n```\n\n</br>\n\n3. commit - if you want to commit the changes\n\n\n</br>\n</br>\n</br>\n</br>\n\n\n## 3. Get Data from table\n\n```python\nobj.getDataFromTable(tableName , raiseConversionError = True , omitID = False)\n```\n\nCall this method if you want to get data from a table\n\n</br>\n</br>\n\nParameters -\n\n1. tableName - name of the table from which you want to retrive data\n</br>\n\n2. raiseConversionError - bool Value\n\n- as after encryption every data is converted to text form (Expect binary), so on the time of getting data from table it needs to be converted back to its original form. sometimes module may encounter error such as in case string in int data type col. so if the raiseConversionError is True then a error will be raised upon encountering such error else the TEXT from of data is returned\n\n</br>\n\n3. omitID - bool value\n- when ever you insert some data a ID col is automatically maintained which is to update and delete values. but if you don't want that ID col to be returned while getting data from table, make omitID = True\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n\n\n## 4. Delete Data in Table\n\n```python\nobj.deleteDataInTable(tableName , iDValue , commit = True , raiseError = True , updateId = True)\n```\n\nCall this method if you want to delete some row from a table\n\n</br>\n</br>\n\nParameters -\n\n1. tableName - name of the table from which you want to delete a row\n</br>\n\n2. iDValue - ID value of the row which you want to delete , it is automatically maintained col and you can find ID of a row by calling method below\n\n```python\nobj.getDataFromTable(tableName , raiseConversionError = True , omitID = False)\n```\n\n</br>\n\n3. commit - if you want to commit the changes.\n</br>\n\n4. raiseError - if True , then if ID is not found, error will be raised.\n</br>\n\n5. updateId - if True , then if you delete a row from btw lets say 50 from row of 1 to 100 , then ID will be rearranged to fill the gap i.e now row will be 1 to 99 intead of 1 to 100 and 50 ID number missing. But note though this process takes some time. So if you are deleting many values it is good to make this False and instead call updateId function at the end\n\n```python\nobj.updateIDs(tableName , commit = True)\n```\n</br>\n</br>\n</br>\n</br>\n\n\n\n## 5. Update Data in Table\n\n```python\nobj.updateInTable(tableName , iDValue , colName , colValue , commit = True , raiseError = True)\n```\n\nCall this method if you want to update a value in row\n\n</br>\n</br>\n\nParameters -\n\n1. tableName - name of the table from which you want to delete a row\n</br>\n\n2. iDValue - ID value of the row which you want to update data in , it is automatically maintained col and you can find ID of a row by calling method below\n\n```python\nobj.getDataFromTable(tableName , raiseConversionError = True , omitID = False)\n```\n</br>\n\n\n3. colName - name of the column you want to change value in row\n</br>\n\n4. colValue - new value to be inserted into colName col of row with ID = iDValue\n</br>\n\n5. commit - if you want to commit the changes.\n</br>\n\n6. raiseError - if True , then if ID is not found, error will be raised.\n</br>\n\n\n</br>\n</br>\n</br>\n</br>\n\n## 6. Change Password\n\n```python\nobj.changePassword(newPass)\n```\n\nPass the new password here and the password will be changed\n -->\n\n\n\n\n\n\n\n\n# pysqlitecipher\n\nLigth weigth and easy to use sqlite wrapper with built in encryption system.\n\n\nread the documentation here - \nhttps://www.blog.letscodeofficial.com/@harshnative/encrypting-sqlite-database-in-python-using-pysqlitecipher-module-easy-and-secure-encryption-in-python-sqlite/\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/harshnative/pysqlitecipher","keywords":"","license":"","maintainer":"","maintainer_email":"","name":"pysqlitecipher","package_url":"https://pypi.org/project/pysqlitecipher/","platform":"","project_url":"https://pypi.org/project/pysqlitecipher/","project_urls":{"Homepage":"https://github.com/harshnative/pysqlitecipher"},"provides_extra":null,"release_url":"https://pypi.org/project/pysqlitecipher/0.22/","requires_dist":["cryptography","onetimepad"],"requires_python":">=3.6","summary":"Ligth weigth and easy to use sqlite wrapper with built in encryption system.","version":"0.22","yanked":false,"yanked_reason":null},"last_serial":11600748,"releases":{"0.1":[{"comment_text":"","digests":{"blake2b_256":"d3ced67bc097d48a863e2c5a1aab63c95bc71e6f912f17a1c79ae4b1b57fa2e5","md5":"41526bfe0006dd536c77d99d639e953c","sha256":"6137fb42bff6faf6958dca229e1b60350d5da0a97798a50dff4ab58ec2e4700b"},"downloads":-1,"filename":"pysqlitecipher-0.1-py3-none-any.whl","has_sig":false,"md5_digest":"41526bfe0006dd536c77d99d639e953c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":28684,"upload_time":"2021-07-14T12:20:46","upload_time_iso_8601":"2021-07-14T12:20:46.617418Z","url":"https://files.pythonhosted.org/packages/d3/ce/d67bc097d48a863e2c5a1aab63c95bc71e6f912f17a1c79ae4b1b57fa2e5/pysqlitecipher-0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"05405095501044179c1fdbd90cfd7042991725eb169df165fbf355f1d16f4fea","md5":"84fbab4ce84a6130dd82cdecfeae6a1a","sha256":"3d52d0e9464a428e72e9f268becb60f7a045aabbf39df862728527b3b9fa9082"},"downloads":-1,"filename":"pysqlitecipher-0.1.tar.gz","has_sig":false,"md5_digest":"84fbab4ce84a6130dd82cdecfeae6a1a","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":27637,"upload_time":"2021-07-14T12:20:48","upload_time_iso_8601":"2021-07-14T12:20:48.707395Z","url":"https://files.pythonhosted.org/packages/05/40/5095501044179c1fdbd90cfd7042991725eb169df165fbf355f1d16f4fea/pysqlitecipher-0.1.tar.gz","yanked":false,"yanked_reason":null}],"0.11":[{"comment_text":"","digests":{"blake2b_256":"1cf75f8bf56f06778dd72527b01993a5ddb0d4915959f5668fe0d0e199eb3e8e","md5":"5f39dfe223ccc2a783f701ca9446fe2c","sha256":"dba5eb3d7fc387fad40efbb8de3736d4d929bbe5e85fca11f5f4d094622ad838"},"downloads":-1,"filename":"pysqlitecipher-0.11-py3-none-any.whl","has_sig":false,"md5_digest":"5f39dfe223ccc2a783f701ca9446fe2c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":35271,"upload_time":"2021-07-14T12:31:56","upload_time_iso_8601":"2021-07-14T12:31:56.844841Z","url":"https://files.pythonhosted.org/packages/1c/f7/5f8bf56f06778dd72527b01993a5ddb0d4915959f5668fe0d0e199eb3e8e/pysqlitecipher-0.11-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4b81fa3abcb32d44d7635708a9f7589046b894864aff0bc2796363d6167eff01","md5":"5ee2a0c32384f5b30f91a7e5b4b8a66b","sha256":"eda3990ba4648adbbcd7175fcc38038b6c05860d789e6fbd54affff4c543ac48"},"downloads":-1,"filename":"pysqlitecipher-0.11.tar.gz","has_sig":false,"md5_digest":"5ee2a0c32384f5b30f91a7e5b4b8a66b","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":35930,"upload_time":"2021-07-14T12:31:59","upload_time_iso_8601":"2021-07-14T12:31:59.584946Z","url":"https://files.pythonhosted.org/packages/4b/81/fa3abcb32d44d7635708a9f7589046b894864aff0bc2796363d6167eff01/pysqlitecipher-0.11.tar.gz","yanked":false,"yanked_reason":null}],"0.12":[{"comment_text":"","digests":{"blake2b_256":"2a3714e46cb839390dd71516efe2a8e1d3885fc9c1852a06a32af5cfdfa3f7ef","md5":"832dad4a8ed33a9e976629709e538fe1","sha256":"85327a335b3489cc9835fa117c28b51f264a45aab9a771266565869e74457c8e"},"downloads":-1,"filename":"pysqlitecipher-0.12-py3-none-any.whl","has_sig":false,"md5_digest":"832dad4a8ed33a9e976629709e538fe1","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":28807,"upload_time":"2021-08-20T10:37:03","upload_time_iso_8601":"2021-08-20T10:37:03.050792Z","url":"https://files.pythonhosted.org/packages/2a/37/14e46cb839390dd71516efe2a8e1d3885fc9c1852a06a32af5cfdfa3f7ef/pysqlitecipher-0.12-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f6b8e7d2011af4371d4edf746b20a8129053fa188053ef8e4b5467e0a92e9ee9","md5":"a3c07251ee30ab30f6d1f50a73cfad6d","sha256":"1959f7c773d2e481060b925099fe21a17017f130a634f8cc665a8357b3f1ca34"},"downloads":-1,"filename":"pysqlitecipher-0.12.tar.gz","has_sig":false,"md5_digest":"a3c07251ee30ab30f6d1f50a73cfad6d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":27811,"upload_time":"2021-08-20T10:37:05","upload_time_iso_8601":"2021-08-20T10:37:05.950260Z","url":"https://files.pythonhosted.org/packages/f6/b8/e7d2011af4371d4edf746b20a8129053fa188053ef8e4b5467e0a92e9ee9/pysqlitecipher-0.12.tar.gz","yanked":false,"yanked_reason":null}],"0.13":[{"comment_text":"","digests":{"blake2b_256":"f119eb6351b22e3896bf6452ce469b1dcb3e4f1d54b79aff3fb9552bf13f8526","md5":"ff84c3c0710a63b31490e74665322178","sha256":"32d572093e62bda5a77ff76950fd8a1f410ec67d6f36c26b8d1c8e0949209f1b"},"downloads":-1,"filename":"pysqlitecipher-0.13-py3-none-any.whl","has_sig":false,"md5_digest":"ff84c3c0710a63b31490e74665322178","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":28806,"upload_time":"2021-08-20T11:34:52","upload_time_iso_8601":"2021-08-20T11:34:52.246958Z","url":"https://files.pythonhosted.org/packages/f1/19/eb6351b22e3896bf6452ce469b1dcb3e4f1d54b79aff3fb9552bf13f8526/pysqlitecipher-0.13-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f48772e0053027893f41bf461c8ca3b55ed62005917bf1b172f18dd1af7b0a50","md5":"60e1b008d33150c95f48174f7bf103ba","sha256":"08e75f5244d266e8523caf8cc0f685dd204db2542434c8ac143757b52f29abb8"},"downloads":-1,"filename":"pysqlitecipher-0.13.tar.gz","has_sig":false,"md5_digest":"60e1b008d33150c95f48174f7bf103ba","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":27810,"upload_time":"2021-08-20T11:34:54","upload_time_iso_8601":"2021-08-20T11:34:54.680767Z","url":"https://files.pythonhosted.org/packages/f4/87/72e0053027893f41bf461c8ca3b55ed62005917bf1b172f18dd1af7b0a50/pysqlitecipher-0.13.tar.gz","yanked":false,"yanked_reason":null}],"0.2":[{"comment_text":"","digests":{"blake2b_256":"46f178171bcdebaaa7bdc91cbb69a157c297225f3dfa22bd4a30ac58f1d324e1","md5":"2cdda6e6f433a47c4a566fa61a2f4daa","sha256":"3751cad3719c7e1108003af935d76bd3e0634a4bf538501f55f93678213269a6"},"downloads":-1,"filename":"pysqlitecipher-0.2-py3-none-any.whl","has_sig":false,"md5_digest":"2cdda6e6f433a47c4a566fa61a2f4daa","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":28796,"upload_time":"2021-08-27T05:53:13","upload_time_iso_8601":"2021-08-27T05:53:13.192677Z","url":"https://files.pythonhosted.org/packages/46/f1/78171bcdebaaa7bdc91cbb69a157c297225f3dfa22bd4a30ac58f1d324e1/pysqlitecipher-0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ebbd0c7e94621757ce3fd802152fd1ef0cb895ca475c9897d1e102187006a622","md5":"d757c85aefc7cce368fe5115c5253ffb","sha256":"6325cbe110fa2b024e36989892c50d6a3272b96be0e35be446e587f64487df24"},"downloads":-1,"filename":"pysqlitecipher-0.2.tar.gz","has_sig":false,"md5_digest":"d757c85aefc7cce368fe5115c5253ffb","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":27809,"upload_time":"2021-08-27T05:53:15","upload_time_iso_8601":"2021-08-27T05:53:15.634359Z","url":"https://files.pythonhosted.org/packages/eb/bd/0c7e94621757ce3fd802152fd1ef0cb895ca475c9897d1e102187006a622/pysqlitecipher-0.2.tar.gz","yanked":false,"yanked_reason":null}],"0.21":[{"comment_text":"","digests":{"blake2b_256":"f72f2fd4b14444da5da3a4dca1b3e1ae04252ba3e8a0efb2064cf8373229cf9e","md5":"dd2d865fe0cfca062a3fbcd9979bc57c","sha256":"782e99aac80ceff34ea000df43776f658459cb3e32e310480920dcfd4eec0c25"},"downloads":-1,"filename":"pysqlitecipher-0.21-py3-none-any.whl","has_sig":false,"md5_digest":"dd2d865fe0cfca062a3fbcd9979bc57c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":28824,"upload_time":"2021-09-06T10:49:10","upload_time_iso_8601":"2021-09-06T10:49:10.151728Z","url":"https://files.pythonhosted.org/packages/f7/2f/2fd4b14444da5da3a4dca1b3e1ae04252ba3e8a0efb2064cf8373229cf9e/pysqlitecipher-0.21-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3aa548055741ec6836bd8fd971e310dce657ca81156d703b7225a1a86287d9fa","md5":"b883c3e7aa1c52c2da675eaed4c4d68f","sha256":"1e5df85773db6dfbaf3eb725d97979f930adc9b4e73302dd7c3c157246d98234"},"downloads":-1,"filename":"pysqlitecipher-0.21.tar.gz","has_sig":false,"md5_digest":"b883c3e7aa1c52c2da675eaed4c4d68f","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":27815,"upload_time":"2021-09-06T10:49:11","upload_time_iso_8601":"2021-09-06T10:49:11.951210Z","url":"https://files.pythonhosted.org/packages/3a/a5/48055741ec6836bd8fd971e310dce657ca81156d703b7225a1a86287d9fa/pysqlitecipher-0.21.tar.gz","yanked":false,"yanked_reason":null}],"0.22":[{"comment_text":"","digests":{"blake2b_256":"9ce7c4372b322434355c28676837927d1570b77ab6fae0784135594d7dbcecc7","md5":"50379668f4693c43f9c39f3ef6a10923","sha256":"a9ab8c73346559e863c5777664b32ac89ec0b04efaa469f022289e7df15a12de"},"downloads":-1,"filename":"pysqlitecipher-0.22-py3-none-any.whl","has_sig":false,"md5_digest":"50379668f4693c43f9c39f3ef6a10923","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":36173,"upload_time":"2021-10-01T05:56:17","upload_time_iso_8601":"2021-10-01T05:56:17.237204Z","url":"https://files.pythonhosted.org/packages/9c/e7/c4372b322434355c28676837927d1570b77ab6fae0784135594d7dbcecc7/pysqlitecipher-0.22-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"58bd2bf5798c779d92ff07b405b2af726ff64e9e8244e8bb4d1fe8653551eebd","md5":"5ff072a46650ae7582c1dc6988e11c2a","sha256":"daff63ca2719fbd698aa10f64493c4b31fb67877a8e8dbb8090e9c03a1b1a9e4"},"downloads":-1,"filename":"pysqlitecipher-0.22.tar.gz","has_sig":false,"md5_digest":"5ff072a46650ae7582c1dc6988e11c2a","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":14018,"upload_time":"2021-10-01T05:56:19","upload_time_iso_8601":"2021-10-01T05:56:19.905668Z","url":"https://files.pythonhosted.org/packages/58/bd/2bf5798c779d92ff07b405b2af726ff64e9e8244e8bb4d1fe8653551eebd/pysqlitecipher-0.22.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"9ce7c4372b322434355c28676837927d1570b77ab6fae0784135594d7dbcecc7","md5":"50379668f4693c43f9c39f3ef6a10923","sha256":"a9ab8c73346559e863c5777664b32ac89ec0b04efaa469f022289e7df15a12de"},"downloads":-1,"filename":"pysqlitecipher-0.22-py3-none-any.whl","has_sig":false,"md5_digest":"50379668f4693c43f9c39f3ef6a10923","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":36173,"upload_time":"2021-10-01T05:56:17","upload_time_iso_8601":"2021-10-01T05:56:17.237204Z","url":"https://files.pythonhosted.org/packages/9c/e7/c4372b322434355c28676837927d1570b77ab6fae0784135594d7dbcecc7/pysqlitecipher-0.22-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"58bd2bf5798c779d92ff07b405b2af726ff64e9e8244e8bb4d1fe8653551eebd","md5":"5ff072a46650ae7582c1dc6988e11c2a","sha256":"daff63ca2719fbd698aa10f64493c4b31fb67877a8e8dbb8090e9c03a1b1a9e4"},"downloads":-1,"filename":"pysqlitecipher-0.22.tar.gz","has_sig":false,"md5_digest":"5ff072a46650ae7582c1dc6988e11c2a","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":14018,"upload_time":"2021-10-01T05:56:19","upload_time_iso_8601":"2021-10-01T05:56:19.905668Z","url":"https://files.pythonhosted.org/packages/58/bd/2bf5798c779d92ff07b405b2af726ff64e9e8244e8bb4d1fe8653551eebd/pysqlitecipher-0.22.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
