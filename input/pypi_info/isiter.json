{"info":{"author":"Johannes Fischer","author_email":"<aulasparticularesdealemaosp@gmail.com>","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.9","Topic :: Scientific/Engineering :: Visualization","Topic :: Software Development :: Libraries :: Python Modules","Topic :: Text Editors :: Text Processing","Topic :: Text Processing :: Filters","Topic :: Text Processing :: General","Topic :: Text Processing :: Indexing","Topic :: Utilities"],"description":"\n# Determines if an object is iterable\n\n## This function uses a couple of different methods to find out if a variable is iterable\n\n```python\n$pip install isiter\nfrom isiter import isiter\n\nfrom collections import namedtuple\nfields_cor = \"qt rgb r g b\"\nclassname_cor = \"cor\"\nColorinfos = namedtuple(classname_cor, fields_cor)\nimport pandas as pd\nimport numpy as np\nfrom bs4 import BeautifulSoup\n\nhtml = \"\"\"\n<div class=\"div1\">\n<p>hello</p>\n<p>hi</p>\n    <div class=\"nesteddiv\">\n        <p>one</p>\n        <p>two</p>\n        <p>three</p>\n    </div>\n</div>\n\"\"\"\n\nprint(f\"\"\"{isiter({1:2,3:2}, )=}\"\"\")\nprint(f\"\"\"{isiter([1,2,34], )=}\"\"\")\nprint(f\"\"\"{isiter((1,2,34), )=}\"\"\")\nprint(f\"\"\"{isiter(Colorinfos(1,2,34,3,3), )=}\"\"\")\nprint(f\"\"\"{isiter(sorted((1,2,34,3,3)), )=}\"\"\")\nprint(f\"\"\"{isiter(({1, 2, 34, 3, 3}), )=}\"\"\")\nprint(f\"\"\"{isiter((55), )=}\"\"\")\nprint(f\"\"\"{isiter((55.44), )=}\"\"\")\nprint(f\"\"\"{isiter((True), )=}\"\"\")\nprint(f\"\"\"{isiter((3.14 + 2.71j), )=}\"\"\")\nprint(f\"\"\"{isiter((pd.DataFrame([[3,3,3],[3,3,3]])), )=}\"\"\")\nprint(f\"\"\"{isiter((pd.Series([[3,3,3]])), )=}\"\"\")\nprint(f\"\"\"{isiter((np.array([[3,3,3]])), )=}\"\"\")\nprint(f\"\"\"{isiter((np.ndarray([3,3,3])), )=}\"\"\")\nprint(f\"\"\"{isiter((pd.NA), )=}\"\"\")\nprint(f\"\"\"{isiter((np.nan), )=}\"\"\")\nprint(f\"\"\"{isiter(BeautifulSoup(html, 'lxml'), )=}\"\"\")\nprint(f\"\"\"{isiter(bytearray(b'dgfasds'), )=}\"\"\")\nprint(\n    f\"\"\"{isiter(bytearray(b'dgfasds'),consider_non_iter=(str, bytes, bytearray) )=}\"\"\"\n)\nprint(f\"\"\"{isiter(b'bababa', )=}\"\"\")\nprint(f\"\"\"{isiter(b'bababa',consider_non_iter=(str, bytes, bytearray) )=}\"\"\")\nprint(f\"\"\"{isiter('str1', )=}\"\"\")\nprint(f\"\"\"{isiter('str2',consider_non_iter=(str, bytes, bytearray))=}\"\"\")\n\n\n\n{1: 2, 3: 2} in (list, tuple, set, frozenset, dict)\nisiter({1:2,3:2}, )=True\n[1, 2, 34] in (list, tuple, set, frozenset, dict)\nisiter([1,2,34], )=True\n(1, 2, 34) in (list, tuple, set, frozenset, dict)\nisiter((1,2,34), )=True\ncor(qt=1, rgb=2, r=3 in (list, tuple, set, frozenset, dict)\nisiter(Colorinfos(1,2,34,3,3), )=True\n[1, 2, 3, 3, 34] in (list, tuple, set, frozenset, dict)\nisiter(sorted((1,2,34,3,3)), )=True\n{1, 2, 3, 34} in (list, tuple, set, frozenset, dict)\nisiter(({1, 2, 34, 3, 3}), )=True\n55 in (int, float, bool, complex, type(None))\nisiter((55), )=False\n55.44 in (int, float, bool, complex, type(None))\nisiter((55.44), )=False\nTrue in (int, float, bool, complex, type(None))\nisiter((True), )=False\n(3.14+2.71j) in (int, float, bool, complex, type(None))\nisiter((3.14 + 2.71j), )=False\n   0  1  2\n0  3  3   == Iterable\nisiter((pd.DataFrame([[3,3,3],[3,3,3]])), )=True\n0    [3, 3, 3]\ndtype == Iterable\nisiter((pd.Series([[3,3,3]])), )=True\narray([[3, 3, 3]]) == Iterable\nisiter((np.array([[3,3,3]])), )=True\narray([[[6.23042070e == Iterable\nisiter((np.ndarray([3,3,3])), )=True\n<NA> not iter\nisiter((pd.NA), )=False\nnan in (int, float, bool, complex, type(None))\nisiter((np.nan), )=False\n<html><body><div cla == Iterable\nisiter(BeautifulSoup(html, 'lxml'), )=True\nbytearray(b'dgfasds' == Iterable\nisiter(bytearray(b'dgfasds'), )=True\nbytearray(b'dgfasds' in (<class 'str'>, <class 'bytes'>, <class 'bytearray'>)\nisiter(bytearray(b'dgfasds'),consider_non_iter=(str, bytes, bytearray) )=False\nb'bababa' == Iterable\nisiter(b'bababa', )=True\nb'bababa' in (<class 'str'>, <class 'bytes'>, <class 'bytearray'>)\nisiter(b'bababa',consider_non_iter=(str, bytes, bytearray) )=False\n'str1' == Iterable\nisiter('str1', )=True\n'str2' in (<class 'str'>, <class 'bytes'>, <class 'bytearray'>)\nisiter('str2',consider_non_iter=(str, bytes, bytearray))=False\n```\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/hansalemaos/isiter","keywords":"iterable","license":"MIT","maintainer":"","maintainer_email":"","name":"isiter","package_url":"https://pypi.org/project/isiter/","platform":null,"project_url":"https://pypi.org/project/isiter/","project_urls":{"Homepage":"https://github.com/hansalemaos/isiter"},"provides_extra":null,"release_url":"https://pypi.org/project/isiter/0.10/","requires_dist":null,"requires_python":"","summary":"Checks if a variable is iterable","version":"0.10","yanked":false,"yanked_reason":null},"last_serial":16266587,"releases":{"0.10":[{"comment_text":"","digests":{"blake2b_256":"c1457ac7e3812eea8253c1f9aaddb808d7c3e5631b2684b36f8c019a53919576","md5":"6bb281aa1d9e9d46776fea40ec97dc9d","sha256":"252a0c669236ab1bd4d99f9f2294a81b6c3a24707a93d6774813d316dd5b0599"},"downloads":-1,"filename":"isiter-0.10-py3-none-any.whl","has_sig":false,"md5_digest":"6bb281aa1d9e9d46776fea40ec97dc9d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":5916,"upload_time":"2022-12-31T12:15:13","upload_time_iso_8601":"2022-12-31T12:15:13.414167Z","url":"https://files.pythonhosted.org/packages/c1/45/7ac7e3812eea8253c1f9aaddb808d7c3e5631b2684b36f8c019a53919576/isiter-0.10-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"282b375eca80f41b8fa7a068096f0fb942a2a3718e88e105509209139b9f15fe","md5":"aa10c7fe07d09f96897bf7e9e731a9e7","sha256":"8cc54796fe5204ab6e663c6d49369787aadd56d095f0b539f875ab3c02cc96bd"},"downloads":-1,"filename":"isiter-0.10.tar.gz","has_sig":false,"md5_digest":"aa10c7fe07d09f96897bf7e9e731a9e7","packagetype":"sdist","python_version":"source","requires_python":null,"size":4422,"upload_time":"2022-12-31T12:15:14","upload_time_iso_8601":"2022-12-31T12:15:14.961001Z","url":"https://files.pythonhosted.org/packages/28/2b/375eca80f41b8fa7a068096f0fb942a2a3718e88e105509209139b9f15fe/isiter-0.10.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"c1457ac7e3812eea8253c1f9aaddb808d7c3e5631b2684b36f8c019a53919576","md5":"6bb281aa1d9e9d46776fea40ec97dc9d","sha256":"252a0c669236ab1bd4d99f9f2294a81b6c3a24707a93d6774813d316dd5b0599"},"downloads":-1,"filename":"isiter-0.10-py3-none-any.whl","has_sig":false,"md5_digest":"6bb281aa1d9e9d46776fea40ec97dc9d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":5916,"upload_time":"2022-12-31T12:15:13","upload_time_iso_8601":"2022-12-31T12:15:13.414167Z","url":"https://files.pythonhosted.org/packages/c1/45/7ac7e3812eea8253c1f9aaddb808d7c3e5631b2684b36f8c019a53919576/isiter-0.10-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"282b375eca80f41b8fa7a068096f0fb942a2a3718e88e105509209139b9f15fe","md5":"aa10c7fe07d09f96897bf7e9e731a9e7","sha256":"8cc54796fe5204ab6e663c6d49369787aadd56d095f0b539f875ab3c02cc96bd"},"downloads":-1,"filename":"isiter-0.10.tar.gz","has_sig":false,"md5_digest":"aa10c7fe07d09f96897bf7e9e731a9e7","packagetype":"sdist","python_version":"source","requires_python":null,"size":4422,"upload_time":"2022-12-31T12:15:14","upload_time_iso_8601":"2022-12-31T12:15:14.961001Z","url":"https://files.pythonhosted.org/packages/28/2b/375eca80f41b8fa7a068096f0fb942a2a3718e88e105509209139b9f15fe/isiter-0.10.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
