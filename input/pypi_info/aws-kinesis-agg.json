{"info":{"author":"Ian Meyers","author_email":"meyersi@amazon.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: Apache Software License","Natural Language :: English","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3.6","Topic :: Software Development :: Libraries :: Python Modules","Topic :: Utilities"],"description":"# Python Kinesis Aggregation & Deaggregation Modules\n\nThe Kinesis Aggregation/Deaggregation Modules for Python provide the ability to do in-memory aggregation and deaggregation of standard Kinesis user records using the [Kinesis Aggregated Record Format](https://github.com/awslabs/amazon-kinesis-producer/blob/master/aggregation-format.md) to allow for more efficient transmission of records.\n\n## Installation\n\nThe Python record aggregation/deaggregation modules are available on the Python Package Index (PyPI) as [aws_kinesis_agg](https://pypi.python.org/pypi/aws_kinesis_agg).  You can install it via the `pip` command line tool:\n\n```\npip install aws_kinesis_agg\n```\n\nAlternately, you can simply copy the aws_kinesis_agg module from this repository and use it directly with the caveat that the [Google protobuf module](https://pypi.python.org/pypi/protobuf) must also be available (if you install via `pip`, this dependency will be handled for you).\n\n## Record Aggregation Module (aggregator.py)\n\nThe [aggregator.py](aggregator.py) module contains Python classes that allow you to aggregate records using the [Kinesis Aggregated Record Format](https://github.com/awslabs/amazon-kinesis-producer/blob/master/aggregation-format.md).  Using record aggregation improves throughput and reduces costs when writing producer applications that publish data to Amazon Kinesis.\n\n### Caution - this module is only suitable for low-value messages which are processed in aggregate. Do not use Kinesis Aggregation for data which is sensitive or where every message must be delivered, and where the KCL (including with AWS Lambda) is used for processing. [DATA LOSS CAN OCCUR.](../potential_data_loss.md)\n\n### Usage\n\nThe record aggregation module provides a simple interface for creating protocol buffers encoded data in a producer application. The `aws_kinesis_agg` module provides methods for efficiently packing individual records into larger aggregated records, and deaggregating large records into a set of 'real' user records.\n\nWhen using aggregation, you create a managing class which helps you to target the correct Kinesis Shard, and then provide a partition key, raw data and (optionally) an explicit hash key for each record.  You can choose to either provide a callback function that will be invoked when a fully-packed aggregated record is available or you can add records and check byte sizes or number of records until the aggregated record is suitably full.  You're guaranteed that any aggregated record returned from the RecordAggregator object will fit within a single PutRecord request to Kinesis. As you produce records in your producer application, you will aggregate them using a base `RecordAggregator` object, which provides methods to do both iterative aggregation and callback-based aggregation.\n\nThere are two ways to create aggregated user records. The first is to use a raw `RecordAggregator`, which can aggregate messages *which are targeted for a single Shard*, or use the `AggregationManager` to aggregate messages which may span Shards. From version `1.2.0`, we __highly__ recommend the use of `AggregationManager` to limit any exposure to data loss.\n\n### Raw Aggregation\n\nYou can construct a raw `RecordAggregator` class with:\n\n```\nimport aws_kinesis_agg as agg\nkinesis_aggregator = agg.RecordAggregator()\n```\n\n#### Iterative Aggregation\n\nThe iterative aggregation method involves adding records one at a time to the RecordAggregator and checking the response to determine when a full aggregated record is available.  The `add_user_record` method returns `None` when there is room for more records in the existing aggregated record and returns an `AggRecord` object when a full aggregated record is available for transmission.\n\n```\nfor rec in records:\n    result = kinesis_aggregator.add_user_record(rec.PartitionKey, rec.Data, rec.ExplicitHashKey)\n    if result:\n        #Send the result to Kinesis    \n```\n\n#### Callback-based Aggregation\n\nTo use callback-based aggregation, you must register a callback via the `on_record_complete` method.  As you add individual records to the `RecordAggregator` object, you will receive a callback (on a separate thread) whenever a new fully-packed aggregated record is available.\n\n```\ndef my_callback(agg_record):\n    #Send the record to Kinesis\n   \n...\n\nkinesis_aggregator.on_record_complete(my_callback)\nfor rec in records:\n    kinesis_aggregator.add_user_record(rec.PartitionKey, rec.Data, rec.ExplicitHashKey)\n```\n\n### Examples\n\nThis repository includes an example script that uses the record aggregation module [aggregator.py](aggregator.py) to aggregate records and transmit them to Amazon Kinesis using callback-based aggregation. You can find this example functionality in the file [kinesis_publisher.py](src/kinesis_publisher.py), which you can use as a template for your own applications to to easily build and transmit encoded data.\n\n#### Callback-based Aggregation and Transmission Example\n\nThe example below assumes you are running Python version 2.7.x and also requires you to install and configure the `boto3` module.  You can install `boto3` via `pip install boto3` or any other normal Python install mechanism.  To configure the example to be able to publish to your Kinesis stream, make sure you follow the instructions in the [Boto3 Configuration Guide](https://boto3.readthedocs.org/en/latest/guide/configuration.html).  The example below has been stripped down for brevity, but you can still find the full working version at [kinesis_publisher.py](src/kinesis_publisher.py). The abridged example is:\n\n```\nimport boto3\nimport aws_kinesis_agg.aggregator\n    \nkinesis_client = None\n    \ndef send_record(agg_record):\n    global kinesis_client\n    pk, ehk, data = agg_record.get_contents()\n    kinesis_client.put_record(StreamName='MyKinesisStreamName',\n                                  Data=data,\n                                  PartitionKey=pk,\n                                  ExplicitHashKey=ehk)\n    \nif __name__ == '__main__':\n    kinesis_client = boto3.client('kinesis', region_name='us-west-2')\n     \n    kinesis_agg = aws_kinesis_agg.aggregator.RecordAggregator()\n    kinesis_agg.on_record_complete(send_record)\n    \n    for i in range(0,1024):\n        pk, ehk, data = get_record(...)\n        kinesis_agg.add_user_record(pk, data, ehk)\n    \n    #Clear out any remaining records that didn't trigger a callback yet\n    send_record(kinesis_agg.clear_and_get()) \n```\n\n\n## Record Deaggregation Module (deaggregator.py)\n\nThe [deaggregator.py](deaggregator.py) module contains Python classes that allow you to deaggregate records that were transmitted using the [Kinesis Aggregated Record Format](https://github.com/awslabs/amazon-kinesis-producer/blob/master/aggregation-format.md), including those transmitted by the Kinesis Producer Library.  This library will allow you to deaggregate aggregated records in any Python environment, including AWS Lambda.\n\n### Usage\n\nThe record deaggregation module provides a simple interface for working with Kinesis aggregated message data in a consumer application. The `aws_kinesis_agg` module provides methods for both bulk and generator-based processing. \n\nWhen using deaggregation, you provide an aggregated Kinesis Record and get back multiple Kinesis User Records. If a Kinesis Record that is provided is not an aggregated Kinesis record, that's perfectly fine - you'll just get a single record output from the single record input. A Kinesis user record which is returned from deaggregation looks like:\n\n```\n{\n    'eventVersion' : String - The version number of the Kinesis event used\n    'eventID' : String - The unique ID of this Kinesis event\n    'kinesis' :\n    {\n        'partitionKey' : String - The Partition Key provided when the record was submitted\n        'explicitHashKey' : String - The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash (or None if absent) \n        'data' : String - The original data transmitted by the producer (base64 encoded)\n        'kinesisSchemaVersion' : String - The version number of the Kinesis message schema used,\n        'sequenceNumber' : BigInt - The sequence number assigned to the record on submission to Kinesis\n        'subSequenceNumber' : Int - The sub-sequence number for the User Record in the aggregated record, if aggregation was in use by the producer\n        'aggregated' : Boolean - Always True for a user record extracted from a Kinesis aggregated record\n    },\n    'invokeIdentityArn' : String - The ARN of the IAM user used to invoke this Lambda function\n    'eventName' : String - Always \"aws:kinesis:record\" for a Kinesis record\n    'eventSourceARN' : String - The ARN of the source Kinesis stream\n    'eventSource' : String - Always \"aws:kinesis\" for a Kinesis record\n    'awsRegion' : String - The name of the source region for the event (e.g. \"us-east-1\")\n}\n```\n\nTo get started, import the `aws_kinesis_agg` module:\n\n`import aws_kinesis_agg`\n\nNext, when you receive a Kinesis Record in your consumer application, you will extract the user records using the deaggregation methods available in the `aws_kinesis_agg` module.\n\n**IMPORTANT**: The deaggregation methods available in the `aws_kinesis_agg` module expect input records in the same dictionary-based format that they are normally received in from AWS Lambda. See the [Programming Model for Authoring Lambda Functions in Python](https://docs.aws.amazon.com/lambda/latest/dg/python-programming-model.html) section of the AWS documentation for more details.\n\n#### Bulk Conversion\n\nThe bulk conversion method of deaggregation takes in a list of Kinesis Records, extracts all the aggregated user records and accumulates them into a list.  Any records that are passed in to this method that are not Kinesis aggregated records will be returned unchanged.  The method returns a list of Kinesis user records in the same format as they are normally delivered by Lambda's Kinesis event handler.\n\n```\nuser_records = deaggregate_records(raw_kinesis_records)\n```\n\n#### Generator-based Conversion\n\nThe generator-based conversion method of deaggregation uses a Python [generator function](https://wiki.python.org/moin/Generators) to extract user records from a raw Kinesis Record one at a time in an iterative fashion.  Any records that are passed in to this method that are not Kinesis aggregated records will be returned unchanged.  For example, you could use this code to iterate through each deaggregated record:\n\n```\nfor record in iter_deaggregate_records(raw_kinesis_records):        \n        \n    #Process each record\n    pass \n```\n\n### Examples\n\nThis module includes two example AWS Lambda function in the file [lambda_function.py](src/lambda_function.py) that give you the ability to easily build new functions to process Kinesis aggregated data via AWS Lambda.\n\n#### Bulk Conversion Example\n\n```\nfrom __future__ import print_function\n\nfrom aws_kinesis_agg.deaggregator import deaggregate_records\nimport base64\n\ndef lambda_bulk_handler(event, context):\n    \n    raw_kinesis_records = event['Records']\n    \n    #Deaggregate all records in one call\n    user_records = deaggregate_records(raw_kinesis_records)\n    \n    #Iterate through deaggregated records\n    for record in user_records:        \n        \n        # Kinesis data in Python Lambdas is base64 encoded\n        payload = base64.b64decode(record['kinesis']['data'])\n        \n        #TODO: Process each record\n    \n    return 'Successfully processed {} records.'.format(len(user_records))\n```\n\n#### Generator-based Conversion Example\n\n```\nfrom __future__ import print_function\n\nfrom aws_kinesis_agg.deaggregator import iter_deaggregate_records\nimport base64\n\ndef lambda_generator_handler(event, context):\n    \n    raw_kinesis_records = event['Records']\n    record_count = 0\n    \n    #Deaggregate all records using a generator function\n    for record in iter_deaggregate_records(raw_kinesis_records):   \n             \n        # Kinesis data in Python Lambdas is base64 encoded\n        payload = base64.b64decode(record['kinesis']['data'])\n       \n        #TODO: Process each record\n       \n        record_count += 1\n        \n    return 'Successfully processed {} records.'.format(record_count)\n```\n\n### Build & Deploy a Lambda Function to process Kinesis Records\n\nOne easy way to get started processing Kinesis data is to use AWS Lambda.  By building on top of the existing [lambda_function.py](lambda_function.py) module in this repository, you can take advantage of Kinesis message deaggregation features without having to write boilerplate code.\n\nWhen you're ready to make a build and upload to AWS Lambda, you have two choices:\n\n* Follow the existing instructions at [Creating a Deployment Package (Python)](https://docs.aws.amazon.com/lambda/latest/dg/lambda-python-how-to-create-deployment-package.html)\n\nOR \n\n* At the root of this Python project, you can find a sample build file called [make_lambda_build.py](make_lambda_build.py).  This file is a platform-agnostic build script that will take the existing Python project in this demo and package it in a single build file called `python_lambda_build.zip` that you can upload directly to AWS Lambda.\n\nIn order to use the build script, make sure that the python `pip` tool is available on your command line.  If you have other `pip` dependencies, make sure to add them to the `PIP_DEPENDENCIES` list at the top of the [make_lambda_build.py](make_lambda_build.py).  Then run this command:\n\n```\npython make_lambda_build.py --output_dir <mydir>\n```\n\nThe build script will create a new folder called `build`, copy all the Python source files, download any necessary dependencies via `pip` and create the file `<mydir>/python_lambda_build.zip` that you can deploy to AWS Lambda.\n\n#### Important Build Note for AWS Lambda Users\n\nIf you choose to make your own Python zip file to deploy to AWS Lambda, be aware that the Google [protobuf](https://pypi.python.org/pypi/protobuf) module normally relies on using a Python `pth` setting to make the root `google` module importable.  If you see an error in your AWS Lambda logs such as:\n\n```\n\"Unable to import module 'lambda_function': No module named google.protobuf\"\n```\n\nYou can go into the `google` module folder (the same folder containing the `protobuf` folder) and make an empty file called `__init__.py`.  Once you rezip everything and redeploy, this should fix the error above.\n\n**NOTE**: If you used the provided [`make_lambda_build.py`](make_lambda_build.py) script, this issue is already handled for you.\n \n----\n\nCopyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"http://github.com/awslabs/kinesis-aggregation","keywords":"aws,kinesis,aggregation,deaggregation,kpl","license":"Apache-2.0","maintainer":"","maintainer_email":"","name":"aws-kinesis-agg","package_url":"https://pypi.org/project/aws-kinesis-agg/","platform":null,"project_url":"https://pypi.org/project/aws-kinesis-agg/","project_urls":{"Homepage":"http://github.com/awslabs/kinesis-aggregation"},"provides_extra":null,"release_url":"https://pypi.org/project/aws-kinesis-agg/1.2.3/","requires_dist":["protobuf"],"requires_python":"","summary":"Python module to assist in taking advantage of the Kinesis message aggregation format for both aggregation and deaggregation.","version":"1.2.3","yanked":false,"yanked_reason":null},"last_serial":14095117,"releases":{"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"d6881653afe42064444074ff44a5049ed6065b2b5e7a9c5c0723205cd29431e0","md5":"4e0fe5ca4a6b388ace299b084c4e7651","sha256":"1bbd4e77607da5001ae27df5080e9a3cc26f0b4f5c268342655563ff328360bb"},"downloads":-1,"filename":"aws_kinesis_agg-1.0.0.zip","has_sig":false,"md5_digest":"4e0fe5ca4a6b388ace299b084c4e7651","packagetype":"sdist","python_version":"source","requires_python":null,"size":30577,"upload_time":"2016-03-29T14:15:56","upload_time_iso_8601":"2016-03-29T14:15:56.058305Z","url":"https://files.pythonhosted.org/packages/d6/88/1653afe42064444074ff44a5049ed6065b2b5e7a9c5c0723205cd29431e0/aws_kinesis_agg-1.0.0.zip","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"315ed5ef137d6122a58cca610c0f18a5c5a3578221bae5fe67bd7bf29454f4d4","md5":"f66745680125568a670e99690caa0df2","sha256":"707618375ef1cd8b6f3434559fd52537c889708600faf857d68fac60fe2e6bd8"},"downloads":-1,"filename":"aws_kinesis_agg-1.0.1.zip","has_sig":false,"md5_digest":"f66745680125568a670e99690caa0df2","packagetype":"sdist","python_version":"source","requires_python":null,"size":30649,"upload_time":"2016-04-19T04:12:40","upload_time_iso_8601":"2016-04-19T04:12:40.887084Z","url":"https://files.pythonhosted.org/packages/31/5e/d5ef137d6122a58cca610c0f18a5c5a3578221bae5fe67bd7bf29454f4d4/aws_kinesis_agg-1.0.1.zip","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"920c52f0293e8aeb737f0378153528d6c3b40e5f03a9386dc7e59927f4611682","md5":"07831313d95bbb12867cd1917560ba46","sha256":"7b9a0fbb1eaf16af1ce13ebc5e06beff7b4c2110d0377c6dc4bb8796d7ec7588"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.0.tar.gz","has_sig":false,"md5_digest":"07831313d95bbb12867cd1917560ba46","packagetype":"sdist","python_version":"source","requires_python":null,"size":21729,"upload_time":"2018-03-07T01:00:56","upload_time_iso_8601":"2018-03-07T01:00:56.058597Z","url":"https://files.pythonhosted.org/packages/92/0c/52f0293e8aeb737f0378153528d6c3b40e5f03a9386dc7e59927f4611682/aws_kinesis_agg-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"cdc93dc89ce24666b8210c80ec5354f7f6176e3a48f212382c29e5d5e1598248","md5":"304e9acc3bac7313ede7a7ef48dcafba","sha256":"d42ab05125088f6a4f8a7be3d205df5afd71fbf019eac71c93c37446c73155e9"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"304e9acc3bac7313ede7a7ef48dcafba","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18311,"upload_time":"2019-07-10T09:11:29","upload_time_iso_8601":"2019-07-10T09:11:29.526856Z","url":"https://files.pythonhosted.org/packages/cd/c9/3dc89ce24666b8210c80ec5354f7f6176e3a48f212382c29e5d5e1598248/aws_kinesis_agg-1.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"6450d920a018605d1b3aef7f07df31a533289f54de54087566af1f983d1ce3ca","md5":"08b26bf37ad4fd6e358d5c7df7b22559","sha256":"bc495c967eccad7b1c98352cb12daa56c27ca08a0d7e4dce6f5d33b07aa8f8ff"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.1.tar.gz","has_sig":false,"md5_digest":"08b26bf37ad4fd6e358d5c7df7b22559","packagetype":"sdist","python_version":"source","requires_python":null,"size":29517,"upload_time":"2019-07-10T09:11:30","upload_time_iso_8601":"2019-07-10T09:11:30.782334Z","url":"https://files.pythonhosted.org/packages/64/50/d920a018605d1b3aef7f07df31a533289f54de54087566af1f983d1ce3ca/aws_kinesis_agg-1.1.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.2":[{"comment_text":"","digests":{"blake2b_256":"81c2329b0550469282758d68e6da3a394b9ccd5c379f9ac611c004569f1e1317","md5":"9ab40bf667af1a2beca934a84b099f54","sha256":"6d2c7b31ae526d72cbab36dcf7fec08f5725999fe4712354757acea39b0397ea"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.2-py3-none-any.whl","has_sig":false,"md5_digest":"9ab40bf667af1a2beca934a84b099f54","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":18322,"upload_time":"2019-08-02T15:08:48","upload_time_iso_8601":"2019-08-02T15:08:48.597952Z","url":"https://files.pythonhosted.org/packages/81/c2/329b0550469282758d68e6da3a394b9ccd5c379f9ac611c004569f1e1317/aws_kinesis_agg-1.1.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"35e0008d24af771cfe69561552edb920f39274d7c1527d3333a39eb048e59367","md5":"b71510027112f9729a0cfa1db4429b9e","sha256":"abb41472e5d598382577224ec65b3ae31ae66a61271b4986229ad1429d03a445"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.2.tar.gz","has_sig":false,"md5_digest":"b71510027112f9729a0cfa1db4429b9e","packagetype":"sdist","python_version":"source","requires_python":null,"size":29535,"upload_time":"2019-08-02T15:08:50","upload_time_iso_8601":"2019-08-02T15:08:50.404633Z","url":"https://files.pythonhosted.org/packages/35/e0/008d24af771cfe69561552edb920f39274d7c1527d3333a39eb048e59367/aws_kinesis_agg-1.1.2.tar.gz","yanked":false,"yanked_reason":null}],"1.1.3":[{"comment_text":"","digests":{"blake2b_256":"2196a44c96e812d5807778691969bafde6e985d601ea02be88ca0e43048790b9","md5":"44b84143c0d4508169ef13367e83d735","sha256":"c3e4dc6e90cabba1c1b5995a9389a13aa94e20029f17c14296f47e0adeaf8a3f"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.3-py3-none-any.whl","has_sig":false,"md5_digest":"44b84143c0d4508169ef13367e83d735","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":20575,"upload_time":"2020-08-12T09:47:11","upload_time_iso_8601":"2020-08-12T09:47:11.766786Z","url":"https://files.pythonhosted.org/packages/21/96/a44c96e812d5807778691969bafde6e985d601ea02be88ca0e43048790b9/aws_kinesis_agg-1.1.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"7a6c1e4fb917198fd51c5127d393e2b07586837a3b2f0a8373c376c0719a8d99","md5":"a79aca9685ba8093ef32684d1a2c8edb","sha256":"d46eed16726e8f5edf5c406361ed9407d981fa797691d0c9501326a13880dbb7"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.3.tar.gz","has_sig":false,"md5_digest":"a79aca9685ba8093ef32684d1a2c8edb","packagetype":"sdist","python_version":"source","requires_python":null,"size":27563,"upload_time":"2020-08-12T09:47:13","upload_time_iso_8601":"2020-08-12T09:47:13.161513Z","url":"https://files.pythonhosted.org/packages/7a/6c/1e4fb917198fd51c5127d393e2b07586837a3b2f0a8373c376c0719a8d99/aws_kinesis_agg-1.1.3.tar.gz","yanked":false,"yanked_reason":null}],"1.1.4":[{"comment_text":"","digests":{"blake2b_256":"21ddc734aa2eda4a2c4ab6e449d2f96f0ef01315aad915695feb0d407264abb9","md5":"df1130e5ce63f642558780c10faee042","sha256":"499a12c2a3267e997eab59d387f3a4ddf5f1f303a9abc2069156f91bd0bc7082"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.4-py3-none-any.whl","has_sig":false,"md5_digest":"df1130e5ce63f642558780c10faee042","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":20588,"upload_time":"2021-01-11T16:41:28","upload_time_iso_8601":"2021-01-11T16:41:28.168692Z","url":"https://files.pythonhosted.org/packages/21/dd/c734aa2eda4a2c4ab6e449d2f96f0ef01315aad915695feb0d407264abb9/aws_kinesis_agg-1.1.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"82adcd2e9a0dda7a6a85a8cd86a1e88e9408f4fdcd71e1a1772741c7a274ff1f","md5":"80129acab3412e5927071ca6a3f16c07","sha256":"ef597b588e1372fccbddbde512f5dc198495412fcf5142972f12d098af7c6e7a"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.4.tar.gz","has_sig":false,"md5_digest":"80129acab3412e5927071ca6a3f16c07","packagetype":"sdist","python_version":"source","requires_python":null,"size":28336,"upload_time":"2021-01-11T16:41:29","upload_time_iso_8601":"2021-01-11T16:41:29.623373Z","url":"https://files.pythonhosted.org/packages/82/ad/cd2e9a0dda7a6a85a8cd86a1e88e9408f4fdcd71e1a1772741c7a274ff1f/aws_kinesis_agg-1.1.4.tar.gz","yanked":false,"yanked_reason":null}],"1.1.5":[{"comment_text":"","digests":{"blake2b_256":"5bbb19d737ab3fb8b0cb645129f954580dba3519da99c4f508aa881fe427127e","md5":"829f936913dba72c67d2636ea4e03161","sha256":"1cca7c239af9d2eae94afaf1e00e684b64bfc8e2d9dac3656ce287ccbdccb843"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.5-py3-none-any.whl","has_sig":false,"md5_digest":"829f936913dba72c67d2636ea4e03161","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":20588,"upload_time":"2021-01-21T13:15:12","upload_time_iso_8601":"2021-01-21T13:15:12.395652Z","url":"https://files.pythonhosted.org/packages/5b/bb/19d737ab3fb8b0cb645129f954580dba3519da99c4f508aa881fe427127e/aws_kinesis_agg-1.1.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f047dd682c1ce69de2c4d4cbc87ba427fd3786e8fa6129d9b2d8546113544df7","md5":"23466ad40cfe0e913595bffabd13c05e","sha256":"ec3afdcedc7aa1e3740bde32e2362e0ac6a891c06ee9e7fc2500ca51905b4278"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.5.tar.gz","has_sig":false,"md5_digest":"23466ad40cfe0e913595bffabd13c05e","packagetype":"sdist","python_version":"source","requires_python":null,"size":28325,"upload_time":"2021-01-21T13:15:13","upload_time_iso_8601":"2021-01-21T13:15:13.836567Z","url":"https://files.pythonhosted.org/packages/f0/47/dd682c1ce69de2c4d4cbc87ba427fd3786e8fa6129d9b2d8546113544df7/aws_kinesis_agg-1.1.5.tar.gz","yanked":false,"yanked_reason":null}],"1.1.6":[{"comment_text":"","digests":{"blake2b_256":"748d6765d1dd56b26982b797ea10d959415a3eed511d899ed7835d6e929f0d0d","md5":"32233741ed9d6a54f307683aaf6aa49a","sha256":"b809e3f813df1c2a4c830629699f63370e082ede73171437567b97b88b37abed"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.6-py3-none-any.whl","has_sig":false,"md5_digest":"32233741ed9d6a54f307683aaf6aa49a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":20669,"upload_time":"2021-01-25T09:29:53","upload_time_iso_8601":"2021-01-25T09:29:53.812650Z","url":"https://files.pythonhosted.org/packages/74/8d/6765d1dd56b26982b797ea10d959415a3eed511d899ed7835d6e929f0d0d/aws_kinesis_agg-1.1.6-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"097d21ec062be63819a5d6fc16ba838cfae40721e2d3a81ef6625df15adcb723","md5":"bb4b423f4fc82b34f7058da27c7989db","sha256":"a283ce2b7549cf495ddc9ef2b074da72e1c53fb9d06d5dea8bfd925e4569bfe3"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.6.tar.gz","has_sig":false,"md5_digest":"bb4b423f4fc82b34f7058da27c7989db","packagetype":"sdist","python_version":"source","requires_python":null,"size":28631,"upload_time":"2021-01-25T09:29:55","upload_time_iso_8601":"2021-01-25T09:29:55.242382Z","url":"https://files.pythonhosted.org/packages/09/7d/21ec062be63819a5d6fc16ba838cfae40721e2d3a81ef6625df15adcb723/aws_kinesis_agg-1.1.6.tar.gz","yanked":false,"yanked_reason":null}],"1.1.7":[{"comment_text":"","digests":{"blake2b_256":"688ac98463716d2772efe524c126d840f348d6381c84e40405ba0f0bea1cefc8","md5":"675e64e0f83397c5d9f0afa2b6af1382","sha256":"192d4cf0bb36f871ae27eda0139715d1abd1a553f10bddc42e29105995b364c6"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.7-py3-none-any.whl","has_sig":false,"md5_digest":"675e64e0f83397c5d9f0afa2b6af1382","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":20768,"upload_time":"2021-03-19T10:45:26","upload_time_iso_8601":"2021-03-19T10:45:26.692715Z","url":"https://files.pythonhosted.org/packages/68/8a/c98463716d2772efe524c126d840f348d6381c84e40405ba0f0bea1cefc8/aws_kinesis_agg-1.1.7-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"76df615a454dcb3c960279212fdb508eb02dcfde1933a994db29ef9aae84f7e7","md5":"1a82e83d2f22a4e8712ecb0272c43820","sha256":"741802d42da68837924350eec8d4130f814bb162dee4922d1ec6b8aa51e627c8"},"downloads":-1,"filename":"aws_kinesis_agg-1.1.7.tar.gz","has_sig":false,"md5_digest":"1a82e83d2f22a4e8712ecb0272c43820","packagetype":"sdist","python_version":"source","requires_python":null,"size":28727,"upload_time":"2021-03-19T10:45:28","upload_time_iso_8601":"2021-03-19T10:45:28.003176Z","url":"https://files.pythonhosted.org/packages/76/df/615a454dcb3c960279212fdb508eb02dcfde1933a994db29ef9aae84f7e7/aws_kinesis_agg-1.1.7.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"b99480004ca584917d06973018d7e748318bd0afa5ff167c9c1504fa6b37684a","md5":"e821d2170b5021df1e1a95d6e3c45f0a","sha256":"42e75c051a57153d54d1b780663f1fabd252471e02ad7662a4ce497d1c1f0b2c"},"downloads":-1,"filename":"aws_kinesis_agg-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"e821d2170b5021df1e1a95d6e3c45f0a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":23357,"upload_time":"2022-06-06T13:36:07","upload_time_iso_8601":"2022-06-06T13:36:07.768027Z","url":"https://files.pythonhosted.org/packages/b9/94/80004ca584917d06973018d7e748318bd0afa5ff167c9c1504fa6b37684a/aws_kinesis_agg-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"85642513592131fa6fb1cb62919b7eb4619478a4b1a911f5782ddb9724bd96c2","md5":"c5b420e16da9e82981544ea6b3266420","sha256":"09440f582e6d76ab315154cbd9041d25fe2ac71d4099e0fdf65db79a310f768b"},"downloads":-1,"filename":"aws_kinesis_agg-1.2.0.tar.gz","has_sig":false,"md5_digest":"c5b420e16da9e82981544ea6b3266420","packagetype":"sdist","python_version":"source","requires_python":null,"size":31646,"upload_time":"2022-06-06T13:36:09","upload_time_iso_8601":"2022-06-06T13:36:09.672822Z","url":"https://files.pythonhosted.org/packages/85/64/2513592131fa6fb1cb62919b7eb4619478a4b1a911f5782ddb9724bd96c2/aws_kinesis_agg-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.1":[{"comment_text":"","digests":{"blake2b_256":"25fa38f73c166b8eaa0822652bb99ed1ca5f803f34cdf76c7c284b358727b414","md5":"fa88ae33bd24b89b240db38fe7a5e7ea","sha256":"103d397e74e50523ca8faac32e1de57697bbea30ca050cfd5b59c014e78c03f6"},"downloads":-1,"filename":"aws_kinesis_agg-1.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"fa88ae33bd24b89b240db38fe7a5e7ea","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":19611,"upload_time":"2022-06-09T13:23:47","upload_time_iso_8601":"2022-06-09T13:23:47.399370Z","url":"https://files.pythonhosted.org/packages/25/fa/38f73c166b8eaa0822652bb99ed1ca5f803f34cdf76c7c284b358727b414/aws_kinesis_agg-1.2.1-py3-none-any.whl","yanked":true,"yanked_reason":"Issues with generated protocol buffers files"},{"comment_text":"","digests":{"blake2b_256":"f6c12080f624584e5ae8d6911c9d143e5bc1d32b9a6d5e2f27d195052adf6a75","md5":"3820cd90b9c4e76b10ccadf00d3d8236","sha256":"5bb951d4a10210812af2a4791ae95eeb7576604015cbaed817d6845c80b5570e"},"downloads":-1,"filename":"aws_kinesis_agg-1.2.1.tar.gz","has_sig":false,"md5_digest":"3820cd90b9c4e76b10ccadf00d3d8236","packagetype":"sdist","python_version":"source","requires_python":null,"size":27875,"upload_time":"2022-06-09T13:23:49","upload_time_iso_8601":"2022-06-09T13:23:49.522022Z","url":"https://files.pythonhosted.org/packages/f6/c1/2080f624584e5ae8d6911c9d143e5bc1d32b9a6d5e2f27d195052adf6a75/aws_kinesis_agg-1.2.1.tar.gz","yanked":true,"yanked_reason":"Issues with generated protocol buffers files"}],"1.2.2":[{"comment_text":"","digests":{"blake2b_256":"77d4439fdf9cc133da1aa1a9cbcb896dc6823850693e4d7c39e4714516a81303","md5":"f178bbb684948281293ba56fd32f450c","sha256":"e86aa7d09339ba5b880990138fe539431047f8c74b17bd4903dd9b59c6c708fc"},"downloads":-1,"filename":"aws_kinesis_agg-1.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"f178bbb684948281293ba56fd32f450c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":19614,"upload_time":"2022-06-10T10:42:51","upload_time_iso_8601":"2022-06-10T10:42:51.696579Z","url":"https://files.pythonhosted.org/packages/77/d4/439fdf9cc133da1aa1a9cbcb896dc6823850693e4d7c39e4714516a81303/aws_kinesis_agg-1.2.2-py3-none-any.whl","yanked":true,"yanked_reason":"Issues with protocol buffers generated files"},{"comment_text":"","digests":{"blake2b_256":"6b32cc9b0f0cb16f06e2e995703382aba4bc57ac8711234c518d19bbc7b3feb8","md5":"ea4038963a8947599dc0adbfbf375eaa","sha256":"97db341193d50a10d5ef0c55e4612582e15c82daf55807fb076db26ac2ff9651"},"downloads":-1,"filename":"aws_kinesis_agg-1.2.2.tar.gz","has_sig":false,"md5_digest":"ea4038963a8947599dc0adbfbf375eaa","packagetype":"sdist","python_version":"source","requires_python":null,"size":24499,"upload_time":"2022-06-10T10:42:53","upload_time_iso_8601":"2022-06-10T10:42:53.695586Z","url":"https://files.pythonhosted.org/packages/6b/32/cc9b0f0cb16f06e2e995703382aba4bc57ac8711234c518d19bbc7b3feb8/aws_kinesis_agg-1.2.2.tar.gz","yanked":true,"yanked_reason":"Issues with protocol buffers generated files"}],"1.2.3":[{"comment_text":"","digests":{"blake2b_256":"646e1fccb013ded137df70c8832e9a12ceb12b4ae88ebf5b8acd801487bbe1ab","md5":"24b5f952ee7bccf2973e6affa6823d3e","sha256":"e9490bf4af2efa06f3f221b710f0c96d4c410d5cae16fb95a287ac420d060991"},"downloads":-1,"filename":"aws_kinesis_agg-1.2.3-py3-none-any.whl","has_sig":false,"md5_digest":"24b5f952ee7bccf2973e6affa6823d3e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":22821,"upload_time":"2022-06-10T14:59:10","upload_time_iso_8601":"2022-06-10T14:59:10.823913Z","url":"https://files.pythonhosted.org/packages/64/6e/1fccb013ded137df70c8832e9a12ceb12b4ae88ebf5b8acd801487bbe1ab/aws_kinesis_agg-1.2.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5d6ce4402effc9583f4d991f20e9d1992375ecaa3921d86d4688ec37c399186e","md5":"a744bdd72be2562b24562453d0c9d579","sha256":"87fdca1e6ebe8e445cd3ad31efd4f78a0aa11aafc183daa3090aa49c12db3c27"},"downloads":-1,"filename":"aws_kinesis_agg-1.2.3.tar.gz","has_sig":false,"md5_digest":"a744bdd72be2562b24562453d0c9d579","packagetype":"sdist","python_version":"source","requires_python":null,"size":24664,"upload_time":"2022-06-10T14:59:15","upload_time_iso_8601":"2022-06-10T14:59:15.322059Z","url":"https://files.pythonhosted.org/packages/5d/6c/e4402effc9583f4d991f20e9d1992375ecaa3921d86d4688ec37c399186e/aws_kinesis_agg-1.2.3.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"646e1fccb013ded137df70c8832e9a12ceb12b4ae88ebf5b8acd801487bbe1ab","md5":"24b5f952ee7bccf2973e6affa6823d3e","sha256":"e9490bf4af2efa06f3f221b710f0c96d4c410d5cae16fb95a287ac420d060991"},"downloads":-1,"filename":"aws_kinesis_agg-1.2.3-py3-none-any.whl","has_sig":false,"md5_digest":"24b5f952ee7bccf2973e6affa6823d3e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":22821,"upload_time":"2022-06-10T14:59:10","upload_time_iso_8601":"2022-06-10T14:59:10.823913Z","url":"https://files.pythonhosted.org/packages/64/6e/1fccb013ded137df70c8832e9a12ceb12b4ae88ebf5b8acd801487bbe1ab/aws_kinesis_agg-1.2.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5d6ce4402effc9583f4d991f20e9d1992375ecaa3921d86d4688ec37c399186e","md5":"a744bdd72be2562b24562453d0c9d579","sha256":"87fdca1e6ebe8e445cd3ad31efd4f78a0aa11aafc183daa3090aa49c12db3c27"},"downloads":-1,"filename":"aws_kinesis_agg-1.2.3.tar.gz","has_sig":false,"md5_digest":"a744bdd72be2562b24562453d0c9d579","packagetype":"sdist","python_version":"source","requires_python":null,"size":24664,"upload_time":"2022-06-10T14:59:15","upload_time_iso_8601":"2022-06-10T14:59:15.322059Z","url":"https://files.pythonhosted.org/packages/5d/6c/e4402effc9583f4d991f20e9d1992375ecaa3921d86d4688ec37c399186e/aws_kinesis_agg-1.2.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
