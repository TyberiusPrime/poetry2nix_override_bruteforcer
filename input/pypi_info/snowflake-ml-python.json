{"info":{"author":null,"author_email":"\"Snowflake, Inc\" <support@snowflake.com>","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","Environment :: Other Environment","Intended Audience :: Developers","Intended Audience :: Education","Intended Audience :: Information Technology","Intended Audience :: System Administrators","License :: OSI Approved :: Apache Software License","Operating System :: OS Independent","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Topic :: Database","Topic :: Scientific/Engineering :: Information Analysis","Topic :: Software Development","Topic :: Software Development :: Libraries","Topic :: Software Development :: Libraries :: Application Frameworks","Topic :: Software Development :: Libraries :: Python Modules"],"description":"# Snowpark ML\n\nSnowpark ML is a set of tools including SDKs and underlying infrastructure to build and deploy machine learning models.\nWith Snowpark ML, you can pre-process data, train, manage and deploy ML models all within Snowflake, using a single SDK,\nand benefit from Snowflakeâ€™s proven performance, scalability, stability and governance at every stage of the Machine\nLearning workflow.\n\n## Key Components of Snowpark ML\n\nThe Snowpark ML Python SDK provides a number of APIs to support each stage of an end-to-end Machine Learning development\nand deployment process, and includes two key components.\n\n### Snowpark ML Development\n\n[Snowpark ML Development](https://docs.snowflake.com/en/developer-guide/snowpark-ml/index#snowpark-ml-development)\nprovides a collection of python APIs enabling efficient ML model development directly in Snowflake:\n\n1. Modeling API (`snowflake.ml.modeling`) for data preprocessing, feature engineering and model training in Snowflake.\nThis includes the `snowflake.ml.modeling.preprocessing` module for scalable data transformations on large data sets\nutilizing the compute resources of underlying Snowpark Optimized High Memory Warehouses, and a large collection of ML\nmodel development classes based on sklearn, xgboost, and lightgbm.\n\n1. Framework Connectors: Optimized, secure and performant data provisioning for Pytorch and Tensorflow frameworks in\ntheir native data loader formats.\n\n1. FileSet API: FileSet provides a Python fsspec-compliant API for materializing data into a Snowflake internal stage\nfrom a query or Snowpark Dataframe along with a number of convenience APIs.\n\n### Snowpark Model Management [Public Preview]\n\n[Snowpark Model Management](https://docs.snowflake.com/en/developer-guide/snowpark-ml/index#snowpark-ml-ops) complements\nthe Snowpark ML Development API, and provides model management capabilities along with integrated deployment into Snowflake.\nCurrently, the API consists of:\n\n1. Registry: A python API for managing models within Snowflake which also supports deployment of ML models into Snowflake\nas native MODEL object running with Snowflake Warehouse.\n\n## Getting started\n\n### Have your Snowflake account ready\n\nIf you don't have a Snowflake account yet, you can [sign up for a 30-day free trial account](https://signup.snowflake.com/).\n\n### Installation\n\nFollow the [installation instructions](https://docs.snowflake.com/en/developer-guide/snowpark-ml/index#installing-snowpark-ml)\nin the Snowflake documentation.\n\nPython versions 3.8 to 3.11 are supported. You can use [miniconda](https://docs.conda.io/en/latest/miniconda.html) or\n[anaconda](https://www.anaconda.com/) to create a Conda environment (recommended),\nor [virtualenv](https://docs.python.org/3/tutorial/venv.html) to create a virtual environment.\n\n### Conda channels\n\nThe [Snowflake Conda Channel](https://repo.anaconda.com/pkgs/snowflake/) contains the official snowpark ML package releases.\nThe recommended approach is to install `snowflake-ml-python` this conda channel:\n\n```sh\nconda install \\\n  -c https://repo.anaconda.com/pkgs/snowflake \\\n  --override-channels \\\n  snowflake-ml-python\n```\n\nSee [the developer guide](https://docs.snowflake.com/en/developer-guide/snowpark-ml/index) for installation instructions.\n\nThe latest version of the `snowpark-ml-python` package is also published in a conda channel in this repository. Package versions\nin this channel may not yet be present in the official Snowflake conda channel.\n\nInstall `snowflake-ml-python` from this channel with the following (being sure to replace `<version_specifier>` with the\ndesired version, e.g. `1.0.10`):\n\n```bash\nconda install \\\n  -c https://raw.githubusercontent.com/snowflakedb/snowflake-ml-python/conda/releases/  \\\n  -c https://repo.anaconda.com/pkgs/snowflake \\\n  --override-channels \\\n  snowflake-ml-python==<version_specifier>\n```\n\nNote that until a `snowflake-ml-python` package version is available in the official Snowflake conda channel, there may\nbe compatibility issues. Server-side functionality that `snowflake-ml-python` depends on may not yet be released.\n\n# Release History\n\n## 1.5.4\n\n### Bug Fixes\n\n- Model Registry (PrPr): Fix 401 Unauthorized issue when deploying model to SPCS.\n- Feature Store: Downgrades exceptions to warnings for few property setters in feature view. Now you can set\n  desc, refresh_freq and warehouse for draft feature views.\n- Modeling: Fix an issue with calling `OrdinalEncoder` with `categories` as a dictionary and a pandas DataFrame\n- Modeling: Fix an issue with calling `OneHotEncoder` with `categories` as a dictionary and a pandas DataFrame\n\n### New Features\n\n- Registry: Allow overriding `device_map` and `device` when loading huggingface pipeline models.\n- Registry: Add `set_alias` method to `ModelVersion` instance to set an alias to model version.\n- Registry: Add `unset_alias` method to `ModelVersion` instance to unset an alias to model version.\n- Registry: Add `partitioned_inference_api` allowing users to create partitioned inference functions in registered\n  models. Enable model inference methods with table functions with vectorized process methods in registered models.\n- Feature Store: add 3 more columns: refresh_freq, refresh_mode and scheduling_state to the result of\n  `list_feature_views()`.\n- Feature Store: `update_feature_view()` supports updating description.\n- Feature Store: add new API `refresh_feature_view()`.\n- Feature Store: add new API `get_refresh_history()`.\n- Feature Store: Add `generate_training_set()` API for generating table-backed feature snapshots.\n- Feature Store: Add `DeprecationWarning` for `generate_dataset(..., output_type=\"table\")`.\n- Feature Store: `update_feature_view()` supports updating description.\n- Feature Store: add new API `refresh_feature_view()`.\n- Feature Store: add new API `get_refresh_history()`.\n- Model Development: OrdinalEncoder supports a list of array-likes for `categories` argument.\n- Model Development: OneHotEncoder supports a list of array-likes for `categories` argument.\n\n## 1.5.3 (06-17-2024)\n\n### Bug Fixes\n\n- Modeling: Fix an issue causing lineage information to be missing for\n  `Pipeline`, `GridSearchCV` , `SimpleImputer`, and `RandomizedSearchCV`\n- Registry: Fix an issue that leads to incorrect result when using pandas Dataframe with over 100, 000 rows as the input\n  of `ModelVersion.run` method in Stored Procedure.\n\n### New Features\n\n- Registry: Add support for TIMESTAMP_NTZ model signature data type, allowing timestamp input and output.\n- Dataset: Add `DatasetVersion.label_cols` and `DatasetVersion.exclude_cols` properties.\n\n## 1.5.2 (06-10-2024)\n\n### Bug Fixes\n\n- Registry: Fix an issue that leads to unable to log model in store procedure.\n- Modeling: Quick fix `import snowflake.ml.modeling.parameters.enable_anonymous_sproc` cannot be imported due to package\n  dependency error.\n\n### Behavior Changes\n\n### New Features\n\n## 1.5.1 (05-22-2024)\n\n### Bug Fixes\n\n- Dataset: Fix `snowflake.connector.errors.DataError: Query Result did not match expected number of rows` when accessing\n  DatasetVersion properties when case insensitive `SHOW VERSIONS IN DATASET` check matches multiple version names.\n- Dataset: Fix bug in SnowFS bulk file read when used with DuckDB\n- Registry: Fixed a bug when loading old models.\n- Lineage: Fix Dataset source lineage propagation through `snowpark.DataFrame` transformations\n\n### Behavior Changes\n\n- Feature Store: convert clear() into a private function. Also make it deletes feature views and entities only.\n- Feature Store: Use NULL as default value for timestamp tag value.\n\n### New Features\n\n- Feature Store: Added new `snowflake.ml.feature_store.setup_feature_store()` API to assist Feature Store RBAC setup.\n- Feature Store: Add `output_type` argument to `FeatureStore.generate_dataset()` to allow generating data snapshots\n  as Datasets or Tables.\n- Registry: `log_model`, `get_model`, `delete_model` now supports fully qualified name.\n- Modeling: Supports anonymous stored procedure during fit calls so that modeling would not require sufficient\n  permissions to operate on schema. Please call\n  `import snowflake.ml.modeling.parameters.enable_anonymous_sproc  # noqa: F401`\n\n## 1.5.0 (05-01-2024)\n\n### Bug Fixes\n\n- Registry: Fix invalid parameter 'SHOW_MODEL_DETAILS_IN_SHOW_VERSIONS_IN_MODEL' error.\n\n### Behavior Changes\n\n- Model Development: The behavior of `fit_transform` for all estimators is changed.\n  Firstly, it will cover all the estimator that contains this function,\n  secondly, the output would be the union of pandas DataFrame and snowpark DataFrame.\n\n#### Model Registry (PrPr)\n\n`snowflake.ml.registry.artifact` and related `snowflake.ml.model_registry.ModelRegistry` APIs have been removed.\n\n- Removed `snowflake.ml.registry.artifact` module.\n- Removed `ModelRegistry.log_artifact()`, `ModelRegistry.list_artifacts()`, `ModelRegistry.get_artifact()`\n- Removed `artifacts` argument from `ModelRegistry.log_model()`\n\n#### Dataset (PrPr)\n\n`snowflake.ml.dataset.Dataset` has been redesigned to be backed by Snowflake Dataset entities.\n\n- New `Dataset`s can be created with `Dataset.create()` and existing `Dataset`s may be loaded\n  with `Dataset.load()`.\n- `Dataset`s now maintain an immutable `selected_version` state. The `Dataset.create_version()` and\n  `Dataset.load_version()` APIs return new `Dataset` objects with the requested `selected_version` state.\n- Added `dataset.create_from_dataframe()` and `dataset.load_dataset()` convenience APIs as a shortcut\n  to creating and loading `Dataset`s with a pre-selected version.\n- `Dataset.materialized_table` and `Dataset.snapshot_table` no longer exist with `Dataset.fully_qualified_name`\n  as the closest equivalent.\n- `Dataset.df` no longer exists. Instead, use `DatasetReader.read.to_snowpark_dataframe()`.\n- `Dataset.owner` has been moved to `Dataset.selected_version.owner`\n- `Dataset.desc` has been moved to `DatasetVersion.selected_version.comment`\n- `Dataset.timestamp_col`, `Dataset.label_cols`, `Dataset.feature_store_metadata`, and\n  `Dataset.schema_version` have been removed.\n\n#### Feature Store (PrPr)\n\n- `FeatureStore.generate_dataset` argument list has been changed to match the new\n`snowflake.ml.dataset.Dataset` definition\n\n  - `materialized_table` has been removed and replaced with `name` and `version`.\n  - `name` moved to first positional argument\n  - `save_mode` has been removed as `merge` behavior is no longer supported. The new behavior is always `errorifexists`.\n\n- Change feature view version type from str to `FeatureViewVersion`. It is a restricted string literal.\n\n- Remove as_dataframe arg from FeatureStore.list_feature_views(), now always returns result as DataFrame.\n\n- Combines few metadata tags into a new tag: SNOWML_FEATURE_VIEW_METADATA. This will make previously created feature views\nnot readable by new SDK.\n\n### New Features\n\n- Registry: Add `export` method to `ModelVersion` instance to export model files.\n- Registry: Add `load` method to `ModelVersion` instance to load the underlying object from the model.\n- Registry: Add `Model.rename` method to `Model` instance to rename or move a model.\n\n#### Dataset (PrPr)\n\n- Added Snowpark DataFrame integration using `Dataset.read.to_snowpark_dataframe()`\n- Added Pandas DataFrame integration using `Dataset.read.to_pandas()`\n- Added PyTorch and TensorFlow integrations using `Dataset.read.to_torch_datapipe()`\n    and `Dataset.read.to_tf_dataset()` respectively.\n- Added `fsspec` style file integration using `Dataset.read.files()` and `Dataset.read.filesystem()`\n\n#### Feature Store\n\n- use new tag_reference_internal to speed up metadata lookup.\n\n## 1.4.1 (2024-04-18)\n\n### New Features\n\n- Registry: Add support for `catboost` model (`catboost.CatBoostClassifier`, `catboost.CatBoostRegressor`).\n- Registry: Add support for `lightgbm` model (`lightgbm.Booster`, `lightgbm.LightGBMClassifier`, `lightgbm.LightGBMRegressor`).\n\n### Bug Fixes\n\n- Registry: Fix a bug that leads to relax_version option is not working.\n\n### Behavior changes\n\n- Feature Store: update_feature_view takes refresh_freq and warehouse as argument.\n\n## 1.4.0 (2024-04-08)\n\n### Bug Fixes\n\n- Registry: Fix a bug when multiple models are being called from the same query, models other than the first one will\n  have incorrect result. This fix only works for newly logged model.\n- Modeling: When registering a model, only method(s) that is mentioned in `save_model` would be added to model signature\n  in SnowML models.\n- Modeling: Fix a bug that when n_jobs is not 1, model cannot execute methods such as\n  predict, predict_log_proba, and other batch inference methods. The n_jobs would automatically\n  set to 1 because vectorized udf currently doesn't support joblib parallel backend.\n- Modeling: Fix a bug that batch inference methods cannot infer the datatype when the first row of data contains NULL.\n- Modeling: Matches Distributed HPO output column names with the snowflake identifier.\n- Modeling: Relax package versions for all Distributed HPO methods if the installed version\n  is not available in the Snowflake conda channel\n- Modeling: Add sklearn as required dependency for LightGBM package.\n\n### Behavior Changes\n\n- Registry: `apply` method is no longer by default logged when logging a xgboost model. If that is required, it could\n  be specified manually when logging the model by `log_model(..., options={\"target_methods\": [\"apply\", ...]})`.\n- Feature Store: register_entity returns an entity object.\n- Feature Store: register_feature_view `block=true` becomes default.\n\n### New Features\n\n- Registry: Add support for `sentence-transformers` model (`sentence_transformers.SentenceTransformer`).\n- Registry: Now version name is no longer required when logging a model. If not provided, a random human readable ID\n  will be generated.\n\n## 1.3.1 (2024-03-21)\n\n### New Features\n\n- FileSet: `snowflake.ml.fileset.sfcfs.SFFileSystem` can now be used in UDFs and stored procedures.\n\n## 1.3.0 (2024-03-12)\n\n### Bug Fixes\n\n- Registry: Fix a bug that leads to module in `code_paths` when `log_model` cannot be correctly imported.\n- Registry: Fix incorrect error message when validating input Snowpark DataFrame with array feature.\n- Model Registry: Fix an issue when deploying a model to SPCS that some files do not have proper permission.\n- Model Development: Relax package versions for all inference methods if the installed version\n  is not available in the Snowflake conda channel\n\n### Behavior Changes\n\n- Registry: When running the method of a model, the value range based input validation to avoid input from overflowing\n  is now optional rather than enforced, this should improve the performance and should not lead to problem for most\n  kinds of model. If you want to enable this check as previous, specify `strict_input_validation=True` when\n  calling `run`.\n- Registry: By default `relax_version=True` when logging a model instead of using the specific local dependency versions.\n  This improves dependency versioning by using versions available in Snowflake. To switch back to the previous behavior\n  and use specific local dependency versions, specify `relax_version=False` when calling `log_model`.\n- Model Development: The behavior of `fit_predict` for all estimators is changed.\n  Firstly, it will cover all the estimator that contains this function,\n  secondly, the output would be the union of pandas DataFrame and snowpark DataFrame.\n\n### New Features\n\n- FileSet: `snowflake.ml.fileset.sfcfs.SFFileSystem` can now be serialized with `pickle`.\n\n## 1.2.3 (2024-02-26)\n\n### Bug Fixes\n\n- Registry: Now when providing Decimal Type column to a DOUBLE or FLOAT feature will not error out but auto cast with\n  warnings.\n- Registry: Improve the error message when specifying currently unsupported `pip_requirements` argument.\n- Model Development: Fix precision_recall_fscore_support incorrect results when `average=\"samples\"`.\n- Model Registry: Fix an issue that leads to description, metrics or tags are not correctly returned in newly created\n  Model Registry (PrPr) due to Snowflake BCR [2024_01](https://docs.snowflake.com/en/release-notes/bcr-bundles/2024_01/bcr-1483)\n\n### Behavior Changes\n\n- Feature Store: `FeatureStore.suspend_feature_view` and `FeatureStore.resume_feature_view` doesn't mutate input feature\n  view argument any more. The updated status only reflected in the returned feature view object.\n\n### New Features\n\n- Model Development: support `score_samples` method for all the classes, including Pipeline,\n  GridSearchCV, RandomizedSearchCV, PCA, IsolationForest, ...\n- Registry: Support deleting a version of a model.\n\n## 1.2.2 (2024-02-13)\n\n### New Features\n\n- Model Registry: Support providing external access integrations when deploying a model to SPCS. This will help and be\n  required to make sure the deploying process work as long as SPCS will by default deny all network connections. The\n  following endpoints must be allowed to make deployment work: docker.com:80, docker.com:443, anaconda.com:80,\n  anaconda.com:443, anaconda.org:80, anaconda.org:443, pypi.org:80, pypi.org:443. If you are using\n  `snowflake.ml.model.models.huggingface_pipeline.HuggingFacePipelineModel` object, the following endpoints are required\n  to be allowed: huggingface.com:80, huggingface.com:443, huggingface.co:80, huggingface.co:443.\n\n## 1.2.1 (2024-01-25)\n\n### New Features\n\n- Model Development: Infers output column data type for transformers when possible.\n- Registry: `relax_version` option is available in the `options` argument when logging the model.\n\n## 1.2.0 (2024-01-11)\n\n### Bug Fixes\n\n- Model Registry: Fix \"XGBoost version not compiled with GPU support\" error when running CPU inference against open-source\n  XGBoost models deployed to SPCS.\n- Model Registry: Fix model deployment to SPCS on Windows machines.\n\n### New Features\n\n- Model Development: Introduced XGBoost external memory training feature. This feature enables training XGBoost models\n  on large datasets that don't fit into memory.\n- Registry: New Registry class named `snowflake.ml.registry.Registry` providing similar APIs as the old one but works\n  with new MODEL object in Snowflake SQL. Also, we are providing`snowflake.ml.model.Model` and\n  `snowflake.ml.model.ModelVersion` to represent a model and a specific version of a model.\n- Model Development: Add support for `fit_predict` method in `AgglomerativeClustering`, `DBSCAN`, and `OPTICS` classes;\n- Model Development: Add support for `fit_transform` method in `MDS`, `SpectralEmbedding` and `TSNE` class.\n\n### Additional Notes\n\n- Model Registry: The `snowflake.ml.registry.model_registry.ModelRegistry` has been deprecated starting from version\n  1.2.0. It will stay in the Private Preview phase. For future implementations, kindly utilize\n  `snowflake.ml.registry.Registry`, except when specifically required. The old model registry will be removed once all\n  its primary functionalities are fully integrated into the new registry.\n\n## 1.1.2 (2023-12-18)\n\n### Bug Fixes\n\n- Generic: Fix the issue that stack trace is hidden by telemetry unexpectedly.\n- Model Development: Execute model signature inference without materializing full dataframe in memory.\n- Model Registry: Fix occasional 'snowflake-ml-python library does not exist' error when deploying to SPCS.\n\n### Behavior Changes\n\n- Model Registry: When calling `predict` with Snowpark DataFrame, both inferred or normalized column names are accepted.\n- Model Registry: When logging a Snowpark ML Modeling Model, sample input data or manually provided signature will be\n  ignored since they are not necessary.\n\n### New Features\n\n- Model Development: SQL implementation of binary `precision_score` metric.\n\n## 1.1.1 (2023-12-05)\n\n### Bug Fixes\n\n- Model Registry: The `predict` target method on registered models is now compatible with unsupervised estimators.\n- Model Development: Fix confusion_matrix incorrect results when the row number cannot be divided by the batch size.\n\n### New Features\n\n- Introduced passthrough_col param in Modeling API. This new param is helpful in scenarios\n  requiring automatic input_cols inference, but need to avoid using specific\n  columns, like index columns, during training or inference.\n\n## 1.1.0 (2023-12-01)\n\n### Bug Fixes\n\n- Model Registry: Fix panda dataframe input not handling first row properly.\n- Model Development: OrdinalEncoder and LabelEncoder output_columns do not need to be valid snowflake identifiers. They\n  would previously be excluded if the normalized name did not match the name specified in output_columns.\n\n### New Features\n\n- Model Registry: Add support for invoking public endpoint on SPCS service, by providing a \"enable_ingress\" SPCS\n  deployment option.\n- Model Development: Add support for distributed HPO - GridSearchCV and RandomizedSearchCV execution will be\n  distributed on multi-node warehouses.\n\n## 1.0.12 (2023-11-13)\n\n### Bug Fixes\n\n- Model Registry: Fix regression issue that container logging is not shown during model deployment to SPCS.\n- Model Development: Enhance the column capacity of OrdinalEncoder.\n- Model Registry: Fix unbound `batch_size` error when deploying a model other than Hugging Face Pipeline\n  and LLM with GPU on SPCS.\n\n### Behavior Changes\n\n- Model Registry: Raise early error when deploying to SPCS with db/schema that starts with underscore.\n- Model Registry: `conda-forge` channel is now automatically added to channel lists when deploying to SPCS.\n- Model Registry: `relax_version` will not strip all version specifier, instead it will relax `==x.y.z` specifier to\n  `>=x.y,<(x+1)`.\n- Model Registry: Python with different patchlevel but the same major and minor will not result a warning when loading\n  the model via Model Registry and would be considered to use when deploying to SPCS.\n- Model Registry: When logging a `snowflake.ml.model.models.huggingface_pipeline.HuggingFacePipelineModel` object,\n  versions of local installed libraries won't be picked as dependencies of models, instead it will pick up some pre-\n  defined dependencies to improve user experience.\n\n### New Features\n\n- Model Registry: Enable best-effort SPCS job/service log streaming when logging level is set to INFO.\n\n## 1.0.11 (2023-10-27)\n\n### New Features\n\n- Model Registry: Add log_artifact() public method.\n- Model Development: Add support for `kneighbors`.\n\n### Behavior Changes\n\n- Model Registry: Change log_model() argument from TrainingDataset to List of Artifact.\n- Model Registry: Change get_training_dataset() to get_artifact().\n\n### Bug Fixes\n\n- Model Development: Fix support for XGBoost and LightGBM models using SKLearn Grid Search and Randomized Search model selectors.\n- Model Development: DecimalType is now supported as a DataType.\n- Model Development: Fix metrics compatibility with Snowpark Dataframes that use Snowflake identifiers\n- Model Registry: Resolve 'delete_deployment' not deleting the SPCS service in certain cases.\n\n## 1.0.10 (2023-10-13)\n\n### Behavior Changes\n\n- Model Development: precision_score, recall_score, f1_score, fbeta_score, precision_recall_fscore_support,\n  mean_absolute_error, mean_squared_error, and mean_absolute_percentage_error metric calculations are now distributed.\n- Model Registry: `deploy` will now return `Deployment` for deployment information.\n\n### New Features\n\n- Model Registry: When the model signature is auto-inferred, it will be printed to the log for reference.\n- Model Registry: For SPCS deployment, `Deployment` details will contains `image_name`, `service_spec` and `service_function_sql`.\n\n### Bug Fixes\n\n- Model Development: Fix an issue that leading to UTF-8 decoding errors when using modeling modules on Windows.\n- Model Development: Fix an issue that alias definitions cause `SnowparkSQLUnexpectedAliasException` in inference.\n- Model Registry: Fix an issue that signature inference could be incorrect when using Snowpark DataFrame as sample input.\n- Model Registry: Fix too strict data type validation when predicting. Now, for example, if you have a INT8\n  type feature in the signature, if providing a INT64 dataframe but all values are within the range, it would not fail.\n\n## 1.0.9 (2023-09-28)\n\n### Behavior Changes\n\n- Model Development: log_loss metric calculation is now distributed.\n\n### Bug Fixes\n\n- Model Registry: Fix an issue that building images fails with specific docker setup.\n- Model Registry: Fix an issue that unable to embed local ML library when the library is imported by `zipimport`.\n- Model Registry: Fix out-of-date doc about `platform` argument in the `deploy` function.\n- Model Registry: Fix an issue that unable to deploy a GPU-trained PyTorch model to a platform where GPU is not available.\n\n## 1.0.8 (2023-09-15)\n\n### Bug Fixes\n\n- Model Development: Ordinal encoder can be used with mixed input column types.\n- Model Development: Fix an issue when the sklearn default value is `np.nan`.\n- Model Registry: Fix an issue that incorrect docker executable is used when building images.\n- Model Registry: Fix an issue that specifying `token` argument when using\n  `snowflake.ml.model.models.huggingface_pipeline.HuggingFacePipelineModel` with `transformers < 4.32.0` is not effective.\n- Model Registry: Fix an issue that incorrect system function call is used when deploying to SPCS.\n- Model Registry: Fix an issue when using a `transformers.pipeline` that does not have a `tokenizer`.\n- Model Registry: Fix incorrectly-inferred image repository name during model deployment to SPCS.\n- Model Registry: Fix GPU resource retention issue caused by failed or stuck previous deployments in SPCS.\n\n## 1.0.7 (2023-09-05)\n\n### Bug Fixes\n\n- Model Development & Model Registry: Fix an error related to `pandas.io.json.json_normalize`.\n- Allow disabling telemetry.\n\n## 1.0.6 (2023-09-01)\n\n### New Features\n\n- Model Registry: add `create_if_not_exists` parameter in constructor.\n- Model Registry: Added get_or_create_model_registry API.\n- Model Registry: Added support for using GPU inference when deploying XGBoost (`xgboost.XGBModel` and `xgboost.Booster`\n  ), PyTorch (`torch.nn.Module` and `torch.jit.ScriptModule`) and TensorFlow (`tensorflow.Module` and\n  `tensorflow.keras.Model`) models to Snowpark Container Services.\n- Model Registry: When inferring model signature, `Sequence` of built-in types, `Sequence` of `numpy.ndarray`,\n  `Sequence` of `torch.Tensor`, `Sequence` of `tensorflow.Tensor` and `Sequence` of `tensorflow.Tensor` can be used\n  instead of only `List` of them.\n- Model Registry: Added `get_training_dataset` API.\n- Model Development: Size of metrics result can exceed previous 8MB limit.\n- Model Registry: Added support save/load/deploy HuggingFace pipeline object (`transformers.Pipeline`) and our wrapper\n  (`snowflake.ml.model.models.huggingface_pipeline.HuggingFacePipelineModel`) to it. Using the wrapper to specify\n  configurations and the model for the pipeline will be loaded dynamically when deploying. Currently, following tasks\n  are supported to log without manually specifying model signatures:\n  - \"conversational\"\n  - \"fill-mask\"\n  - \"question-answering\"\n  - \"summarization\"\n  - \"table-question-answering\"\n  - \"text2text-generation\"\n  - \"text-classification\" (alias \"sentiment-analysis\" available)\n  - \"text-generation\"\n  - \"token-classification\" (alias \"ner\" available)\n  - \"translation\"\n  - \"translation_xx_to_yy\"\n  - \"zero-shot-classification\"\n\n### Bug Fixes\n\n- Model Development: Fixed a bug when using simple imputer with numpy >= 1.25.\n- Model Development: Fixed a bug when inferring the type of label columns.\n\n### Behavior Changes\n\n- Model Registry: `log_model()` now return a `ModelReference` object instead of a model ID.\n- Model Registry: When deploying a model with 1 `target method` only, the `target_method` argument can be omitted.\n- Model Registry: When using the snowflake-ml-python with version newer than what is available in Snowflake Anaconda\n  Channel, `embed_local_ml_library` option will be set as `True` automatically if not.\n- Model Registry: When deploying a model to Snowpark Container Services and using GPU, the default value of num_workers\n  will be 1.\n- Model Registry: `keep_order` and `output_with_input_features` in the deploy options have been removed. Now the\n  behavior is controlled by the type of the input when calling `model.predict()`. If the input is a `pandas.DataFrame`,\n  the behavior will be the same as `keep_order=True` and `output_with_input_features=False` before. If the input is a\n  `snowpark.DataFrame`, the behavior will be the same as `keep_order=False` and `output_with_input_features=True` before.\n- Model Registry: When logging and deploying PyTorch (`torch.nn.Module` and `torch.jit.ScriptModule`) and TensorFlow\n  (`tensorflow.Module` and `tensorflow.keras.Model`) models, we no longer accept models whose input is a list of tensor\n  and output is a list of tensors. Instead, now we accept models whose input is 1 or more tensors as positional arguments,\n  and output is a tensor or a tuple of tensors. The input and output dataframe when predicting keep the same as before,\n  that is every column is an array feature and contains a tensor.\n\n## 1.0.5 (2023-08-17)\n\n### New Features\n\n- Model Registry: Added support save/load/deploy xgboost Booster model.\n- Model Registry: Added support to get the model name and the model version from model references.\n\n### Bug Fixes\n\n- Model Registry: Restore the db/schema back to the session after `create_model_registry()`.\n- Model Registry: Fixed an issue that the UDF name created when deploying a model is not identical to what is provided\n  and cannot be correctly dropped when deployment getting dropped.\n- connection_params.SnowflakeLoginOptions(): Added support for `private_key_path`.\n\n## 1.0.4 (2023-07-28)\n\n### New Features\n\n- Model Registry: Added support save/load/deploy Tensorflow models (`tensorflow.Module`).\n- Model Registry: Added support save/load/deploy MLFlow PyFunc models (`mlflow.pyfunc.PyFuncModel`).\n- Model Development: Input dataframes can now be joined against data loaded from staged files.\n- Model Development: Added support for non-English languages.\n\n### Bug Fixes\n\n- Model Registry: Fix an issue that model dependencies are incorrectly reported as unresolvable on certain platforms.\n\n## 1.0.3 (2023-07-14)\n\n### Behavior Changes\n\n- Model Registry: When predicting a model whose output is a list of NumPy ndarray, the output would not be flattened,\n  instead, every ndarray will act as a feature(column) in the output.\n\n### New Features\n\n- Model Registry: Added support save/load/deploy PyTorch models (`torch.nn.Module` and `torch.jit.ScriptModule`).\n\n### Bug Fixes\n\n- Model Registry: Fix an issue that when database or schema name provided to `create_model_registry` contains special\n  characters, the model registry cannot be created.\n- Model Registry: Fix an issue that `get_model_description` returns with additional quotes.\n- Model Registry: Fix incorrect error message when attempting to remove a unset tag of a model.\n- Model Registry: Fix a typo in the default deployment table name.\n- Model Registry: Snowpark dataframe for sample input or input for `predict` method that contains a column with\n  Snowflake `NUMBER(precision, scale)` data type where `scale = 0` will not lead to error, and will now correctly\n  recognized as `INT64` data type in model signature.\n- Model Registry: Fix an issue that prevent model logged in the system whose default encoding is not UTF-8 compatible\n  from deploying.\n- Model Registry: Added earlier and better error message when any file name in the model or the file name of model\n  itself contains characters that are unable to be encoded using ASCII. It is currently not supported to deploy such a\n  model.\n\n## 1.0.2 (2023-06-22)\n\n### Behavior Changes\n\n- Model Registry: Prohibit non-snowflake-native models from being logged.\n- Model Registry: `_use_local_snowml` parameter in options of `deploy()` has been removed.\n- Model Registry: A default `False` `embed_local_ml_library` parameter has been added to the options of `log_model()`.\n  With this set to `False` (default), the version of the local snowflake-ml-python library will be recorded and used when\n  deploying the model. With this set to `True`, local snowflake-ml-python library will be embedded into the logged model,\n  and will be used when you load or deploy the model.\n\n### New Features\n\n- Model Registry: A new optional argument named `code_paths` has been added to the arguments of `log_model()` for users\n  to specify additional code paths to be imported when loading and deploying the model.\n- Model Registry: A new optional argument named `options` has been added to the arguments of `log_model()` to specify\n  any additional options when saving the model.\n- Model Development: Added metrics:\n  - d2_absolute_error_score\n  - d2_pinball_score\n  - explained_variance_score\n  - mean_absolute_error\n  - mean_absolute_percentage_error\n  - mean_squared_error\n\n### Bug Fixes\n\n- Model Development: `accuracy_score()` now works when given label column names are lists of a single value.\n\n## 1.0.1 (2023-06-16)\n\n### Behavior Changes\n\n- Model Development: Changed Metrics APIs to imitate sklearn metrics modules:\n  - `accuracy_score()`, `confusion_matrix()`, `precision_recall_fscore_support()`, `precision_score()` methods move from\n    respective modules to `metrics.classification`.\n- Model Registry: The default table/stage created by the Registry now uses \"_SYSTEM_\" as a prefix.\n- Model Registry: `get_model_history()` method as been enhanced to include the history of model deployment.\n\n### New Features\n\n- Model Registry: A default `False` flag named `replace_udf` has been added to the options of `deploy()`. Setting this\n  to `True` will allow overwrite existing UDF with the same name when deploying.\n- Model Development: Added metrics:\n  - f1_score\n  - fbeta_score\n  - recall_score\n  - roc_auc_score\n  - roc_curve\n  - log_loss\n  - precision_recall_curve\n- Model Registry: A new argument named `permanent` has been added to the argument of `deploy()`. Setting this to `True`\n  allows the creation of a permanent deployment without needing to specify the UDF location.\n- Model Registry: A new method `list_deployments()` has been added to enumerate all permanent deployments originating\n  from a specific model.\n- Model Registry: A new method `get_deployment()` has been added to fetch a deployment by its deployment name.\n- Model Registry: A new method `delete_deployment()` has been added to remove an existing permanent deployment.\n\n## 1.0.0 (2023-06-09)\n\n### Behavior Changes\n\n- Model Registry: `predict()` method moves from Registry to ModelReference.\n- Model Registry: `_snowml_wheel_path` parameter in options of `deploy()`, is replaced with `_use_local_snowml` with\n  default value of `False`. Setting this to `True` will have the same effect of uploading local SnowML code when executing\n  model in the warehouse.\n- Model Registry: Removed `id` field from `ModelReference` constructor.\n- Model Development: Preprocessing and Metrics move to the modeling package: `snowflake.ml.modeling.preprocessing` and\n  `snowflake.ml.modeling.metrics`.\n- Model Development: `get_sklearn_object()` method is renamed to `to_sklearn()`, `to_xgboost()`, and `to_lightgbm()` for\n  respective native models.\n\n### New Features\n\n- Added PolynomialFeatures transformer to the snowflake.ml.modeling.preprocessing module.\n- Added metrics:\n  - accuracy_score\n  - confusion_matrix\n  - precision_recall_fscore_support\n  - precision_score\n\n### Bug Fixes\n\n- Model Registry: Model version can now be any string (not required to be a valid identifier)\n- Model Deployment: `deploy()` & `predict()` methods now correctly escapes identifiers\n\n## 0.3.2 (2023-05-23)\n\n### Behavior Changes\n\n- Use cloudpickle to serialize and deserialize models throughout the codebase and removed dependency on joblib.\n\n### New Features\n\n- Model Deployment: Added support for snowflake.ml models.\n\n## 0.3.1 (2023-05-18)\n\n### Behavior Changes\n\n- Standardized registry API with following\n  - Create & open registry taking same set of arguments\n  - Create & Open can choose schema to use\n  - Set_tag, set_metric, etc now explicitly calls out arg name as metric_name, tag_name, metric_name, etc.\n\n### New Features\n\n- Changes to support python 3.9, 3.10\n- Added kBinsDiscretizer\n- Support for deployment of XGBoost models & int8 types of data\n\n## 0.3.0 (2023-05-11)\n\n### Behavior Changes\n\n- Big Model Registry Refresh\n  - Fixed API discrepancies between register_model & log_model.\n  - Model can be referred by Name + Version (no opaque internal id is required)\n\n### New Features\n\n- Model Registry: Added support save/load/deploy SKL & XGB Models\n\n## 0.2.3 (2023-04-27)\n\n### Bug Fixes\n\n- Allow using OneHotEncoder along with sklearn style estimators in a pipeline.\n\n### New Features\n\n- Model Registry: Added support for delete_model. Use delete_artifact = False to not delete the underlying model data\n  but just unregister.\n\n## 0.2.2 (2023-04-11)\n\n### New Features\n\n- Initial version of snowflake-ml modeling package.\n  - Provide support for training most of scikit-learn and xgboost estimators and transformers.\n\n### Bug Fixes\n\n- Minor fixes in preprocessing package.\n\n## 0.2.1 (2023-03-23)\n\n### New Features\n\n- New in Preprocessing:\n  - SimpleImputer\n  - Covariance Matrix\n- Optimization of Ordinal Encoder client computations.\n\n### Bug Fixes\n\n- Minor fixes in OneHotEncoder.\n\n## 0.2.0 (2023-02-27)\n\n### New Features\n\n- Model Registry\n- PyTorch & Tensorflow connector file generic FileSet API\n- New to Preprocessing:\n  - Binarizer\n  - Normalizer\n  - Pearson correlation Matrix\n- Optimization in Ordinal Encoder to cache vocabulary in temp tables.\n\n## 0.1.3 (2023-02-02)\n\n### New Features\n\n- Initial version of transformers including:\n  - Label Encoder\n  - Max Abs Scaler\n  - Min Max Scaler\n  - One Hot Encoder\n  - Ordinal Encoder\n  - Robust Scaler\n  - Standard Scaler\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":null,"license":" Apache License Version 2.0, January 2004 http://www.apache.org/licenses/  TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION  1. Definitions.  \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.  \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.  \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.  \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.  \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.  \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.  \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).  \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.  \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"  \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.  2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.  3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.  4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:  (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and  (b) You must cause any modified files to carry prominent notices stating that You changed the files; and  (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and  (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.  You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.  5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.  6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.  7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.  8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.  9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.  END OF TERMS AND CONDITIONS  APPENDIX: How to apply the Apache License to your work.  To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!)  The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.  Copyright (c) 2012-2023 Snowflake Computing, Inc.  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ","maintainer":null,"maintainer_email":null,"name":"snowflake-ml-python","package_url":"https://pypi.org/project/snowflake-ml-python/","platform":null,"project_url":"https://pypi.org/project/snowflake-ml-python/","project_urls":{"Changelog":"https://github.com/snowflakedb/snowflake-ml-python/blob/master/CHANGELOG.md","Documentation":"https://docs.snowflake.com/developer-guide/snowpark-ml","Homepage":"https://github.com/snowflakedb/snowflake-ml-python","Issues":"https://github.com/snowflakedb/snowflake-ml-python/issues","Repository":"https://github.com/snowflakedb/snowflake-ml-python"},"provides_extra":null,"release_url":"https://pypi.org/project/snowflake-ml-python/1.5.4/","requires_dist":["absl-py<2,>=0.15","anyio<4,>=3.5.0","cachetools<6,>=3.1.1","cloudpickle>=2.0.0","fsspec[http]<2024,>=2022.11","importlib-resources<7,>=6.1.1","numpy<2,>=1.23","packaging<24,>=20.9","pandas<3,>=1.0.0","pyarrow","pytimeparse<2,>=1.1.8","pyyaml<7,>=6.0","retrying<2,>=1.3.3","s3fs<2024,>=2022.11","scikit-learn<1.4,>=1.2.1","scipy<2,>=1.9","snowflake-connector-python[pandas]<4,>=3.5.0","snowflake-snowpark-python<2,>=1.17.0","sqlparse<1,>=0.4","typing-extensions<5,>=4.1.0","xgboost<2,>=1.7.3","catboost<2,>=1.2.0; extra == \"all\"","lightgbm<5,>=3.3.5; extra == \"all\"","mlflow<2.4,>=2.1.0; extra == \"all\"","peft<1,>=0.5.0; extra == \"all\"","sentence-transformers<3,>=2.2.2; extra == \"all\"","sentencepiece<1,>=0.1.95; extra == \"all\"","shap==0.42.1; extra == \"all\"","tensorflow<3,>=2.10; extra == \"all\"","tokenizers<1,>=0.10; extra == \"all\"","torch<2.3.0,>=2.0.1; extra == \"all\"","torchdata<1,>=0.4; extra == \"all\"","transformers<5,>=4.32.1; extra == \"all\"","catboost<2,>=1.2.0; extra == \"catboost\"","lightgbm<5,>=3.3.5; extra == \"lightgbm\"","peft<1,>=0.5.0; extra == \"llm\"","mlflow<2.4,>=2.1.0; extra == \"mlflow\"","shap==0.42.1; extra == \"shap\"","tensorflow<3,>=2.10; extra == \"tensorflow\"","torch<2.3.0,>=2.0.1; extra == \"torch\"","torchdata<1,>=0.4; extra == \"torch\"","sentence-transformers<3,>=2.2.2; extra == \"transformers\"","sentencepiece<1,>=0.1.95; extra == \"transformers\"","tokenizers<1,>=0.10; extra == \"transformers\"","transformers<5,>=4.32.1; extra == \"transformers\""],"requires_python":"<3.12,>=3.8","summary":"The machine learning client library that is used for interacting with Snowflake to build machine learning solutions.","version":"1.5.4","yanked":false,"yanked_reason":null},"last_serial":24095731,"releases":{"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"12da9cb8aae0d3445989c1cfbe04d48d1609ef7a486e0de114850e75976a6190","md5":"14e4bc73b75d3d6bb3ac9f3155b51bdf","sha256":"92b43499ec3c3baf7db24866148247885bbe0379ff95c5dbe7bf33e18bc3ddf1"},"downloads":-1,"filename":"snowflake_ml_python-1.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"14e4bc73b75d3d6bb3ac9f3155b51bdf","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1824135,"upload_time":"2023-06-16T20:33:27","upload_time_iso_8601":"2023-06-16T20:33:27.762385Z","url":"https://files.pythonhosted.org/packages/12/da/9cb8aae0d3445989c1cfbe04d48d1609ef7a486e0de114850e75976a6190/snowflake_ml_python-1.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.0.10":[{"comment_text":"","digests":{"blake2b_256":"cde2aaa6425dab3f0a6908cfd62bd6d3ba9021eec5a2c9e34dbeee30b0f2bad0","md5":"ae814199aa6c1388ce214ef8236a5c64","sha256":"f1a8486a31f8a41afc2c7511a8db45c15e8a24bb6fc26fb7d20f9493fc274e0c"},"downloads":-1,"filename":"snowflake_ml_python-1.0.10-py3-none-any.whl","has_sig":false,"md5_digest":"ae814199aa6c1388ce214ef8236a5c64","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1566908,"upload_time":"2023-10-14T01:46:05","upload_time_iso_8601":"2023-10-14T01:46:05.079592Z","url":"https://files.pythonhosted.org/packages/cd/e2/aaa6425dab3f0a6908cfd62bd6d3ba9021eec5a2c9e34dbeee30b0f2bad0/snowflake_ml_python-1.0.10-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.0.11":[{"comment_text":"","digests":{"blake2b_256":"0610ae953f9fa88722e29cdf2dce1a811afedc32fb2af2878a11373e78de62a1","md5":"8f94aa2569d3b940f0d8940dfce7072b","sha256":"d44f105b7828c2f2d537e7e5328c3747183aee6da3ce61465000e770ec36130f"},"downloads":-1,"filename":"snowflake_ml_python-1.0.11-py3-none-any.whl","has_sig":false,"md5_digest":"8f94aa2569d3b940f0d8940dfce7072b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1634924,"upload_time":"2023-10-27T15:33:27","upload_time_iso_8601":"2023-10-27T15:33:27.605774Z","url":"https://files.pythonhosted.org/packages/06/10/ae953f9fa88722e29cdf2dce1a811afedc32fb2af2878a11373e78de62a1/snowflake_ml_python-1.0.11-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.0.12":[{"comment_text":"","digests":{"blake2b_256":"f420aa43e61bf601a06b9b24b501ba9c6ac0bd9ebbc6d3679c6c597583518e25","md5":"2770c285422a7939ad5b5282da50298f","sha256":"f5ac28eeabdc5b85d6a73ee844c4c0a4705f3ab9f1583dede9d004f558c60fbb"},"downloads":-1,"filename":"snowflake_ml_python-1.0.12-py3-none-any.whl","has_sig":false,"md5_digest":"2770c285422a7939ad5b5282da50298f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1650051,"upload_time":"2023-11-13T22:23:06","upload_time_iso_8601":"2023-11-13T22:23:06.535687Z","url":"https://files.pythonhosted.org/packages/f4/20/aa43e61bf601a06b9b24b501ba9c6ac0bd9ebbc6d3679c6c597583518e25/snowflake_ml_python-1.0.12-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.0.2":[{"comment_text":"","digests":{"blake2b_256":"59d0e242d23e4dbdd3140d5a2692b5cdf9853095245d2ad48b78b876d97912c5","md5":"240405c90887e86c6fb7883224cbb302","sha256":"bcdc6de32a592c1ae6af956c326b64522dd57ca6e948a0d4c8838c7233c73de2"},"downloads":-1,"filename":"snowflake_ml_python-1.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"240405c90887e86c6fb7883224cbb302","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1855114,"upload_time":"2023-06-23T02:29:52","upload_time_iso_8601":"2023-06-23T02:29:52.953204Z","url":"https://files.pythonhosted.org/packages/59/d0/e242d23e4dbdd3140d5a2692b5cdf9853095245d2ad48b78b876d97912c5/snowflake_ml_python-1.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.0.3":[{"comment_text":"","digests":{"blake2b_256":"c48064146ccbdceb7dcea147081000d91ccd0a9251cd03bc36d4138994d8963d","md5":"9d1caf3b166d335f643589c7b841dac0","sha256":"babd7fc61d0c785411091af9c91cc6a02aabe8d33741bb4b6e64e8ed6106a964"},"downloads":-1,"filename":"snowflake_ml_python-1.0.3-py3-none-any.whl","has_sig":false,"md5_digest":"9d1caf3b166d335f643589c7b841dac0","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1957662,"upload_time":"2023-07-14T19:11:47","upload_time_iso_8601":"2023-07-14T19:11:47.635273Z","url":"https://files.pythonhosted.org/packages/c4/80/64146ccbdceb7dcea147081000d91ccd0a9251cd03bc36d4138994d8963d/snowflake_ml_python-1.0.3-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.0.4":[{"comment_text":"","digests":{"blake2b_256":"f51f0cf2975ae111ef7a488d965eea06cfa00ace8f58228fee6426ca5e973126","md5":"2f537bfe64074177db975ffa3cdb27bd","sha256":"35a54bb48d558623a9ed3d579671d43b56fd217ef59fb50a8ca21c8bea08e285"},"downloads":-1,"filename":"snowflake_ml_python-1.0.4-py3-none-any.whl","has_sig":false,"md5_digest":"2f537bfe64074177db975ffa3cdb27bd","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1973197,"upload_time":"2023-07-28T18:00:50","upload_time_iso_8601":"2023-07-28T18:00:50.903495Z","url":"https://files.pythonhosted.org/packages/f5/1f/0cf2975ae111ef7a488d965eea06cfa00ace8f58228fee6426ca5e973126/snowflake_ml_python-1.0.4-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.0.5":[{"comment_text":"","digests":{"blake2b_256":"c800697db62cc1d476730a5492c626e72efc7c5f92213a474a4ff7e7206b6545","md5":"e20f675dcd300d7b6d410394a228e2c2","sha256":"0341cc85960f5f4bbc3f7cffa3736221800e030b1974835c41da1b8ac31962d7"},"downloads":-1,"filename":"snowflake_ml_python-1.0.5-py3-none-any.whl","has_sig":false,"md5_digest":"e20f675dcd300d7b6d410394a228e2c2","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":2102556,"upload_time":"2023-08-18T04:06:12","upload_time_iso_8601":"2023-08-18T04:06:12.543242Z","url":"https://files.pythonhosted.org/packages/c8/00/697db62cc1d476730a5492c626e72efc7c5f92213a474a4ff7e7206b6545/snowflake_ml_python-1.0.5-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.0.6":[{"comment_text":"","digests":{"blake2b_256":"3e05822b180309eb0d24bff049521e4239748f5fec07ba01761c3a785b5e04fe","md5":"0d6e5ecdce8c2ee91119979ae2995b47","sha256":"24cd56acbe1fa7dea4d4b033c671508f2154090fe47e8f7943c4e86f3db83da0"},"downloads":-1,"filename":"snowflake_ml_python-1.0.6-py3-none-any.whl","has_sig":false,"md5_digest":"0d6e5ecdce8c2ee91119979ae2995b47","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":2162392,"upload_time":"2023-09-01T19:46:35","upload_time_iso_8601":"2023-09-01T19:46:35.204171Z","url":"https://files.pythonhosted.org/packages/3e/05/822b180309eb0d24bff049521e4239748f5fec07ba01761c3a785b5e04fe/snowflake_ml_python-1.0.6-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.0.7":[{"comment_text":"","digests":{"blake2b_256":"a32118b911db0b94cf4642bb40bda6fc49e8c81cf1ee8b2c61af1920a4432385","md5":"25fec81f5f73a2669b90b44439d58fee","sha256":"9a96c6209a37322f34ac6e160882d61810b39770ef80aae6bd353d11036a5d42"},"downloads":-1,"filename":"snowflake_ml_python-1.0.7-py3-none-any.whl","has_sig":false,"md5_digest":"25fec81f5f73a2669b90b44439d58fee","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":2161488,"upload_time":"2023-09-05T22:16:02","upload_time_iso_8601":"2023-09-05T22:16:02.676852Z","url":"https://files.pythonhosted.org/packages/a3/21/18b911db0b94cf4642bb40bda6fc49e8c81cf1ee8b2c61af1920a4432385/snowflake_ml_python-1.0.7-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.0.8":[{"comment_text":"","digests":{"blake2b_256":"051f738b02586c868aed616def737786b5849fe7b7475cfc6e3ee2f1c6badacc","md5":"1540e94b728d174d6918af5c3771e02c","sha256":"1f1b029a587940a0ced62da80744216b5a71b5fdb2c6992b5e9607d06235c006"},"downloads":-1,"filename":"snowflake_ml_python-1.0.8-py3-none-any.whl","has_sig":false,"md5_digest":"1540e94b728d174d6918af5c3771e02c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1671882,"upload_time":"2023-09-15T16:23:14","upload_time_iso_8601":"2023-09-15T16:23:14.404871Z","url":"https://files.pythonhosted.org/packages/05/1f/738b02586c868aed616def737786b5849fe7b7475cfc6e3ee2f1c6badacc/snowflake_ml_python-1.0.8-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.0.9":[{"comment_text":"","digests":{"blake2b_256":"22f4c17c0244d0221c698ed63a690905e3edb3aca1d9deada111488b8f41c730","md5":"9dadf3eb5b873517bc460fd509921aa3","sha256":"39e65bcd314d5445be1501074688d2ec2c44893dc154d78df74b859554593784"},"downloads":-1,"filename":"snowflake_ml_python-1.0.9-py3-none-any.whl","has_sig":false,"md5_digest":"9dadf3eb5b873517bc460fd509921aa3","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1678267,"upload_time":"2023-09-29T00:41:33","upload_time_iso_8601":"2023-09-29T00:41:33.461514Z","url":"https://files.pythonhosted.org/packages/22/f4/c17c0244d0221c698ed63a690905e3edb3aca1d9deada111488b8f41c730/snowflake_ml_python-1.0.9-py3-none-any.whl","yanked":true,"yanked_reason":"Yank 1.0.9"}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"39c9a8cd8f0742c6d682817d9b39bf0ae4c564a8c4b774f5642f68cb69828ffc","md5":"c963fb4799a8ada8ce0825da52a18955","sha256":"3fcc775553bc80d51cdc807e7d9e4b728c1d9dfefc0a2c9957529381c0b57655"},"downloads":-1,"filename":"snowflake_ml_python-1.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"c963fb4799a8ada8ce0825da52a18955","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1691883,"upload_time":"2023-12-01T18:10:36","upload_time_iso_8601":"2023-12-01T18:10:36.200749Z","url":"https://files.pythonhosted.org/packages/39/c9/a8cd8f0742c6d682817d9b39bf0ae4c564a8c4b774f5642f68cb69828ffc/snowflake_ml_python-1.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"5172e84a68e53a1cad8e9549ea8db0028bb4b8c84ca0a884c0bfadd0619cf76c","md5":"05f44b50888775b22856689488135bd6","sha256":"c6bdb97f85028f8c0494645e8178226e0919405b46aff0c63bc29d7d8ae20dd0"},"downloads":-1,"filename":"snowflake_ml_python-1.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"05f44b50888775b22856689488135bd6","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1723911,"upload_time":"2023-12-06T05:35:52","upload_time_iso_8601":"2023-12-06T05:35:52.485850Z","url":"https://files.pythonhosted.org/packages/51/72/e84a68e53a1cad8e9549ea8db0028bb4b8c84ca0a884c0bfadd0619cf76c/snowflake_ml_python-1.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.1.2":[{"comment_text":"","digests":{"blake2b_256":"1d45005755a45adc65db2c90167809cacb9078f31827cca348224cfd0d348536","md5":"b4df85b66e4651403eef8889e2b30c58","sha256":"3cb94a2061eacb2fa0466c4a694f172c077f2cc926d3aea00087095b8b8b23fd"},"downloads":-1,"filename":"snowflake_ml_python-1.1.2-py3-none-any.whl","has_sig":false,"md5_digest":"b4df85b66e4651403eef8889e2b30c58","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1815237,"upload_time":"2023-12-18T19:45:47","upload_time_iso_8601":"2023-12-18T19:45:47.302939Z","url":"https://files.pythonhosted.org/packages/1d/45/005755a45adc65db2c90167809cacb9078f31827cca348224cfd0d348536/snowflake_ml_python-1.1.2-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"7b633b4ffe11682941dc3e362e3eb2d7ad7cb0ec871f215354294416ba6c31a7","md5":"d53c97eb7c36c44fc7416ed5d6d538db","sha256":"660e7cb45c61f2d8c267b36f5ccd1c6e871fc5146906329051456e97881e9af3"},"downloads":-1,"filename":"snowflake_ml_python-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"d53c97eb7c36c44fc7416ed5d6d538db","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8,<4","size":1847671,"upload_time":"2024-01-11T23:38:49","upload_time_iso_8601":"2024-01-11T23:38:49.461189Z","url":"https://files.pythonhosted.org/packages/7b/63/3b4ffe11682941dc3e362e3eb2d7ad7cb0ec871f215354294416ba6c31a7/snowflake_ml_python-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.2.1":[{"comment_text":"","digests":{"blake2b_256":"ed1f7bc9947289c05ea23522906a789ac947f3f89bd929b1d3313c7e3dd79845","md5":"4b1de4b6a49539b1aaa2cdc9b279d8c0","sha256":"85469532b8aa40f03ad0fb9c3a5efd6306a3f7d312727371e99db7992a99e4d9"},"downloads":-1,"filename":"snowflake_ml_python-1.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"4b1de4b6a49539b1aaa2cdc9b279d8c0","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<4,>=3.8","size":1910994,"upload_time":"2024-01-26T02:13:40","upload_time_iso_8601":"2024-01-26T02:13:40.863454Z","url":"https://files.pythonhosted.org/packages/ed/1f/7bc9947289c05ea23522906a789ac947f3f89bd929b1d3313c7e3dd79845/snowflake_ml_python-1.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.2.2":[{"comment_text":"","digests":{"blake2b_256":"ac7124d47ff4f5c8967e4c080d9c1c1326ab7be148c8b2600b1c065c9d9d7b1a","md5":"c2fad34eea08f6cfb62dd17c07d30db8","sha256":"afb10446aa585faa8d5aa1097711c02ead55142cfe3f6ab5c42d36389c8d02ce"},"downloads":-1,"filename":"snowflake_ml_python-1.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"c2fad34eea08f6cfb62dd17c07d30db8","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<4,>=3.8","size":1932827,"upload_time":"2024-02-13T21:20:50","upload_time_iso_8601":"2024-02-13T21:20:50.312266Z","url":"https://files.pythonhosted.org/packages/ac/71/24d47ff4f5c8967e4c080d9c1c1326ab7be148c8b2600b1c065c9d9d7b1a/snowflake_ml_python-1.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.2.3":[{"comment_text":"","digests":{"blake2b_256":"52547ae7bc8c18358bd5dd9cadcd325da8ad0e3627a7e94bb6d255661beab0b5","md5":"1bf2b6c4d342cac8bbfe1256be802cea","sha256":"0fcdf9c920a1a66dc703ab9dfa28d02a6588464f4610ac676f876e1f4794b7a0"},"downloads":-1,"filename":"snowflake_ml_python-1.2.3-py3-none-any.whl","has_sig":false,"md5_digest":"1bf2b6c4d342cac8bbfe1256be802cea","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1941575,"upload_time":"2024-02-26T22:46:27","upload_time_iso_8601":"2024-02-26T22:46:27.346116Z","url":"https://files.pythonhosted.org/packages/52/54/7ae7bc8c18358bd5dd9cadcd325da8ad0e3627a7e94bb6d255661beab0b5/snowflake_ml_python-1.2.3-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.3.0":[{"comment_text":"","digests":{"blake2b_256":"ef0531573de8d98229556a7a156ddfd71f9a1bb17b6007d05632edf41fc3f5be","md5":"c586b2434daab84cc665dc5ce39a9810","sha256":"0c122a9621e355bf98fbd368534eadb7fde45e419d59eac41094e50d321cd9e0"},"downloads":-1,"filename":"snowflake_ml_python-1.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"c586b2434daab84cc665dc5ce39a9810","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1832398,"upload_time":"2024-03-12T22:46:31","upload_time_iso_8601":"2024-03-12T22:46:31.724263Z","url":"https://files.pythonhosted.org/packages/ef/05/31573de8d98229556a7a156ddfd71f9a1bb17b6007d05632edf41fc3f5be/snowflake_ml_python-1.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.3.1":[{"comment_text":"","digests":{"blake2b_256":"ec378f0998b1a8292d1f40c1ad28ae5900ea74c007bc8e6b147e844b741f3755","md5":"1ee569f885c8ef0d2b6c26cbf6362915","sha256":"66cab167bc1b11453a9aa84aaad5760dbdd1eccf9f602f89965b5acfbd9a91ea"},"downloads":-1,"filename":"snowflake_ml_python-1.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"1ee569f885c8ef0d2b6c26cbf6362915","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1764347,"upload_time":"2024-03-21T21:00:52","upload_time_iso_8601":"2024-03-21T21:00:52.519288Z","url":"https://files.pythonhosted.org/packages/ec/37/8f0998b1a8292d1f40c1ad28ae5900ea74c007bc8e6b147e844b741f3755/snowflake_ml_python-1.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.4.0":[{"comment_text":"","digests":{"blake2b_256":"ed2f8e8862f0b77c23cdcafba56be63640f87feb8aef4421116b836f40f1f9c4","md5":"c95d965a6cea5b5360a982f445d216e3","sha256":"a593eb3cb83af48a3b054aac041d8ce12e4f258ee0bf80197ce1d350053b2d76"},"downloads":-1,"filename":"snowflake_ml_python-1.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"c95d965a6cea5b5360a982f445d216e3","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1770414,"upload_time":"2024-04-08T20:26:19","upload_time_iso_8601":"2024-04-08T20:26:19.294621Z","url":"https://files.pythonhosted.org/packages/ed/2f/8e8862f0b77c23cdcafba56be63640f87feb8aef4421116b836f40f1f9c4/snowflake_ml_python-1.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.4.1":[{"comment_text":"","digests":{"blake2b_256":"c9e770c3f1e0cbe505f29cfeca1d95fb0cb148651dd460cbbceb706647cac306","md5":"d5dfa4b019e3deb8a42300db0da9b1cb","sha256":"30a173ddd790db0d87f4a0a6044b412fbe9daa5c5d9095fcb66676204e7a3912"},"downloads":-1,"filename":"snowflake_ml_python-1.4.1-py3-none-any.whl","has_sig":false,"md5_digest":"d5dfa4b019e3deb8a42300db0da9b1cb","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1907332,"upload_time":"2024-04-22T21:26:14","upload_time_iso_8601":"2024-04-22T21:26:14.507380Z","url":"https://files.pythonhosted.org/packages/c9/e7/70c3f1e0cbe505f29cfeca1d95fb0cb148651dd460cbbceb706647cac306/snowflake_ml_python-1.4.1-py3-none-any.whl","yanked":true,"yanked_reason":null}],"1.5.0":[{"comment_text":"","digests":{"blake2b_256":"8072c0fa5a9bc811a59a5a1c7113ff89676ed1629d7d6463db8c1a8c97a8b5f6","md5":"861dd0bce815d5238007a832acbfad5b","sha256":"5e164bd9011f945e5b50988d38219e4453fbad3f29a9867ae6a1403d4a982baa"},"downloads":-1,"filename":"snowflake_ml_python-1.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"861dd0bce815d5238007a832acbfad5b","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1897128,"upload_time":"2024-05-01T20:03:45","upload_time_iso_8601":"2024-05-01T20:03:45.557192Z","url":"https://files.pythonhosted.org/packages/80/72/c0fa5a9bc811a59a5a1c7113ff89676ed1629d7d6463db8c1a8c97a8b5f6/snowflake_ml_python-1.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.5.1":[{"comment_text":"","digests":{"blake2b_256":"ba59baf64a782ef609514f6d1ad11735504267d04794097d8a29809c4b4b2a38","md5":"4f2e0f9e9f506899e0a2519ac3af2416","sha256":"fbaa9b0143a9fdb43393e48953e8135b6fa2239473af68e2285d387ee9b8726a"},"downloads":-1,"filename":"snowflake_ml_python-1.5.1-py3-none-any.whl","has_sig":false,"md5_digest":"4f2e0f9e9f506899e0a2519ac3af2416","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1904067,"upload_time":"2024-05-22T18:29:22","upload_time_iso_8601":"2024-05-22T18:29:22.135191Z","url":"https://files.pythonhosted.org/packages/ba/59/baf64a782ef609514f6d1ad11735504267d04794097d8a29809c4b4b2a38/snowflake_ml_python-1.5.1-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.5.2":[{"comment_text":"","digests":{"blake2b_256":"d1fadc2d96db4475a21983b906c3e8d673ad4ae0595f87fc64395f3e5c4f0476","md5":"126c0c9cd2bf2bcdccc31330bec0ec28","sha256":"908ef2d24e0d4432f7aa1db4502a544163e1fce2cf6b5958d7ab6274156689d9"},"downloads":-1,"filename":"snowflake_ml_python-1.5.2-py3-none-any.whl","has_sig":false,"md5_digest":"126c0c9cd2bf2bcdccc31330bec0ec28","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1917707,"upload_time":"2024-06-10T22:32:38","upload_time_iso_8601":"2024-06-10T22:32:38.948983Z","url":"https://files.pythonhosted.org/packages/d1/fa/dc2d96db4475a21983b906c3e8d673ad4ae0595f87fc64395f3e5c4f0476/snowflake_ml_python-1.5.2-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.5.3":[{"comment_text":"","digests":{"blake2b_256":"64b76daacf1ab0b504e0ca9947cbbf6cdc3960965a268da0b2a01bc2de0e3518","md5":"1222b5bde642ea36afc2df0ca347d41a","sha256":"d69269f2f3cee46166a07b7311a2b9c09b42b66beb9f3ed2f6e56b3933c17e11"},"downloads":-1,"filename":"snowflake_ml_python-1.5.3-py3-none-any.whl","has_sig":false,"md5_digest":"1222b5bde642ea36afc2df0ca347d41a","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1923815,"upload_time":"2024-06-19T02:08:26","upload_time_iso_8601":"2024-06-19T02:08:26.224024Z","url":"https://files.pythonhosted.org/packages/64/b7/6daacf1ab0b504e0ca9947cbbf6cdc3960965a268da0b2a01bc2de0e3518/snowflake_ml_python-1.5.3-py3-none-any.whl","yanked":false,"yanked_reason":null}],"1.5.4":[{"comment_text":"","digests":{"blake2b_256":"6e8f839a6cbf5488fda66dcf3808f689309ff54cc49a418724874ae062c18b37","md5":"d22a531656f5ff2c9c9bdc77ce40c18d","sha256":"59ea2d14f17967eb0f9b3c6031316fd17e387707dc344b0a220d096b92a0e7c0"},"downloads":-1,"filename":"snowflake_ml_python-1.5.4-py3-none-any.whl","has_sig":false,"md5_digest":"d22a531656f5ff2c9c9bdc77ce40c18d","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1935237,"upload_time":"2024-07-11T22:28:16","upload_time_iso_8601":"2024-07-11T22:28:16.916385Z","url":"https://files.pythonhosted.org/packages/6e/8f/839a6cbf5488fda66dcf3808f689309ff54cc49a418724874ae062c18b37/snowflake_ml_python-1.5.4-py3-none-any.whl","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"6e8f839a6cbf5488fda66dcf3808f689309ff54cc49a418724874ae062c18b37","md5":"d22a531656f5ff2c9c9bdc77ce40c18d","sha256":"59ea2d14f17967eb0f9b3c6031316fd17e387707dc344b0a220d096b92a0e7c0"},"downloads":-1,"filename":"snowflake_ml_python-1.5.4-py3-none-any.whl","has_sig":false,"md5_digest":"d22a531656f5ff2c9c9bdc77ce40c18d","packagetype":"bdist_wheel","python_version":"py3","requires_python":"<3.12,>=3.8","size":1935237,"upload_time":"2024-07-11T22:28:16","upload_time_iso_8601":"2024-07-11T22:28:16.916385Z","url":"https://files.pythonhosted.org/packages/6e/8f/839a6cbf5488fda66dcf3808f689309ff54cc49a418724874ae062c18b37/snowflake_ml_python-1.5.4-py3-none-any.whl","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
