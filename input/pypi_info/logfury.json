{"info":{"author":"Pawel Polewicz","author_email":"p.polewicz@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 6 - Mature","Intended Audience :: Developers","License :: OSI Approved :: BSD License","Natural Language :: English","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Software Development :: Libraries :: Python Modules","Topic :: System :: Logging"],"description":".. image:: https://img.shields.io/pypi/wheel/logfury.svg\n    :target: https://pypi.python.org/pypi/logfury/\n.. image:: https://img.shields.io/pypi/l/logfury.svg\n    :target: https://pypi.python.org/pypi/logfury/\n.. image:: https://img.shields.io/pypi/v/logfury.svg\n    :target: https://pypi.python.org/pypi/logfury/\n.. image:: https://img.shields.io/pypi/dm/logfury.svg\n    :target: https://pypi.python.org/pypi/logfury/\n.. image:: https://github.com/reef-technologies/logfury/workflows/CI/badge.svg?branch=master\n    :target: https://github.com/reef-technologies/logfury/actions/workflows/ci.yml\n\n========\nLogfury\n========\n\nLogfury is a tool for python library maintainers. It allows for responsible, low-boilerplate logging of method calls.\n\n*****************************\nwhats with the weird import\n*****************************\n\n.. sourcecode:: python\n\n    from logfury.v1 import DefaultTraceMeta\n\nIf you were to use logfury in your library, any change to the API could potentially break your program. Nobody wants that.\n\nThanks to this import trick I can keep the API very stable. At the same time I can change the functionality of the library and change default behavior of next middle version, without changing the name of the package. This way YOU decide when to adopt potentially incompatible API changes, by incrementing the API version on import. This concept is called \"apiver\".\n\n\n*****************\nInstallation\n*****************\n\n^^^^^^^^^^^^^^^^^^^^\nCurrent stable\n^^^^^^^^^^^^^^^^^^^^\n\n::\n\n    pip install logfury\n\n^^^^^^^^^^^^^^^^^^^^\nDevelopment version\n^^^^^^^^^^^^^^^^^^^^\n\n::\n\n    git clone git@github.com:reef-technologies/logfury.git\n    pip install -e .\n\n\n*****************\nBasic usage\n*****************\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\nDefaultTraceMeta metaclass\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. sourcecode:: pycon\n\n    >>> import logging\n    >>> import six\n    >>>\n    >>> from logfury.v1 import DefaultTraceMeta, limit_trace_arguments, disable_trace\n    >>>\n    >>>\n    >>> logging.basicConfig()\n    >>> logger = logging.getLogger(__name__)\n    >>> logger.setLevel(logging.DEBUG)\n    >>>\n    >>>\n    >>> @six.add_metaclass(DefaultTraceMeta)\n    >>> class Foo:\n    ...     def baz(self, a, b, c=None):\n    ...         return True\n    ...     def get_blah(self):\n    ...         return 5\n    ...     def _hello(self):\n    ...         pass\n    ...     @disable_trace\n    ...     def world(self):\n    ...         pass\n    ...     def __repr__(self):\n    ...         return '<{} object>'.format(self.__class__.__name__,)\n    ...\n    >>> class Bar(Foo):\n    ...     def baz(self, a, b, c=None):\n    ...         b += 1\n    ...         return super(Bar, self).baz(a, b, c)\n    ...     def world(self):\n    ...         pass\n    ...     @limit_trace_arguments(skip=['password'])\n    ...     def secret(self, password, other):\n    ...         pass\n    ...     @limit_trace_arguments(only=['other'])\n    ...     def secret2(self, password, other):\n    ...         pass\n    ...\n    >>> a = Foo()\n    >>> a.baz(1, 2, 3)\n    DEBUG:__main__:calling Foo.baz(self=<Foo object>, a=1, b=2, c=3)\n    >>> a.baz(4, b=8)\n    DEBUG:__main__:calling Foo.baz(self=<Foo object>, a=4, b=8)\n    >>> a.get_blah()  # nothing happens, since v1.DefaultTraceMeta does not trace \"get_.*\"\n    >>> a._hello()  # nothing happens, since v1.DefaultTraceMeta does not trace \"_.*\"\n    >>> a.world()  # nothing happens, since v1.DefaultTraceMeta does not trace \"_.*\"\n    >>> b = Bar()\n    >>> b.baz(4, b=8)  # tracing is inherited\n    DEBUG:__main__:calling Bar.baz(self=<Bar object>, a=4, b=8)\n    DEBUG:__main__:calling Foo.baz(self=<Bar object>, a=4, b=9, c=None)\n    >>> b.world()  # nothing happens, since Foo.world() tracing was disabled and Bar inherited it\n    >>> b.secret('correct horse battery staple', 'Hello world!')\n    DEBUG:__main__:calling Bar.secret(self=<Bar object>, other='Hello world!') (hidden args: password)\n    >>> b.secret2('correct horse battery staple', 'Hello world!')\n    DEBUG:__main__:calling Bar.secret2(other='Hello world!') (hidden args: self, password)\n\n\n^^^^^^^^^^^^^^^^^^^^\ntrace_call decorator\n^^^^^^^^^^^^^^^^^^^^\n\n.. sourcecode:: pycon\n\n    >>> import logging\n    >>> from logfury import *\n    >>> logging.basicConfig()\n    >>> logger = logging.getLogger(__name__)\n    >>>\n    >>> @trace_call(logger)\n    ... def foo(a, b, c=None):\n    ...     return True\n    ...\n    >>> foo(1, 2, 3)\n    True\n    >>> logger.setLevel(logging.DEBUG)\n    >>> foo(1, 2, 3)\n    DEBUG:__main__:calling foo(a=1, b=2, c=3)\n    True\n    >>> foo(1, b=2)\n    DEBUG:__main__:calling foo(a=1, b=2)\n    True\n    >>>\n\n\n","description_content_type":"","docs_url":null,"download_url":"https://github.com/reef-technologies/logfury/releases","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/reef-technologies/logfury","keywords":"logging,tracing","license":"BSD","maintainer":"Pawel Polewicz","maintainer_email":"p.polewicz@gmail.com","name":"logfury","package_url":"https://pypi.org/project/logfury/","platform":"","project_url":"https://pypi.org/project/logfury/","project_urls":{"Download":"https://github.com/reef-technologies/logfury/releases","Homepage":"https://github.com/reef-technologies/logfury"},"provides_extra":null,"release_url":"https://pypi.org/project/logfury/1.0.1/","requires_dist":null,"requires_python":"","summary":"('Toolkit for responsible, low-boilerplate logging of library method calls',)","version":"1.0.1","yanked":false,"yanked_reason":null},"last_serial":11813310,"releases":{"0.1.2":[{"comment_text":"","digests":{"blake2b_256":"5571c70df1ef41721b554c91982ebde423a5cf594261aa5132e39ade9196fa3b","md5":"f189f6d0d2ea774382f3e566d4896eb2","sha256":"e0ce7f95bab6e5b2fd835b3d8ff5e226704476671d15340a99b00285f4c2d1fc"},"downloads":-1,"filename":"logfury-0.1.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f189f6d0d2ea774382f3e566d4896eb2","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":12440,"upload_time":"2016-10-09T22:53:05","upload_time_iso_8601":"2016-10-09T22:53:05.005176Z","url":"https://files.pythonhosted.org/packages/55/71/c70df1ef41721b554c91982ebde423a5cf594261aa5132e39ade9196fa3b/logfury-0.1.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"e2a066a7b78e1800af85e54701490cf8764cc6de6c0725d18b10a6fb13ce4d2d","md5":"b1bc3990bbb6c426e36bdb2d3da09e7d","sha256":"42da58fbbd4e6fdb9e5b6b9098e94c249ba9cebfae125643329c8636768edcd3"},"downloads":-1,"filename":"logfury-0.1.2.tar.gz","has_sig":false,"md5_digest":"b1bc3990bbb6c426e36bdb2d3da09e7d","packagetype":"sdist","python_version":"source","requires_python":null,"size":17222,"upload_time":"2016-10-30T00:07:43","upload_time_iso_8601":"2016-10-30T00:07:43.475468Z","url":"https://files.pythonhosted.org/packages/e2/a0/66a7b78e1800af85e54701490cf8764cc6de6c0725d18b10a6fb13ce4d2d/logfury-0.1.2.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"23b0545d5f4c1a6d4d694c6194d599d76829ea88761ddac4e14a93909d8abbc7","md5":"e9c033b6cfff6174a1c447071d555075","sha256":"35a32b0d87a2a224b819c41176f715fd511c4e29f6718f2303f2aa9a17958800"},"downloads":-1,"filename":"logfury-1.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"e9c033b6cfff6174a1c447071d555075","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":7446,"upload_time":"2021-10-21T05:18:42","upload_time_iso_8601":"2021-10-21T05:18:42.780885Z","url":"https://files.pythonhosted.org/packages/23/b0/545d5f4c1a6d4d694c6194d599d76829ea88761ddac4e14a93909d8abbc7/logfury-1.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"afd342703df5ae23135368670103f04ac33f788f2125a47412b002c7293491e6","md5":"addbcdae13245e4b38964c85b3ac8912","sha256":"5990f738c7bfb51d71987b68c0ec6c1f3c15ca8f29d3176d08e2855487c78a2c"},"downloads":-1,"filename":"logfury-1.0.0.tar.gz","has_sig":false,"md5_digest":"addbcdae13245e4b38964c85b3ac8912","packagetype":"sdist","python_version":"source","requires_python":null,"size":12585,"upload_time":"2021-10-21T05:18:45","upload_time_iso_8601":"2021-10-21T05:18:45.469144Z","url":"https://files.pythonhosted.org/packages/af/d3/42703df5ae23135368670103f04ac33f788f2125a47412b002c7293491e6/logfury-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"04c78a2cfdf39f4cbbb307603aeb03ca89a4765b96be310a0848b20eb4d17e76","md5":"58339a12fd353e9bd46b127067ded65a","sha256":"b4f04be1701a1df644afc3384d6167d64c899f8036b7eefc3b6c570c6a9b290b"},"downloads":-1,"filename":"logfury-1.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"58339a12fd353e9bd46b127067ded65a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":7512,"upload_time":"2021-10-23T23:23:02","upload_time_iso_8601":"2021-10-23T23:23:02.210583Z","url":"https://files.pythonhosted.org/packages/04/c7/8a2cfdf39f4cbbb307603aeb03ca89a4765b96be310a0848b20eb4d17e76/logfury-1.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"90f224389d99f861dd65753fc5a56e2672339ec1b078da5e2f4b174d0767b132","md5":"a720c197b2fee24cd1badd06bd64bed3","sha256":"130a5daceab9ad534924252ddf70482aa2c96662b3a3825a7d30981d03b76a26"},"downloads":-1,"filename":"logfury-1.0.1.tar.gz","has_sig":false,"md5_digest":"a720c197b2fee24cd1badd06bd64bed3","packagetype":"sdist","python_version":"source","requires_python":null,"size":12826,"upload_time":"2021-10-23T23:23:03","upload_time_iso_8601":"2021-10-23T23:23:03.847630Z","url":"https://files.pythonhosted.org/packages/90/f2/24389d99f861dd65753fc5a56e2672339ec1b078da5e2f4b174d0767b132/logfury-1.0.1.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"04c78a2cfdf39f4cbbb307603aeb03ca89a4765b96be310a0848b20eb4d17e76","md5":"58339a12fd353e9bd46b127067ded65a","sha256":"b4f04be1701a1df644afc3384d6167d64c899f8036b7eefc3b6c570c6a9b290b"},"downloads":-1,"filename":"logfury-1.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"58339a12fd353e9bd46b127067ded65a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":7512,"upload_time":"2021-10-23T23:23:02","upload_time_iso_8601":"2021-10-23T23:23:02.210583Z","url":"https://files.pythonhosted.org/packages/04/c7/8a2cfdf39f4cbbb307603aeb03ca89a4765b96be310a0848b20eb4d17e76/logfury-1.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"90f224389d99f861dd65753fc5a56e2672339ec1b078da5e2f4b174d0767b132","md5":"a720c197b2fee24cd1badd06bd64bed3","sha256":"130a5daceab9ad534924252ddf70482aa2c96662b3a3825a7d30981d03b76a26"},"downloads":-1,"filename":"logfury-1.0.1.tar.gz","has_sig":false,"md5_digest":"a720c197b2fee24cd1badd06bd64bed3","packagetype":"sdist","python_version":"source","requires_python":null,"size":12826,"upload_time":"2021-10-23T23:23:03","upload_time_iso_8601":"2021-10-23T23:23:03.847630Z","url":"https://files.pythonhosted.org/packages/90/f2/24389d99f861dd65753fc5a56e2672339ec1b078da5e2f4b174d0767b132/logfury-1.0.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
