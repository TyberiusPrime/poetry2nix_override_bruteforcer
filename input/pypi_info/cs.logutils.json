{"info":{"author":null,"author_email":"Cameron Simpson <cs@cskk.id.au>","bugtrack_url":null,"classifiers":["Development Status :: 4 - Beta","Intended Audience :: Developers","License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 2","Programming Language :: Python :: 3","Topic :: Software Development :: Libraries :: Python Modules"],"description":"Logging convenience routines.\n\n*Latest release 20240630*:\n* New LoggingState class for the computed log state, split out setup_logging() as a little stub.\n* Drop func_wrap and _ftrace, superceded by cs.debug.trace.\n* infer_logging_level: ignore the module.name and module:function_name $DEBUG values, now done by importing cs.debug.\n\nThe logging package is very useful, but a little painful to use.\nThis package provides low impact logging setup and some extremely\nuseful if unconventional context hooks for logging.\n\nThe default logging verbosity output format has different defaults\nbased on whether an output log file is a tty\nand whether the environment variable `$DEBUG` is set, and to what.\n\nOn terminals warnings and errors get ANSI colouring.\n\nA mode is available that uses `cs.upd` for certain log levels.\n\nLog messages dispatched via `warning` and friends from this module\nare automatically prefixed with the current `cs.pfx` prefix string,\nproviding automatic message context.\n\nSome examples:\n--------------\n\nProgram initialisation:\n\n    from cs.logutils import setup_logging\n\n    def main(argv):\n        cmd = os.path.basename(argv.pop(0))\n        setup_logging(cmd)\n\nBasic logging from anywhere:\n\n    from cs.logutils import info, warning, error\n    [...]\n    def some_function(...):\n        [...]\n        error(\"nastiness found! bad value=%r\", bad_value)\n\n## Function `add_logfile(filename, logger=None, mode='a', encoding=None, delay=False, format=None, no_prefix=False)`\n\nAdd a `FileHandler` logging to the specified `filename`;\nreturn the chosen logger and the new handler.\n\nParameters:\n* `logger`: if supplied and not `None`, add the `FileHandler` to that\n  `Logger`, otherwise to the root Logger. If `logger` is a string, call\n  `logging.getLogger(logger)` to obtain the logger.\n* `mode`, `encoding` and `delay`: passed to the `FileHandler`\n  initialiser.\n* `format`: used to override the handler's default format.\n* `no_prefix`: if true, do not put the `Pfx` context onto the front of the message.\n\n## Function `critical(msg, *args, **kwargs)`\n\nEmit a log at `logging.CRITICAL` level with the current `Pfx` prefix.\n\n## Function `D(msg, *args)`\n\nPrint formatted debug string straight to `sys.stderr` if\n`D_mode` is true, bypassing the logging modules entirely.\nA quick'n'dirty debug tool.\n\n## Function `debug(msg, *args, **kwargs)`\n\nEmit a log at `logging.DEBUG` level with the current `Pfx` prefix.\n\n## Function `error(msg, *args, **kwargs)`\n\nEmit a log at `logging.ERROR` level with the current `Pfx` prefix.\n\n## Function `exception(msg, *args, **kwargs)`\n\nEmit an exception log with the current `Pfx` prefix.\n\n## Function `ifdebug()`\n\nTest the `loginfo.level` against `logging.DEBUG`.\n\n## Function `ifverbose(is_verbose, msg, *args, **kwargs)`\n\nConditionally log a message.\n\nIf `is_verbose` is `None`, log at `VERBOSE` level and rely on the logging setup.\nOtherwise, if `is_verbose` is true, log at `INFO` level.\n\n## Function `infer_logging_level(env_debug=None, environ=None, verbose=None)`\n\nInfer a logging level from the `env_debug`, which by default\ncomes from the environment variable `$DEBUG`.\n\nUsually default to `logging.WARNING`, but if `sys.stderr` is a terminal,\ndefault to `logging.INFO`.\n\nParse the environment variable `$DEBUG` as a comma separated\nlist of flags.\n\nExamine the in sequence flags to affect the logging level:\n* numeric < 1: `logging.WARNING`\n* numeric >= 1 and < 2: `logging.INFO`\n* numeric >= 2: `logging.DEBUG`\n* `\"DEBUG\"`: `logging.DEBUG`\n* `\"STATUS\"`: `STATUS`\n* `\"INFO\"`: `logging.INFO`\n* `\"TRACK\"`: `TRACK`\n* `\"WARNING\"`: `logging.WARNING`\n* `\"ERROR\"`: `logging.ERROR`\n\nReturn an object with the following attributes:\n* `.level`: A logging level.\n* `.flags`: All the words from `$DEBUG` as separated by commas and uppercased.\n\n## Function `info(msg, *args, **kwargs)`\n\nEmit a log at `logging.INFO` level with the current `Pfx` prefix.\n\n## Function `log(level, msg, *args, **kwargs)`\n\nEmit a log at the specified level with the current `Pfx` prefix.\n\n## Function `logException(exc_type, exc_value, exc_tb)`\n\nReplacement for `sys.excepthook` that reports via the `cs.logutils`\nlogging wrappers.\n\n## Class `LoggingState(types.SimpleNamespace)`\n\nA logging setup arranged for conventional UNIX command line use.\n\n*Method `LoggingState.__init__(self, cmd=None, main_log=None, format=None, level=None, flags=None, upd_mode=None, ansi_mode=None, trace_mode=None, verbose=None, supplant_root_logger=False)`*:\nPrepare the `LoggingState` for conventional UNIX command\nline error messaging.\n\nAmongst other things, the default logger now includes\nthe `cs.pfx` prefix in the message.\n\nThis function runs in two modes:\n- if logging has not been set up, it sets up a root logger\n- if the root logger already has handlers,\n  monkey patch the first handler's formatter to prefix the `cs.pfx` state\n\nParameters:\n* `cmd`: program name, default from `basename(sys.argv[0])`.\n  Side-effect: sets `cs.pfx.cmd` to this value.\n* `main_log`: default logging system.\n  If `None`, the main log will go to `sys.stderr`;\n  if `main_log` is a string, is it used as a filename to\n  open in append mode;\n  otherwise main_log should be a stream suitable\n  for use with `logging.StreamHandler()`.\n  The resulting log handler is added to the `logging` root logger.\n* `format`: the message format for `main_log`.\n  If `None`, use `DEFAULT_PFX_FORMAT_TTY`\n  when `main_log` is a tty or FIFO,\n  otherwise `DEFAULT_PFX_FORMAT`.\n* `level`: `main_log` logging level.\n  If `None`, infer a level from the environment\n  using `infer_logging_level()`.\n* `flags`: a string containing debugging flags separated by commas.\n  If `None`, infer the flags from the environment using\n  `infer_logging_level()`.\n  The following flags have meaning:\n  `D`: set cs.logutils.D_mode to True;\n  `TDUMP`: attach a signal handler to SIGHUP to do a thread stack dump;\n  `TRACE`: enable various noisy tracing facilities;\n  `UPD`, `NOUPD`: set the default for `upd_mode` to True or False respectively.\n* `upd_mode`: a Boolean to activate cs.upd as the `main_log` method;\n  if `None`, set it to `True` if `flags` contains 'UPD',\n  otherwise to `False` if `flags` contains 'NOUPD',\n  otherwise set it from `main_log.isatty()`.\n  A true value causes the root logger to use `cs.upd` for logging.\n* `ansi_mode`: if `None`,\n  set it from `main_log.isatty() and not cs.colourise.env_no_color()`,\n  which thus honours the `$NO_COLOR` environment variable\n  (see https://no-color.org/ for the convention).\n  A true value causes the root logger to colour certain logging levels\n  using ANSI terminal sequences (currently only if `cs.upd` is used).\n* `trace_mode`: if `None`, set it according to the presence of\n  'TRACE' in flags. Otherwise if `trace_mode` is true, set the\n  global `loginfo.trace_level` to `loginfo.level`; otherwise it defaults\n  to `logging.DEBUG`.\n* `verbose`: if `None`, then if stderr is a tty then the log\n  level is `INFO` otherwise `WARNING`. Otherwise, if `verbose` is\n  true then the log level is `INFO` otherwise `WARNING`.\n\n*Method `LoggingState.apply(self)`*:\nApply this `LoggingState` to the current logging setup.\n\n## `loginfo = LoggingState(main_log=<_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'>, level=25, verbose=None, trace_level=10, flags=[], cmd='cs-release', upd=<cs.upd.Upd object at 0x1063e8a90>, upd_mode=True, ansi_mode=True, format='%(pfx)s: %(message)s', supplant_root_logger=False)`\n\nA logging setup arranged for conventional UNIX command line use.\n\n## Class `LogTime`\n\nLogTime is a context manager that logs the elapsed time of the enclosed\ncode. After the run, the field .elapsed contains the elapsed time in\nseconds.\n\n*Method `LogTime.__init__(self, tag, *args, **kwargs)`*:\nSet up a LogTime.\n\nParameters:\n* `tag`: label included at the start of the log entry\n* `args`: optional array; if not empty `args` is applied to\n  `tag` with `%`\n* `level`: keyword argument specifying a log level for a\n  default log entry, default `logging.INFO`\n* `threshold`: keyword argument specifying minimum time to\n  cause a log, default None (no minimum)\n* `warning_level`: keyword argument specifying the log level\n  for a warning log entry, default `logging.WARNING`\n* `warning_threshold`: keyword argument specifying a time\n  which raises the log level to `warning_level`\n\n## Function `logTo(filename, logger=None, mode='a', encoding=None, delay=False, format=None, no_prefix=False)`\n\nAdd a `FileHandler` logging to the specified `filename`;\nreturn the chosen logger and the new handler.\n\nParameters:\n* `logger`: if supplied and not `None`, add the `FileHandler` to that\n  `Logger`, otherwise to the root Logger. If `logger` is a string, call\n  `logging.getLogger(logger)` to obtain the logger.\n* `mode`, `encoding` and `delay`: passed to the `FileHandler`\n  initialiser.\n* `format`: used to override the handler's default format.\n* `no_prefix`: if true, do not put the `Pfx` context onto the front of the message.\n\n## Class `NullHandler(logging.Handler)`\n\nA `Handler` which discards its requests.\n\n*Method `NullHandler.emit(self, record)`*:\nDiscard the log record.\n\n## Class `PfxFormatter(logging.Formatter)`\n\nA Formatter subclass that has access to the program's `cmd` and `Pfx` state.\n\n*Method `PfxFormatter.__init__(self, fmt=None, datefmt=None, cmd=None)`*:\nInitialise the `PfxFormatter`.\n\nParameters:\n* `fmt`: format template,\n  default from `DEFAULT_PFX_FORMAT` `'%(asctime)s %(levelname)s %(pfx)s: %(message)s'`.\n  Passed through to `Formatter.__init__`.\n* `datefmt`:\n  Passed through to `Formatter.__init__`.\n* `cmd`: the \"command prefix\" made available to format strings.\n  If not set, `cs.pfx.cmd` is presented.\n\n*Method `PfxFormatter.format(self, record)`*:\nSet `record.cmd` and `record.pfx`\nto the global `cmd` and `Pfx` context prefix respectively,\nthen call `Formatter.format`.\n\n*Method `PfxFormatter.patch_formatter(formatter)`*:\nMonkey patch an existing `Formatter` instance\nwith a `format` method which prepends the current `Pfx` prefix.\n\n## Function `quiet(msg, *args, **kwargs)`\n\nEmit a log at `QUIET` level with the current `Pfx` prefix.\n\n## Function `setup_logging(cmd=None, **kw)`\n\nPrepare a `LoggingState` and return it.\nIt is also available as the global `cs.logutils.loginfo`.\n\n## Function `status(msg, *args, **kwargs)`\n\nEmit a log at `STATUS` level with the current `Pfx` prefix.\n\n## Function `trace(msg, *args, **kwargs)`\n\nEmit a log message at `loginfo.trace_level` with the current `Pfx` prefix.\n\n## Function `track(msg, *args, **kwargs)`\n\nEmit a log at `TRACK` level with the current `Pfx` prefix.\n\n## Function `upd(msg, *args, **kwargs)`\n\nIf we're using an `UpdHandler`,\nupdate the status line otherwise write an info message.\n\nNote that this calls `Upd.out` directly with `msg%args`\nand thus does not include the current `Pfx` prefix.\nYou may well want to use the `status()` function instead.\n\n## Class `UpdHandler(logging.StreamHandler)`\n\nA `StreamHandler` subclass whose `.emit` method\nuses a `cs.upd.Upd` for transcription.\n\n*Method `UpdHandler.__init__(self, strm=None, upd_level=None, ansi_mode=None, over_handler=None)`*:\nInitialise the `UpdHandler`.\n\nParameters:\n* `strm`: the output stream, default `sys.stderr`.\n* `upd_level`: the magic logging level which updates the status line\n  via `Upd`. Default: `STATUS`.\n* `ansi_mode`: if `None`, set from `strm.isatty()`.\n  A true value causes the handler to colour certain logging levels\n  using ANSI terminal sequences.\n\n*Method `UpdHandler.emit(self, logrec)`*:\nEmit a `LogRecord` `logrec`.\n\nFor the log level `self.upd_level` update the status line.\nFor other levels write a distinct line\nto the output stream, possibly colourised.\n\n*Method `UpdHandler.flush(self)`*:\nFlush the update status.\n\n## Function `verbose(msg, *args, **kwargs)`\n\nEmit a log at `VERBOSE` level with the current `Pfx` prefix.\n\n## Function `warning(msg, *args, **kwargs)`\n\nEmit a log at `logging.WARNING` level with the current `Pfx` prefix.\n\n## Function `with_log(filename, **kw)`\n\nContext manager to add a `Logger` to the output logs temporarily.\n\n# Release Log\n\n\n\n*Release 20240630*:\n* New LoggingState class for the computed log state, split out setup_logging() as a little stub.\n* Drop func_wrap and _ftrace, superceded by cs.debug.trace.\n* infer_logging_level: ignore the module.name and module:function_name $DEBUG values, now done by importing cs.debug.\n\n*Release 20230212*:\nLate import of cs.upd at need to avoid import loop.\n\n*Release 20220531*:\nPfxFormatter.patch_formatter: notice if record.args is not a tuple and do not try to prefix it (for now).\n\n*Release 20220530*:\n* New QUIET log level between TRACK and STATUS, add new quiet() logging call.\n* PfxFormatter.patch_formatter: bugfix handling of record.msg,record.args.\n\n*Release 20220315*:\nA bit of a hack to prevent double patching a formatter, as when BaseCommand calls a BaseCommand and other circumstances where setup_logging() gets called more than once.\n\n*Release 20220227*:\n* PfxFormatter: new patch_formatter() static method to modify an existing Formatter.\n* setup_logging: just use PfxFormatter.patch_formatter on the first handler's formatter if logging is already set up.\n\n*Release 20211208*:\nDocstring update.\n\n*Release 20210721*:\nUpdHandler.emit: for newline-emitting messages, fall back to new .over_handler if the Upd is disabled.\n\n*Release 20210718*:\nsetup_logging: new supplant_root_logger=False parameter to pop the existing handler, typical use supplant_root_logger=sys.stderr.isatty().\n\n*Release 20210306*:\n* Default logging level for ttys is now INFO, not STATUS.\n* New VERBOSE level below INFO but above DEBUG.\n* infer_logging_level: if verbose unspecified, logging=WARNING on a tty and TRACK otherwise, else if verbose, level=VERBOSE, otherwise WARNING.\n* Include .verbose in the loginfo.\n* New verbose() and ifverbose().\n\n*Release 20201021*:\n* setup_logging: always provide loginfo.upd, being either main_handler.upd if upd_mode otherwise Upd().\n* exception(): plumb keyword arguments.\n\n*Release 20200729*:\nsetup_logging: honour $NO_COLOR if ansi_mode not specified, per https://no-color.org/\n\n*Release 20200613*:\n* LogTime: set .end on exit.\n* UpdHandle.emit: fix message colouring logic.\n\n*Release 20200521*:\nsetup_logging: include the logger in loginfo (presently always the root logger).\n\n*Release 20200519*:\nbugfix setup_logging: apparently a LoggingProxy does not have an encoding\n\n*Release 20200518*:\n* Sweeping removal of cs.obj.O, universally supplanted by types.SimpleNamespace.\n* Default to logging level TRACK if stderr is a tty instead of logging.INFO.\n* New ifverbose function with leading `verbose` parameter: if None, log at INFO otherwise if true, log at TRACK, otherwise do not log.\n* BREAKING: remove global logging_level and trace_level variables, put it all in the global loginfo.\n* Make STATUS just below TRACK so that it is above INFO instead of below.\n* New status() function for cs.upd messages.\n* UpdHandler: treat status_level as special, going directly to Upd.out.\n* Improved source line recitation on modern Python.\n* Default level if sys.stderr.isatty() now STATUS, not TRACK.\n* Some fixes for loginfo initialisation and setting cs.pfx.cmd.\n\n*Release 20200229*:\n* Update for new Upd.without context manager.\n* setup_logging: default `upd_mode` to `main_log.isatty()`, was previously False.\n* Drop UpdHandler.upd method, shadowed by instance attribute, never used.\n\n*Release 20190923*:\n* New `TRACK` constant equal to `logging.INFO+5` to provide a level higher than `INFO`\n* (which seems unreasonably noisy) and lower than `WARNING`\n* warning for tracking salient events.\n* New `track()` function to match.\n\n*Release 20190220*:\nImprovements to upd_mode.\n\n*Release 20190103*:\nDocumentation updates.\n\n*Release 20190101*:\nBugfix for @contextmanager usage.\n\n*Release 20171030*:\nAssorted fixes from recent module reshuffle. Other small features and cleanups. Drop a couple of unused functions.\n\n*Release 20160828*:\nUse \"install_requires\" instead of \"requires\" in DISTINFO.\n\n*Release 20160827*:\n* Pfx: import __exit__ handler\n* Preliminary per-module and per-function syntax accepted in $DEBUG envvar.\n* Improvements to X(), add DP() and XP() prefixed flavours.\n* status() function to update terminal status line.\n* New X_via_tty global flag: directs X() to tty instead of sys.stderr.\n* Assorted other minor improvements.\n\n*Release 20150118*:\nmetadata updates\n\n*Release 20150110*:\nInitial PyPI release.\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"python2, python3","license":"GNU General Public License v3 or later (GPLv3+)","maintainer":null,"maintainer_email":null,"name":"cs.logutils","package_url":"https://pypi.org/project/cs.logutils/","platform":null,"project_url":"https://pypi.org/project/cs.logutils/","project_urls":{"MonoRepo Commits":"https://bitbucket.org/cameron_simpson/css/commits/branch/main","Monorepo Git Mirror":"https://github.com/cameron-simpson/css","Monorepo Hg/Mercurial Mirror":"https://hg.sr.ht/~cameron-simpson/css","Source":"https://github.com/cameron-simpson/css/blob/main/lib/python/cs/logutils.py"},"provides_extra":null,"release_url":"https://pypi.org/project/cs.logutils/20240630/","requires_dist":["cs.ansi-colour>=20200729","cs.context>=20210306","cs.deco>=20240630","cs.lex>=20240630","cs.pfx>=20240630","cs.py.func>=20240630","cs.upd>=20240630"],"requires_python":null,"summary":"Logging convenience routines.","version":"20240630","yanked":false,"yanked_reason":null},"last_serial":23911364,"releases":{"20150118":[{"comment_text":"","digests":{"blake2b_256":"d6b79facee2ae6ad32c32d987b5be0bb146980a6dfdfffff0c88b672bfe66afa","md5":"bb80b8cf2fa20e5c1f872279bbffa4e0","sha256":"d0f42906d7704acb41ce21bc85965c08ac41c712a65a68a10f4978e4c70b8e33"},"downloads":-1,"filename":"cs.logutils-20150118.tar.gz","has_sig":false,"md5_digest":"bb80b8cf2fa20e5c1f872279bbffa4e0","packagetype":"sdist","python_version":"source","requires_python":null,"size":8065,"upload_time":"2015-01-18T06:01:10","upload_time_iso_8601":"2015-01-18T06:01:10.483423Z","url":"https://files.pythonhosted.org/packages/d6/b7/9facee2ae6ad32c32d987b5be0bb146980a6dfdfffff0c88b672bfe66afa/cs.logutils-20150118.tar.gz","yanked":false,"yanked_reason":null}],"20160827":[{"comment_text":"","digests":{"blake2b_256":"5351c3a69f8a099061c32ee46f67c1acf187e529a5982e34a9ad261e7c29b14c","md5":"c3db9e6b6a101301f16a3fc33f74cd39","sha256":"ff7239d6ea8db141f4adfdb2d8b332b8b5c07e9c963a101fd4a807c19a136234"},"downloads":-1,"filename":"cs.logutils-20160827.tar.gz","has_sig":false,"md5_digest":"c3db9e6b6a101301f16a3fc33f74cd39","packagetype":"sdist","python_version":"source","requires_python":null,"size":9590,"upload_time":"2016-08-27T03:36:16","upload_time_iso_8601":"2016-08-27T03:36:16.986196Z","url":"https://files.pythonhosted.org/packages/53/51/c3a69f8a099061c32ee46f67c1acf187e529a5982e34a9ad261e7c29b14c/cs.logutils-20160827.tar.gz","yanked":false,"yanked_reason":null}],"20160828":[{"comment_text":"","digests":{"blake2b_256":"766487ffab23537ec0683b5fcc7a9c830ae53a2a6e497c85cbb33a3c433786e3","md5":"0e8f1897f8c0c95536e7402fd2fa40e7","sha256":"7058295d0e4b554954b4b3ab3ca1ae8235f9d49eb047063e5344c3677af8e873"},"downloads":-1,"filename":"cs.logutils-20160828.tar.gz","has_sig":false,"md5_digest":"0e8f1897f8c0c95536e7402fd2fa40e7","packagetype":"sdist","python_version":"source","requires_python":null,"size":9960,"upload_time":"2016-08-28T06:07:37","upload_time_iso_8601":"2016-08-28T06:07:37.499741Z","url":"https://files.pythonhosted.org/packages/76/64/87ffab23537ec0683b5fcc7a9c830ae53a2a6e497c85cbb33a3c433786e3/cs.logutils-20160828.tar.gz","yanked":false,"yanked_reason":null}],"20171030":[{"comment_text":"","digests":{"blake2b_256":"5b05140ca9a889b0f7b84e50b6b470ae71be94c8b960fb40545c43727a3b0b07","md5":"6621eff2e2a3527fbda0f6eb32ee74fd","sha256":"068c3557c224ec2949defbd4556f0e3dc1e90efb27c8b3d1eb60849e102df6e9"},"downloads":-1,"filename":"cs.logutils-20171030.tar.gz","has_sig":false,"md5_digest":"6621eff2e2a3527fbda0f6eb32ee74fd","packagetype":"sdist","python_version":"source","requires_python":null,"size":7597,"upload_time":"2017-10-30T10:35:12","upload_time_iso_8601":"2017-10-30T10:35:12.484803Z","url":"https://files.pythonhosted.org/packages/5b/05/140ca9a889b0f7b84e50b6b470ae71be94c8b960fb40545c43727a3b0b07/cs.logutils-20171030.tar.gz","yanked":false,"yanked_reason":null}],"20190101":[{"comment_text":"","digests":{"blake2b_256":"09105262447301323280f5ff681f711c07c1465e7452dbb57a680dcb69f00d2e","md5":"c0d63be0c881411007a11d6827c005b3","sha256":"e4ab65974f5cebf9abd188ac33721fe4c61a9f81ea47307898ed7cf19b7c8925"},"downloads":-1,"filename":"cs.logutils-20190101.tar.gz","has_sig":false,"md5_digest":"c0d63be0c881411007a11d6827c005b3","packagetype":"sdist","python_version":"source","requires_python":null,"size":9451,"upload_time":"2019-01-01T02:42:26","upload_time_iso_8601":"2019-01-01T02:42:26.437058Z","url":"https://files.pythonhosted.org/packages/09/10/5262447301323280f5ff681f711c07c1465e7452dbb57a680dcb69f00d2e/cs.logutils-20190101.tar.gz","yanked":false,"yanked_reason":null}],"20190103":[{"comment_text":"","digests":{"blake2b_256":"d5417f1eadd433f3c6ecba56c655a9ff44e32adac69920adc62d4471c5242d3a","md5":"9306e34730ece25420ecbeb0e38b8cdc","sha256":"845c4e6cc9ffd27f9f992c3e1d6c4860273bc76f57ba587639ca51a07fc6c170"},"downloads":-1,"filename":"cs.logutils-20190103.tar.gz","has_sig":false,"md5_digest":"9306e34730ece25420ecbeb0e38b8cdc","packagetype":"sdist","python_version":"source","requires_python":null,"size":9548,"upload_time":"2019-01-02T22:40:34","upload_time_iso_8601":"2019-01-02T22:40:34.513188Z","url":"https://files.pythonhosted.org/packages/d5/41/7f1eadd433f3c6ecba56c655a9ff44e32adac69920adc62d4471c5242d3a/cs.logutils-20190103.tar.gz","yanked":false,"yanked_reason":null}],"20190220":[{"comment_text":"","digests":{"blake2b_256":"7b89d38a23d316dbafe3640cdf6e226aeb301a2b4045be0005146c905d579231","md5":"e5c25c4803f576cfad63d5f938565f04","sha256":"6775d5cb43019fcaba94e223942252ec7ceed784fa7f3f1008bc496b9b04f486"},"downloads":-1,"filename":"cs.logutils-20190220.tar.gz","has_sig":false,"md5_digest":"e5c25c4803f576cfad63d5f938565f04","packagetype":"sdist","python_version":"source","requires_python":null,"size":9894,"upload_time":"2019-02-20T09:21:14","upload_time_iso_8601":"2019-02-20T09:21:14.323689Z","url":"https://files.pythonhosted.org/packages/7b/89/d38a23d316dbafe3640cdf6e226aeb301a2b4045be0005146c905d579231/cs.logutils-20190220.tar.gz","yanked":false,"yanked_reason":null}],"20190923":[{"comment_text":"","digests":{"blake2b_256":"d93c33d440a29b4ded539c191b4fe18cb56a82f6a337390f8509bed95e421dd5","md5":"b2a8b04547c1f14ada882ebcbe0a1089","sha256":"f4805feb5eef4e9be7987342a7ec1bb62107ffe9b4dd5347a236e669040a338f"},"downloads":-1,"filename":"cs.logutils-20190923.tar.gz","has_sig":false,"md5_digest":"b2a8b04547c1f14ada882ebcbe0a1089","packagetype":"sdist","python_version":"source","requires_python":null,"size":13117,"upload_time":"2019-09-22T22:59:20","upload_time_iso_8601":"2019-09-22T22:59:20.373301Z","url":"https://files.pythonhosted.org/packages/d9/3c/33d440a29b4ded539c191b4fe18cb56a82f6a337390f8509bed95e421dd5/cs.logutils-20190923.tar.gz","yanked":false,"yanked_reason":null}],"20200229":[{"comment_text":"","digests":{"blake2b_256":"8f5241507422192b4941358144b43ec9c43265758e236ca8c2c710bee2ac8447","md5":"d05178758fc4b0255279a6bc9a3bcbcc","sha256":"10d3eb815c9880e47cc3e14c6c429f6fddb6791aee5b6a7a3e770f815d988281"},"downloads":-1,"filename":"cs.logutils-20200229.tar.gz","has_sig":false,"md5_digest":"d05178758fc4b0255279a6bc9a3bcbcc","packagetype":"sdist","python_version":"source","requires_python":null,"size":13903,"upload_time":"2020-02-29T04:52:17","upload_time_iso_8601":"2020-02-29T04:52:17.797507Z","url":"https://files.pythonhosted.org/packages/8f/52/41507422192b4941358144b43ec9c43265758e236ca8c2c710bee2ac8447/cs.logutils-20200229.tar.gz","yanked":false,"yanked_reason":null}],"20200518":[{"comment_text":"","digests":{"blake2b_256":"881d479e435714d410c37bb29a73e90064f0f96ee3fea8f16dd912f9b7140824","md5":"97999bbf55d604fa28a7378763396594","sha256":"a4be6227f89a1a7f3bf8db547504f8651d408e84e761a84846e756e66c3c4493"},"downloads":-1,"filename":"cs.logutils-20200518.tar.gz","has_sig":false,"md5_digest":"97999bbf55d604fa28a7378763396594","packagetype":"sdist","python_version":"source","requires_python":null,"size":14634,"upload_time":"2020-05-18T00:08:57","upload_time_iso_8601":"2020-05-18T00:08:57.909496Z","url":"https://files.pythonhosted.org/packages/88/1d/479e435714d410c37bb29a73e90064f0f96ee3fea8f16dd912f9b7140824/cs.logutils-20200518.tar.gz","yanked":false,"yanked_reason":null}],"20200519":[{"comment_text":"","digests":{"blake2b_256":"078e1621a53a84f4f5c8f9b2444fad70ed13c7a6d0b125e32c1ac0b55b210a05","md5":"d747e73f14ad65715b87df72820c6f47","sha256":"f49ba580eeaf80534ff9f067d2060a4314e2dc3c654865416f294137ea8fa978"},"downloads":-1,"filename":"cs.logutils-20200519.tar.gz","has_sig":false,"md5_digest":"d747e73f14ad65715b87df72820c6f47","packagetype":"sdist","python_version":"source","requires_python":null,"size":14181,"upload_time":"2020-05-19T11:16:50","upload_time_iso_8601":"2020-05-19T11:16:50.468077Z","url":"https://files.pythonhosted.org/packages/07/8e/1621a53a84f4f5c8f9b2444fad70ed13c7a6d0b125e32c1ac0b55b210a05/cs.logutils-20200519.tar.gz","yanked":false,"yanked_reason":null}],"20200613":[{"comment_text":"","digests":{"blake2b_256":"520e514226bf43c72d9fee6b343e0724b9d25a18435dc7e3d67cb9e5e16a6474","md5":"7bd2c6e85c81e3f23f1a051080d24c4d","sha256":"5d41abc5db9d4e912ec2f984869fd943f7012f0bd3809d584846edb49f39d578"},"downloads":-1,"filename":"cs.logutils-20200613.tar.gz","has_sig":false,"md5_digest":"7bd2c6e85c81e3f23f1a051080d24c4d","packagetype":"sdist","python_version":"source","requires_python":null,"size":14369,"upload_time":"2020-06-13T04:03:29","upload_time_iso_8601":"2020-06-13T04:03:29.112988Z","url":"https://files.pythonhosted.org/packages/52/0e/514226bf43c72d9fee6b343e0724b9d25a18435dc7e3d67cb9e5e16a6474/cs.logutils-20200613.tar.gz","yanked":false,"yanked_reason":null}],"20200729":[{"comment_text":"","digests":{"blake2b_256":"36ab04e3c8d2418fafb46ea62e90a20ff37c915ca69144ccd7b6c6df8a77560e","md5":"745f03ec65d93e1fb400a1b3ef42ea7c","sha256":"75c511f4a694d64b02e4d17ce362e8caa7aa9372130daa5e08d2b3a5b67faa5b"},"downloads":-1,"filename":"cs.logutils-20200729.tar.gz","has_sig":false,"md5_digest":"745f03ec65d93e1fb400a1b3ef42ea7c","packagetype":"sdist","python_version":"source","requires_python":null,"size":15484,"upload_time":"2020-07-28T23:51:45","upload_time_iso_8601":"2020-07-28T23:51:45.499087Z","url":"https://files.pythonhosted.org/packages/36/ab/04e3c8d2418fafb46ea62e90a20ff37c915ca69144ccd7b6c6df8a77560e/cs.logutils-20200729.tar.gz","yanked":false,"yanked_reason":null}],"20201021":[{"comment_text":"","digests":{"blake2b_256":"c3464b7bba682a20c37cd1b825dbad4d4d222e266b693eca72130b50bbb60ccd","md5":"49ead7aade3f6772e29c40d96210052d","sha256":"c7d14696c13d4fbecf38a9fbab8aab61f679d76da2078d364b424b50a81b8d82"},"downloads":-1,"filename":"cs.logutils-20201021.tar.gz","has_sig":false,"md5_digest":"49ead7aade3f6772e29c40d96210052d","packagetype":"sdist","python_version":"source","requires_python":null,"size":16673,"upload_time":"2020-10-21T03:49:12","upload_time_iso_8601":"2020-10-21T03:49:12.692930Z","url":"https://files.pythonhosted.org/packages/c3/46/4b7bba682a20c37cd1b825dbad4d4d222e266b693eca72130b50bbb60ccd/cs.logutils-20201021.tar.gz","yanked":false,"yanked_reason":null}],"20210306":[{"comment_text":"","digests":{"blake2b_256":"38c75d76e1ebf78769c554a6fed63be0f0b12271dd13804f990f9722662cabd1","md5":"e9ddd413edde52a25a9ecf7883c124a2","sha256":"07b63318ab92db54f6be598680d19dc7fd833ff2f6313ed8d6af45355e677a6f"},"downloads":-1,"filename":"cs.logutils-20210306.tar.gz","has_sig":false,"md5_digest":"e9ddd413edde52a25a9ecf7883c124a2","packagetype":"sdist","python_version":"source","requires_python":null,"size":17163,"upload_time":"2021-03-05T23:16:28","upload_time_iso_8601":"2021-03-05T23:16:28.615100Z","url":"https://files.pythonhosted.org/packages/38/c7/5d76e1ebf78769c554a6fed63be0f0b12271dd13804f990f9722662cabd1/cs.logutils-20210306.tar.gz","yanked":false,"yanked_reason":null}],"20210718":[{"comment_text":"","digests":{"blake2b_256":"60c98604d70322b2bfa6f70478534d7e6d4e6bf146c1b4447cb2ee269ad69a02","md5":"9c81fc635a93664f17a799be621271cf","sha256":"6d13d396941a85da7c0b2634576117fe3937c0cd8fefc0b5b877ed70d42d77f9"},"downloads":-1,"filename":"cs.logutils-20210718.tar.gz","has_sig":false,"md5_digest":"9c81fc635a93664f17a799be621271cf","packagetype":"sdist","python_version":"source","requires_python":null,"size":17368,"upload_time":"2021-07-18T04:00:19","upload_time_iso_8601":"2021-07-18T04:00:19.457359Z","url":"https://files.pythonhosted.org/packages/60/c9/8604d70322b2bfa6f70478534d7e6d4e6bf146c1b4447cb2ee269ad69a02/cs.logutils-20210718.tar.gz","yanked":false,"yanked_reason":null}],"20210721":[{"comment_text":"","digests":{"blake2b_256":"29421e05f8acd0149786da8fc48d9d6d1b0eb5f0e9988a67dbea3cf2e9e7371b","md5":"b2382f6e1fa0aa3e81655b760e7e0314","sha256":"2d298ca6fd6b3d95c2b01834d395808a700177ff9decdf74848d9bdd761c2396"},"downloads":-1,"filename":"cs.logutils-20210721.tar.gz","has_sig":false,"md5_digest":"b2382f6e1fa0aa3e81655b760e7e0314","packagetype":"sdist","python_version":"source","requires_python":null,"size":17529,"upload_time":"2021-07-21T03:10:32","upload_time_iso_8601":"2021-07-21T03:10:32.716546Z","url":"https://files.pythonhosted.org/packages/29/42/1e05f8acd0149786da8fc48d9d6d1b0eb5f0e9988a67dbea3cf2e9e7371b/cs.logutils-20210721.tar.gz","yanked":false,"yanked_reason":null}],"20211208":[{"comment_text":"","digests":{"blake2b_256":"4aeebafb02ecbc9533235a180682ca855ab5718679e07758397781e0b5d33c35","md5":"0ee700a2c99bd6fecf854437a12f3683","sha256":"7ba2199b18fec2b003eb81bfb109db90b3b09bb950ad0e4a84333f98279813c2"},"downloads":-1,"filename":"cs.logutils-20211208.tar.gz","has_sig":false,"md5_digest":"0ee700a2c99bd6fecf854437a12f3683","packagetype":"sdist","python_version":"source","requires_python":null,"size":16051,"upload_time":"2021-12-08T09:07:41","upload_time_iso_8601":"2021-12-08T09:07:41.724555Z","url":"https://files.pythonhosted.org/packages/4a/ee/bafb02ecbc9533235a180682ca855ab5718679e07758397781e0b5d33c35/cs.logutils-20211208.tar.gz","yanked":false,"yanked_reason":null}],"20220227":[{"comment_text":"","digests":{"blake2b_256":"e5dd8f5683f07a172147298e695d1f6b0339b7aeea6a205cc7d12817793e997d","md5":"282cc87d3c5baef10f1da5e9c8eeb7e6","sha256":"cb487cb974f50a27312f9377c3c453abd7f3b21126e88d77947aa7f6ea0ff437"},"downloads":-1,"filename":"cs.logutils-20220227.tar.gz","has_sig":false,"md5_digest":"282cc87d3c5baef10f1da5e9c8eeb7e6","packagetype":"sdist","python_version":"source","requires_python":null,"size":17642,"upload_time":"2022-02-26T23:16:37","upload_time_iso_8601":"2022-02-26T23:16:37.575428Z","url":"https://files.pythonhosted.org/packages/e5/dd/8f5683f07a172147298e695d1f6b0339b7aeea6a205cc7d12817793e997d/cs.logutils-20220227.tar.gz","yanked":false,"yanked_reason":null}],"20220315":[{"comment_text":"","digests":{"blake2b_256":"9fa25f4cc0ff36a4ef7d83ec51e95bba81477472931abb811497b59f236af83f","md5":"fd01f0942dd90af332b3d6ceca1d44e5","sha256":"6abba59f7a5d8db38345f612379b9e7c575569867246072abcd1e15c73617e80"},"downloads":-1,"filename":"cs.logutils-20220315.tar.gz","has_sig":false,"md5_digest":"fd01f0942dd90af332b3d6ceca1d44e5","packagetype":"sdist","python_version":"source","requires_python":null,"size":17908,"upload_time":"2022-03-15T03:29:39","upload_time_iso_8601":"2022-03-15T03:29:39.032411Z","url":"https://files.pythonhosted.org/packages/9f/a2/5f4cc0ff36a4ef7d83ec51e95bba81477472931abb811497b59f236af83f/cs.logutils-20220315.tar.gz","yanked":false,"yanked_reason":null}],"20220530":[{"comment_text":"","digests":{"blake2b_256":"8472a88691765e4b4434a59326ad31e1fc4694585b0820541ab867ae104717e7","md5":"049accb4a0b3fe3571565ccb42e7d51e","sha256":"9480902611de50a7862581ea237acc6e9d5d44a73647d2a64ff568aa1b26e8d1"},"downloads":-1,"filename":"cs.logutils-20220530-py3-none-any.whl","has_sig":false,"md5_digest":"049accb4a0b3fe3571565ccb42e7d51e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":14461,"upload_time":"2022-05-30T02:09:07","upload_time_iso_8601":"2022-05-30T02:09:07.646041Z","url":"https://files.pythonhosted.org/packages/84/72/a88691765e4b4434a59326ad31e1fc4694585b0820541ab867ae104717e7/cs.logutils-20220530-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c268a651c532b8d67b847207b8d5088da8220f9f65d27d36f50c2033b3776f6a","md5":"18a8d800d63d2c981363502fa01b63f1","sha256":"338706ab648ce4e3033031b492c2ef778d52aa419ab0b091692fd5adf0bd3b28"},"downloads":-1,"filename":"cs.logutils-20220530.tar.gz","has_sig":false,"md5_digest":"18a8d800d63d2c981363502fa01b63f1","packagetype":"sdist","python_version":"source","requires_python":null,"size":17019,"upload_time":"2022-05-30T02:09:10","upload_time_iso_8601":"2022-05-30T02:09:10.372362Z","url":"https://files.pythonhosted.org/packages/c2/68/a651c532b8d67b847207b8d5088da8220f9f65d27d36f50c2033b3776f6a/cs.logutils-20220530.tar.gz","yanked":false,"yanked_reason":null}],"20220531":[{"comment_text":"","digests":{"blake2b_256":"b72a5cf926e55bb5975ec242dceb1b93694ba33daaf28f4683fa5d23386b23f3","md5":"b90e790b250af732f6be567dbc041881","sha256":"58de1c1750f40231588bf030c0e0754adc87426b9250957e2a88622085f168d6"},"downloads":-1,"filename":"cs.logutils-20220531-py3-none-any.whl","has_sig":false,"md5_digest":"b90e790b250af732f6be567dbc041881","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":14605,"upload_time":"2022-05-31T05:09:09","upload_time_iso_8601":"2022-05-31T05:09:09.343175Z","url":"https://files.pythonhosted.org/packages/b7/2a/5cf926e55bb5975ec242dceb1b93694ba33daaf28f4683fa5d23386b23f3/cs.logutils-20220531-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8a8673282808a62aad28a2552f5982cf6513ef2875a7d6acf755a11e7b7416be","md5":"6a31d4628bb06fd9efdbbf90539117fe","sha256":"bd7ec4063a89b98d1551f578fdf36bf88f5ffedf1452744a1f56dd057f04d8ca"},"downloads":-1,"filename":"cs.logutils-20220531.tar.gz","has_sig":false,"md5_digest":"6a31d4628bb06fd9efdbbf90539117fe","packagetype":"sdist","python_version":"source","requires_python":null,"size":17172,"upload_time":"2022-05-31T05:09:11","upload_time_iso_8601":"2022-05-31T05:09:11.833888Z","url":"https://files.pythonhosted.org/packages/8a/86/73282808a62aad28a2552f5982cf6513ef2875a7d6acf755a11e7b7416be/cs.logutils-20220531.tar.gz","yanked":false,"yanked_reason":null}],"20230212":[{"comment_text":"","digests":{"blake2b_256":"4922d6dede256edd77c9aad09e530a9fb0210aa632be19c58367a8fccdf06db1","md5":"a275e749fd762ba633e7cef21c5a27d4","sha256":"3bd55ad8ebfb55f127ee0ce25482d5ae436f13846a15617bf3f894433a81a135"},"downloads":-1,"filename":"cs.logutils-20230212-py3-none-any.whl","has_sig":false,"md5_digest":"a275e749fd762ba633e7cef21c5a27d4","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":14661,"upload_time":"2023-02-12T00:08:17","upload_time_iso_8601":"2023-02-12T00:08:17.402339Z","url":"https://files.pythonhosted.org/packages/49/22/d6dede256edd77c9aad09e530a9fb0210aa632be19c58367a8fccdf06db1/cs.logutils-20230212-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ff3defdf1472b4c87ab19f8b7e8f0ca395a326b3055361dfa0ff5890c47b4fea","md5":"5f3dd7166ce00527c6a7b9d9a26d798a","sha256":"acc1b4998aea7470daedc2f4228a1732269f83c53a694846f96bb1ce7303d981"},"downloads":-1,"filename":"cs.logutils-20230212.tar.gz","has_sig":false,"md5_digest":"5f3dd7166ce00527c6a7b9d9a26d798a","packagetype":"sdist","python_version":"source","requires_python":null,"size":17269,"upload_time":"2023-02-12T00:08:18","upload_time_iso_8601":"2023-02-12T00:08:18.986181Z","url":"https://files.pythonhosted.org/packages/ff/3d/efdf1472b4c87ab19f8b7e8f0ca395a326b3055361dfa0ff5890c47b4fea/cs.logutils-20230212.tar.gz","yanked":false,"yanked_reason":null}],"20240630":[{"comment_text":"","digests":{"blake2b_256":"9d599896b7fa095e0fc208ac7dd79c6430cf2e6fe3c4b906e60ed59652db436f","md5":"f7ea742f10041541d8a9a6bb18187e97","sha256":"4ef4d1f6cbd1763f6389f23bb5e39770030572ba7598f5fde52ff1b6ff145455"},"downloads":-1,"filename":"cs.logutils-20240630-py3-none-any.whl","has_sig":false,"md5_digest":"f7ea742f10041541d8a9a6bb18187e97","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":14565,"upload_time":"2024-06-30T01:48:48","upload_time_iso_8601":"2024-06-30T01:48:48.164122Z","url":"https://files.pythonhosted.org/packages/9d/59/9896b7fa095e0fc208ac7dd79c6430cf2e6fe3c4b906e60ed59652db436f/cs.logutils-20240630-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"121c26ca87d96ad7d78af361e7e57124a05abd0e6f9424a4aea7fab6966ce0be","md5":"ee11a57f689a3de02b1d626a31b79bb4","sha256":"9850a5e910a9049fa94f444082739a577d84b4f6e8fdf74d50b9513d4fe3a1c3"},"downloads":-1,"filename":"cs.logutils-20240630.tar.gz","has_sig":false,"md5_digest":"ee11a57f689a3de02b1d626a31b79bb4","packagetype":"sdist","python_version":"source","requires_python":null,"size":16379,"upload_time":"2024-06-30T01:48:50","upload_time_iso_8601":"2024-06-30T01:48:50.217564Z","url":"https://files.pythonhosted.org/packages/12/1c/26ca87d96ad7d78af361e7e57124a05abd0e6f9424a4aea7fab6966ce0be/cs.logutils-20240630.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"9d599896b7fa095e0fc208ac7dd79c6430cf2e6fe3c4b906e60ed59652db436f","md5":"f7ea742f10041541d8a9a6bb18187e97","sha256":"4ef4d1f6cbd1763f6389f23bb5e39770030572ba7598f5fde52ff1b6ff145455"},"downloads":-1,"filename":"cs.logutils-20240630-py3-none-any.whl","has_sig":false,"md5_digest":"f7ea742f10041541d8a9a6bb18187e97","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":14565,"upload_time":"2024-06-30T01:48:48","upload_time_iso_8601":"2024-06-30T01:48:48.164122Z","url":"https://files.pythonhosted.org/packages/9d/59/9896b7fa095e0fc208ac7dd79c6430cf2e6fe3c4b906e60ed59652db436f/cs.logutils-20240630-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"121c26ca87d96ad7d78af361e7e57124a05abd0e6f9424a4aea7fab6966ce0be","md5":"ee11a57f689a3de02b1d626a31b79bb4","sha256":"9850a5e910a9049fa94f444082739a577d84b4f6e8fdf74d50b9513d4fe3a1c3"},"downloads":-1,"filename":"cs.logutils-20240630.tar.gz","has_sig":false,"md5_digest":"ee11a57f689a3de02b1d626a31b79bb4","packagetype":"sdist","python_version":"source","requires_python":null,"size":16379,"upload_time":"2024-06-30T01:48:50","upload_time_iso_8601":"2024-06-30T01:48:50.217564Z","url":"https://files.pythonhosted.org/packages/12/1c/26ca87d96ad7d78af361e7e57124a05abd0e6f9424a4aea7fab6966ce0be/cs.logutils-20240630.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
