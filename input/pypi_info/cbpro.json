{"info":{"author":"Daniel Paquin","author_email":"dpaq34@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","Intended Audience :: Financial and Insurance Industry","Intended Audience :: Information Technology","License :: OSI Approved :: MIT License","Programming Language :: Python :: 2","Programming Language :: Python :: 2.6","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3","Programming Language :: Python :: 3.3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Topic :: Software Development :: Libraries :: Python Modules"],"description":"# coinbasepro-python\n[![Build Status](https://travis-ci.org/danpaquin/coinbasepro-python.svg?branch=master)](https://travis-ci.org/danpaquin/coinbasepro-python)\n\nThe Python client for the [Coinbase Pro API](https://docs.pro.coinbase.com/) (formerly known as\nthe GDAX)\n\n##### Provided under MIT License by Daniel Paquin.\n*Note: this library may be subtly broken or buggy. The code is released under\nthe MIT License â€“ please take the following message to heart:*\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n## Benefits\n- A simple to use python wrapper for both public and authenticated endpoints.\n- In about 10 minutes, you could be programmatically trading on one of the\nlargest Bitcoin exchanges in the *world*!\n- Do not worry about handling the nuances of the API with easy-to-use methods\nfor every API endpoint.\n- Gain an advantage in the market by getting under the hood of CB Pro to learn\nwhat and who is behind every tick.\n\n## Under Development\n- Test Scripts\n- Additional Functionality for the real-time order book\n- FIX API Client **Looking for assistance**\n\n## Getting Started\nThis README is documentation on the syntax of the python client presented in\nthis repository. See function docstrings for full syntax details.  \n**This API attempts to present a clean interface to CB Pro, but in order to use it\nto its full potential, you must familiarize yourself with the official CB Pro\ndocumentation.**\n\n- https://docs.pro.coinbase.com/\n\n- You may manually install the project or use ```pip```:\n```python\npip install cbpro\n#or\npip install git+git://github.com/danpaquin/coinbasepro-python.git\n```\n\n### Public Client\nOnly some endpoints in the API are available to everyone.  The public endpoints\ncan be reached using ```PublicClient```\n\n```python\nimport cbpro\npublic_client = cbpro.PublicClient()\n```\n\n### PublicClient Methods\n- [get_products](https://docs.pro.coinbase.com//#get-products)\n```python\npublic_client.get_products()\n```\n\n- [get_product_order_book](https://docs.pro.coinbase.com/#get-product-order-book)\n```python\n# Get the order book at the default level.\npublic_client.get_product_order_book('BTC-USD')\n# Get the order book at a specific level.\npublic_client.get_product_order_book('BTC-USD', level=1)\n```\n\n- [get_product_ticker](https://docs.pro.coinbase.com/#get-product-ticker)\n```python\n# Get the product ticker for a specific product.\npublic_client.get_product_ticker(product_id='ETH-USD')\n```\n\n- [get_product_trades](https://docs.pro.coinbase.com/#get-trades) (paginated)\n```python\n# Get the product trades for a specific product.\n# Returns a generator\npublic_client.get_product_trades(product_id='ETH-USD')\n```\n\n- [get_product_historic_rates](https://docs.pro.coinbase.com/#get-historic-rates)\n```python\npublic_client.get_product_historic_rates('ETH-USD')\n# To include other parameters, see function docstring:\npublic_client.get_product_historic_rates('ETH-USD', granularity=3000)\n```\n\n- [get_product_24hr_stats](https://docs.pro.coinbase.com/#get-24hr-stats)\n```python\npublic_client.get_product_24hr_stats('ETH-USD')\n```\n\n- [get_currencies](https://docs.pro.coinbase.com/#get-currencies)\n```python\npublic_client.get_currencies()\n```\n\n- [get_time](https://docs.pro.coinbase.com/#time)\n```python\npublic_client.get_time()\n```\n\n### Authenticated Client\n\nNot all API endpoints are available to everyone.\nThose requiring user authentication can be reached using `AuthenticatedClient`.\nYou must setup API access within your\n[account settings](https://www.pro.coinbase.com/settings/api).\nThe `AuthenticatedClient` inherits all methods from the `PublicClient`\nclass, so you will only need to initialize one if you are planning to\nintegrate both into your script.\n\n```python\nimport cbpro\nauth_client = cbpro.AuthenticatedClient(key, b64secret, passphrase)\n# Use the sandbox API (requires a different set of API access credentials)\nauth_client = cbpro.AuthenticatedClient(key, b64secret, passphrase,\n                                  api_url=\"https://api-public.sandbox.pro.coinbase.com\")\n```\n\n### Pagination\nSome calls are [paginated](https://docs.pro.coinbase.com/#pagination), meaning multiple\ncalls must be made to receive the full set of data. The CB Pro Python API provides\nan abstraction for paginated endpoints in the form of generators which provide a\nclean interface for iteration but may make multiple HTTP requests behind the \nscenes. The pagination options `before`, `after`, and `limit` may be supplied as\nkeyword arguments if desired, but aren't necessary for typical use cases.\n```python\nfills_gen = auth_client.get_fills()\n# Get all fills (will possibly make multiple HTTP requests)\nall_fills = list(fills_gen)\n```\nOne use case for pagination parameters worth pointing out is retrieving only \nnew data since the previous request. For the case of `get_fills()`, the \n`trade_id` is the parameter used for indexing. By passing \n`before=some_trade_id`, only fills more recent than that `trade_id` will be \nreturned. Note that when using `before`, a maximum of 100 entries will be \nreturned - this is a limitation of CB Pro.\n```python\nfrom itertools import islice\n# Get 5 most recent fills\nrecent_fills = islice(auth_client.get_fills(), 5)\n# Only fetch new fills since last call by utilizing `before` parameter.\nnew_fills = auth_client.get_fills(before=recent_fills[0]['trade_id'])\n```\n\n### AuthenticatedClient Methods\n- [get_accounts](https://docs.pro.coinbase.com/#list-accounts)\n```python\nauth_client.get_accounts()\n```\n\n- [get_account](https://docs.pro.coinbase.com/#get-an-account)\n```python\nauth_client.get_account(\"7d0f7d8e-dd34-4d9c-a846-06f431c381ba\")\n```\n\n- [get_account_history](https://docs.pro.coinbase.com/#get-account-history) (paginated)\n```python\n# Returns generator:\nauth_client.get_account_history(\"7d0f7d8e-dd34-4d9c-a846-06f431c381ba\")\n```\n\n- [get_account_holds](https://docs.pro.coinbase.com/#get-holds) (paginated)\n```python\n# Returns generator:\nauth_client.get_account_holds(\"7d0f7d8e-dd34-4d9c-a846-06f431c381ba\")\n```\n\n- [buy & sell](https://docs.pro.coinbase.com/#place-a-new-order)\n```python\n# Buy 0.01 BTC @ 100 USD\nauth_client.buy(price='100.00', #USD\n               size='0.01', #BTC\n               order_type='limit',\n               product_id='BTC-USD')\n```\n```python\n# Sell 0.01 BTC @ 200 USD\nauth_client.sell(price='200.00', #USD\n                size='0.01', #BTC\n                order_type='limit',\n                product_id='BTC-USD')\n```\n```python\n# Limit order-specific method\nauth_client.place_limit_order(product_id='BTC-USD', \n                              side='buy', \n                              price='200.00', \n                              size='0.01')\n```\n```python\n# Place a market order by specifying amount of USD to use. \n# Alternatively, `size` could be used to specify quantity in BTC amount.\nauth_client.place_market_order(product_id='BTC-USD', \n                               side='buy', \n                               funds='100.00')\n```\n```python\n# Stop order. `funds` can be used instead of `size` here.\nauth_client.place_stop_order(product_id='BTC-USD', \n                              side='buy', \n                              price='200.00', \n                              size='0.01')\n```\n\n- [cancel_order](https://docs.pro.coinbase.com/#cancel-an-order)\n```python\nauth_client.cancel_order(\"d50ec984-77a8-460a-b958-66f114b0de9b\")\n```\n- [cancel_all](https://docs.pro.coinbase.com/#cancel-all)\n```python\nauth_client.cancel_all(product_id='BTC-USD')\n```\n\n- [get_orders](https://docs.pro.coinbase.com/#list-orders) (paginated)\n```python\n# Returns generator:\nauth_client.get_orders()\n```\n\n- [get_order](https://docs.pro.coinbase.com/#get-an-order)\n```python\nauth_client.get_order(\"d50ec984-77a8-460a-b958-66f114b0de9b\")\n```\n\n- [get_fills](https://docs.pro.coinbase.com/#list-fills) (paginated)\n```python\n# All return generators\nauth_client.get_fills()\n# Get fills for a specific order\nauth_client.get_fills(order_id=\"d50ec984-77a8-460a-b958-66f114b0de9b\")\n# Get fills for a specific product\nauth_client.get_fills(product_id=\"ETH-BTC\")\n```\n\n- [deposit & withdraw](https://docs.pro.coinbase.com/#depositwithdraw)\n```python\ndepositParams = {\n        'amount': '25.00', # Currency determined by account specified\n        'coinbase_account_id': '60680c98bfe96c2601f27e9c'\n}\nauth_client.deposit(depositParams)\n```\n```python\n# Withdraw from CB Pro into Coinbase Wallet\nwithdrawParams = {\n        'amount': '1.00', # Currency determined by account specified\n        'coinbase_account_id': '536a541fa9393bb3c7000023'\n}\nauth_client.withdraw(withdrawParams)\n```\n\n### WebsocketClient\nIf you would like to receive real-time market updates, you must subscribe to the\n[websocket feed](https://docs.pro.coinbase.com/#websocket-feed).\n\n#### Subscribe to a single product\n```python\nimport cbpro\n# Paramters are optional\nwsClient = cbpro.WebsocketClient(url=\"wss://ws-feed.pro.coinbase.com\", products=\"BTC-USD\")\n# Do other stuff...\nwsClient.close()\n```\n\n#### Subscribe to multiple products\n```python\nimport cbpro\n# Paramaters are optional\nwsClient = cbpro.WebsocketClient(url=\"wss://ws-feed.pro.coinbase.com\",\n                                products=[\"BTC-USD\", \"ETH-USD\"])\n# Do other stuff...\nwsClient.close()\n```\n\n### WebsocketClient + Mongodb\nThe ```WebsocketClient``` now supports data gathering via MongoDB. Given a\nMongoDB collection, the ```WebsocketClient``` will stream results directly into\nthe database collection.\n```python\n# import PyMongo and connect to a local, running Mongo instance\nfrom pymongo import MongoClient\nimport cbpro\nmongo_client = MongoClient('mongodb://localhost:27017/')\n\n# specify the database and collection\ndb = mongo_client.cryptocurrency_database\nBTC_collection = db.BTC_collection\n\n# instantiate a WebsocketClient instance, with a Mongo collection as a parameter\nwsClient = cbpro.WebsocketClient(url=\"wss://ws-feed.pro.coinbase.com\", products=\"BTC-USD\",\n    mongo_collection=BTC_collection, should_print=False)\nwsClient.start()\n```\n\n### WebsocketClient Methods\nThe ```WebsocketClient``` subscribes in a separate thread upon initialization.\nThere are three methods which you could overwrite (before initialization) so it\ncan react to the data streaming in.  The current client is a template used for\nillustration purposes only.\n\n- onOpen - called once, *immediately before* the socket connection is made, this\nis where you want to add initial parameters.\n- onMessage - called once for every message that arrives and accepts one\nargument that contains the message of dict type.\n- on_close - called once after the websocket has been closed.\n- close - call this method to close the websocket connection (do not overwrite).\n```python\nimport cbpro, time\nclass myWebsocketClient(cbpro.WebsocketClient):\n    def on_open(self):\n        self.url = \"wss://ws-feed.pro.coinbase.com/\"\n        self.products = [\"LTC-USD\"]\n        self.message_count = 0\n        print(\"Lets count the messages!\")\n    def on_message(self, msg):\n        self.message_count += 1\n        if 'price' in msg and 'type' in msg:\n            print (\"Message type:\", msg[\"type\"],\n                   \"\\t@ {:.3f}\".format(float(msg[\"price\"])))\n    def on_close(self):\n        print(\"-- Goodbye! --\")\n\nwsClient = myWebsocketClient()\nwsClient.start()\nprint(wsClient.url, wsClient.products)\nwhile (wsClient.message_count < 500):\n    print (\"\\nmessage_count =\", \"{} \\n\".format(wsClient.message_count))\n    time.sleep(1)\nwsClient.close()\n```\n## Testing\nA test suite is under development. Tests for the authenticated client require a \nset of sandbox API credentials. To provide them, rename \n`api_config.json.example` in the tests folder to `api_config.json` and edit the \nfile accordingly. To run the tests, start in the project directory and run\n```\npython -m pytest\n```\n\n### Real-time OrderBook\nThe ```OrderBook``` subscribes to a websocket and keeps a real-time record of\nthe orderbook for the product_id input.  Please provide your feedback for future\nimprovements.\n\n```python\nimport cbpro, time\norder_book = cbpro.OrderBook(product_id='BTC-USD')\norder_book.start()\ntime.sleep(10)\norder_book.close()\n```\n\n### Testing\nUnit tests are under development using the pytest framework. Contributions are \nwelcome!\n\nTo run the full test suite, in the project \ndirectory run:\n```bash\npython -m pytest\n```\n\n## Change Log\n*1.1.2* **Current PyPI release**\n- Refactor project for Coinbase Pro\n- Major overhaul on how pagination is handled\n\n*1.0*\n- The first release that is not backwards compatible\n- Refactored to follow PEP 8 Standards\n- Improved Documentation\n\n*0.3*\n- Added crypto and LTC deposit & withdraw (undocumented).\n- Added support for Margin trading (undocumented).\n- Enhanced functionality of the WebsocketClient.\n- Soft launch of the OrderBook (undocumented).\n- Minor bug squashing & syntax improvements.\n\n*0.2.2*\n- Added additional API functionality such as cancelAll() and ETH withdrawal.\n\n*0.2.1*\n- Allowed ```WebsocketClient``` to operate intuitively and restructured example\nworkflow.\n\n*0.2.0*\n- Renamed project to GDAX-Python\n- Merged Websocket updates to handle errors and reconnect.\n\n*0.1.2*\n- Updated JSON handling for increased compatibility among some users.\n- Added support for payment methods, reports, and Coinbase user accounts.\n- Other compatibility updates.\n\n*0.1.1b2*\n- Original PyPI Release.\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"https://github.com/danpaquin/coinbasepro-python/archive/master.zip","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/danpaquin/coinbasepro-python","keywords":"gdax,gdax-api,orderbook,trade,bitcoin,ethereum,BTC,ETH,client,api,wrapper,exchange,crypto,currency,trading,trading-api,coinbase,pro,prime,coinbasepro","license":"MIT","maintainer":"","maintainer_email":"","name":"cbpro","package_url":"https://pypi.org/project/cbpro/","platform":"","project_url":"https://pypi.org/project/cbpro/","project_urls":{"Download":"https://github.com/danpaquin/coinbasepro-python/archive/master.zip","Homepage":"https://github.com/danpaquin/coinbasepro-python"},"provides_extra":null,"release_url":"https://pypi.org/project/cbpro/1.1.4/","requires_dist":["sortedcontainers (>=1.5.9)","requests (==2.13.0)","six (==1.10.0)","websocket-client (==0.40.0)","pymongo (==3.5.1)"],"requires_python":"","summary":"The unofficial Python client for the Coinbase Pro API","version":"1.1.4","yanked":false,"yanked_reason":null},"last_serial":4242932,"releases":{"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"a35017471d60170b842f06075a9d164e7ba11ea0de72123eafffa3037534a90d","md5":"883563a3a46765d1356f26310911acd0","sha256":"2cb637c8c4ef1db18f2b88b8e94579a7f0ba1b799d5faf308d8f45fb54e5e866"},"downloads":-1,"filename":"cbpro-1.1.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"883563a3a46765d1356f26310911acd0","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":35060,"upload_time":"2018-08-19T23:06:06","upload_time_iso_8601":"2018-08-19T23:06:06.109832Z","url":"https://files.pythonhosted.org/packages/a3/50/17471d60170b842f06075a9d164e7ba11ea0de72123eafffa3037534a90d/cbpro-1.1.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"696ebd022571631466c661e5767fccd4de05ec3b2d397b4042df665860c9b907","md5":"0a89ebe2f3d5bf46610491757321871d","sha256":"cc227fb575129a7aef43d84d8eac3c4ab155c5d99efa97d491c4bda97866db9d"},"downloads":-1,"filename":"cbpro-1.1.0.tar.gz","has_sig":false,"md5_digest":"0a89ebe2f3d5bf46610491757321871d","packagetype":"sdist","python_version":"source","requires_python":null,"size":23268,"upload_time":"2018-08-19T23:06:07","upload_time_iso_8601":"2018-08-19T23:06:07.503187Z","url":"https://files.pythonhosted.org/packages/69/6e/bd022571631466c661e5767fccd4de05ec3b2d397b4042df665860c9b907/cbpro-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"0c6cac323fbca263e6bc8169f1a23b32a67a09c53e99925ec08ea15f0cc30b01","md5":"9cc2dc7f9ebae9e5d1a18fb85126fc89","sha256":"ba23e91fc9c7d1f58718ff8eee529beef3062f5c56dc7968306346abe3ab8778"},"downloads":-1,"filename":"cbpro-1.1.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9cc2dc7f9ebae9e5d1a18fb85126fc89","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":35061,"upload_time":"2018-08-19T23:29:32","upload_time_iso_8601":"2018-08-19T23:29:32.484114Z","url":"https://files.pythonhosted.org/packages/0c/6c/ac323fbca263e6bc8169f1a23b32a67a09c53e99925ec08ea15f0cc30b01/cbpro-1.1.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9b403dd1cbc72021f5d8f814d3a5ff3057a9349cb2794773b0b6e2b099efbb1b","md5":"87bf3365a990e4339c882ade51f6edea","sha256":"da1cbe91a11ef53a49666259f172d22a47d28400c11a45e5865fc909489214d7"},"downloads":-1,"filename":"cbpro-1.1.1.tar.gz","has_sig":false,"md5_digest":"87bf3365a990e4339c882ade51f6edea","packagetype":"sdist","python_version":"source","requires_python":null,"size":23250,"upload_time":"2018-08-19T23:29:33","upload_time_iso_8601":"2018-08-19T23:29:33.962683Z","url":"https://files.pythonhosted.org/packages/9b/40/3dd1cbc72021f5d8f814d3a5ff3057a9349cb2794773b0b6e2b099efbb1b/cbpro-1.1.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.2":[{"comment_text":"","digests":{"blake2b_256":"e6a939f821684356770dd1963ed6e0ca38fb1b846ab4aaf5820d388de9087fb6","md5":"ecead52c1d510abceb5864e28329fbba","sha256":"f8e140ea1b4907fec4926c1e81713ed68939cbe6fc0d10b56690c4ca3a0b217d"},"downloads":-1,"filename":"cbpro-1.1.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ecead52c1d510abceb5864e28329fbba","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":35077,"upload_time":"2018-08-26T15:00:25","upload_time_iso_8601":"2018-08-26T15:00:25.981280Z","url":"https://files.pythonhosted.org/packages/e6/a9/39f821684356770dd1963ed6e0ca38fb1b846ab4aaf5820d388de9087fb6/cbpro-1.1.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"95b53db864bcfc706cb49eb8dde008464ddb7c5e9769811fe7ec092be8ed0d90","md5":"74c746868f3db9f7320d0d04d0639597","sha256":"e2ebecfb9f765cdbf180a599cc57a2530c9f081d3a670c2d1de8ada074bc1601"},"downloads":-1,"filename":"cbpro-1.1.2.tar.gz","has_sig":false,"md5_digest":"74c746868f3db9f7320d0d04d0639597","packagetype":"sdist","python_version":"source","requires_python":null,"size":23268,"upload_time":"2018-08-26T15:00:27","upload_time_iso_8601":"2018-08-26T15:00:27.347501Z","url":"https://files.pythonhosted.org/packages/95/b5/3db864bcfc706cb49eb8dde008464ddb7c5e9769811fe7ec092be8ed0d90/cbpro-1.1.2.tar.gz","yanked":false,"yanked_reason":null}],"1.1.3":[{"comment_text":"","digests":{"blake2b_256":"5defad04de8dc46cb0ff19f67aebed9cbf61aca0220f9ee05e34897035eee919","md5":"ed0c36dd2649016cac9d223763d82332","sha256":"df3127ad2e3fb764ffe6a9ce4143e8e27c6c457530424f34cfb4d6f32072352c"},"downloads":-1,"filename":"cbpro-1.1.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ed0c36dd2649016cac9d223763d82332","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":35135,"upload_time":"2018-09-05T23:46:42","upload_time_iso_8601":"2018-09-05T23:46:42.314011Z","url":"https://files.pythonhosted.org/packages/5d/ef/ad04de8dc46cb0ff19f67aebed9cbf61aca0220f9ee05e34897035eee919/cbpro-1.1.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0bf9efde17a7fa84523f5ef189958b8b815868b25879d3fde888c87e00527642","md5":"17c6a26af4cb630e033a08d6afee23a7","sha256":"9a707f8d7240d53ced69aebdc1612d5587e481a3df6d7a97b9c898899e16dc2f"},"downloads":-1,"filename":"cbpro-1.1.3.tar.gz","has_sig":false,"md5_digest":"17c6a26af4cb630e033a08d6afee23a7","packagetype":"sdist","python_version":"source","requires_python":null,"size":23386,"upload_time":"2018-09-05T23:46:44","upload_time_iso_8601":"2018-09-05T23:46:44.176935Z","url":"https://files.pythonhosted.org/packages/0b/f9/efde17a7fa84523f5ef189958b8b815868b25879d3fde888c87e00527642/cbpro-1.1.3.tar.gz","yanked":false,"yanked_reason":null}],"1.1.4":[{"comment_text":"","digests":{"blake2b_256":"54c1afa1482587268a8d1bda15f993fd1eaad038a62f41d860d82bb3b282c7d1","md5":"48f3785c35b2b25137185cdead638aee","sha256":"ba4738b396f4736e4cad5b7f45401df6873b4dfd1a5f35ad65cea0b55ee4e603"},"downloads":-1,"filename":"cbpro-1.1.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"48f3785c35b2b25137185cdead638aee","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":35138,"upload_time":"2018-09-06T00:02:52","upload_time_iso_8601":"2018-09-06T00:02:52.865964Z","url":"https://files.pythonhosted.org/packages/54/c1/afa1482587268a8d1bda15f993fd1eaad038a62f41d860d82bb3b282c7d1/cbpro-1.1.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2c19dded309a34e23c4bcba2e43c3b1072063c973ae60b08f50469a891eb7248","md5":"e302e2f7f9131f9acfb8580608f9c276","sha256":"41da064d06ee02560683e5bea6f82b57beff7aae1f469c7f9d4fef3415dfaed1"},"downloads":-1,"filename":"cbpro-1.1.4.tar.gz","has_sig":false,"md5_digest":"e302e2f7f9131f9acfb8580608f9c276","packagetype":"sdist","python_version":"source","requires_python":null,"size":23386,"upload_time":"2018-09-06T00:02:54","upload_time_iso_8601":"2018-09-06T00:02:54.186661Z","url":"https://files.pythonhosted.org/packages/2c/19/dded309a34e23c4bcba2e43c3b1072063c973ae60b08f50469a891eb7248/cbpro-1.1.4.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"54c1afa1482587268a8d1bda15f993fd1eaad038a62f41d860d82bb3b282c7d1","md5":"48f3785c35b2b25137185cdead638aee","sha256":"ba4738b396f4736e4cad5b7f45401df6873b4dfd1a5f35ad65cea0b55ee4e603"},"downloads":-1,"filename":"cbpro-1.1.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"48f3785c35b2b25137185cdead638aee","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":null,"size":35138,"upload_time":"2018-09-06T00:02:52","upload_time_iso_8601":"2018-09-06T00:02:52.865964Z","url":"https://files.pythonhosted.org/packages/54/c1/afa1482587268a8d1bda15f993fd1eaad038a62f41d860d82bb3b282c7d1/cbpro-1.1.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2c19dded309a34e23c4bcba2e43c3b1072063c973ae60b08f50469a891eb7248","md5":"e302e2f7f9131f9acfb8580608f9c276","sha256":"41da064d06ee02560683e5bea6f82b57beff7aae1f469c7f9d4fef3415dfaed1"},"downloads":-1,"filename":"cbpro-1.1.4.tar.gz","has_sig":false,"md5_digest":"e302e2f7f9131f9acfb8580608f9c276","packagetype":"sdist","python_version":"source","requires_python":null,"size":23386,"upload_time":"2018-09-06T00:02:54","upload_time_iso_8601":"2018-09-06T00:02:54.186661Z","url":"https://files.pythonhosted.org/packages/2c/19/dded309a34e23c4bcba2e43c3b1072063c973ae60b08f50469a891eb7248/cbpro-1.1.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
