{"info":{"author":"Andrew Kane","author_email":"andrew@ankane.org","bugtrack_url":null,"classifiers":[],"description":"# pgvector-python\n\n[pgvector](https://github.com/pgvector/pgvector) support for Python\n\nSupports [Django](https://github.com/django/django), [SQLAlchemy](https://github.com/sqlalchemy/sqlalchemy), [SQLModel](https://github.com/tiangolo/sqlmodel), [Psycopg 3](https://github.com/psycopg/psycopg), [Psycopg 2](https://github.com/psycopg/psycopg2), [asyncpg](https://github.com/MagicStack/asyncpg), and [Peewee](https://github.com/coleifer/peewee)\n\n[![Build Status](https://github.com/pgvector/pgvector-python/actions/workflows/build.yml/badge.svg)](https://github.com/pgvector/pgvector-python/actions)\n\n## Installation\n\nRun:\n\n```sh\npip install pgvector\n```\n\nAnd follow the instructions for your database library:\n\n- [Django](#django)\n- [SQLAlchemy](#sqlalchemy)\n- [SQLModel](#sqlmodel)\n- [Psycopg 3](#psycopg-3)\n- [Psycopg 2](#psycopg-2)\n- [asyncpg](#asyncpg)\n- [Peewee](#peewee)\n\nOr check out some examples:\n\n- [Embeddings](https://github.com/pgvector/pgvector-python/blob/master/examples/openai_embeddings.py) with OpenAI\n- [Sentence embeddings](https://github.com/pgvector/pgvector-python/blob/master/examples/sentence_embeddings.py) with SentenceTransformers\n- [Hybrid search](https://github.com/pgvector/pgvector-python/blob/master/examples/hybrid_search_rrf.py) with SentenceTransformers (Reciprocal Rank Fusion)\n- [Hybrid search](https://github.com/pgvector/pgvector-python/blob/master/examples/hybrid_search.py) with SentenceTransformers (cross-encoder)\n- [Sparse search](https://github.com/pgvector/pgvector-python/blob/master/examples/sparse_search.py) with Transformers\n- [Image search](https://github.com/pgvector/pgvector-python/blob/master/examples/pytorch_image_search.py) with PyTorch\n- [Image search](https://github.com/pgvector/pgvector-python/blob/master/examples/hash_image_search.py) with perceptual hashing\n- [Morgan fingerprints](https://github.com/pgvector/pgvector-python/blob/master/examples/morgan_fingerprints.py) with RDKit\n- [Topic modeling](https://github.com/pgvector/pgvector-python/blob/master/examples/topic_modeling.py) with Gensim\n- [Implicit feedback recommendations](https://github.com/pgvector/pgvector-python/blob/master/examples/implicit_recs.py) with Implicit\n- [Explicit feedback recommendations](https://github.com/pgvector/pgvector-python/blob/master/examples/surprise_recs.py) with Surprise\n- [Recommendations](https://github.com/pgvector/pgvector-python/blob/master/examples/lightfm_recs.py) with LightFM\n- [Horizontal scaling](https://github.com/pgvector/pgvector-python/blob/master/examples/citus.py) with Citus\n- [Bulk loading](https://github.com/pgvector/pgvector-python/blob/master/examples/bulk_loading.py) with `COPY`\n\n## Django\n\nCreate a migration to enable the extension\n\n```python\nfrom pgvector.django import VectorExtension\n\nclass Migration(migrations.Migration):\n    operations = [\n        VectorExtension()\n    ]\n```\n\nAdd a vector field to your model\n\n```python\nfrom pgvector.django import VectorField\n\nclass Item(models.Model):\n    embedding = VectorField(dimensions=3)\n```\n\nAlso supports `HalfVectorField`, `BitField`, and `SparseVectorField`\n\nInsert a vector\n\n```python\nitem = Item(embedding=[1, 2, 3])\nitem.save()\n```\n\nGet the nearest neighbors to a vector\n\n```python\nfrom pgvector.django import L2Distance\n\nItem.objects.order_by(L2Distance('embedding', [3, 1, 2]))[:5]\n```\n\nAlso supports `MaxInnerProduct`, `CosineDistance`, `L1Distance`, `HammingDistance`, and `JaccardDistance`\n\nGet the distance\n\n```python\nItem.objects.annotate(distance=L2Distance('embedding', [3, 1, 2]))\n```\n\nGet items within a certain distance\n\n```python\nItem.objects.alias(distance=L2Distance('embedding', [3, 1, 2])).filter(distance__lt=5)\n```\n\nAverage vectors\n\n```python\nfrom django.db.models import Avg\n\nItem.objects.aggregate(Avg('embedding'))\n```\n\nAlso supports `Sum`\n\nAdd an approximate index\n\n```python\nfrom pgvector.django import HnswIndex, IvfflatIndex\n\nclass Item(models.Model):\n    class Meta:\n        indexes = [\n            HnswIndex(\n                name='my_index',\n                fields=['embedding'],\n                m=16,\n                ef_construction=64,\n                opclasses=['vector_l2_ops']\n            ),\n            # or\n            IvfflatIndex(\n                name='my_index',\n                fields=['embedding'],\n                lists=100,\n                opclasses=['vector_l2_ops']\n            )\n        ]\n```\n\nUse `vector_ip_ops` for inner product and `vector_cosine_ops` for cosine distance\n\n## SQLAlchemy\n\nEnable the extension\n\n```python\nsession.execute(text('CREATE EXTENSION IF NOT EXISTS vector'))\n```\n\nAdd a vector column\n\n```python\nfrom pgvector.sqlalchemy import Vector\n\nclass Item(Base):\n    embedding = mapped_column(Vector(3))\n```\n\nAlso supports `HALFVEC`, `BIT`, and `SPARSEVEC`\n\nInsert a vector\n\n```python\nitem = Item(embedding=[1, 2, 3])\nsession.add(item)\nsession.commit()\n```\n\nGet the nearest neighbors to a vector\n\n```python\nsession.scalars(select(Item).order_by(Item.embedding.l2_distance([3, 1, 2])).limit(5))\n```\n\nAlso supports `max_inner_product`, `cosine_distance`, `l1_distance`, `hamming_distance`, and `jaccard_distance`\n\nGet the distance\n\n```python\nsession.scalars(select(Item.embedding.l2_distance([3, 1, 2])))\n```\n\nGet items within a certain distance\n\n```python\nsession.scalars(select(Item).filter(Item.embedding.l2_distance([3, 1, 2]) < 5))\n```\n\nAverage vectors\n\n```python\nfrom sqlalchemy.sql import func\n\nsession.scalars(select(func.avg(Item.embedding))).first()\n```\n\nAlso supports `sum`\n\nAdd an approximate index\n\n```python\nindex = Index(\n    'my_index',\n    Item.embedding,\n    postgresql_using='hnsw',\n    postgresql_with={'m': 16, 'ef_construction': 64},\n    postgresql_ops={'embedding': 'vector_l2_ops'}\n)\n# or\nindex = Index(\n    'my_index',\n    Item.embedding,\n    postgresql_using='ivfflat',\n    postgresql_with={'lists': 100},\n    postgresql_ops={'embedding': 'vector_l2_ops'}\n)\n\nindex.create(engine)\n```\n\nUse `vector_ip_ops` for inner product and `vector_cosine_ops` for cosine distance\n\n## SQLModel\n\nEnable the extension\n\n```python\nsession.exec(text('CREATE EXTENSION IF NOT EXISTS vector'))\n```\n\nAdd a vector column\n\n```python\nfrom pgvector.sqlalchemy import Vector\nfrom sqlalchemy import Column\n\nclass Item(SQLModel, table=True):\n    embedding: Any = Field(sa_column=Column(Vector(3)))\n```\n\nAlso supports `HALFVEC`, `BIT`, and `SPARSEVEC`\n\nInsert a vector\n\n```python\nitem = Item(embedding=[1, 2, 3])\nsession.add(item)\nsession.commit()\n```\n\nGet the nearest neighbors to a vector\n\n```python\nsession.exec(select(Item).order_by(Item.embedding.l2_distance([3, 1, 2])).limit(5))\n```\n\nAlso supports `max_inner_product`, `cosine_distance`, `l1_distance`, `hamming_distance`, and `jaccard_distance`\n\nGet the distance\n\n```python\nsession.exec(select(Item.embedding.l2_distance([3, 1, 2])))\n```\n\nGet items within a certain distance\n\n```python\nsession.exec(select(Item).filter(Item.embedding.l2_distance([3, 1, 2]) < 5))\n```\n\nAverage vectors\n\n```python\nfrom sqlalchemy.sql import func\n\nsession.exec(select(func.avg(Item.embedding))).first()\n```\n\nAlso supports `sum`\n\nAdd an approximate index\n\n```python\nfrom sqlalchemy import Index\n\nindex = Index(\n    'my_index',\n    Item.embedding,\n    postgresql_using='hnsw',\n    postgresql_with={'m': 16, 'ef_construction': 64},\n    postgresql_ops={'embedding': 'vector_l2_ops'}\n)\n# or\nindex = Index(\n    'my_index',\n    Item.embedding,\n    postgresql_using='ivfflat',\n    postgresql_with={'lists': 100},\n    postgresql_ops={'embedding': 'vector_l2_ops'}\n)\n\nindex.create(engine)\n```\n\nUse `vector_ip_ops` for inner product and `vector_cosine_ops` for cosine distance\n\n## Psycopg 3\n\nEnable the extension\n\n```python\nconn.execute('CREATE EXTENSION IF NOT EXISTS vector')\n```\n\nRegister the vector type with your connection\n\n```python\nfrom pgvector.psycopg import register_vector\n\nregister_vector(conn)\n```\n\nFor [async connections](https://www.psycopg.org/psycopg3/docs/advanced/async.html), use\n\n```python\nfrom pgvector.psycopg import register_vector_async\n\nawait register_vector_async(conn)\n```\n\nCreate a table\n\n```python\nconn.execute('CREATE TABLE items (id bigserial PRIMARY KEY, embedding vector(3))')\n```\n\nInsert a vector\n\n```python\nembedding = np.array([1, 2, 3])\nconn.execute('INSERT INTO items (embedding) VALUES (%s)', (embedding,))\n```\n\nGet the nearest neighbors to a vector\n\n```python\nconn.execute('SELECT * FROM items ORDER BY embedding <-> %s LIMIT 5', (embedding,)).fetchall()\n```\n\nAdd an approximate index\n\n```python\nconn.execute('CREATE INDEX ON items USING hnsw (embedding vector_l2_ops)')\n# or\nconn.execute('CREATE INDEX ON items USING ivfflat (embedding vector_l2_ops) WITH (lists = 100)')\n```\n\nUse `vector_ip_ops` for inner product and `vector_cosine_ops` for cosine distance\n\n## Psycopg 2\n\nEnable the extension\n\n```python\ncur = conn.cursor()\ncur.execute('CREATE EXTENSION IF NOT EXISTS vector')\n```\n\nRegister the vector type with your connection or cursor\n\n```python\nfrom pgvector.psycopg2 import register_vector\n\nregister_vector(conn)\n```\n\nCreate a table\n\n```python\ncur.execute('CREATE TABLE items (id bigserial PRIMARY KEY, embedding vector(3))')\n```\n\nInsert a vector\n\n```python\nembedding = np.array([1, 2, 3])\ncur.execute('INSERT INTO items (embedding) VALUES (%s)', (embedding,))\n```\n\nGet the nearest neighbors to a vector\n\n```python\ncur.execute('SELECT * FROM items ORDER BY embedding <-> %s LIMIT 5', (embedding,))\ncur.fetchall()\n```\n\nAdd an approximate index\n\n```python\ncur.execute('CREATE INDEX ON items USING hnsw (embedding vector_l2_ops)')\n# or\ncur.execute('CREATE INDEX ON items USING ivfflat (embedding vector_l2_ops) WITH (lists = 100)')\n```\n\nUse `vector_ip_ops` for inner product and `vector_cosine_ops` for cosine distance\n\n## asyncpg\n\nEnable the extension\n\n```python\nawait conn.execute('CREATE EXTENSION IF NOT EXISTS vector')\n```\n\nRegister the vector type with your connection\n\n```python\nfrom pgvector.asyncpg import register_vector\n\nawait register_vector(conn)\n```\n\nor your pool\n\n```python\nasync def init(conn):\n    await register_vector(conn)\n\npool = await asyncpg.create_pool(..., init=init)\n```\n\nCreate a table\n\n```python\nawait conn.execute('CREATE TABLE items (id bigserial PRIMARY KEY, embedding vector(3))')\n```\n\nInsert a vector\n\n```python\nembedding = np.array([1, 2, 3])\nawait conn.execute('INSERT INTO items (embedding) VALUES ($1)', embedding)\n```\n\nGet the nearest neighbors to a vector\n\n```python\nawait conn.fetch('SELECT * FROM items ORDER BY embedding <-> $1 LIMIT 5', embedding)\n```\n\nAdd an approximate index\n\n```python\nawait conn.execute('CREATE INDEX ON items USING hnsw (embedding vector_l2_ops)')\n# or\nawait conn.execute('CREATE INDEX ON items USING ivfflat (embedding vector_l2_ops) WITH (lists = 100)')\n```\n\nUse `vector_ip_ops` for inner product and `vector_cosine_ops` for cosine distance\n\n## Peewee\n\nAdd a vector column\n\n```python\nfrom pgvector.peewee import VectorField\n\nclass Item(BaseModel):\n    embedding = VectorField(dimensions=3)\n```\n\nAlso supports `HalfVectorField`, `FixedBitField`, and `SparseVectorField`\n\nInsert a vector\n\n```python\nitem = Item.create(embedding=[1, 2, 3])\n```\n\nGet the nearest neighbors to a vector\n\n```python\nItem.select().order_by(Item.embedding.l2_distance([3, 1, 2])).limit(5)\n```\n\nAlso supports `max_inner_product`, `cosine_distance`, `l1_distance`, `hamming_distance`, and `jaccard_distance`\n\nGet the distance\n\n```python\nItem.select(Item.embedding.l2_distance([3, 1, 2]).alias('distance'))\n```\n\nGet items within a certain distance\n\n```python\nItem.select().where(Item.embedding.l2_distance([3, 1, 2]) < 5)\n```\n\nAverage vectors\n\n```python\nfrom peewee import fn\n\nItem.select(fn.avg(Item.embedding)).scalar()\n```\n\nAlso supports `sum`\n\nAdd an approximate index\n\n```python\nItem.add_index('embedding vector_l2_ops', using='hnsw')\n```\n\nUse `vector_ip_ops` for inner product and `vector_cosine_ops` for cosine distance\n\n## History\n\nView the [changelog](https://github.com/pgvector/pgvector-python/blob/master/CHANGELOG.md)\n\n## Contributing\n\nEveryone is encouraged to help improve this project. Here are a few ways you can help:\n\n- [Report bugs](https://github.com/pgvector/pgvector-python/issues)\n- Fix bugs and [submit pull requests](https://github.com/pgvector/pgvector-python/pulls)\n- Write, clarify, or fix documentation\n- Suggest or add new features\n\nTo get started with development:\n\n```sh\ngit clone https://github.com/pgvector/pgvector-python.git\ncd pgvector-python\npip install -r requirements.txt\ncreatedb pgvector_python_test\npytest\n```\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/pgvector/pgvector-python","keywords":null,"license":"MIT","maintainer":null,"maintainer_email":null,"name":"pgvector","package_url":"https://pypi.org/project/pgvector/","platform":null,"project_url":"https://pypi.org/project/pgvector/","project_urls":{"Homepage":"https://github.com/pgvector/pgvector-python"},"provides_extra":null,"release_url":"https://pypi.org/project/pgvector/0.3.1/","requires_dist":["numpy"],"requires_python":">=3.8","summary":"pgvector support for Python","version":"0.3.1","yanked":false,"yanked_reason":null},"last_serial":24081109,"releases":{"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"90086aa8358b839c9ab344e1f895bbdca18a53d60d7e774b1dc506bec56b80fe","md5":"829171e5607616f00aa02306e2efb6ec","sha256":"fc6a2eda4356a62f9ef7d539562f4b9b7df156793eee589b8761f0cce233ca4c"},"downloads":-1,"filename":"pgvector-0.1.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"829171e5607616f00aa02306e2efb6ec","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":3543,"upload_time":"2021-06-12T04:48:46","upload_time_iso_8601":"2021-06-12T04:48:46.167662Z","url":"https://files.pythonhosted.org/packages/90/08/6aa8358b839c9ab344e1f895bbdca18a53d60d7e774b1dc506bec56b80fe/pgvector-0.1.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"2f3f3bf87590ac97e8c33849122809d917c06dcbd0c68a843216360da72f51c2","md5":"0ac6cb77323f7144d2c81fb6abe2c607","sha256":"3b1ac0b4c6929ada94e421c10e0221f071b2a4e07d4411fd9281842fd90cb5cd"},"downloads":-1,"filename":"pgvector-0.1.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"0ac6cb77323f7144d2c81fb6abe2c607","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":3625,"upload_time":"2021-06-12T14:01:22","upload_time_iso_8601":"2021-06-12T14:01:22.521317Z","url":"https://files.pythonhosted.org/packages/2f/3f/3bf87590ac97e8c33849122809d917c06dcbd0c68a843216360da72f51c2/pgvector-0.1.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.1.2":[{"comment_text":"","digests":{"blake2b_256":"82ae25c0388997ef570f3ca66608034886bf20aa7429d5e23a1249388526fea6","md5":"04daf6e91fe0151d23a12b5f5be153ae","sha256":"332cd5ce6cb545fb190aaf23d3b169bd575f82083d53f5fcc4bfbf8c5d5b1d53"},"downloads":-1,"filename":"pgvector-0.1.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"04daf6e91fe0151d23a12b5f5be153ae","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":4482,"upload_time":"2021-06-13T19:42:33","upload_time_iso_8601":"2021-06-13T19:42:33.189383Z","url":"https://files.pythonhosted.org/packages/82/ae/25c0388997ef570f3ca66608034886bf20aa7429d5e23a1249388526fea6/pgvector-0.1.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.1.3":[{"comment_text":"","digests":{"blake2b_256":"f331c95b696c6612a716cbd00f31fb8c44dfe31129f6aa112bfc7cefff402bca","md5":"b2bb26e48d489476002b6beab7be3108","sha256":"18092f34677d705ae412b2d31e5b82faccd7915a5a0561f2bcd7973307200eae"},"downloads":-1,"filename":"pgvector-0.1.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"b2bb26e48d489476002b6beab7be3108","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":5611,"upload_time":"2021-06-23T05:23:12","upload_time_iso_8601":"2021-06-23T05:23:12.614432Z","url":"https://files.pythonhosted.org/packages/f3/31/c95b696c6612a716cbd00f31fb8c44dfe31129f6aa112bfc7cefff402bca/pgvector-0.1.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.1.4":[{"comment_text":"","digests":{"blake2b_256":"21fa9972c5f37f5bd29f40bc6ea363c4951f37012148c73f286dc8969d6660b0","md5":"6eefa8c6c1255fcbd52662fc53823ee5","sha256":"468efa99790686569fe53672983e1a37bb740fd68797766d211ff227a99a0bba"},"downloads":-1,"filename":"pgvector-0.1.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"6eefa8c6c1255fcbd52662fc53823ee5","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":5596,"upload_time":"2021-10-13T03:11:32","upload_time_iso_8601":"2021-10-13T03:11:32.804891Z","url":"https://files.pythonhosted.org/packages/21/fa/9972c5f37f5bd29f40bc6ea363c4951f37012148c73f286dc8969d6660b0/pgvector-0.1.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.1.5":[{"comment_text":"","digests":{"blake2b_256":"c17be7e1b552126c41de10e08694df359c9d508beda06804c067dbf89d0425b9","md5":"6539ecd18dc71be5138cfc5fc0c60b66","sha256":"a9b334f96c98f2934ce76d32ac7edd35602069eb89ef0cf9de12ff9ab3644fe2"},"downloads":-1,"filename":"pgvector-0.1.5-py2.py3-none-any.whl","has_sig":false,"md5_digest":"6539ecd18dc71be5138cfc5fc0c60b66","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":7161,"upload_time":"2022-01-14T19:22:25","upload_time_iso_8601":"2022-01-14T19:22:25.182853Z","url":"https://files.pythonhosted.org/packages/c1/7b/e7e1b552126c41de10e08694df359c9d508beda06804c067dbf89d0425b9/pgvector-0.1.5-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.1.6":[{"comment_text":"","digests":{"blake2b_256":"d4d5e5e122565c098c1428f41e132b7d93ca549c31b5c98a67feb1ca88e9af46","md5":"f403939a9259e35619e0613b8822ecc2","sha256":"c53d49dae7c5e0e39bc2f05ce8599a853383f11ce9ffaa7bd0924844e16c7bf4"},"downloads":-1,"filename":"pgvector-0.1.6-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f403939a9259e35619e0613b8822ecc2","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":7159,"upload_time":"2022-05-23T01:17:43","upload_time_iso_8601":"2022-05-23T01:17:43.270920Z","url":"https://files.pythonhosted.org/packages/d4/d5/e5e122565c098c1428f41e132b7d93ca549c31b5c98a67feb1ca88e9af46/pgvector-0.1.6-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.1.7":[{"comment_text":"","digests":{"blake2b_256":"ec287319f6755a8aa54d461e91d1de31e8b69ae2d981fe20c4e924430f7f5b51","md5":"bd3bb81fdadfe6056e3afc6581f88f0d","sha256":"b0da0289959372f916b96c1da7c57437725c7aa33fa0c75b4a53c3677369bdd5"},"downloads":-1,"filename":"pgvector-0.1.7-py2.py3-none-any.whl","has_sig":false,"md5_digest":"bd3bb81fdadfe6056e3afc6581f88f0d","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":7525,"upload_time":"2023-05-11T21:56:48","upload_time_iso_8601":"2023-05-11T21:56:48.123476Z","url":"https://files.pythonhosted.org/packages/ec/28/7319f6755a8aa54d461e91d1de31e8b69ae2d981fe20c4e924430f7f5b51/pgvector-0.1.7-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.1.8":[{"comment_text":"","digests":{"blake2b_256":"1b2a3c7af6b8460d931102cb67709b870e535c5afad3e00639ffef3f408989a5","md5":"5ded53c3d467f48152e9b7f43cdfb73f","sha256":"99dce3a6580ef73863edb9b8441937671f4e1a09383826e6b0838176cd441a96"},"downloads":-1,"filename":"pgvector-0.1.8-py2.py3-none-any.whl","has_sig":false,"md5_digest":"5ded53c3d467f48152e9b7f43cdfb73f","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.6","size":7559,"upload_time":"2023-05-21T00:32:13","upload_time_iso_8601":"2023-05-21T00:32:13.699459Z","url":"https://files.pythonhosted.org/packages/1b/2a/3c7af6b8460d931102cb67709b870e535c5afad3e00639ffef3f408989a5/pgvector-0.1.8-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"f96dbd3546a11b469ab202da872d7220a37fbb3bb69358eaa65f6af7dd58abb7","md5":"05a807dedc9ac0c0dd0118be17122503","sha256":"6e0ca1ab1c210f0aea2e9b87552b3067fbaadafb641c47b462cb90b3926638a4"},"downloads":-1,"filename":"pgvector-0.2.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"05a807dedc9ac0c0dd0118be17122503","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":7669,"upload_time":"2023-07-24T03:07:08","upload_time_iso_8601":"2023-07-24T03:07:08.052600Z","url":"https://files.pythonhosted.org/packages/f9/6d/bd3546a11b469ab202da872d7220a37fbb3bb69358eaa65f6af7dd58abb7/pgvector-0.2.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.2.1":[{"comment_text":"","digests":{"blake2b_256":"d273b6548abffb284b2cf3e8281b6df84e57e96f1e066277417a57bf7d7917db","md5":"074972b92bee903ebfebd7469772e00c","sha256":"49c9196cf6b88c8b1ea8ca9a06c32829ff4e9f1073633fc4aa2a52ab006c30e9"},"downloads":-1,"filename":"pgvector-0.2.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"074972b92bee903ebfebd7469772e00c","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":8400,"upload_time":"2023-08-01T04:20:51","upload_time_iso_8601":"2023-08-01T04:20:51.349783Z","url":"https://files.pythonhosted.org/packages/d2/73/b6548abffb284b2cf3e8281b6df84e57e96f1e066277417a57bf7d7917db/pgvector-0.2.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.2.2":[{"comment_text":"","digests":{"blake2b_256":"3a7d5b34f0bb25eebd3edd4c39cd7eaaef6994e3aacde1d7ba8af3b661cb7a0c","md5":"ec56b02b6d7eb81c99142ac887ae4bda","sha256":"4c2b138ef2023364b93795f2c4ff2a2c8ba54f24979a82995f6b9ce9c86da271"},"downloads":-1,"filename":"pgvector-0.2.2-py2.py3-none-any.whl","has_sig":false,"md5_digest":"ec56b02b6d7eb81c99142ac887ae4bda","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":9173,"upload_time":"2023-09-08T20:38:03","upload_time_iso_8601":"2023-09-08T20:38:03.985887Z","url":"https://files.pythonhosted.org/packages/3a/7d/5b34f0bb25eebd3edd4c39cd7eaaef6994e3aacde1d7ba8af3b661cb7a0c/pgvector-0.2.2-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.2.3":[{"comment_text":"","digests":{"blake2b_256":"fd8c4b469fdc27cf8538024d68b8aa40da7ebf86690f4d7f93eb118bdea174e7","md5":"02bbe30bb4402ace90853627b791f91b","sha256":"9d53dc01138ecc7c9aca64e4680cfa9edf4c38f9cb8ed7098317871fdd211824"},"downloads":-1,"filename":"pgvector-0.2.3-py2.py3-none-any.whl","has_sig":false,"md5_digest":"02bbe30bb4402ace90853627b791f91b","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":9316,"upload_time":"2023-09-26T01:29:32","upload_time_iso_8601":"2023-09-26T01:29:32.681882Z","url":"https://files.pythonhosted.org/packages/fd/8c/4b469fdc27cf8538024d68b8aa40da7ebf86690f4d7f93eb118bdea174e7/pgvector-0.2.3-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.2.4":[{"comment_text":"","digests":{"blake2b_256":"ff704121568743eff331240def4d0b0e949f3cd36f440435a69f967ebd1f0bc6","md5":"804130de9818d8a2557683ca7bb496fe","sha256":"548e1f88d3c7433020c1c177feddad2f36915c262852d621f9018fcafff6870b"},"downloads":-1,"filename":"pgvector-0.2.4-py2.py3-none-any.whl","has_sig":false,"md5_digest":"804130de9818d8a2557683ca7bb496fe","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":9564,"upload_time":"2023-11-24T17:26:57","upload_time_iso_8601":"2023-11-24T17:26:57.442886Z","url":"https://files.pythonhosted.org/packages/ff/70/4121568743eff331240def4d0b0e949f3cd36f440435a69f967ebd1f0bc6/pgvector-0.2.4-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.2.5":[{"comment_text":"","digests":{"blake2b_256":"29bb4686b1090a7c68fa367e981130a074dc6c1236571d914ffa6e05c882b59d","md5":"4470d877c918f49e86ead6b71ffbf591","sha256":"5e5e93ec4d3c45ab1fa388729d56c602f6966296e19deee8878928c6d567e41b"},"downloads":-1,"filename":"pgvector-0.2.5-py2.py3-none-any.whl","has_sig":false,"md5_digest":"4470d877c918f49e86ead6b71ffbf591","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":9638,"upload_time":"2024-02-07T19:35:03","upload_time_iso_8601":"2024-02-07T19:35:03.800148Z","url":"https://files.pythonhosted.org/packages/29/bb/4686b1090a7c68fa367e981130a074dc6c1236571d914ffa6e05c882b59d/pgvector-0.2.5-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.3.0":[{"comment_text":"","digests":{"blake2b_256":"ca7364de7cfaeb21e174a370e0b8a079336851168f8fae8b724050c08108763b","md5":"f1746cd6ffcd14c3347c37aab0dfea89","sha256":"2fab31f62927ac807a7b398274ca03ccc0bab675989be7258ded3131a525c7b0"},"downloads":-1,"filename":"pgvector-0.3.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"f1746cd6ffcd14c3347c37aab0dfea89","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":23704,"upload_time":"2024-06-26T01:04:25","upload_time_iso_8601":"2024-06-26T01:04:25.176495Z","url":"https://files.pythonhosted.org/packages/ca/73/64de7cfaeb21e174a370e0b8a079336851168f8fae8b724050c08108763b/pgvector-0.3.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.3.1":[{"comment_text":"","digests":{"blake2b_256":"e67d01a82090fe5b8b1e94dc89a7a147a0f6b00d9226335efa7f78dd40fd1fa2","md5":"bc79cddb4c524f6b85c57614676117ed","sha256":"7da0629915083a9769b9a73481efb4cdc9122cfd35fc7a9248ce43d177a9c8e8"},"downloads":-1,"filename":"pgvector-0.3.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"bc79cddb4c524f6b85c57614676117ed","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":23869,"upload_time":"2024-07-11T03:33:58","upload_time_iso_8601":"2024-07-11T03:33:58.617418Z","url":"https://files.pythonhosted.org/packages/e6/7d/01a82090fe5b8b1e94dc89a7a147a0f6b00d9226335efa7f78dd40fd1fa2/pgvector-0.3.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"e67d01a82090fe5b8b1e94dc89a7a147a0f6b00d9226335efa7f78dd40fd1fa2","md5":"bc79cddb4c524f6b85c57614676117ed","sha256":"7da0629915083a9769b9a73481efb4cdc9122cfd35fc7a9248ce43d177a9c8e8"},"downloads":-1,"filename":"pgvector-0.3.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"bc79cddb4c524f6b85c57614676117ed","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3.8","size":23869,"upload_time":"2024-07-11T03:33:58","upload_time_iso_8601":"2024-07-11T03:33:58.617418Z","url":"https://files.pythonhosted.org/packages/e6/7d/01a82090fe5b8b1e94dc89a7a147a0f6b00d9226335efa7f78dd40fd1fa2/pgvector-0.3.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
